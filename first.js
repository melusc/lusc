define("core/tag", ["jquery", "core/ajax", "core/templates", "core/notification", "core/str", "core/modal_factory", "core/modal_events", "core/pending"], function(a, b, c, d, f, g, h, i) {
    return {
        initTagindexPage: function initTagindexPage() {
            a("body").delegate(".tagarea[data-ta] a[data-quickload=1]", "click", function(f) {
                var e = new i;
                f.preventDefault();
                var g = a(this),
                    h = g[0].search.replace(/^\?/, ""),
                    j = g.closest(".tagarea[data-ta]"),
                    k = h.split("&").reduce(function(a, b) {
                        var c = b.split("=");
                        a[c[0]] = decodeURIComponent(c[1]);
                        return a
                    }, {});
                b.call([{
                    methodname: "core_tag_get_tagindex",
                    args: {
                        tagindex: k
                    }
                }])[0].then(function(a) {
                    return c.render("core_tag/index", a)
                }).then(function(a, b) {
                    c.replaceNode(j, a, b)
                }).then(e.resolve).catch(d.exception)
            })
        },
        initManagePage: function initManagePage() {
            a("body").on("updated", "[data-inplaceeditable]", function(b) {
                var c = new i("core/tag:initManagePage");
                f.get_strings([{
                    key: "selecttag",
                    component: "core_tag"
                }, {
                    key: "now",
                    component: "core"
                }]).then(function(c) {
                    a("label[for=\"tagselect" + b.ajaxreturn.itemid + "\"]").html(c[0]);
                    a(b.target).closest("tr").find("td.col-timemodified").html(c[1])
                }).then(c.resolve).catch(d.exception);
                if ("tagflag" === b.ajaxreturn.itemtype) {
                    var e = a(b.target).closest("tr");
                    if ("0" === b.ajaxreturn.value) {
                        e.removeClass("flagged-tag")
                    } else {
                        e.addClass("flagged-tag")
                    }
                }
            });
            a(".tag-management-table").delegate("a.tagdelete", "click", function(b) {
                var c = new i("core/tag:tagdelete");
                b.preventDefault();
                var e = a(this).attr("href");
                f.get_strings([{
                    key: "delete",
                    component: "core"
                }, {
                    key: "confirmdeletetag",
                    component: "tag"
                }, {
                    key: "yes",
                    component: "core"
                }, {
                    key: "no",
                    component: "core"
                }]).then(function(a) {
                    return d.confirm(a[0], a[1], a[2], a[3], function() {
                        window.location.href = e
                    })
                }).then(c.resolve).catch(d.exception)
            });
            a("#tag-management-delete").click(function(b) {
                var c = a(this).closest("form").get(0),
                    e = a(c).find("input[type=checkbox]:checked").length;
                if (!e) {
                    return
                }
                var g = new i("core/tag:tag-management-delete"),
                    h = a("<input type='hidden'/>").attr("name", this.name);
                b.preventDefault();
                f.get_strings([{
                    key: "delete"
                }, {
                    key: "confirmdeletetags",
                    component: "tag"
                }, {
                    key: "yes"
                }, {
                    key: "no"
                }]).then(function(a) {
                    return d.confirm(a[0], a[1], a[2], a[3], function() {
                        h.appendTo(c);
                        c.submit()
                    })
                }).then(g.resolve).catch(d.exception)
            });
            a("#tag-management-combine").click(function(b) {
                var e = new i("core/tag:tag-management-combine");
                b.preventDefault();
                var j = a(this).closest("form").get(0),
                    k = a(j).find("input[type=checkbox]:checked");
                if (1 >= k.length) {
                    f.get_strings([{
                        key: "combineselected",
                        component: "tag"
                    }, {
                        key: "selectmultipletags",
                        component: "tag"
                    }, {
                        key: "ok"
                    }]).then(function(a) {
                        return d.alert(a[0], a[1], a[2])
                    }).then(e.resolve).catch(d.exception);
                    return
                }
                var l = a("<input type='hidden'/>").attr("name", this.name),
                    m = "",
                    n = [];
                k.each(function() {
                    var b = a(this).val(),
                        c = a(".inplaceeditable[data-itemtype=tagname][data-itemid=" + b + "]").attr("data-value");
                    n.push({
                        id: b,
                        name: c
                    })
                });
                f.get_strings([{
                    key: "combineselected",
                    component: "tag"
                }, {
                    key: "continue"
                }]).then(function(a) {
                    var b = a[0];
                    m = a[1];
                    return g.create({
                        title: b,
                        body: c.render("core_tag/combine_tags", {
                            tags: n
                        }),
                        type: g.types.SAVE_CANCEL
                    })
                }).then(function(a) {
                    a.setSaveButtonText(m);
                    return a
                }).then(function(b) {
                    b.getRoot().on(h.save, function(b) {
                        b.preventDefault();
                        l.appendTo(j);
                        var c = a("input[name=maintag]:checked", "#combinetags_form").val();
                        a("<input type='hidden'/>").attr("name", "maintag").attr("value", c).appendTo(j);
                        j.submit()
                    });
                    b.getRoot().on(h.hidden, function() {
                        b.destroy()
                    });
                    b.show();
                    a("#combinetags_form input[type=radio]").first().focus().prop("checked", !0)
                }).then(e.resolve).catch(d.exception)
            });
            a("body").on("updatefailed", "[data-inplaceeditable][data-itemtype=tagname]", function(b) {
                var c = new i("core/tag:tag-management-combine-exists"),
                    e = b.exception,
                    g = b.newvalue,
                    h = a(b.target).attr("data-itemid");
                if ("namesalreadybeeingused" === e.errorcode) {
                    b.preventDefault();
                    f.get_strings([{
                        key: "nameuseddocombine",
                        component: "tag"
                    }, {
                        key: "yes"
                    }, {
                        key: "cancel"
                    }]).then(function(a) {
                        return d.confirm(b.message, a[0], a[1], a[2], function() {
                            window.location.href = window.location.href + "&newname=" + encodeURIComponent(g) + "&tagid=" + encodeURIComponent(h) + "&action=renamecombine&sesskey=" + M.cfg.sesskey
                        })
                    }).then(c.resolve).catch(d.exception)
                }
            });
            a("body").on("click", "a[data-action=addstandardtag]", function(b) {
                var e = new i;
                b.preventDefault();
                return g.create({
                    title: f.get_string("addotags", "tag"),
                    body: c.render("core_tag/add_tags", {
                        actionurl: window.location.href,
                        sesskey: M.cfg.sesskey
                    }),
                    type: g.types.SAVE_CANCEL
                }).then(function(b) {
                    b.setSaveButtonText(f.get_string("continue", "core"));
                    b.getRoot().on(h.save, function(b) {
                        var c = a(b.currentTarget).find("#id_tagslist"),
                            d = c.val().trim();
                        c.val(d);
                        var e = a("#addtags_form");
                        e.on("submit", function(b) {
                            var c = a("#addtags_form");
                            if (!1 === c[0].checkValidity()) {
                                b.preventDefault();
                                b.stopPropagation()
                            }
                            c.addClass("was-validated");
                            a("[data-region=\"tagslistinput\"]").addClass("error");
                            var d = a("#id_tagslist_error_message");
                            d.removeAttr("hidden");
                            d.addClass("help-block")
                        });
                        e.submit();
                        return !1
                    });
                    b.getRoot().on(h.hidden, function() {
                        b.destroy()
                    });
                    b.show()
                }).then(e.resolve).catch(d.exception)
            })
        },
        initManageCollectionsPage: function initManageCollectionsPage() {
            a("body").on("updated", "[data-inplaceeditable]", function(b) {
                var c = new i("core/tag:initManageCollectionsPage-updated"),
                    d = b.ajaxreturn,
                    e, f, g;
                if ("core_tag" === d.component && "tagareaenable" === d.itemtype) {
                    e = a(this).attr("data-itemid");
                    a(".tag-collections-table ul[data-collectionid] li[data-areaid=" + e + "]").hide();
                    g = d.value;
                    if ("1" === g) {
                        a(this).closest("tr").removeClass("dimmed_text");
                        f = a(this).closest("tr").find("[data-itemtype=\"tagareacollection\"]").attr("data-value");
                        a(".tag-collections-table ul[data-collectionid=" + f + "] li[data-areaid=" + e + "]").show()
                    } else {
                        a(this).closest("tr").addClass("dimmed_text")
                    }
                }
                if ("core_tag" === d.component && "tagareacollection" === d.itemtype) {
                    e = a(this).attr("data-itemid");
                    a(".tag-collections-table ul[data-collectionid] li[data-areaid=" + e + "]").hide();
                    f = a(this).attr("data-value");
                    g = a(this).closest("tr").find("[data-itemtype=\"tagareaenable\"]").attr("data-value");
                    if ("1" === g) {
                        a(".tag-collections-table ul[data-collectionid=" + f + "] li[data-areaid=" + e + "]").show()
                    }
                }
                c.resolve()
            });
            a("body").on("click", ".addtagcoll > a", function(b) {
                var e = new i("core/tag:initManageCollectionsPage-addtagcoll");
                b.preventDefault();
                var j = a(this).attr("data-url"),
                    k = "";
                f.get_strings([{
                    key: "addtagcoll",
                    component: "tag"
                }, {
                    key: "create"
                }]).then(function(a) {
                    var b = a[0];
                    k = a[1];
                    var d = {
                        actionurl: j,
                        sesskey: M.cfg.sesskey
                    };
                    return g.create({
                        title: b,
                        body: c.render("core_tag/add_tag_collection", d),
                        type: g.types.SAVE_CANCEL
                    })
                }).then(function(b) {
                    b.setSaveButtonText(k);
                    b.getRoot().on(h.save, function(b) {
                        var c = a(b.currentTarget).find("#addtagcoll_name"),
                            d = c.val().trim();
                        c.val(d);
                        var f = a("#addtagcoll_form");
                        f.on("submit", function(b) {
                            if (!1 === f[0].checkValidity()) {
                                b.preventDefault();
                                b.stopPropagation()
                            }
                            f.addClass("was-validated");
                            a("[data-region=\"addtagcoll_nameinput\"]").addClass("error");
                            var c = a("#id_addtagcoll_name_error_message");
                            c.removeAttr("hidden");
                            c.addClass("help-block")
                        });
                        f.submit();
                        return !1
                    });
                    b.getRoot().on(h.hidden, function() {
                        b.destroy()
                    });
                    b.show();
                    return b
                }).then(e.resolve).catch(d.exception)
            });
            a("body").on("click", ".tag-collections-table .action_delete", function(b) {
                var c = new i("core/tag:initManageCollectionsPage-action_delete");
                b.preventDefault();
                var e = a(this).attr("data-url") + "&sesskey=" + M.cfg.sesskey;
                f.get_strings([{
                    key: "delete"
                }, {
                    key: "suredeletecoll",
                    component: "tag",
                    param: a(this).attr("data-collname")
                }, {
                    key: "yes"
                }, {
                    key: "no"
                }]).then(function(a) {
                    return d.confirm(a[0], a[1], a[2], a[3], function() {
                        window.location.href = e
                    })
                }).then(c.resolve).catch(d.exception)
            })
        }
    }
});
define("core/log", ["core/loglevel"], function(a) {
    var b = a.methodFactory;
    a.methodFactory = function(a, c) {
        var d = b(a, c);
        return function(a, b) {
            if (b) {
                d(b + ": " + a)
            } else {
                d(a)
            }
        }
    };
    a.setConfig = function(b) {
        if ("undefined" != typeof b.level) {
            a.setLevel(b.level)
        }
    };
    return a
});
define("core/pubsub", ["exports", "core/pending"], function(a, b) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    a.publish = a.unsubscribe = a.subscribe = void 0;
    b = function(a) {
        return a && a.__esModule ? a : {
            default: a
        }
    }(b);
    var c = {};
    a.subscribe = function subscribe(a, b) {
        c[a] = c[a] || [];
        c[a].push(b)
    };
    a.unsubscribe = function unsubscribe(a, b) {
        if (c[a]) {
            for (var d = 0; d < c[a].length; d++) {
                if (c[a][d] === b) {
                    c[a].splice(d, 1);
                    break
                }
            }
        }
    };
    var d = function(a, d) {
        var e = new b.default("Publishing " + a);
        if (c[a]) {
            c[a].forEach(function(a) {
                a(d)
            })
        }
        e.resolve()
    };
    a.publish = d
});
define("core/auto_rows", ["jquery"], function(a) {
    var b = {
            ELEMENT: "[data-auto-rows]"
        },
        c = {
            ROW_CHANGE: "autorows:rowchange"
        },
        d = function(a) {
            var b = a.attr("rows"),
                c = a.data("min-rows"),
                d = a.attr("data-max-rows"),
                e = a.height(),
                f = a.innerHeight(),
                g = a[0].scrollHeight,
                h = (g - (f - e)) / (e / b);
            a.css("height", "");
            if (h < c) {
                return c
            } else if (d && h >= d) {
                return d
            } else {
                return h
            }
        },
        e = function(b) {
            var e = a(b.target),
                f = e.data("min-rows"),
                g = e.attr("rows");
            if ("undefined" == typeof f) {
                e.data("min-rows", g)
            }
            e.attr("rows", 1);
            var h = d(e);
            e.attr("rows", h);
            if (h != g) {
                e.trigger(c.ROW_CHANGE)
            }
        };
    return {
        init: function init(c) {
            if (a(c).data("auto-rows")) {
                a(c).on("input propertychange", e.bind(this))
            } else {
                a(c).on("input propertychange", b.ELEMENT, e.bind(this))
            }
        },
        events: c
    }
});
define("core/emoji/auto_complete", ["exports", "core/emoji/data", "core/templates", "core/utils", "core/localstorage", "core/key_codes"], function(a, b, c, d, e, f) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    a.default = void 0;
    b = function(a) {
        if (a && a.__esModule) {
            return a
        } else {
            var b = {};
            if (null != a) {
                for (var c in a) {
                    if (Object.prototype.hasOwnProperty.call(a, c)) {
                        var d = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(a, c) : {};
                        if (d.get || d.set) {
                            Object.defineProperty(b, c, d)
                        } else {
                            b[c] = a[c]
                        }
                    }
                }
            }
            b.default = a;
            return b
        }
    }(b);
    e = g(e);
    f = g(f);

    function g(a) {
        return a && a.__esModule ? a : {
            default: a
        }
    }

    function h(a, b, c, d, e, f, g) {
        try {
            var h = a[f](g),
                i = h.value
        } catch (a) {
            c(a);
            return
        }
        if (h.done) {
            b(i)
        } else {
            Promise.resolve(i).then(d, e)
        }
    }

    function i(a) {
        return function() {
            var b = this,
                c = arguments;
            return new Promise(function(d, e) {
                var i = a.apply(b, c);

                function f(a) {
                    h(i, d, e, f, g, "next", a)
                }

                function g(a) {
                    h(i, d, e, f, g, "throw", a)
                }
                f(void 0)
            })
        }
    }

    function j(a) {
        return m(a) || l(a) || k()
    }

    function k() {
        throw new TypeError("Invalid attempt to spread non-iterable instance")
    }

    function l(a) {
        if (Symbol.iterator in Object(a) || "[object Arguments]" === Object.prototype.toString.call(a)) return Array.from(a)
    }

    function m(a) {
        if (Array.isArray(a)) {
            for (var b = 0, c = Array(a.length); b < a.length; b++) {
                c[b] = a[b]
            }
            return c
        }
    }
    var n = "moodle-recent-emojis",
        o = {
            EMOJI_BUTTON: "[data-region=\"emoji-button\"]",
            ACTIVE_EMOJI_BUTTON: "[data-region=\"emoji-button\"].active"
        },
        p = function() {
            var a = e.default.get(n);
            return a ? JSON.parse(a) : []
        },
        q = function(a, b) {
            var c = {
                    unified: a,
                    shortnames: [b]
                },
                d = p(),
                f = [c].concat(j(d.filter(function(a) {
                    return a.unified != c.unified
                })));
            f = f.slice(0, 27);
            e.default.set(n, JSON.stringify(f))
        },
        r = function(a) {
            var c = b.byShortName[a];
            if (c) {
                var d = c.split("-").map(function(a) {
                    return "0x".concat(a)
                });
                return String.fromCodePoint.apply(null, d)
            } else {
                return null
            }
        },
        s = function() {
            var a = i(regeneratorRuntime.mark(function a(d, e) {
                var f, g;
                return regeneratorRuntime.wrap(function(a) {
                    while (1) {
                        switch (a.prev = a.next) {
                            case 0:
                                f = {
                                    emojis: e.map(function(a, c) {
                                        return {
                                            active: 0 === c,
                                            emojitext: r(a),
                                            displayshortname: ":".concat(a, ":"),
                                            shortname: a,
                                            unified: b.byShortName[a]
                                        }
                                    })
                                };
                                a.next = 3;
                                return (0, c.render)("core/emoji/auto_complete", f);
                            case 3:
                                g = a.sent;
                                d.innerHTML = g;
                            case 5:
                            case "end":
                                return a.stop();
                        }
                    }
                }, a)
            }));
            return function() {
                return a.apply(this, arguments)
            }
        }(),
        t = function(a, c) {
            if ("" === a) {
                return p().map(function(a) {
                    return a.shortnames[0]
                }).slice(0, c)
            } else {
                a = a.toLowerCase();
                return Object.keys(b.byShortName).filter(function(b) {
                    return b.includes(a)
                }).slice(0, c)
            }
        },
        u = function(a, b) {
            var c = a.slice(0, b).match(/(\S*)$/),
                d = a.slice(b).match(/^(\S*)/),
                e = "",
                f = "";
            if (c) {
                e = c[c.length - 1]
            }
            if (d) {
                f = d[d.length - 1]
            }
            return "".concat(e).concat(f)
        },
        v = function(a) {
            return /^:[^:\s]+:$/.test(a)
        },
        w = function(a) {
            return /^:[^:\s]*$/.test(a)
        },
        x = function(a) {
            return a.replace(/:/g, "")
        },
        y = function(a) {
            return a.querySelector(o.ACTIVE_EMOJI_BUTTON)
        },
        z = function(a) {
            var b = y(a),
                c = b.previousElementSibling;
            if (c) {
                b.classList.remove("active");
                c.classList.add("active");
                c.scrollIntoView({
                    behaviour: "smooth",
                    inline: "center"
                })
            }
        },
        A = function(a) {
            var b = y(a),
                c = b.nextElementSibling;
            if (c) {
                b.classList.remove("active");
                c.classList.add("active");
                c.scrollIntoView({
                    behaviour: "smooth",
                    inline: "center"
                })
            }
        },
        B = function(a, b) {
            var c = a.getAttribute("data-short-name"),
                d = a.getAttribute("data-unified");
            q(d, c);
            b(a.innerHTML.trim())
        };
    a.default = function(a, c, g, h) {
        var i = !1,
            j = "";
        c.addEventListener("keyup", (0, d.debounce)(function() {
            var d = c.value,
                e = c.selectionStart,
                f = u(d, e);
            if (f === j) {
                return
            } else {
                j = f
            }
            if (v(f)) {
                var k = x(f),
                    l = r(k);
                i = !1;
                if (l) {
                    q(b.byShortName[k], k);
                    h(l)
                }
            } else if (w(f)) {
                var m = t(x(f), 50);
                if (m.length) {
                    s(a, m);
                    i = !0
                } else {
                    i = !1
                }
            } else {
                i = !1
            }
            g(i)
        }, 200));
        c.addEventListener("keydown", function(b) {
            if (i) {
                var c = b.shiftKey || b.metaKey || b.altKey || b.ctrlKey;
                if (!c) {
                    switch (b.which) {
                        case f.default.escape:
                            i = !1;
                            g(!1);
                            break;
                        case f.default.arrowLeft:
                            z(a);
                            b.preventDefault();
                            break;
                        case f.default.arrowRight:
                            A(a);
                            b.preventDefault();
                            break;
                        case f.default.enter:
                            B(y(a), h);
                            b.preventDefault();
                            b.stopPropagation();
                            break;
                    }
                }
            }
        });
        a.addEventListener("click", function(a) {
            var b = a.target;
            if (b.matches(o.EMOJI_BUTTON)) {
                B(b, h)
            }
        })
    };
    return a.default
});
define("core/emoji/data", ["exports"], function(F) {
    "use strict";
    Object.defineProperty(F, "__esModule", {
        value: !0
    });
    F.byShortName = F.byCategory = void 0;
    F.byCategory = [{
        name: "Smileys & People",
        emojis: [{
            unified: "1F600",
            shortnames: ["grinning"]
        }, {
            unified: "1F601",
            shortnames: ["grin"]
        }, {
            unified: "1F602",
            shortnames: ["joy"]
        }, {
            unified: "1F923",
            shortnames: ["rolling_on_the_floor_laughing"]
        }, {
            unified: "1F603",
            shortnames: ["smiley"]
        }, {
            unified: "1F604",
            shortnames: ["smile"]
        }, {
            unified: "1F605",
            shortnames: ["sweat_smile"]
        }, {
            unified: "1F606",
            shortnames: ["laughing"]
        }, {
            unified: "1F609",
            shortnames: ["wink"]
        }, {
            unified: "1F60A",
            shortnames: ["blush"]
        }, {
            unified: "1F60B",
            shortnames: ["yum"]
        }, {
            unified: "1F60E",
            shortnames: ["sunglasses"]
        }, {
            unified: "1F60D",
            shortnames: ["heart_eyes"]
        }, {
            unified: "1F618",
            shortnames: ["kissing_heart"]
        }, {
            unified: "1F617",
            shortnames: ["kissing"]
        }, {
            unified: "1F619",
            shortnames: ["kissing_smiling_eyes"]
        }, {
            unified: "1F61A",
            shortnames: ["kissing_closed_eyes"]
        }, {
            unified: "263A-FE0F",
            shortnames: ["relaxed"]
        }, {
            unified: "1F642",
            shortnames: ["slightly_smiling_face"]
        }, {
            unified: "1F917",
            shortnames: ["hugging_face"]
        }, {
            unified: "1F929",
            shortnames: ["star-struck"]
        }, {
            unified: "1F914",
            shortnames: ["thinking_face"]
        }, {
            unified: "1F928",
            shortnames: ["face_with_raised_eyebrow"]
        }, {
            unified: "1F610",
            shortnames: ["neutral_face"]
        }, {
            unified: "1F611",
            shortnames: ["expressionless"]
        }, {
            unified: "1F636",
            shortnames: ["no_mouth"]
        }, {
            unified: "1F644",
            shortnames: ["face_with_rolling_eyes"]
        }, {
            unified: "1F60F",
            shortnames: ["smirk"]
        }, {
            unified: "1F623",
            shortnames: ["persevere"]
        }, {
            unified: "1F625",
            shortnames: ["disappointed_relieved"]
        }, {
            unified: "1F62E",
            shortnames: ["open_mouth"]
        }, {
            unified: "1F910",
            shortnames: ["zipper_mouth_face"]
        }, {
            unified: "1F62F",
            shortnames: ["hushed"]
        }, {
            unified: "1F62A",
            shortnames: ["sleepy"]
        }, {
            unified: "1F62B",
            shortnames: ["tired_face"]
        }, {
            unified: "1F634",
            shortnames: ["sleeping"]
        }, {
            unified: "1F60C",
            shortnames: ["relieved"]
        }, {
            unified: "1F61B",
            shortnames: ["stuck_out_tongue"]
        }, {
            unified: "1F61C",
            shortnames: ["stuck_out_tongue_winking_eye"]
        }, {
            unified: "1F61D",
            shortnames: ["stuck_out_tongue_closed_eyes"]
        }, {
            unified: "1F924",
            shortnames: ["drooling_face"]
        }, {
            unified: "1F612",
            shortnames: ["unamused"]
        }, {
            unified: "1F613",
            shortnames: ["sweat"]
        }, {
            unified: "1F614",
            shortnames: ["pensive"]
        }, {
            unified: "1F615",
            shortnames: ["confused"]
        }, {
            unified: "1F643",
            shortnames: ["upside_down_face"]
        }, {
            unified: "1F911",
            shortnames: ["money_mouth_face"]
        }, {
            unified: "1F632",
            shortnames: ["astonished"]
        }, {
            unified: "2639-FE0F",
            shortnames: ["white_frowning_face"]
        }, {
            unified: "1F641",
            shortnames: ["slightly_frowning_face"]
        }, {
            unified: "1F616",
            shortnames: ["confounded"]
        }, {
            unified: "1F61E",
            shortnames: ["disappointed"]
        }, {
            unified: "1F61F",
            shortnames: ["worried"]
        }, {
            unified: "1F624",
            shortnames: ["triumph"]
        }, {
            unified: "1F622",
            shortnames: ["cry"]
        }, {
            unified: "1F62D",
            shortnames: ["sob"]
        }, {
            unified: "1F626",
            shortnames: ["frowning"]
        }, {
            unified: "1F627",
            shortnames: ["anguished"]
        }, {
            unified: "1F628",
            shortnames: ["fearful"]
        }, {
            unified: "1F629",
            shortnames: ["weary"]
        }, {
            unified: "1F92F",
            shortnames: ["exploding_head"]
        }, {
            unified: "1F62C",
            shortnames: ["grimacing"]
        }, {
            unified: "1F630",
            shortnames: ["cold_sweat"]
        }, {
            unified: "1F631",
            shortnames: ["scream"]
        }, {
            unified: "1F633",
            shortnames: ["flushed"]
        }, {
            unified: "1F92A",
            shortnames: ["zany_face"]
        }, {
            unified: "1F635",
            shortnames: ["dizzy_face"]
        }, {
            unified: "1F621",
            shortnames: ["rage"]
        }, {
            unified: "1F620",
            shortnames: ["angry"]
        }, {
            unified: "1F92C",
            shortnames: ["face_with_symbols_on_mouth"]
        }, {
            unified: "1F637",
            shortnames: ["mask"]
        }, {
            unified: "1F912",
            shortnames: ["face_with_thermometer"]
        }, {
            unified: "1F915",
            shortnames: ["face_with_head_bandage"]
        }, {
            unified: "1F922",
            shortnames: ["nauseated_face"]
        }, {
            unified: "1F92E",
            shortnames: ["face_vomiting"]
        }, {
            unified: "1F927",
            shortnames: ["sneezing_face"]
        }, {
            unified: "1F607",
            shortnames: ["innocent"]
        }, {
            unified: "1F920",
            shortnames: ["face_with_cowboy_hat"]
        }, {
            unified: "1F921",
            shortnames: ["clown_face"]
        }, {
            unified: "1F925",
            shortnames: ["lying_face"]
        }, {
            unified: "1F92B",
            shortnames: ["shushing_face"]
        }, {
            unified: "1F92D",
            shortnames: ["face_with_hand_over_mouth"]
        }, {
            unified: "1F9D0",
            shortnames: ["face_with_monocle"]
        }, {
            unified: "1F913",
            shortnames: ["nerd_face"]
        }, {
            unified: "1F608",
            shortnames: ["smiling_imp"]
        }, {
            unified: "1F47F",
            shortnames: ["imp"]
        }, {
            unified: "1F479",
            shortnames: ["japanese_ogre"]
        }, {
            unified: "1F47A",
            shortnames: ["japanese_goblin"]
        }, {
            unified: "1F480",
            shortnames: ["skull"]
        }, {
            unified: "2620-FE0F",
            shortnames: ["skull_and_crossbones"]
        }, {
            unified: "1F47B",
            shortnames: ["ghost"]
        }, {
            unified: "1F47D",
            shortnames: ["alien"]
        }, {
            unified: "1F47E",
            shortnames: ["space_invader"]
        }, {
            unified: "1F916",
            shortnames: ["robot_face"]
        }, {
            unified: "1F4A9",
            shortnames: ["hankey"]
        }, {
            unified: "1F63A",
            shortnames: ["smiley_cat"]
        }, {
            unified: "1F638",
            shortnames: ["smile_cat"]
        }, {
            unified: "1F639",
            shortnames: ["joy_cat"]
        }, {
            unified: "1F63B",
            shortnames: ["heart_eyes_cat"]
        }, {
            unified: "1F63C",
            shortnames: ["smirk_cat"]
        }, {
            unified: "1F63D",
            shortnames: ["kissing_cat"]
        }, {
            unified: "1F640",
            shortnames: ["scream_cat"]
        }, {
            unified: "1F63F",
            shortnames: ["crying_cat_face"]
        }, {
            unified: "1F63E",
            shortnames: ["pouting_cat"]
        }, {
            unified: "1F648",
            shortnames: ["see_no_evil"]
        }, {
            unified: "1F649",
            shortnames: ["hear_no_evil"]
        }, {
            unified: "1F64A",
            shortnames: ["speak_no_evil"]
        }, {
            unified: "1F476",
            shortnames: ["baby"]
        }, {
            unified: "1F9D2",
            shortnames: ["child"]
        }, {
            unified: "1F466",
            shortnames: ["boy"]
        }, {
            unified: "1F467",
            shortnames: ["girl"]
        }, {
            unified: "1F9D1",
            shortnames: ["adult"]
        }, {
            unified: "1F468",
            shortnames: ["man"]
        }, {
            unified: "1F469",
            shortnames: ["woman"]
        }, {
            unified: "1F9D3",
            shortnames: ["older_adult"]
        }, {
            unified: "1F474",
            shortnames: ["older_man"]
        }, {
            unified: "1F475",
            shortnames: ["older_woman"]
        }, {
            unified: "1F468-200D-2695-FE0F",
            shortnames: ["male-doctor"]
        }, {
            unified: "1F469-200D-2695-FE0F",
            shortnames: ["female-doctor"]
        }, {
            unified: "1F468-200D-1F393",
            shortnames: ["male-student"]
        }, {
            unified: "1F469-200D-1F393",
            shortnames: ["female-student"]
        }, {
            unified: "1F468-200D-1F3EB",
            shortnames: ["male-teacher"]
        }, {
            unified: "1F469-200D-1F3EB",
            shortnames: ["female-teacher"]
        }, {
            unified: "1F468-200D-2696-FE0F",
            shortnames: ["male-judge"]
        }, {
            unified: "1F469-200D-2696-FE0F",
            shortnames: ["female-judge"]
        }, {
            unified: "1F468-200D-1F33E",
            shortnames: ["male-farmer"]
        }, {
            unified: "1F469-200D-1F33E",
            shortnames: ["female-farmer"]
        }, {
            unified: "1F468-200D-1F373",
            shortnames: ["male-cook"]
        }, {
            unified: "1F469-200D-1F373",
            shortnames: ["female-cook"]
        }, {
            unified: "1F468-200D-1F527",
            shortnames: ["male-mechanic"]
        }, {
            unified: "1F469-200D-1F527",
            shortnames: ["female-mechanic"]
        }, {
            unified: "1F468-200D-1F3ED",
            shortnames: ["male-factory-worker"]
        }, {
            unified: "1F469-200D-1F3ED",
            shortnames: ["female-factory-worker"]
        }, {
            unified: "1F468-200D-1F4BC",
            shortnames: ["male-office-worker"]
        }, {
            unified: "1F469-200D-1F4BC",
            shortnames: ["female-office-worker"]
        }, {
            unified: "1F468-200D-1F52C",
            shortnames: ["male-scientist"]
        }, {
            unified: "1F469-200D-1F52C",
            shortnames: ["female-scientist"]
        }, {
            unified: "1F468-200D-1F4BB",
            shortnames: ["male-technologist"]
        }, {
            unified: "1F469-200D-1F4BB",
            shortnames: ["female-technologist"]
        }, {
            unified: "1F468-200D-1F3A4",
            shortnames: ["male-singer"]
        }, {
            unified: "1F469-200D-1F3A4",
            shortnames: ["female-singer"]
        }, {
            unified: "1F468-200D-1F3A8",
            shortnames: ["male-artist"]
        }, {
            unified: "1F469-200D-1F3A8",
            shortnames: ["female-artist"]
        }, {
            unified: "1F468-200D-2708-FE0F",
            shortnames: ["male-pilot"]
        }, {
            unified: "1F469-200D-2708-FE0F",
            shortnames: ["female-pilot"]
        }, {
            unified: "1F468-200D-1F680",
            shortnames: ["male-astronaut"]
        }, {
            unified: "1F469-200D-1F680",
            shortnames: ["female-astronaut"]
        }, {
            unified: "1F468-200D-1F692",
            shortnames: ["male-firefighter"]
        }, {
            unified: "1F469-200D-1F692",
            shortnames: ["female-firefighter"]
        }, {
            unified: "1F46E-200D-2642-FE0F",
            shortnames: ["male-police-officer", "cop"]
        }, {
            unified: "1F46E-200D-2640-FE0F",
            shortnames: ["female-police-officer"]
        }, {
            unified: "1F575-FE0F-200D-2642-FE0F",
            shortnames: ["male-detective", "sleuth_or_spy"]
        }, {
            unified: "1F575-FE0F-200D-2640-FE0F",
            shortnames: ["female-detective"]
        }, {
            unified: "1F482-200D-2642-FE0F",
            shortnames: ["male-guard", "guardsman"]
        }, {
            unified: "1F482-200D-2640-FE0F",
            shortnames: ["female-guard"]
        }, {
            unified: "1F477-200D-2642-FE0F",
            shortnames: ["male-construction-worker", "construction_worker"]
        }, {
            unified: "1F477-200D-2640-FE0F",
            shortnames: ["female-construction-worker"]
        }, {
            unified: "1F934",
            shortnames: ["prince"]
        }, {
            unified: "1F478",
            shortnames: ["princess"]
        }, {
            unified: "1F473-200D-2642-FE0F",
            shortnames: ["man-wearing-turban", "man_with_turban"]
        }, {
            unified: "1F473-200D-2640-FE0F",
            shortnames: ["woman-wearing-turban"]
        }, {
            unified: "1F472",
            shortnames: ["man_with_gua_pi_mao"]
        }, {
            unified: "1F9D5",
            shortnames: ["person_with_headscarf"]
        }, {
            unified: "1F9D4",
            shortnames: ["bearded_person"]
        }, {
            unified: "1F471-200D-2642-FE0F",
            shortnames: ["blond-haired-man", "person_with_blond_hair"]
        }, {
            unified: "1F471-200D-2640-FE0F",
            shortnames: ["blond-haired-woman"]
        }, {
            unified: "1F935",
            shortnames: ["man_in_tuxedo"]
        }, {
            unified: "1F470",
            shortnames: ["bride_with_veil"]
        }, {
            unified: "1F930",
            shortnames: ["pregnant_woman"]
        }, {
            unified: "1F931",
            shortnames: ["breast-feeding"]
        }, {
            unified: "1F47C",
            shortnames: ["angel"]
        }, {
            unified: "1F385",
            shortnames: ["santa"]
        }, {
            unified: "1F936",
            shortnames: ["mrs_claus"]
        }, {
            unified: "1F9D9-200D-2640-FE0F",
            shortnames: ["female_mage", "mage"]
        }, {
            unified: "1F9D9-200D-2642-FE0F",
            shortnames: ["male_mage"]
        }, {
            unified: "1F9DA-200D-2640-FE0F",
            shortnames: ["female_fairy", "fairy"]
        }, {
            unified: "1F9DA-200D-2642-FE0F",
            shortnames: ["male_fairy"]
        }, {
            unified: "1F9DB-200D-2640-FE0F",
            shortnames: ["female_vampire", "vampire"]
        }, {
            unified: "1F9DB-200D-2642-FE0F",
            shortnames: ["male_vampire"]
        }, {
            unified: "1F9DC-200D-2640-FE0F",
            shortnames: ["mermaid"]
        }, {
            unified: "1F9DC-200D-2642-FE0F",
            shortnames: ["merman", "merperson"]
        }, {
            unified: "1F9DD-200D-2640-FE0F",
            shortnames: ["female_elf"]
        }, {
            unified: "1F9DD-200D-2642-FE0F",
            shortnames: ["male_elf", "elf"]
        }, {
            unified: "1F9DE-200D-2640-FE0F",
            shortnames: ["female_genie"]
        }, {
            unified: "1F9DE-200D-2642-FE0F",
            shortnames: ["male_genie", "genie"]
        }, {
            unified: "1F9DF-200D-2640-FE0F",
            shortnames: ["female_zombie"]
        }, {
            unified: "1F9DF-200D-2642-FE0F",
            shortnames: ["male_zombie", "zombie"]
        }, {
            unified: "1F64D-200D-2642-FE0F",
            shortnames: ["man-frowning"]
        }, {
            unified: "1F64D-200D-2640-FE0F",
            shortnames: ["woman-frowning", "person_frowning"]
        }, {
            unified: "1F64E-200D-2642-FE0F",
            shortnames: ["man-pouting"]
        }, {
            unified: "1F64E-200D-2640-FE0F",
            shortnames: ["woman-pouting", "person_with_pouting_face"]
        }, {
            unified: "1F645-200D-2642-FE0F",
            shortnames: ["man-gesturing-no"]
        }, {
            unified: "1F645-200D-2640-FE0F",
            shortnames: ["woman-gesturing-no", "no_good"]
        }, {
            unified: "1F646-200D-2642-FE0F",
            shortnames: ["man-gesturing-ok"]
        }, {
            unified: "1F646-200D-2640-FE0F",
            shortnames: ["woman-gesturing-ok", "ok_woman"]
        }, {
            unified: "1F481-200D-2642-FE0F",
            shortnames: ["man-tipping-hand"]
        }, {
            unified: "1F481-200D-2640-FE0F",
            shortnames: ["woman-tipping-hand", "information_desk_person"]
        }, {
            unified: "1F64B-200D-2642-FE0F",
            shortnames: ["man-raising-hand"]
        }, {
            unified: "1F64B-200D-2640-FE0F",
            shortnames: ["woman-raising-hand", "raising_hand"]
        }, {
            unified: "1F647-200D-2642-FE0F",
            shortnames: ["man-bowing", "bow"]
        }, {
            unified: "1F647-200D-2640-FE0F",
            shortnames: ["woman-bowing"]
        }, {
            unified: "1F926",
            shortnames: ["face_palm"]
        }, {
            unified: "1F926-200D-2642-FE0F",
            shortnames: ["man-facepalming"]
        }, {
            unified: "1F926-200D-2640-FE0F",
            shortnames: ["woman-facepalming"]
        }, {
            unified: "1F937",
            shortnames: ["shrug"]
        }, {
            unified: "1F937-200D-2642-FE0F",
            shortnames: ["man-shrugging"]
        }, {
            unified: "1F937-200D-2640-FE0F",
            shortnames: ["woman-shrugging"]
        }, {
            unified: "1F486-200D-2642-FE0F",
            shortnames: ["man-getting-massage"]
        }, {
            unified: "1F486-200D-2640-FE0F",
            shortnames: ["woman-getting-massage", "massage"]
        }, {
            unified: "1F487-200D-2642-FE0F",
            shortnames: ["man-getting-haircut"]
        }, {
            unified: "1F487-200D-2640-FE0F",
            shortnames: ["woman-getting-haircut", "haircut"]
        }, {
            unified: "1F6B6-200D-2642-FE0F",
            shortnames: ["man-walking", "walking"]
        }, {
            unified: "1F6B6-200D-2640-FE0F",
            shortnames: ["woman-walking"]
        }, {
            unified: "1F3C3-200D-2642-FE0F",
            shortnames: ["man-running", "runner"]
        }, {
            unified: "1F3C3-200D-2640-FE0F",
            shortnames: ["woman-running"]
        }, {
            unified: "1F483",
            shortnames: ["dancer"]
        }, {
            unified: "1F57A",
            shortnames: ["man_dancing"]
        }, {
            unified: "1F46F-200D-2642-FE0F",
            shortnames: ["man-with-bunny-ears-partying"]
        }, {
            unified: "1F46F-200D-2640-FE0F",
            shortnames: ["woman-with-bunny-ears-partying", "dancers"]
        }, {
            unified: "1F9D6-200D-2640-FE0F",
            shortnames: ["woman_in_steamy_room"]
        }, {
            unified: "1F9D6-200D-2642-FE0F",
            shortnames: ["man_in_steamy_room", "person_in_steamy_room"]
        }, {
            unified: "1F9D7-200D-2640-FE0F",
            shortnames: ["woman_climbing", "person_climbing"]
        }, {
            unified: "1F9D7-200D-2642-FE0F",
            shortnames: ["man_climbing"]
        }, {
            unified: "1F9D8-200D-2640-FE0F",
            shortnames: ["woman_in_lotus_position", "person_in_lotus_position"]
        }, {
            unified: "1F9D8-200D-2642-FE0F",
            shortnames: ["man_in_lotus_position"]
        }, {
            unified: "1F6C0",
            shortnames: ["bath"]
        }, {
            unified: "1F6CC",
            shortnames: ["sleeping_accommodation"]
        }, {
            unified: "1F574-FE0F",
            shortnames: ["man_in_business_suit_levitating"]
        }, {
            unified: "1F5E3-FE0F",
            shortnames: ["speaking_head_in_silhouette"]
        }, {
            unified: "1F464",
            shortnames: ["bust_in_silhouette"]
        }, {
            unified: "1F465",
            shortnames: ["busts_in_silhouette"]
        }, {
            unified: "1F93A",
            shortnames: ["fencer"]
        }, {
            unified: "1F3C7",
            shortnames: ["horse_racing"]
        }, {
            unified: "26F7-FE0F",
            shortnames: ["skier"]
        }, {
            unified: "1F3C2",
            shortnames: ["snowboarder"]
        }, {
            unified: "1F3CC-FE0F-200D-2642-FE0F",
            shortnames: ["man-golfing", "golfer"]
        }, {
            unified: "1F3CC-FE0F-200D-2640-FE0F",
            shortnames: ["woman-golfing"]
        }, {
            unified: "1F3C4-200D-2642-FE0F",
            shortnames: ["man-surfing", "surfer"]
        }, {
            unified: "1F3C4-200D-2640-FE0F",
            shortnames: ["woman-surfing"]
        }, {
            unified: "1F6A3-200D-2642-FE0F",
            shortnames: ["man-rowing-boat", "rowboat"]
        }, {
            unified: "1F6A3-200D-2640-FE0F",
            shortnames: ["woman-rowing-boat"]
        }, {
            unified: "1F3CA-200D-2642-FE0F",
            shortnames: ["man-swimming", "swimmer"]
        }, {
            unified: "1F3CA-200D-2640-FE0F",
            shortnames: ["woman-swimming"]
        }, {
            unified: "26F9-FE0F-200D-2642-FE0F",
            shortnames: ["man-bouncing-ball", "person_with_ball"]
        }, {
            unified: "26F9-FE0F-200D-2640-FE0F",
            shortnames: ["woman-bouncing-ball"]
        }, {
            unified: "1F3CB-FE0F-200D-2642-FE0F",
            shortnames: ["man-lifting-weights", "weight_lifter"]
        }, {
            unified: "1F3CB-FE0F-200D-2640-FE0F",
            shortnames: ["woman-lifting-weights"]
        }, {
            unified: "1F6B4-200D-2642-FE0F",
            shortnames: ["man-biking", "bicyclist"]
        }, {
            unified: "1F6B4-200D-2640-FE0F",
            shortnames: ["woman-biking"]
        }, {
            unified: "1F6B5-200D-2642-FE0F",
            shortnames: ["man-mountain-biking", "mountain_bicyclist"]
        }, {
            unified: "1F6B5-200D-2640-FE0F",
            shortnames: ["woman-mountain-biking"]
        }, {
            unified: "1F3CE-FE0F",
            shortnames: ["racing_car"]
        }, {
            unified: "1F3CD-FE0F",
            shortnames: ["racing_motorcycle"]
        }, {
            unified: "1F938",
            shortnames: ["person_doing_cartwheel"]
        }, {
            unified: "1F938-200D-2642-FE0F",
            shortnames: ["man-cartwheeling"]
        }, {
            unified: "1F938-200D-2640-FE0F",
            shortnames: ["woman-cartwheeling"]
        }, {
            unified: "1F93C",
            shortnames: ["wrestlers"]
        }, {
            unified: "1F93C-200D-2642-FE0F",
            shortnames: ["man-wrestling"]
        }, {
            unified: "1F93C-200D-2640-FE0F",
            shortnames: ["woman-wrestling"]
        }, {
            unified: "1F93D",
            shortnames: ["water_polo"]
        }, {
            unified: "1F93D-200D-2642-FE0F",
            shortnames: ["man-playing-water-polo"]
        }, {
            unified: "1F93D-200D-2640-FE0F",
            shortnames: ["woman-playing-water-polo"]
        }, {
            unified: "1F93E",
            shortnames: ["handball"]
        }, {
            unified: "1F93E-200D-2642-FE0F",
            shortnames: ["man-playing-handball"]
        }, {
            unified: "1F93E-200D-2640-FE0F",
            shortnames: ["woman-playing-handball"]
        }, {
            unified: "1F939",
            shortnames: ["juggling"]
        }, {
            unified: "1F939-200D-2642-FE0F",
            shortnames: ["man-juggling"]
        }, {
            unified: "1F939-200D-2640-FE0F",
            shortnames: ["woman-juggling"]
        }, {
            unified: "1F46B",
            shortnames: ["couple"]
        }, {
            unified: "1F46C",
            shortnames: ["two_men_holding_hands"]
        }, {
            unified: "1F46D",
            shortnames: ["two_women_holding_hands"]
        }, {
            unified: "1F469-200D-2764-FE0F-200D-1F48B-200D-1F468",
            shortnames: ["woman-kiss-man", "couplekiss"]
        }, {
            unified: "1F468-200D-2764-FE0F-200D-1F48B-200D-1F468",
            shortnames: ["man-kiss-man"]
        }, {
            unified: "1F469-200D-2764-FE0F-200D-1F48B-200D-1F469",
            shortnames: ["woman-kiss-woman"]
        }, {
            unified: "1F469-200D-2764-FE0F-200D-1F468",
            shortnames: ["woman-heart-man", "couple_with_heart"]
        }, {
            unified: "1F468-200D-2764-FE0F-200D-1F468",
            shortnames: ["man-heart-man"]
        }, {
            unified: "1F469-200D-2764-FE0F-200D-1F469",
            shortnames: ["woman-heart-woman"]
        }, {
            unified: "1F468-200D-1F469-200D-1F466",
            shortnames: ["man-woman-boy", "family"]
        }, {
            unified: "1F468-200D-1F469-200D-1F467",
            shortnames: ["man-woman-girl"]
        }, {
            unified: "1F468-200D-1F469-200D-1F467-200D-1F466",
            shortnames: ["man-woman-girl-boy"]
        }, {
            unified: "1F468-200D-1F469-200D-1F466-200D-1F466",
            shortnames: ["man-woman-boy-boy"]
        }, {
            unified: "1F468-200D-1F469-200D-1F467-200D-1F467",
            shortnames: ["man-woman-girl-girl"]
        }, {
            unified: "1F468-200D-1F468-200D-1F466",
            shortnames: ["man-man-boy"]
        }, {
            unified: "1F468-200D-1F468-200D-1F467",
            shortnames: ["man-man-girl"]
        }, {
            unified: "1F468-200D-1F468-200D-1F467-200D-1F466",
            shortnames: ["man-man-girl-boy"]
        }, {
            unified: "1F468-200D-1F468-200D-1F466-200D-1F466",
            shortnames: ["man-man-boy-boy"]
        }, {
            unified: "1F468-200D-1F468-200D-1F467-200D-1F467",
            shortnames: ["man-man-girl-girl"]
        }, {
            unified: "1F469-200D-1F469-200D-1F466",
            shortnames: ["woman-woman-boy"]
        }, {
            unified: "1F469-200D-1F469-200D-1F467",
            shortnames: ["woman-woman-girl"]
        }, {
            unified: "1F469-200D-1F469-200D-1F467-200D-1F466",
            shortnames: ["woman-woman-girl-boy"]
        }, {
            unified: "1F469-200D-1F469-200D-1F466-200D-1F466",
            shortnames: ["woman-woman-boy-boy"]
        }, {
            unified: "1F469-200D-1F469-200D-1F467-200D-1F467",
            shortnames: ["woman-woman-girl-girl"]
        }, {
            unified: "1F468-200D-1F466",
            shortnames: ["man-boy"]
        }, {
            unified: "1F468-200D-1F466-200D-1F466",
            shortnames: ["man-boy-boy"]
        }, {
            unified: "1F468-200D-1F467",
            shortnames: ["man-girl"]
        }, {
            unified: "1F468-200D-1F467-200D-1F466",
            shortnames: ["man-girl-boy"]
        }, {
            unified: "1F468-200D-1F467-200D-1F467",
            shortnames: ["man-girl-girl"]
        }, {
            unified: "1F469-200D-1F466",
            shortnames: ["woman-boy"]
        }, {
            unified: "1F469-200D-1F466-200D-1F466",
            shortnames: ["woman-boy-boy"]
        }, {
            unified: "1F469-200D-1F467",
            shortnames: ["woman-girl"]
        }, {
            unified: "1F469-200D-1F467-200D-1F466",
            shortnames: ["woman-girl-boy"]
        }, {
            unified: "1F469-200D-1F467-200D-1F467",
            shortnames: ["woman-girl-girl"]
        }, {
            unified: "1F933",
            shortnames: ["selfie"]
        }, {
            unified: "1F4AA",
            shortnames: ["muscle"]
        }, {
            unified: "1F448",
            shortnames: ["point_left"]
        }, {
            unified: "1F449",
            shortnames: ["point_right"]
        }, {
            unified: "261D-FE0F",
            shortnames: ["point_up"]
        }, {
            unified: "1F446",
            shortnames: ["point_up_2"]
        }, {
            unified: "1F595",
            shortnames: ["middle_finger"]
        }, {
            unified: "1F447",
            shortnames: ["point_down"]
        }, {
            unified: "270C-FE0F",
            shortnames: ["v"]
        }, {
            unified: "1F91E",
            shortnames: ["crossed_fingers"]
        }, {
            unified: "1F596",
            shortnames: ["spock-hand"]
        }, {
            unified: "1F918",
            shortnames: ["the_horns"]
        }, {
            unified: "1F919",
            shortnames: ["call_me_hand"]
        }, {
            unified: "1F590-FE0F",
            shortnames: ["raised_hand_with_fingers_splayed"]
        }, {
            unified: "270B",
            shortnames: ["hand"]
        }, {
            unified: "1F44C",
            shortnames: ["ok_hand"]
        }, {
            unified: "1F44D",
            shortnames: ["+1"]
        }, {
            unified: "1F44E",
            shortnames: ["-1"]
        }, {
            unified: "270A",
            shortnames: ["fist"]
        }, {
            unified: "1F44A",
            shortnames: ["facepunch"]
        }, {
            unified: "1F91B",
            shortnames: ["left-facing_fist"]
        }, {
            unified: "1F91C",
            shortnames: ["right-facing_fist"]
        }, {
            unified: "1F91A",
            shortnames: ["raised_back_of_hand"]
        }, {
            unified: "1F44B",
            shortnames: ["wave"]
        }, {
            unified: "1F91F",
            shortnames: ["i_love_you_hand_sign"]
        }, {
            unified: "270D-FE0F",
            shortnames: ["writing_hand"]
        }, {
            unified: "1F44F",
            shortnames: ["clap"]
        }, {
            unified: "1F450",
            shortnames: ["open_hands"]
        }, {
            unified: "1F64C",
            shortnames: ["raised_hands"]
        }, {
            unified: "1F932",
            shortnames: ["palms_up_together"]
        }, {
            unified: "1F64F",
            shortnames: ["pray"]
        }, {
            unified: "1F91D",
            shortnames: ["handshake"]
        }, {
            unified: "1F485",
            shortnames: ["nail_care"]
        }, {
            unified: "1F442",
            shortnames: ["ear"]
        }, {
            unified: "1F443",
            shortnames: ["nose"]
        }, {
            unified: "1F463",
            shortnames: ["footprints"]
        }, {
            unified: "1F440",
            shortnames: ["eyes"]
        }, {
            unified: "1F441-FE0F",
            shortnames: ["eye"]
        }, {
            unified: "1F441-FE0F-200D-1F5E8-FE0F",
            shortnames: ["eye-in-speech-bubble"]
        }, {
            unified: "1F9E0",
            shortnames: ["brain"]
        }, {
            unified: "1F445",
            shortnames: ["tongue"]
        }, {
            unified: "1F444",
            shortnames: ["lips"]
        }, {
            unified: "1F48B",
            shortnames: ["kiss"]
        }, {
            unified: "1F498",
            shortnames: ["cupid"]
        }, {
            unified: "2764-FE0F",
            shortnames: ["heart"]
        }, {
            unified: "1F493",
            shortnames: ["heartbeat"]
        }, {
            unified: "1F494",
            shortnames: ["broken_heart"]
        }, {
            unified: "1F495",
            shortnames: ["two_hearts"]
        }, {
            unified: "1F496",
            shortnames: ["sparkling_heart"]
        }, {
            unified: "1F497",
            shortnames: ["heartpulse"]
        }, {
            unified: "1F499",
            shortnames: ["blue_heart"]
        }, {
            unified: "1F49A",
            shortnames: ["green_heart"]
        }, {
            unified: "1F49B",
            shortnames: ["yellow_heart"]
        }, {
            unified: "1F9E1",
            shortnames: ["orange_heart"]
        }, {
            unified: "1F49C",
            shortnames: ["purple_heart"]
        }, {
            unified: "1F5A4",
            shortnames: ["black_heart"]
        }, {
            unified: "1F49D",
            shortnames: ["gift_heart"]
        }, {
            unified: "1F49E",
            shortnames: ["revolving_hearts"]
        }, {
            unified: "1F49F",
            shortnames: ["heart_decoration"]
        }, {
            unified: "2763-FE0F",
            shortnames: ["heavy_heart_exclamation_mark_ornament"]
        }, {
            unified: "1F48C",
            shortnames: ["love_letter"]
        }, {
            unified: "1F4A4",
            shortnames: ["zzz"]
        }, {
            unified: "1F4A2",
            shortnames: ["anger"]
        }, {
            unified: "1F4A3",
            shortnames: ["bomb"]
        }, {
            unified: "1F4A5",
            shortnames: ["boom"]
        }, {
            unified: "1F4A6",
            shortnames: ["sweat_drops"]
        }, {
            unified: "1F4A8",
            shortnames: ["dash"]
        }, {
            unified: "1F4AB",
            shortnames: ["dizzy"]
        }, {
            unified: "1F4AC",
            shortnames: ["speech_balloon"]
        }, {
            unified: "1F5E8-FE0F",
            shortnames: ["left_speech_bubble"]
        }, {
            unified: "1F5EF-FE0F",
            shortnames: ["right_anger_bubble"]
        }, {
            unified: "1F4AD",
            shortnames: ["thought_balloon"]
        }, {
            unified: "1F573-FE0F",
            shortnames: ["hole"]
        }, {
            unified: "1F453",
            shortnames: ["eyeglasses"]
        }, {
            unified: "1F576-FE0F",
            shortnames: ["dark_sunglasses"]
        }, {
            unified: "1F454",
            shortnames: ["necktie"]
        }, {
            unified: "1F455",
            shortnames: ["shirt"]
        }, {
            unified: "1F456",
            shortnames: ["jeans"]
        }, {
            unified: "1F9E3",
            shortnames: ["scarf"]
        }, {
            unified: "1F9E4",
            shortnames: ["gloves"]
        }, {
            unified: "1F9E5",
            shortnames: ["coat"]
        }, {
            unified: "1F9E6",
            shortnames: ["socks"]
        }, {
            unified: "1F457",
            shortnames: ["dress"]
        }, {
            unified: "1F458",
            shortnames: ["kimono"]
        }, {
            unified: "1F459",
            shortnames: ["bikini"]
        }, {
            unified: "1F45A",
            shortnames: ["womans_clothes"]
        }, {
            unified: "1F45B",
            shortnames: ["purse"]
        }, {
            unified: "1F45C",
            shortnames: ["handbag"]
        }, {
            unified: "1F45D",
            shortnames: ["pouch"]
        }, {
            unified: "1F6CD-FE0F",
            shortnames: ["shopping_bags"]
        }, {
            unified: "1F392",
            shortnames: ["school_satchel"]
        }, {
            unified: "1F45E",
            shortnames: ["mans_shoe"]
        }, {
            unified: "1F45F",
            shortnames: ["athletic_shoe"]
        }, {
            unified: "1F460",
            shortnames: ["high_heel"]
        }, {
            unified: "1F461",
            shortnames: ["sandal"]
        }, {
            unified: "1F462",
            shortnames: ["boot"]
        }, {
            unified: "1F451",
            shortnames: ["crown"]
        }, {
            unified: "1F452",
            shortnames: ["womans_hat"]
        }, {
            unified: "1F3A9",
            shortnames: ["tophat"]
        }, {
            unified: "1F393",
            shortnames: ["mortar_board"]
        }, {
            unified: "1F9E2",
            shortnames: ["billed_cap"]
        }, {
            unified: "26D1-FE0F",
            shortnames: ["helmet_with_white_cross"]
        }, {
            unified: "1F4FF",
            shortnames: ["prayer_beads"]
        }, {
            unified: "1F484",
            shortnames: ["lipstick"]
        }, {
            unified: "1F48D",
            shortnames: ["ring"]
        }, {
            unified: "1F48E",
            shortnames: ["gem"]
        }]
    }, {
        name: "Animals & Nature",
        emojis: [{
            unified: "1F435",
            shortnames: ["monkey_face"]
        }, {
            unified: "1F412",
            shortnames: ["monkey"]
        }, {
            unified: "1F98D",
            shortnames: ["gorilla"]
        }, {
            unified: "1F436",
            shortnames: ["dog"]
        }, {
            unified: "1F415",
            shortnames: ["dog2"]
        }, {
            unified: "1F429",
            shortnames: ["poodle"]
        }, {
            unified: "1F43A",
            shortnames: ["wolf"]
        }, {
            unified: "1F98A",
            shortnames: ["fox_face"]
        }, {
            unified: "1F431",
            shortnames: ["cat"]
        }, {
            unified: "1F408",
            shortnames: ["cat2"]
        }, {
            unified: "1F981",
            shortnames: ["lion_face"]
        }, {
            unified: "1F42F",
            shortnames: ["tiger"]
        }, {
            unified: "1F405",
            shortnames: ["tiger2"]
        }, {
            unified: "1F406",
            shortnames: ["leopard"]
        }, {
            unified: "1F434",
            shortnames: ["horse"]
        }, {
            unified: "1F40E",
            shortnames: ["racehorse"]
        }, {
            unified: "1F984",
            shortnames: ["unicorn_face"]
        }, {
            unified: "1F993",
            shortnames: ["zebra_face"]
        }, {
            unified: "1F98C",
            shortnames: ["deer"]
        }, {
            unified: "1F42E",
            shortnames: ["cow"]
        }, {
            unified: "1F402",
            shortnames: ["ox"]
        }, {
            unified: "1F403",
            shortnames: ["water_buffalo"]
        }, {
            unified: "1F404",
            shortnames: ["cow2"]
        }, {
            unified: "1F437",
            shortnames: ["pig"]
        }, {
            unified: "1F416",
            shortnames: ["pig2"]
        }, {
            unified: "1F417",
            shortnames: ["boar"]
        }, {
            unified: "1F43D",
            shortnames: ["pig_nose"]
        }, {
            unified: "1F40F",
            shortnames: ["ram"]
        }, {
            unified: "1F411",
            shortnames: ["sheep"]
        }, {
            unified: "1F410",
            shortnames: ["goat"]
        }, {
            unified: "1F42A",
            shortnames: ["dromedary_camel"]
        }, {
            unified: "1F42B",
            shortnames: ["camel"]
        }, {
            unified: "1F992",
            shortnames: ["giraffe_face"]
        }, {
            unified: "1F418",
            shortnames: ["elephant"]
        }, {
            unified: "1F98F",
            shortnames: ["rhinoceros"]
        }, {
            unified: "1F42D",
            shortnames: ["mouse"]
        }, {
            unified: "1F401",
            shortnames: ["mouse2"]
        }, {
            unified: "1F400",
            shortnames: ["rat"]
        }, {
            unified: "1F439",
            shortnames: ["hamster"]
        }, {
            unified: "1F430",
            shortnames: ["rabbit"]
        }, {
            unified: "1F407",
            shortnames: ["rabbit2"]
        }, {
            unified: "1F43F-FE0F",
            shortnames: ["chipmunk"]
        }, {
            unified: "1F994",
            shortnames: ["hedgehog"]
        }, {
            unified: "1F987",
            shortnames: ["bat"]
        }, {
            unified: "1F43B",
            shortnames: ["bear"]
        }, {
            unified: "1F428",
            shortnames: ["koala"]
        }, {
            unified: "1F43C",
            shortnames: ["panda_face"]
        }, {
            unified: "1F43E",
            shortnames: ["feet"]
        }, {
            unified: "1F983",
            shortnames: ["turkey"]
        }, {
            unified: "1F414",
            shortnames: ["chicken"]
        }, {
            unified: "1F413",
            shortnames: ["rooster"]
        }, {
            unified: "1F423",
            shortnames: ["hatching_chick"]
        }, {
            unified: "1F424",
            shortnames: ["baby_chick"]
        }, {
            unified: "1F425",
            shortnames: ["hatched_chick"]
        }, {
            unified: "1F426",
            shortnames: ["bird"]
        }, {
            unified: "1F427",
            shortnames: ["penguin"]
        }, {
            unified: "1F54A-FE0F",
            shortnames: ["dove_of_peace"]
        }, {
            unified: "1F985",
            shortnames: ["eagle"]
        }, {
            unified: "1F986",
            shortnames: ["duck"]
        }, {
            unified: "1F989",
            shortnames: ["owl"]
        }, {
            unified: "1F438",
            shortnames: ["frog"]
        }, {
            unified: "1F40A",
            shortnames: ["crocodile"]
        }, {
            unified: "1F422",
            shortnames: ["turtle"]
        }, {
            unified: "1F98E",
            shortnames: ["lizard"]
        }, {
            unified: "1F40D",
            shortnames: ["snake"]
        }, {
            unified: "1F432",
            shortnames: ["dragon_face"]
        }, {
            unified: "1F409",
            shortnames: ["dragon"]
        }, {
            unified: "1F995",
            shortnames: ["sauropod"]
        }, {
            unified: "1F996",
            shortnames: ["t-rex"]
        }, {
            unified: "1F433",
            shortnames: ["whale"]
        }, {
            unified: "1F40B",
            shortnames: ["whale2"]
        }, {
            unified: "1F42C",
            shortnames: ["dolphin"]
        }, {
            unified: "1F41F",
            shortnames: ["fish"]
        }, {
            unified: "1F420",
            shortnames: ["tropical_fish"]
        }, {
            unified: "1F421",
            shortnames: ["blowfish"]
        }, {
            unified: "1F988",
            shortnames: ["shark"]
        }, {
            unified: "1F419",
            shortnames: ["octopus"]
        }, {
            unified: "1F41A",
            shortnames: ["shell"]
        }, {
            unified: "1F980",
            shortnames: ["crab"]
        }, {
            unified: "1F990",
            shortnames: ["shrimp"]
        }, {
            unified: "1F991",
            shortnames: ["squid"]
        }, {
            unified: "1F40C",
            shortnames: ["snail"]
        }, {
            unified: "1F98B",
            shortnames: ["butterfly"]
        }, {
            unified: "1F41B",
            shortnames: ["bug"]
        }, {
            unified: "1F41C",
            shortnames: ["ant"]
        }, {
            unified: "1F41D",
            shortnames: ["bee"]
        }, {
            unified: "1F41E",
            shortnames: ["beetle"]
        }, {
            unified: "1F997",
            shortnames: ["cricket"]
        }, {
            unified: "1F577-FE0F",
            shortnames: ["spider"]
        }, {
            unified: "1F578-FE0F",
            shortnames: ["spider_web"]
        }, {
            unified: "1F982",
            shortnames: ["scorpion"]
        }, {
            unified: "1F490",
            shortnames: ["bouquet"]
        }, {
            unified: "1F338",
            shortnames: ["cherry_blossom"]
        }, {
            unified: "1F4AE",
            shortnames: ["white_flower"]
        }, {
            unified: "1F3F5-FE0F",
            shortnames: ["rosette"]
        }, {
            unified: "1F339",
            shortnames: ["rose"]
        }, {
            unified: "1F940",
            shortnames: ["wilted_flower"]
        }, {
            unified: "1F33A",
            shortnames: ["hibiscus"]
        }, {
            unified: "1F33B",
            shortnames: ["sunflower"]
        }, {
            unified: "1F33C",
            shortnames: ["blossom"]
        }, {
            unified: "1F337",
            shortnames: ["tulip"]
        }, {
            unified: "1F331",
            shortnames: ["seedling"]
        }, {
            unified: "1F332",
            shortnames: ["evergreen_tree"]
        }, {
            unified: "1F333",
            shortnames: ["deciduous_tree"]
        }, {
            unified: "1F334",
            shortnames: ["palm_tree"]
        }, {
            unified: "1F335",
            shortnames: ["cactus"]
        }, {
            unified: "1F33E",
            shortnames: ["ear_of_rice"]
        }, {
            unified: "1F33F",
            shortnames: ["herb"]
        }, {
            unified: "2618-FE0F",
            shortnames: ["shamrock"]
        }, {
            unified: "1F340",
            shortnames: ["four_leaf_clover"]
        }, {
            unified: "1F341",
            shortnames: ["maple_leaf"]
        }, {
            unified: "1F342",
            shortnames: ["fallen_leaf"]
        }, {
            unified: "1F343",
            shortnames: ["leaves"]
        }]
    }, {
        name: "Food & Drink",
        emojis: [{
            unified: "1F347",
            shortnames: ["grapes"]
        }, {
            unified: "1F348",
            shortnames: ["melon"]
        }, {
            unified: "1F349",
            shortnames: ["watermelon"]
        }, {
            unified: "1F34A",
            shortnames: ["tangerine"]
        }, {
            unified: "1F34B",
            shortnames: ["lemon"]
        }, {
            unified: "1F34C",
            shortnames: ["banana"]
        }, {
            unified: "1F34D",
            shortnames: ["pineapple"]
        }, {
            unified: "1F34E",
            shortnames: ["apple"]
        }, {
            unified: "1F34F",
            shortnames: ["green_apple"]
        }, {
            unified: "1F350",
            shortnames: ["pear"]
        }, {
            unified: "1F351",
            shortnames: ["peach"]
        }, {
            unified: "1F352",
            shortnames: ["cherries"]
        }, {
            unified: "1F353",
            shortnames: ["strawberry"]
        }, {
            unified: "1F95D",
            shortnames: ["kiwifruit"]
        }, {
            unified: "1F345",
            shortnames: ["tomato"]
        }, {
            unified: "1F965",
            shortnames: ["coconut"]
        }, {
            unified: "1F951",
            shortnames: ["avocado"]
        }, {
            unified: "1F346",
            shortnames: ["eggplant"]
        }, {
            unified: "1F954",
            shortnames: ["potato"]
        }, {
            unified: "1F955",
            shortnames: ["carrot"]
        }, {
            unified: "1F33D",
            shortnames: ["corn"]
        }, {
            unified: "1F336-FE0F",
            shortnames: ["hot_pepper"]
        }, {
            unified: "1F952",
            shortnames: ["cucumber"]
        }, {
            unified: "1F966",
            shortnames: ["broccoli"]
        }, {
            unified: "1F344",
            shortnames: ["mushroom"]
        }, {
            unified: "1F95C",
            shortnames: ["peanuts"]
        }, {
            unified: "1F330",
            shortnames: ["chestnut"]
        }, {
            unified: "1F35E",
            shortnames: ["bread"]
        }, {
            unified: "1F950",
            shortnames: ["croissant"]
        }, {
            unified: "1F956",
            shortnames: ["baguette_bread"]
        }, {
            unified: "1F968",
            shortnames: ["pretzel"]
        }, {
            unified: "1F95E",
            shortnames: ["pancakes"]
        }, {
            unified: "1F9C0",
            shortnames: ["cheese_wedge"]
        }, {
            unified: "1F356",
            shortnames: ["meat_on_bone"]
        }, {
            unified: "1F357",
            shortnames: ["poultry_leg"]
        }, {
            unified: "1F969",
            shortnames: ["cut_of_meat"]
        }, {
            unified: "1F953",
            shortnames: ["bacon"]
        }, {
            unified: "1F354",
            shortnames: ["hamburger"]
        }, {
            unified: "1F35F",
            shortnames: ["fries"]
        }, {
            unified: "1F355",
            shortnames: ["pizza"]
        }, {
            unified: "1F32D",
            shortnames: ["hotdog"]
        }, {
            unified: "1F96A",
            shortnames: ["sandwich"]
        }, {
            unified: "1F32E",
            shortnames: ["taco"]
        }, {
            unified: "1F32F",
            shortnames: ["burrito"]
        }, {
            unified: "1F959",
            shortnames: ["stuffed_flatbread"]
        }, {
            unified: "1F95A",
            shortnames: ["egg"]
        }, {
            unified: "1F373",
            shortnames: ["fried_egg"]
        }, {
            unified: "1F958",
            shortnames: ["shallow_pan_of_food"]
        }, {
            unified: "1F372",
            shortnames: ["stew"]
        }, {
            unified: "1F963",
            shortnames: ["bowl_with_spoon"]
        }, {
            unified: "1F957",
            shortnames: ["green_salad"]
        }, {
            unified: "1F37F",
            shortnames: ["popcorn"]
        }, {
            unified: "1F96B",
            shortnames: ["canned_food"]
        }, {
            unified: "1F371",
            shortnames: ["bento"]
        }, {
            unified: "1F358",
            shortnames: ["rice_cracker"]
        }, {
            unified: "1F359",
            shortnames: ["rice_ball"]
        }, {
            unified: "1F35A",
            shortnames: ["rice"]
        }, {
            unified: "1F35B",
            shortnames: ["curry"]
        }, {
            unified: "1F35C",
            shortnames: ["ramen"]
        }, {
            unified: "1F35D",
            shortnames: ["spaghetti"]
        }, {
            unified: "1F360",
            shortnames: ["sweet_potato"]
        }, {
            unified: "1F362",
            shortnames: ["oden"]
        }, {
            unified: "1F363",
            shortnames: ["sushi"]
        }, {
            unified: "1F364",
            shortnames: ["fried_shrimp"]
        }, {
            unified: "1F365",
            shortnames: ["fish_cake"]
        }, {
            unified: "1F361",
            shortnames: ["dango"]
        }, {
            unified: "1F95F",
            shortnames: ["dumpling"]
        }, {
            unified: "1F960",
            shortnames: ["fortune_cookie"]
        }, {
            unified: "1F961",
            shortnames: ["takeout_box"]
        }, {
            unified: "1F366",
            shortnames: ["icecream"]
        }, {
            unified: "1F367",
            shortnames: ["shaved_ice"]
        }, {
            unified: "1F368",
            shortnames: ["ice_cream"]
        }, {
            unified: "1F369",
            shortnames: ["doughnut"]
        }, {
            unified: "1F36A",
            shortnames: ["cookie"]
        }, {
            unified: "1F382",
            shortnames: ["birthday"]
        }, {
            unified: "1F370",
            shortnames: ["cake"]
        }, {
            unified: "1F967",
            shortnames: ["pie"]
        }, {
            unified: "1F36B",
            shortnames: ["chocolate_bar"]
        }, {
            unified: "1F36C",
            shortnames: ["candy"]
        }, {
            unified: "1F36D",
            shortnames: ["lollipop"]
        }, {
            unified: "1F36E",
            shortnames: ["custard"]
        }, {
            unified: "1F36F",
            shortnames: ["honey_pot"]
        }, {
            unified: "1F37C",
            shortnames: ["baby_bottle"]
        }, {
            unified: "1F95B",
            shortnames: ["glass_of_milk"]
        }, {
            unified: "2615",
            shortnames: ["coffee"]
        }, {
            unified: "1F375",
            shortnames: ["tea"]
        }, {
            unified: "1F376",
            shortnames: ["sake"]
        }, {
            unified: "1F37E",
            shortnames: ["champagne"]
        }, {
            unified: "1F377",
            shortnames: ["wine_glass"]
        }, {
            unified: "1F378",
            shortnames: ["cocktail"]
        }, {
            unified: "1F379",
            shortnames: ["tropical_drink"]
        }, {
            unified: "1F37A",
            shortnames: ["beer"]
        }, {
            unified: "1F37B",
            shortnames: ["beers"]
        }, {
            unified: "1F942",
            shortnames: ["clinking_glasses"]
        }, {
            unified: "1F943",
            shortnames: ["tumbler_glass"]
        }, {
            unified: "1F964",
            shortnames: ["cup_with_straw"]
        }, {
            unified: "1F962",
            shortnames: ["chopsticks"]
        }, {
            unified: "1F37D-FE0F",
            shortnames: ["knife_fork_plate"]
        }, {
            unified: "1F374",
            shortnames: ["fork_and_knife"]
        }, {
            unified: "1F944",
            shortnames: ["spoon"]
        }, {
            unified: "1F52A",
            shortnames: ["hocho"]
        }, {
            unified: "1F3FA",
            shortnames: ["amphora"]
        }]
    }, {
        name: "Travel & Places",
        emojis: [{
            unified: "1F30D",
            shortnames: ["earth_africa"]
        }, {
            unified: "1F30E",
            shortnames: ["earth_americas"]
        }, {
            unified: "1F30F",
            shortnames: ["earth_asia"]
        }, {
            unified: "1F310",
            shortnames: ["globe_with_meridians"]
        }, {
            unified: "1F5FA-FE0F",
            shortnames: ["world_map"]
        }, {
            unified: "1F5FE",
            shortnames: ["japan"]
        }, {
            unified: "1F3D4-FE0F",
            shortnames: ["snow_capped_mountain"]
        }, {
            unified: "26F0-FE0F",
            shortnames: ["mountain"]
        }, {
            unified: "1F30B",
            shortnames: ["volcano"]
        }, {
            unified: "1F5FB",
            shortnames: ["mount_fuji"]
        }, {
            unified: "1F3D5-FE0F",
            shortnames: ["camping"]
        }, {
            unified: "1F3D6-FE0F",
            shortnames: ["beach_with_umbrella"]
        }, {
            unified: "1F3DC-FE0F",
            shortnames: ["desert"]
        }, {
            unified: "1F3DD-FE0F",
            shortnames: ["desert_island"]
        }, {
            unified: "1F3DE-FE0F",
            shortnames: ["national_park"]
        }, {
            unified: "1F3DF-FE0F",
            shortnames: ["stadium"]
        }, {
            unified: "1F3DB-FE0F",
            shortnames: ["classical_building"]
        }, {
            unified: "1F3D7-FE0F",
            shortnames: ["building_construction"]
        }, {
            unified: "1F3D8-FE0F",
            shortnames: ["house_buildings"]
        }, {
            unified: "1F3D9-FE0F",
            shortnames: ["cityscape"]
        }, {
            unified: "1F3DA-FE0F",
            shortnames: ["derelict_house_building"]
        }, {
            unified: "1F3E0",
            shortnames: ["house"]
        }, {
            unified: "1F3E1",
            shortnames: ["house_with_garden"]
        }, {
            unified: "1F3E2",
            shortnames: ["office"]
        }, {
            unified: "1F3E3",
            shortnames: ["post_office"]
        }, {
            unified: "1F3E4",
            shortnames: ["european_post_office"]
        }, {
            unified: "1F3E5",
            shortnames: ["hospital"]
        }, {
            unified: "1F3E6",
            shortnames: ["bank"]
        }, {
            unified: "1F3E8",
            shortnames: ["hotel"]
        }, {
            unified: "1F3E9",
            shortnames: ["love_hotel"]
        }, {
            unified: "1F3EA",
            shortnames: ["convenience_store"]
        }, {
            unified: "1F3EB",
            shortnames: ["school"]
        }, {
            unified: "1F3EC",
            shortnames: ["department_store"]
        }, {
            unified: "1F3ED",
            shortnames: ["factory"]
        }, {
            unified: "1F3EF",
            shortnames: ["japanese_castle"]
        }, {
            unified: "1F3F0",
            shortnames: ["european_castle"]
        }, {
            unified: "1F492",
            shortnames: ["wedding"]
        }, {
            unified: "1F5FC",
            shortnames: ["tokyo_tower"]
        }, {
            unified: "1F5FD",
            shortnames: ["statue_of_liberty"]
        }, {
            unified: "26EA",
            shortnames: ["church"]
        }, {
            unified: "1F54C",
            shortnames: ["mosque"]
        }, {
            unified: "1F54D",
            shortnames: ["synagogue"]
        }, {
            unified: "26E9-FE0F",
            shortnames: ["shinto_shrine"]
        }, {
            unified: "1F54B",
            shortnames: ["kaaba"]
        }, {
            unified: "26F2",
            shortnames: ["fountain"]
        }, {
            unified: "26FA",
            shortnames: ["tent"]
        }, {
            unified: "1F301",
            shortnames: ["foggy"]
        }, {
            unified: "1F303",
            shortnames: ["night_with_stars"]
        }, {
            unified: "1F304",
            shortnames: ["sunrise_over_mountains"]
        }, {
            unified: "1F305",
            shortnames: ["sunrise"]
        }, {
            unified: "1F306",
            shortnames: ["city_sunset"]
        }, {
            unified: "1F307",
            shortnames: ["city_sunrise"]
        }, {
            unified: "1F309",
            shortnames: ["bridge_at_night"]
        }, {
            unified: "2668-FE0F",
            shortnames: ["hotsprings"]
        }, {
            unified: "1F30C",
            shortnames: ["milky_way"]
        }, {
            unified: "1F3A0",
            shortnames: ["carousel_horse"]
        }, {
            unified: "1F3A1",
            shortnames: ["ferris_wheel"]
        }, {
            unified: "1F3A2",
            shortnames: ["roller_coaster"]
        }, {
            unified: "1F488",
            shortnames: ["barber"]
        }, {
            unified: "1F3AA",
            shortnames: ["circus_tent"]
        }, {
            unified: "1F3AD",
            shortnames: ["performing_arts"]
        }, {
            unified: "1F5BC-FE0F",
            shortnames: ["frame_with_picture"]
        }, {
            unified: "1F3A8",
            shortnames: ["art"]
        }, {
            unified: "1F3B0",
            shortnames: ["slot_machine"]
        }, {
            unified: "1F682",
            shortnames: ["steam_locomotive"]
        }, {
            unified: "1F683",
            shortnames: ["railway_car"]
        }, {
            unified: "1F684",
            shortnames: ["bullettrain_side"]
        }, {
            unified: "1F685",
            shortnames: ["bullettrain_front"]
        }, {
            unified: "1F686",
            shortnames: ["train2"]
        }, {
            unified: "1F687",
            shortnames: ["metro"]
        }, {
            unified: "1F688",
            shortnames: ["light_rail"]
        }, {
            unified: "1F689",
            shortnames: ["station"]
        }, {
            unified: "1F68A",
            shortnames: ["tram"]
        }, {
            unified: "1F69D",
            shortnames: ["monorail"]
        }, {
            unified: "1F69E",
            shortnames: ["mountain_railway"]
        }, {
            unified: "1F68B",
            shortnames: ["train"]
        }, {
            unified: "1F68C",
            shortnames: ["bus"]
        }, {
            unified: "1F68D",
            shortnames: ["oncoming_bus"]
        }, {
            unified: "1F68E",
            shortnames: ["trolleybus"]
        }, {
            unified: "1F690",
            shortnames: ["minibus"]
        }, {
            unified: "1F691",
            shortnames: ["ambulance"]
        }, {
            unified: "1F692",
            shortnames: ["fire_engine"]
        }, {
            unified: "1F693",
            shortnames: ["police_car"]
        }, {
            unified: "1F694",
            shortnames: ["oncoming_police_car"]
        }, {
            unified: "1F695",
            shortnames: ["taxi"]
        }, {
            unified: "1F696",
            shortnames: ["oncoming_taxi"]
        }, {
            unified: "1F697",
            shortnames: ["car"]
        }, {
            unified: "1F698",
            shortnames: ["oncoming_automobile"]
        }, {
            unified: "1F699",
            shortnames: ["blue_car"]
        }, {
            unified: "1F69A",
            shortnames: ["truck"]
        }, {
            unified: "1F69B",
            shortnames: ["articulated_lorry"]
        }, {
            unified: "1F69C",
            shortnames: ["tractor"]
        }, {
            unified: "1F6B2",
            shortnames: ["bike"]
        }, {
            unified: "1F6F4",
            shortnames: ["scooter"]
        }, {
            unified: "1F6F5",
            shortnames: ["motor_scooter"]
        }, {
            unified: "1F68F",
            shortnames: ["busstop"]
        }, {
            unified: "1F6E3-FE0F",
            shortnames: ["motorway"]
        }, {
            unified: "1F6E4-FE0F",
            shortnames: ["railway_track"]
        }, {
            unified: "26FD",
            shortnames: ["fuelpump"]
        }, {
            unified: "1F6A8",
            shortnames: ["rotating_light"]
        }, {
            unified: "1F6A5",
            shortnames: ["traffic_light"]
        }, {
            unified: "1F6A6",
            shortnames: ["vertical_traffic_light"]
        }, {
            unified: "1F6A7",
            shortnames: ["construction"]
        }, {
            unified: "1F6D1",
            shortnames: ["octagonal_sign"]
        }, {
            unified: "2693",
            shortnames: ["anchor"]
        }, {
            unified: "26F5",
            shortnames: ["boat"]
        }, {
            unified: "1F6F6",
            shortnames: ["canoe"]
        }, {
            unified: "1F6A4",
            shortnames: ["speedboat"]
        }, {
            unified: "1F6F3-FE0F",
            shortnames: ["passenger_ship"]
        }, {
            unified: "26F4-FE0F",
            shortnames: ["ferry"]
        }, {
            unified: "1F6E5-FE0F",
            shortnames: ["motor_boat"]
        }, {
            unified: "1F6A2",
            shortnames: ["ship"]
        }, {
            unified: "2708-FE0F",
            shortnames: ["airplane"]
        }, {
            unified: "1F6E9-FE0F",
            shortnames: ["small_airplane"]
        }, {
            unified: "1F6EB",
            shortnames: ["airplane_departure"]
        }, {
            unified: "1F6EC",
            shortnames: ["airplane_arriving"]
        }, {
            unified: "1F4BA",
            shortnames: ["seat"]
        }, {
            unified: "1F681",
            shortnames: ["helicopter"]
        }, {
            unified: "1F69F",
            shortnames: ["suspension_railway"]
        }, {
            unified: "1F6A0",
            shortnames: ["mountain_cableway"]
        }, {
            unified: "1F6A1",
            shortnames: ["aerial_tramway"]
        }, {
            unified: "1F6F0-FE0F",
            shortnames: ["satellite"]
        }, {
            unified: "1F680",
            shortnames: ["rocket"]
        }, {
            unified: "1F6F8",
            shortnames: ["flying_saucer"]
        }, {
            unified: "1F6CE-FE0F",
            shortnames: ["bellhop_bell"]
        }, {
            unified: "1F6AA",
            shortnames: ["door"]
        }, {
            unified: "1F6CF-FE0F",
            shortnames: ["bed"]
        }, {
            unified: "1F6CB-FE0F",
            shortnames: ["couch_and_lamp"]
        }, {
            unified: "1F6BD",
            shortnames: ["toilet"]
        }, {
            unified: "1F6BF",
            shortnames: ["shower"]
        }, {
            unified: "1F6C1",
            shortnames: ["bathtub"]
        }, {
            unified: "231B",
            shortnames: ["hourglass"]
        }, {
            unified: "23F3",
            shortnames: ["hourglass_flowing_sand"]
        }, {
            unified: "231A",
            shortnames: ["watch"]
        }, {
            unified: "23F0",
            shortnames: ["alarm_clock"]
        }, {
            unified: "23F1-FE0F",
            shortnames: ["stopwatch"]
        }, {
            unified: "23F2-FE0F",
            shortnames: ["timer_clock"]
        }, {
            unified: "1F570-FE0F",
            shortnames: ["mantelpiece_clock"]
        }, {
            unified: "1F55B",
            shortnames: ["clock12"]
        }, {
            unified: "1F567",
            shortnames: ["clock1230"]
        }, {
            unified: "1F550",
            shortnames: ["clock1"]
        }, {
            unified: "1F55C",
            shortnames: ["clock130"]
        }, {
            unified: "1F551",
            shortnames: ["clock2"]
        }, {
            unified: "1F55D",
            shortnames: ["clock230"]
        }, {
            unified: "1F552",
            shortnames: ["clock3"]
        }, {
            unified: "1F55E",
            shortnames: ["clock330"]
        }, {
            unified: "1F553",
            shortnames: ["clock4"]
        }, {
            unified: "1F55F",
            shortnames: ["clock430"]
        }, {
            unified: "1F554",
            shortnames: ["clock5"]
        }, {
            unified: "1F560",
            shortnames: ["clock530"]
        }, {
            unified: "1F555",
            shortnames: ["clock6"]
        }, {
            unified: "1F561",
            shortnames: ["clock630"]
        }, {
            unified: "1F556",
            shortnames: ["clock7"]
        }, {
            unified: "1F562",
            shortnames: ["clock730"]
        }, {
            unified: "1F557",
            shortnames: ["clock8"]
        }, {
            unified: "1F563",
            shortnames: ["clock830"]
        }, {
            unified: "1F558",
            shortnames: ["clock9"]
        }, {
            unified: "1F564",
            shortnames: ["clock930"]
        }, {
            unified: "1F559",
            shortnames: ["clock10"]
        }, {
            unified: "1F565",
            shortnames: ["clock1030"]
        }, {
            unified: "1F55A",
            shortnames: ["clock11"]
        }, {
            unified: "1F566",
            shortnames: ["clock1130"]
        }, {
            unified: "1F311",
            shortnames: ["new_moon"]
        }, {
            unified: "1F312",
            shortnames: ["waxing_crescent_moon"]
        }, {
            unified: "1F313",
            shortnames: ["first_quarter_moon"]
        }, {
            unified: "1F314",
            shortnames: ["moon"]
        }, {
            unified: "1F315",
            shortnames: ["full_moon"]
        }, {
            unified: "1F316",
            shortnames: ["waning_gibbous_moon"]
        }, {
            unified: "1F317",
            shortnames: ["last_quarter_moon"]
        }, {
            unified: "1F318",
            shortnames: ["waning_crescent_moon"]
        }, {
            unified: "1F319",
            shortnames: ["crescent_moon"]
        }, {
            unified: "1F31A",
            shortnames: ["new_moon_with_face"]
        }, {
            unified: "1F31B",
            shortnames: ["first_quarter_moon_with_face"]
        }, {
            unified: "1F31C",
            shortnames: ["last_quarter_moon_with_face"]
        }, {
            unified: "1F321-FE0F",
            shortnames: ["thermometer"]
        }, {
            unified: "2600-FE0F",
            shortnames: ["sunny"]
        }, {
            unified: "1F31D",
            shortnames: ["full_moon_with_face"]
        }, {
            unified: "1F31E",
            shortnames: ["sun_with_face"]
        }, {
            unified: "2B50",
            shortnames: ["star"]
        }, {
            unified: "1F31F",
            shortnames: ["star2"]
        }, {
            unified: "1F320",
            shortnames: ["stars"]
        }, {
            unified: "2601-FE0F",
            shortnames: ["cloud"]
        }, {
            unified: "26C5",
            shortnames: ["partly_sunny"]
        }, {
            unified: "26C8-FE0F",
            shortnames: ["thunder_cloud_and_rain"]
        }, {
            unified: "1F324-FE0F",
            shortnames: ["mostly_sunny"]
        }, {
            unified: "1F325-FE0F",
            shortnames: ["barely_sunny"]
        }, {
            unified: "1F326-FE0F",
            shortnames: ["partly_sunny_rain"]
        }, {
            unified: "1F327-FE0F",
            shortnames: ["rain_cloud"]
        }, {
            unified: "1F328-FE0F",
            shortnames: ["snow_cloud"]
        }, {
            unified: "1F329-FE0F",
            shortnames: ["lightning"]
        }, {
            unified: "1F32A-FE0F",
            shortnames: ["tornado"]
        }, {
            unified: "1F32B-FE0F",
            shortnames: ["fog"]
        }, {
            unified: "1F32C-FE0F",
            shortnames: ["wind_blowing_face"]
        }, {
            unified: "1F300",
            shortnames: ["cyclone"]
        }, {
            unified: "1F308",
            shortnames: ["rainbow"]
        }, {
            unified: "1F302",
            shortnames: ["closed_umbrella"]
        }, {
            unified: "2602-FE0F",
            shortnames: ["umbrella"]
        }, {
            unified: "2614",
            shortnames: ["umbrella_with_rain_drops"]
        }, {
            unified: "26F1-FE0F",
            shortnames: ["umbrella_on_ground"]
        }, {
            unified: "26A1",
            shortnames: ["zap"]
        }, {
            unified: "2744-FE0F",
            shortnames: ["snowflake"]
        }, {
            unified: "2603-FE0F",
            shortnames: ["snowman"]
        }, {
            unified: "26C4",
            shortnames: ["snowman_without_snow"]
        }, {
            unified: "2604-FE0F",
            shortnames: ["comet"]
        }, {
            unified: "1F525",
            shortnames: ["fire"]
        }, {
            unified: "1F4A7",
            shortnames: ["droplet"]
        }, {
            unified: "1F30A",
            shortnames: ["ocean"]
        }]
    }, {
        name: "Activities",
        emojis: [{
            unified: "1F383",
            shortnames: ["jack_o_lantern"]
        }, {
            unified: "1F384",
            shortnames: ["christmas_tree"]
        }, {
            unified: "1F386",
            shortnames: ["fireworks"]
        }, {
            unified: "1F387",
            shortnames: ["sparkler"]
        }, {
            unified: "2728",
            shortnames: ["sparkles"]
        }, {
            unified: "1F388",
            shortnames: ["balloon"]
        }, {
            unified: "1F389",
            shortnames: ["tada"]
        }, {
            unified: "1F38A",
            shortnames: ["confetti_ball"]
        }, {
            unified: "1F38B",
            shortnames: ["tanabata_tree"]
        }, {
            unified: "1F38D",
            shortnames: ["bamboo"]
        }, {
            unified: "1F38E",
            shortnames: ["dolls"]
        }, {
            unified: "1F38F",
            shortnames: ["flags"]
        }, {
            unified: "1F390",
            shortnames: ["wind_chime"]
        }, {
            unified: "1F391",
            shortnames: ["rice_scene"]
        }, {
            unified: "1F380",
            shortnames: ["ribbon"]
        }, {
            unified: "1F381",
            shortnames: ["gift"]
        }, {
            unified: "1F397-FE0F",
            shortnames: ["reminder_ribbon"]
        }, {
            unified: "1F39F-FE0F",
            shortnames: ["admission_tickets"]
        }, {
            unified: "1F3AB",
            shortnames: ["ticket"]
        }, {
            unified: "1F396-FE0F",
            shortnames: ["medal"]
        }, {
            unified: "1F3C6",
            shortnames: ["trophy"]
        }, {
            unified: "1F3C5",
            shortnames: ["sports_medal"]
        }, {
            unified: "1F947",
            shortnames: ["first_place_medal"]
        }, {
            unified: "1F948",
            shortnames: ["second_place_medal"]
        }, {
            unified: "1F949",
            shortnames: ["third_place_medal"]
        }, {
            unified: "26BD",
            shortnames: ["soccer"]
        }, {
            unified: "26BE",
            shortnames: ["baseball"]
        }, {
            unified: "1F3C0",
            shortnames: ["basketball"]
        }, {
            unified: "1F3D0",
            shortnames: ["volleyball"]
        }, {
            unified: "1F3C8",
            shortnames: ["football"]
        }, {
            unified: "1F3C9",
            shortnames: ["rugby_football"]
        }, {
            unified: "1F3BE",
            shortnames: ["tennis"]
        }, {
            unified: "1F3B1",
            shortnames: ["8ball"]
        }, {
            unified: "1F3B3",
            shortnames: ["bowling"]
        }, {
            unified: "1F3CF",
            shortnames: ["cricket_bat_and_ball"]
        }, {
            unified: "1F3D1",
            shortnames: ["field_hockey_stick_and_ball"]
        }, {
            unified: "1F3D2",
            shortnames: ["ice_hockey_stick_and_puck"]
        }, {
            unified: "1F3D3",
            shortnames: ["table_tennis_paddle_and_ball"]
        }, {
            unified: "1F3F8",
            shortnames: ["badminton_racquet_and_shuttlecock"]
        }, {
            unified: "1F94A",
            shortnames: ["boxing_glove"]
        }, {
            unified: "1F94B",
            shortnames: ["martial_arts_uniform"]
        }, {
            unified: "1F945",
            shortnames: ["goal_net"]
        }, {
            unified: "1F3AF",
            shortnames: ["dart"]
        }, {
            unified: "26F3",
            shortnames: ["golf"]
        }, {
            unified: "26F8-FE0F",
            shortnames: ["ice_skate"]
        }, {
            unified: "1F3A3",
            shortnames: ["fishing_pole_and_fish"]
        }, {
            unified: "1F3BD",
            shortnames: ["running_shirt_with_sash"]
        }, {
            unified: "1F3BF",
            shortnames: ["ski"]
        }, {
            unified: "1F6F7",
            shortnames: ["sled"]
        }, {
            unified: "1F94C",
            shortnames: ["curling_stone"]
        }, {
            unified: "1F3AE",
            shortnames: ["video_game"]
        }, {
            unified: "1F579-FE0F",
            shortnames: ["joystick"]
        }, {
            unified: "1F3B2",
            shortnames: ["game_die"]
        }, {
            unified: "2660-FE0F",
            shortnames: ["spades"]
        }, {
            unified: "2665-FE0F",
            shortnames: ["hearts"]
        }, {
            unified: "2666-FE0F",
            shortnames: ["diamonds"]
        }, {
            unified: "2663-FE0F",
            shortnames: ["clubs"]
        }, {
            unified: "1F0CF",
            shortnames: ["black_joker"]
        }, {
            unified: "1F004",
            shortnames: ["mahjong"]
        }, {
            unified: "1F3B4",
            shortnames: ["flower_playing_cards"]
        }]
    }, {
        name: "Objects",
        emojis: [{
            unified: "1F507",
            shortnames: ["mute"]
        }, {
            unified: "1F508",
            shortnames: ["speaker"]
        }, {
            unified: "1F509",
            shortnames: ["sound"]
        }, {
            unified: "1F50A",
            shortnames: ["loud_sound"]
        }, {
            unified: "1F4E2",
            shortnames: ["loudspeaker"]
        }, {
            unified: "1F4E3",
            shortnames: ["mega"]
        }, {
            unified: "1F4EF",
            shortnames: ["postal_horn"]
        }, {
            unified: "1F514",
            shortnames: ["bell"]
        }, {
            unified: "1F515",
            shortnames: ["no_bell"]
        }, {
            unified: "1F3BC",
            shortnames: ["musical_score"]
        }, {
            unified: "1F3B5",
            shortnames: ["musical_note"]
        }, {
            unified: "1F3B6",
            shortnames: ["notes"]
        }, {
            unified: "1F399-FE0F",
            shortnames: ["studio_microphone"]
        }, {
            unified: "1F39A-FE0F",
            shortnames: ["level_slider"]
        }, {
            unified: "1F39B-FE0F",
            shortnames: ["control_knobs"]
        }, {
            unified: "1F3A4",
            shortnames: ["microphone"]
        }, {
            unified: "1F3A7",
            shortnames: ["headphones"]
        }, {
            unified: "1F4FB",
            shortnames: ["radio"]
        }, {
            unified: "1F3B7",
            shortnames: ["saxophone"]
        }, {
            unified: "1F3B8",
            shortnames: ["guitar"]
        }, {
            unified: "1F3B9",
            shortnames: ["musical_keyboard"]
        }, {
            unified: "1F3BA",
            shortnames: ["trumpet"]
        }, {
            unified: "1F3BB",
            shortnames: ["violin"]
        }, {
            unified: "1F941",
            shortnames: ["drum_with_drumsticks"]
        }, {
            unified: "1F4F1",
            shortnames: ["iphone"]
        }, {
            unified: "1F4F2",
            shortnames: ["calling"]
        }, {
            unified: "260E-FE0F",
            shortnames: ["phone"]
        }, {
            unified: "1F4DE",
            shortnames: ["telephone_receiver"]
        }, {
            unified: "1F4DF",
            shortnames: ["pager"]
        }, {
            unified: "1F4E0",
            shortnames: ["fax"]
        }, {
            unified: "1F50B",
            shortnames: ["battery"]
        }, {
            unified: "1F50C",
            shortnames: ["electric_plug"]
        }, {
            unified: "1F4BB",
            shortnames: ["computer"]
        }, {
            unified: "1F5A5-FE0F",
            shortnames: ["desktop_computer"]
        }, {
            unified: "1F5A8-FE0F",
            shortnames: ["printer"]
        }, {
            unified: "2328-FE0F",
            shortnames: ["keyboard"]
        }, {
            unified: "1F5B1-FE0F",
            shortnames: ["three_button_mouse"]
        }, {
            unified: "1F5B2-FE0F",
            shortnames: ["trackball"]
        }, {
            unified: "1F4BD",
            shortnames: ["minidisc"]
        }, {
            unified: "1F4BE",
            shortnames: ["floppy_disk"]
        }, {
            unified: "1F4BF",
            shortnames: ["cd"]
        }, {
            unified: "1F4C0",
            shortnames: ["dvd"]
        }, {
            unified: "1F3A5",
            shortnames: ["movie_camera"]
        }, {
            unified: "1F39E-FE0F",
            shortnames: ["film_frames"]
        }, {
            unified: "1F4FD-FE0F",
            shortnames: ["film_projector"]
        }, {
            unified: "1F3AC",
            shortnames: ["clapper"]
        }, {
            unified: "1F4FA",
            shortnames: ["tv"]
        }, {
            unified: "1F4F7",
            shortnames: ["camera"]
        }, {
            unified: "1F4F8",
            shortnames: ["camera_with_flash"]
        }, {
            unified: "1F4F9",
            shortnames: ["video_camera"]
        }, {
            unified: "1F4FC",
            shortnames: ["vhs"]
        }, {
            unified: "1F50D",
            shortnames: ["mag"]
        }, {
            unified: "1F50E",
            shortnames: ["mag_right"]
        }, {
            unified: "1F52C",
            shortnames: ["microscope"]
        }, {
            unified: "1F52D",
            shortnames: ["telescope"]
        }, {
            unified: "1F4E1",
            shortnames: ["satellite_antenna"]
        }, {
            unified: "1F56F-FE0F",
            shortnames: ["candle"]
        }, {
            unified: "1F4A1",
            shortnames: ["bulb"]
        }, {
            unified: "1F526",
            shortnames: ["flashlight"]
        }, {
            unified: "1F3EE",
            shortnames: ["izakaya_lantern"]
        }, {
            unified: "1F4D4",
            shortnames: ["notebook_with_decorative_cover"]
        }, {
            unified: "1F4D5",
            shortnames: ["closed_book"]
        }, {
            unified: "1F4D6",
            shortnames: ["book"]
        }, {
            unified: "1F4D7",
            shortnames: ["green_book"]
        }, {
            unified: "1F4D8",
            shortnames: ["blue_book"]
        }, {
            unified: "1F4D9",
            shortnames: ["orange_book"]
        }, {
            unified: "1F4DA",
            shortnames: ["books"]
        }, {
            unified: "1F4D3",
            shortnames: ["notebook"]
        }, {
            unified: "1F4D2",
            shortnames: ["ledger"]
        }, {
            unified: "1F4C3",
            shortnames: ["page_with_curl"]
        }, {
            unified: "1F4DC",
            shortnames: ["scroll"]
        }, {
            unified: "1F4C4",
            shortnames: ["page_facing_up"]
        }, {
            unified: "1F4F0",
            shortnames: ["newspaper"]
        }, {
            unified: "1F5DE-FE0F",
            shortnames: ["rolled_up_newspaper"]
        }, {
            unified: "1F4D1",
            shortnames: ["bookmark_tabs"]
        }, {
            unified: "1F516",
            shortnames: ["bookmark"]
        }, {
            unified: "1F3F7-FE0F",
            shortnames: ["label"]
        }, {
            unified: "1F4B0",
            shortnames: ["moneybag"]
        }, {
            unified: "1F4B4",
            shortnames: ["yen"]
        }, {
            unified: "1F4B5",
            shortnames: ["dollar"]
        }, {
            unified: "1F4B6",
            shortnames: ["euro"]
        }, {
            unified: "1F4B7",
            shortnames: ["pound"]
        }, {
            unified: "1F4B8",
            shortnames: ["money_with_wings"]
        }, {
            unified: "1F4B3",
            shortnames: ["credit_card"]
        }, {
            unified: "1F4B9",
            shortnames: ["chart"]
        }, {
            unified: "1F4B1",
            shortnames: ["currency_exchange"]
        }, {
            unified: "1F4B2",
            shortnames: ["heavy_dollar_sign"]
        }, {
            unified: "2709-FE0F",
            shortnames: ["email"]
        }, {
            unified: "1F4E7",
            shortnames: ["e-mail"]
        }, {
            unified: "1F4E8",
            shortnames: ["incoming_envelope"]
        }, {
            unified: "1F4E9",
            shortnames: ["envelope_with_arrow"]
        }, {
            unified: "1F4E4",
            shortnames: ["outbox_tray"]
        }, {
            unified: "1F4E5",
            shortnames: ["inbox_tray"]
        }, {
            unified: "1F4E6",
            shortnames: ["package"]
        }, {
            unified: "1F4EB",
            shortnames: ["mailbox"]
        }, {
            unified: "1F4EA",
            shortnames: ["mailbox_closed"]
        }, {
            unified: "1F4EC",
            shortnames: ["mailbox_with_mail"]
        }, {
            unified: "1F4ED",
            shortnames: ["mailbox_with_no_mail"]
        }, {
            unified: "1F4EE",
            shortnames: ["postbox"]
        }, {
            unified: "1F5F3-FE0F",
            shortnames: ["ballot_box_with_ballot"]
        }, {
            unified: "270F-FE0F",
            shortnames: ["pencil2"]
        }, {
            unified: "2712-FE0F",
            shortnames: ["black_nib"]
        }, {
            unified: "1F58B-FE0F",
            shortnames: ["lower_left_fountain_pen"]
        }, {
            unified: "1F58A-FE0F",
            shortnames: ["lower_left_ballpoint_pen"]
        }, {
            unified: "1F58C-FE0F",
            shortnames: ["lower_left_paintbrush"]
        }, {
            unified: "1F58D-FE0F",
            shortnames: ["lower_left_crayon"]
        }, {
            unified: "1F4DD",
            shortnames: ["memo"]
        }, {
            unified: "1F4BC",
            shortnames: ["briefcase"]
        }, {
            unified: "1F4C1",
            shortnames: ["file_folder"]
        }, {
            unified: "1F4C2",
            shortnames: ["open_file_folder"]
        }, {
            unified: "1F5C2-FE0F",
            shortnames: ["card_index_dividers"]
        }, {
            unified: "1F4C5",
            shortnames: ["date"]
        }, {
            unified: "1F4C6",
            shortnames: ["calendar"]
        }, {
            unified: "1F5D2-FE0F",
            shortnames: ["spiral_note_pad"]
        }, {
            unified: "1F5D3-FE0F",
            shortnames: ["spiral_calendar_pad"]
        }, {
            unified: "1F4C7",
            shortnames: ["card_index"]
        }, {
            unified: "1F4C8",
            shortnames: ["chart_with_upwards_trend"]
        }, {
            unified: "1F4C9",
            shortnames: ["chart_with_downwards_trend"]
        }, {
            unified: "1F4CA",
            shortnames: ["bar_chart"]
        }, {
            unified: "1F4CB",
            shortnames: ["clipboard"]
        }, {
            unified: "1F4CC",
            shortnames: ["pushpin"]
        }, {
            unified: "1F4CD",
            shortnames: ["round_pushpin"]
        }, {
            unified: "1F4CE",
            shortnames: ["paperclip"]
        }, {
            unified: "1F587-FE0F",
            shortnames: ["linked_paperclips"]
        }, {
            unified: "1F4CF",
            shortnames: ["straight_ruler"]
        }, {
            unified: "1F4D0",
            shortnames: ["triangular_ruler"]
        }, {
            unified: "2702-FE0F",
            shortnames: ["scissors"]
        }, {
            unified: "1F5C3-FE0F",
            shortnames: ["card_file_box"]
        }, {
            unified: "1F5C4-FE0F",
            shortnames: ["file_cabinet"]
        }, {
            unified: "1F5D1-FE0F",
            shortnames: ["wastebasket"]
        }, {
            unified: "1F512",
            shortnames: ["lock"]
        }, {
            unified: "1F513",
            shortnames: ["unlock"]
        }, {
            unified: "1F50F",
            shortnames: ["lock_with_ink_pen"]
        }, {
            unified: "1F510",
            shortnames: ["closed_lock_with_key"]
        }, {
            unified: "1F511",
            shortnames: ["key"]
        }, {
            unified: "1F5DD-FE0F",
            shortnames: ["old_key"]
        }, {
            unified: "1F528",
            shortnames: ["hammer"]
        }, {
            unified: "26CF-FE0F",
            shortnames: ["pick"]
        }, {
            unified: "2692-FE0F",
            shortnames: ["hammer_and_pick"]
        }, {
            unified: "1F6E0-FE0F",
            shortnames: ["hammer_and_wrench"]
        }, {
            unified: "1F5E1-FE0F",
            shortnames: ["dagger_knife"]
        }, {
            unified: "2694-FE0F",
            shortnames: ["crossed_swords"]
        }, {
            unified: "1F52B",
            shortnames: ["gun"]
        }, {
            unified: "1F3F9",
            shortnames: ["bow_and_arrow"]
        }, {
            unified: "1F6E1-FE0F",
            shortnames: ["shield"]
        }, {
            unified: "1F527",
            shortnames: ["wrench"]
        }, {
            unified: "1F529",
            shortnames: ["nut_and_bolt"]
        }, {
            unified: "2699-FE0F",
            shortnames: ["gear"]
        }, {
            unified: "1F5DC-FE0F",
            shortnames: ["compression"]
        }, {
            unified: "2697-FE0F",
            shortnames: ["alembic"]
        }, {
            unified: "2696-FE0F",
            shortnames: ["scales"]
        }, {
            unified: "1F517",
            shortnames: ["link"]
        }, {
            unified: "26D3-FE0F",
            shortnames: ["chains"]
        }, {
            unified: "1F489",
            shortnames: ["syringe"]
        }, {
            unified: "1F48A",
            shortnames: ["pill"]
        }, {
            unified: "1F6AC",
            shortnames: ["smoking"]
        }, {
            unified: "26B0-FE0F",
            shortnames: ["coffin"]
        }, {
            unified: "26B1-FE0F",
            shortnames: ["funeral_urn"]
        }, {
            unified: "1F5FF",
            shortnames: ["moyai"]
        }, {
            unified: "1F6E2-FE0F",
            shortnames: ["oil_drum"]
        }, {
            unified: "1F52E",
            shortnames: ["crystal_ball"]
        }, {
            unified: "1F6D2",
            shortnames: ["shopping_trolley"]
        }]
    }, {
        name: "Symbols",
        emojis: [{
            unified: "1F3E7",
            shortnames: ["atm"]
        }, {
            unified: "1F6AE",
            shortnames: ["put_litter_in_its_place"]
        }, {
            unified: "1F6B0",
            shortnames: ["potable_water"]
        }, {
            unified: "267F",
            shortnames: ["wheelchair"]
        }, {
            unified: "1F6B9",
            shortnames: ["mens"]
        }, {
            unified: "1F6BA",
            shortnames: ["womens"]
        }, {
            unified: "1F6BB",
            shortnames: ["restroom"]
        }, {
            unified: "1F6BC",
            shortnames: ["baby_symbol"]
        }, {
            unified: "1F6BE",
            shortnames: ["wc"]
        }, {
            unified: "1F6C2",
            shortnames: ["passport_control"]
        }, {
            unified: "1F6C3",
            shortnames: ["customs"]
        }, {
            unified: "1F6C4",
            shortnames: ["baggage_claim"]
        }, {
            unified: "1F6C5",
            shortnames: ["left_luggage"]
        }, {
            unified: "26A0-FE0F",
            shortnames: ["warning"]
        }, {
            unified: "1F6B8",
            shortnames: ["children_crossing"]
        }, {
            unified: "26D4",
            shortnames: ["no_entry"]
        }, {
            unified: "1F6AB",
            shortnames: ["no_entry_sign"]
        }, {
            unified: "1F6B3",
            shortnames: ["no_bicycles"]
        }, {
            unified: "1F6AD",
            shortnames: ["no_smoking"]
        }, {
            unified: "1F6AF",
            shortnames: ["do_not_litter"]
        }, {
            unified: "1F6B1",
            shortnames: ["non-potable_water"]
        }, {
            unified: "1F6B7",
            shortnames: ["no_pedestrians"]
        }, {
            unified: "1F4F5",
            shortnames: ["no_mobile_phones"]
        }, {
            unified: "1F51E",
            shortnames: ["underage"]
        }, {
            unified: "2622-FE0F",
            shortnames: ["radioactive_sign"]
        }, {
            unified: "2623-FE0F",
            shortnames: ["biohazard_sign"]
        }, {
            unified: "2B06-FE0F",
            shortnames: ["arrow_up"]
        }, {
            unified: "2197-FE0F",
            shortnames: ["arrow_upper_right"]
        }, {
            unified: "27A1-FE0F",
            shortnames: ["arrow_right"]
        }, {
            unified: "2198-FE0F",
            shortnames: ["arrow_lower_right"]
        }, {
            unified: "2B07-FE0F",
            shortnames: ["arrow_down"]
        }, {
            unified: "2199-FE0F",
            shortnames: ["arrow_lower_left"]
        }, {
            unified: "2B05-FE0F",
            shortnames: ["arrow_left"]
        }, {
            unified: "2196-FE0F",
            shortnames: ["arrow_upper_left"]
        }, {
            unified: "2195-FE0F",
            shortnames: ["arrow_up_down"]
        }, {
            unified: "2194-FE0F",
            shortnames: ["left_right_arrow"]
        }, {
            unified: "21A9-FE0F",
            shortnames: ["leftwards_arrow_with_hook"]
        }, {
            unified: "21AA-FE0F",
            shortnames: ["arrow_right_hook"]
        }, {
            unified: "2934-FE0F",
            shortnames: ["arrow_heading_up"]
        }, {
            unified: "2935-FE0F",
            shortnames: ["arrow_heading_down"]
        }, {
            unified: "1F503",
            shortnames: ["arrows_clockwise"]
        }, {
            unified: "1F504",
            shortnames: ["arrows_counterclockwise"]
        }, {
            unified: "1F519",
            shortnames: ["back"]
        }, {
            unified: "1F51A",
            shortnames: ["end"]
        }, {
            unified: "1F51B",
            shortnames: ["on"]
        }, {
            unified: "1F51C",
            shortnames: ["soon"]
        }, {
            unified: "1F51D",
            shortnames: ["top"]
        }, {
            unified: "1F6D0",
            shortnames: ["place_of_worship"]
        }, {
            unified: "269B-FE0F",
            shortnames: ["atom_symbol"]
        }, {
            unified: "1F549-FE0F",
            shortnames: ["om_symbol"]
        }, {
            unified: "2721-FE0F",
            shortnames: ["star_of_david"]
        }, {
            unified: "2638-FE0F",
            shortnames: ["wheel_of_dharma"]
        }, {
            unified: "262F-FE0F",
            shortnames: ["yin_yang"]
        }, {
            unified: "271D-FE0F",
            shortnames: ["latin_cross"]
        }, {
            unified: "2626-FE0F",
            shortnames: ["orthodox_cross"]
        }, {
            unified: "262A-FE0F",
            shortnames: ["star_and_crescent"]
        }, {
            unified: "262E-FE0F",
            shortnames: ["peace_symbol"]
        }, {
            unified: "1F54E",
            shortnames: ["menorah_with_nine_branches"]
        }, {
            unified: "1F52F",
            shortnames: ["six_pointed_star"]
        }, {
            unified: "2648",
            shortnames: ["aries"]
        }, {
            unified: "2649",
            shortnames: ["taurus"]
        }, {
            unified: "264A",
            shortnames: ["gemini"]
        }, {
            unified: "264B",
            shortnames: ["cancer"]
        }, {
            unified: "264C",
            shortnames: ["leo"]
        }, {
            unified: "264D",
            shortnames: ["virgo"]
        }, {
            unified: "264E",
            shortnames: ["libra"]
        }, {
            unified: "264F",
            shortnames: ["scorpius"]
        }, {
            unified: "2650",
            shortnames: ["sagittarius"]
        }, {
            unified: "2651",
            shortnames: ["capricorn"]
        }, {
            unified: "2652",
            shortnames: ["aquarius"]
        }, {
            unified: "2653",
            shortnames: ["pisces"]
        }, {
            unified: "26CE",
            shortnames: ["ophiuchus"]
        }, {
            unified: "1F500",
            shortnames: ["twisted_rightwards_arrows"]
        }, {
            unified: "1F501",
            shortnames: ["repeat"]
        }, {
            unified: "1F502",
            shortnames: ["repeat_one"]
        }, {
            unified: "25B6-FE0F",
            shortnames: ["arrow_forward"]
        }, {
            unified: "23E9",
            shortnames: ["fast_forward"]
        }, {
            unified: "23ED-FE0F",
            shortnames: ["black_right_pointing_double_triangle_with_vertical_bar"]
        }, {
            unified: "23EF-FE0F",
            shortnames: ["black_right_pointing_triangle_with_double_vertical_bar"]
        }, {
            unified: "25C0-FE0F",
            shortnames: ["arrow_backward"]
        }, {
            unified: "23EA",
            shortnames: ["rewind"]
        }, {
            unified: "23EE-FE0F",
            shortnames: ["black_left_pointing_double_triangle_with_vertical_bar"]
        }, {
            unified: "1F53C",
            shortnames: ["arrow_up_small"]
        }, {
            unified: "23EB",
            shortnames: ["arrow_double_up"]
        }, {
            unified: "1F53D",
            shortnames: ["arrow_down_small"]
        }, {
            unified: "23EC",
            shortnames: ["arrow_double_down"]
        }, {
            unified: "23F8-FE0F",
            shortnames: ["double_vertical_bar"]
        }, {
            unified: "23F9-FE0F",
            shortnames: ["black_square_for_stop"]
        }, {
            unified: "23FA-FE0F",
            shortnames: ["black_circle_for_record"]
        }, {
            unified: "23CF-FE0F",
            shortnames: ["eject"]
        }, {
            unified: "1F3A6",
            shortnames: ["cinema"]
        }, {
            unified: "1F505",
            shortnames: ["low_brightness"]
        }, {
            unified: "1F506",
            shortnames: ["high_brightness"]
        }, {
            unified: "1F4F6",
            shortnames: ["signal_strength"]
        }, {
            unified: "1F4F3",
            shortnames: ["vibration_mode"]
        }, {
            unified: "1F4F4",
            shortnames: ["mobile_phone_off"]
        }, {
            unified: "2640-FE0F",
            shortnames: ["female_sign"]
        }, {
            unified: "2642-FE0F",
            shortnames: ["male_sign"]
        }, {
            unified: "2695-FE0F",
            shortnames: ["medical_symbol"]
        }, {
            unified: "267B-FE0F",
            shortnames: ["recycle"]
        }, {
            unified: "269C-FE0F",
            shortnames: ["fleur_de_lis"]
        }, {
            unified: "1F531",
            shortnames: ["trident"]
        }, {
            unified: "1F4DB",
            shortnames: ["name_badge"]
        }, {
            unified: "1F530",
            shortnames: ["beginner"]
        }, {
            unified: "2B55",
            shortnames: ["o"]
        }, {
            unified: "2705",
            shortnames: ["white_check_mark"]
        }, {
            unified: "2611-FE0F",
            shortnames: ["ballot_box_with_check"]
        }, {
            unified: "2714-FE0F",
            shortnames: ["heavy_check_mark"]
        }, {
            unified: "2716-FE0F",
            shortnames: ["heavy_multiplication_x"]
        }, {
            unified: "274C",
            shortnames: ["x"]
        }, {
            unified: "274E",
            shortnames: ["negative_squared_cross_mark"]
        }, {
            unified: "2795",
            shortnames: ["heavy_plus_sign"]
        }, {
            unified: "2796",
            shortnames: ["heavy_minus_sign"]
        }, {
            unified: "2797",
            shortnames: ["heavy_division_sign"]
        }, {
            unified: "27B0",
            shortnames: ["curly_loop"]
        }, {
            unified: "27BF",
            shortnames: ["loop"]
        }, {
            unified: "303D-FE0F",
            shortnames: ["part_alternation_mark"]
        }, {
            unified: "2733-FE0F",
            shortnames: ["eight_spoked_asterisk"]
        }, {
            unified: "2734-FE0F",
            shortnames: ["eight_pointed_black_star"]
        }, {
            unified: "2747-FE0F",
            shortnames: ["sparkle"]
        }, {
            unified: "203C-FE0F",
            shortnames: ["bangbang"]
        }, {
            unified: "2049-FE0F",
            shortnames: ["interrobang"]
        }, {
            unified: "2753",
            shortnames: ["question"]
        }, {
            unified: "2754",
            shortnames: ["grey_question"]
        }, {
            unified: "2755",
            shortnames: ["grey_exclamation"]
        }, {
            unified: "2757",
            shortnames: ["exclamation"]
        }, {
            unified: "3030-FE0F",
            shortnames: ["wavy_dash"]
        }, {
            unified: "00A9-FE0F",
            shortnames: ["copyright"]
        }, {
            unified: "00AE-FE0F",
            shortnames: ["registered"]
        }, {
            unified: "2122-FE0F",
            shortnames: ["tm"]
        }, {
            unified: "0023-FE0F-20E3",
            shortnames: ["hash"]
        }, {
            unified: "002A-FE0F-20E3",
            shortnames: ["keycap_star"]
        }, {
            unified: "0030-FE0F-20E3",
            shortnames: ["zero"]
        }, {
            unified: "0031-FE0F-20E3",
            shortnames: ["one"]
        }, {
            unified: "0032-FE0F-20E3",
            shortnames: ["two"]
        }, {
            unified: "0033-FE0F-20E3",
            shortnames: ["three"]
        }, {
            unified: "0034-FE0F-20E3",
            shortnames: ["four"]
        }, {
            unified: "0035-FE0F-20E3",
            shortnames: ["five"]
        }, {
            unified: "0036-FE0F-20E3",
            shortnames: ["six"]
        }, {
            unified: "0037-FE0F-20E3",
            shortnames: ["seven"]
        }, {
            unified: "0038-FE0F-20E3",
            shortnames: ["eight"]
        }, {
            unified: "0039-FE0F-20E3",
            shortnames: ["nine"]
        }, {
            unified: "1F51F",
            shortnames: ["keycap_ten"]
        }, {
            unified: "1F4AF",
            shortnames: ["100"]
        }, {
            unified: "1F520",
            shortnames: ["capital_abcd"]
        }, {
            unified: "1F521",
            shortnames: ["abcd"]
        }, {
            unified: "1F522",
            shortnames: ["1234"]
        }, {
            unified: "1F523",
            shortnames: ["symbols"]
        }, {
            unified: "1F524",
            shortnames: ["abc"]
        }, {
            unified: "1F170-FE0F",
            shortnames: ["a"]
        }, {
            unified: "1F18E",
            shortnames: ["ab"]
        }, {
            unified: "1F171-FE0F",
            shortnames: ["b"]
        }, {
            unified: "1F191",
            shortnames: ["cl"]
        }, {
            unified: "1F192",
            shortnames: ["cool"]
        }, {
            unified: "1F193",
            shortnames: ["free"]
        }, {
            unified: "2139-FE0F",
            shortnames: ["information_source"]
        }, {
            unified: "1F194",
            shortnames: ["id"]
        }, {
            unified: "24C2-FE0F",
            shortnames: ["m"]
        }, {
            unified: "1F195",
            shortnames: ["new"]
        }, {
            unified: "1F196",
            shortnames: ["ng"]
        }, {
            unified: "1F17E-FE0F",
            shortnames: ["o2"]
        }, {
            unified: "1F197",
            shortnames: ["ok"]
        }, {
            unified: "1F17F-FE0F",
            shortnames: ["parking"]
        }, {
            unified: "1F198",
            shortnames: ["sos"]
        }, {
            unified: "1F199",
            shortnames: ["up"]
        }, {
            unified: "1F19A",
            shortnames: ["vs"]
        }, {
            unified: "1F201",
            shortnames: ["koko"]
        }, {
            unified: "1F202-FE0F",
            shortnames: ["sa"]
        }, {
            unified: "1F237-FE0F",
            shortnames: ["u6708"]
        }, {
            unified: "1F236",
            shortnames: ["u6709"]
        }, {
            unified: "1F22F",
            shortnames: ["u6307"]
        }, {
            unified: "1F250",
            shortnames: ["ideograph_advantage"]
        }, {
            unified: "1F239",
            shortnames: ["u5272"]
        }, {
            unified: "1F21A",
            shortnames: ["u7121"]
        }, {
            unified: "1F232",
            shortnames: ["u7981"]
        }, {
            unified: "1F251",
            shortnames: ["accept"]
        }, {
            unified: "1F238",
            shortnames: ["u7533"]
        }, {
            unified: "1F234",
            shortnames: ["u5408"]
        }, {
            unified: "1F233",
            shortnames: ["u7a7a"]
        }, {
            unified: "3297-FE0F",
            shortnames: ["congratulations"]
        }, {
            unified: "3299-FE0F",
            shortnames: ["secret"]
        }, {
            unified: "1F23A",
            shortnames: ["u55b6"]
        }, {
            unified: "1F235",
            shortnames: ["u6e80"]
        }, {
            unified: "25AA-FE0F",
            shortnames: ["black_small_square"]
        }, {
            unified: "25AB-FE0F",
            shortnames: ["white_small_square"]
        }, {
            unified: "25FB-FE0F",
            shortnames: ["white_medium_square"]
        }, {
            unified: "25FC-FE0F",
            shortnames: ["black_medium_square"]
        }, {
            unified: "25FD",
            shortnames: ["white_medium_small_square"]
        }, {
            unified: "25FE",
            shortnames: ["black_medium_small_square"]
        }, {
            unified: "2B1B",
            shortnames: ["black_large_square"]
        }, {
            unified: "2B1C",
            shortnames: ["white_large_square"]
        }, {
            unified: "1F536",
            shortnames: ["large_orange_diamond"]
        }, {
            unified: "1F537",
            shortnames: ["large_blue_diamond"]
        }, {
            unified: "1F538",
            shortnames: ["small_orange_diamond"]
        }, {
            unified: "1F539",
            shortnames: ["small_blue_diamond"]
        }, {
            unified: "1F53A",
            shortnames: ["small_red_triangle"]
        }, {
            unified: "1F53B",
            shortnames: ["small_red_triangle_down"]
        }, {
            unified: "1F4A0",
            shortnames: ["diamond_shape_with_a_dot_inside"]
        }, {
            unified: "1F518",
            shortnames: ["radio_button"]
        }, {
            unified: "1F532",
            shortnames: ["black_square_button"]
        }, {
            unified: "1F533",
            shortnames: ["white_square_button"]
        }, {
            unified: "26AA",
            shortnames: ["white_circle"]
        }, {
            unified: "26AB",
            shortnames: ["black_circle"]
        }, {
            unified: "1F534",
            shortnames: ["red_circle"]
        }, {
            unified: "1F535",
            shortnames: ["large_blue_circle"]
        }]
    }, {
        name: "Flags",
        emojis: [{
            unified: "1F3C1",
            shortnames: ["checkered_flag"]
        }, {
            unified: "1F6A9",
            shortnames: ["triangular_flag_on_post"]
        }, {
            unified: "1F38C",
            shortnames: ["crossed_flags"]
        }, {
            unified: "1F3F4",
            shortnames: ["waving_black_flag"]
        }, {
            unified: "1F3F3-FE0F",
            shortnames: ["waving_white_flag"]
        }, {
            unified: "1F3F3-FE0F-200D-1F308",
            shortnames: ["rainbow-flag"]
        }, {
            unified: "1F1E6-1F1E8",
            shortnames: ["flag-ac"]
        }, {
            unified: "1F1E6-1F1E9",
            shortnames: ["flag-ad"]
        }, {
            unified: "1F1E6-1F1EA",
            shortnames: ["flag-ae"]
        }, {
            unified: "1F1E6-1F1EB",
            shortnames: ["flag-af"]
        }, {
            unified: "1F1E6-1F1EC",
            shortnames: ["flag-ag"]
        }, {
            unified: "1F1E6-1F1EE",
            shortnames: ["flag-ai"]
        }, {
            unified: "1F1E6-1F1F1",
            shortnames: ["flag-al"]
        }, {
            unified: "1F1E6-1F1F2",
            shortnames: ["flag-am"]
        }, {
            unified: "1F1E6-1F1F4",
            shortnames: ["flag-ao"]
        }, {
            unified: "1F1E6-1F1F6",
            shortnames: ["flag-aq"]
        }, {
            unified: "1F1E6-1F1F7",
            shortnames: ["flag-ar"]
        }, {
            unified: "1F1E6-1F1F8",
            shortnames: ["flag-as"]
        }, {
            unified: "1F1E6-1F1F9",
            shortnames: ["flag-at"]
        }, {
            unified: "1F1E6-1F1FA",
            shortnames: ["flag-au"]
        }, {
            unified: "1F1E6-1F1FC",
            shortnames: ["flag-aw"]
        }, {
            unified: "1F1E6-1F1FD",
            shortnames: ["flag-ax"]
        }, {
            unified: "1F1E6-1F1FF",
            shortnames: ["flag-az"]
        }, {
            unified: "1F1E7-1F1E6",
            shortnames: ["flag-ba"]
        }, {
            unified: "1F1E7-1F1E7",
            shortnames: ["flag-bb"]
        }, {
            unified: "1F1E7-1F1E9",
            shortnames: ["flag-bd"]
        }, {
            unified: "1F1E7-1F1EA",
            shortnames: ["flag-be"]
        }, {
            unified: "1F1E7-1F1EB",
            shortnames: ["flag-bf"]
        }, {
            unified: "1F1E7-1F1EC",
            shortnames: ["flag-bg"]
        }, {
            unified: "1F1E7-1F1ED",
            shortnames: ["flag-bh"]
        }, {
            unified: "1F1E7-1F1EE",
            shortnames: ["flag-bi"]
        }, {
            unified: "1F1E7-1F1EF",
            shortnames: ["flag-bj"]
        }, {
            unified: "1F1E7-1F1F1",
            shortnames: ["flag-bl"]
        }, {
            unified: "1F1E7-1F1F2",
            shortnames: ["flag-bm"]
        }, {
            unified: "1F1E7-1F1F3",
            shortnames: ["flag-bn"]
        }, {
            unified: "1F1E7-1F1F4",
            shortnames: ["flag-bo"]
        }, {
            unified: "1F1E7-1F1F6",
            shortnames: ["flag-bq"]
        }, {
            unified: "1F1E7-1F1F7",
            shortnames: ["flag-br"]
        }, {
            unified: "1F1E7-1F1F8",
            shortnames: ["flag-bs"]
        }, {
            unified: "1F1E7-1F1F9",
            shortnames: ["flag-bt"]
        }, {
            unified: "1F1E7-1F1FB",
            shortnames: ["flag-bv"]
        }, {
            unified: "1F1E7-1F1FC",
            shortnames: ["flag-bw"]
        }, {
            unified: "1F1E7-1F1FE",
            shortnames: ["flag-by"]
        }, {
            unified: "1F1E7-1F1FF",
            shortnames: ["flag-bz"]
        }, {
            unified: "1F1E8-1F1E6",
            shortnames: ["flag-ca"]
        }, {
            unified: "1F1E8-1F1E8",
            shortnames: ["flag-cc"]
        }, {
            unified: "1F1E8-1F1E9",
            shortnames: ["flag-cd"]
        }, {
            unified: "1F1E8-1F1EB",
            shortnames: ["flag-cf"]
        }, {
            unified: "1F1E8-1F1EC",
            shortnames: ["flag-cg"]
        }, {
            unified: "1F1E8-1F1ED",
            shortnames: ["flag-ch"]
        }, {
            unified: "1F1E8-1F1EE",
            shortnames: ["flag-ci"]
        }, {
            unified: "1F1E8-1F1F0",
            shortnames: ["flag-ck"]
        }, {
            unified: "1F1E8-1F1F1",
            shortnames: ["flag-cl"]
        }, {
            unified: "1F1E8-1F1F2",
            shortnames: ["flag-cm"]
        }, {
            unified: "1F1E8-1F1F3",
            shortnames: ["cn"]
        }, {
            unified: "1F1E8-1F1F4",
            shortnames: ["flag-co"]
        }, {
            unified: "1F1E8-1F1F5",
            shortnames: ["flag-cp"]
        }, {
            unified: "1F1E8-1F1F7",
            shortnames: ["flag-cr"]
        }, {
            unified: "1F1E8-1F1FA",
            shortnames: ["flag-cu"]
        }, {
            unified: "1F1E8-1F1FB",
            shortnames: ["flag-cv"]
        }, {
            unified: "1F1E8-1F1FC",
            shortnames: ["flag-cw"]
        }, {
            unified: "1F1E8-1F1FD",
            shortnames: ["flag-cx"]
        }, {
            unified: "1F1E8-1F1FE",
            shortnames: ["flag-cy"]
        }, {
            unified: "1F1E8-1F1FF",
            shortnames: ["flag-cz"]
        }, {
            unified: "1F1E9-1F1EA",
            shortnames: ["de"]
        }, {
            unified: "1F1E9-1F1EC",
            shortnames: ["flag-dg"]
        }, {
            unified: "1F1E9-1F1EF",
            shortnames: ["flag-dj"]
        }, {
            unified: "1F1E9-1F1F0",
            shortnames: ["flag-dk"]
        }, {
            unified: "1F1E9-1F1F2",
            shortnames: ["flag-dm"]
        }, {
            unified: "1F1E9-1F1F4",
            shortnames: ["flag-do"]
        }, {
            unified: "1F1E9-1F1FF",
            shortnames: ["flag-dz"]
        }, {
            unified: "1F1EA-1F1E6",
            shortnames: ["flag-ea"]
        }, {
            unified: "1F1EA-1F1E8",
            shortnames: ["flag-ec"]
        }, {
            unified: "1F1EA-1F1EA",
            shortnames: ["flag-ee"]
        }, {
            unified: "1F1EA-1F1EC",
            shortnames: ["flag-eg"]
        }, {
            unified: "1F1EA-1F1ED",
            shortnames: ["flag-eh"]
        }, {
            unified: "1F1EA-1F1F7",
            shortnames: ["flag-er"]
        }, {
            unified: "1F1EA-1F1F8",
            shortnames: ["es"]
        }, {
            unified: "1F1EA-1F1F9",
            shortnames: ["flag-et"]
        }, {
            unified: "1F1EA-1F1FA",
            shortnames: ["flag-eu"]
        }, {
            unified: "1F1EB-1F1EE",
            shortnames: ["flag-fi"]
        }, {
            unified: "1F1EB-1F1EF",
            shortnames: ["flag-fj"]
        }, {
            unified: "1F1EB-1F1F0",
            shortnames: ["flag-fk"]
        }, {
            unified: "1F1EB-1F1F2",
            shortnames: ["flag-fm"]
        }, {
            unified: "1F1EB-1F1F4",
            shortnames: ["flag-fo"]
        }, {
            unified: "1F1EB-1F1F7",
            shortnames: ["fr"]
        }, {
            unified: "1F1EC-1F1E6",
            shortnames: ["flag-ga"]
        }, {
            unified: "1F1EC-1F1E7",
            shortnames: ["gb"]
        }, {
            unified: "1F1EC-1F1E9",
            shortnames: ["flag-gd"]
        }, {
            unified: "1F1EC-1F1EA",
            shortnames: ["flag-ge"]
        }, {
            unified: "1F1EC-1F1EB",
            shortnames: ["flag-gf"]
        }, {
            unified: "1F1EC-1F1EC",
            shortnames: ["flag-gg"]
        }, {
            unified: "1F1EC-1F1ED",
            shortnames: ["flag-gh"]
        }, {
            unified: "1F1EC-1F1EE",
            shortnames: ["flag-gi"]
        }, {
            unified: "1F1EC-1F1F1",
            shortnames: ["flag-gl"]
        }, {
            unified: "1F1EC-1F1F2",
            shortnames: ["flag-gm"]
        }, {
            unified: "1F1EC-1F1F3",
            shortnames: ["flag-gn"]
        }, {
            unified: "1F1EC-1F1F5",
            shortnames: ["flag-gp"]
        }, {
            unified: "1F1EC-1F1F6",
            shortnames: ["flag-gq"]
        }, {
            unified: "1F1EC-1F1F7",
            shortnames: ["flag-gr"]
        }, {
            unified: "1F1EC-1F1F8",
            shortnames: ["flag-gs"]
        }, {
            unified: "1F1EC-1F1F9",
            shortnames: ["flag-gt"]
        }, {
            unified: "1F1EC-1F1FA",
            shortnames: ["flag-gu"]
        }, {
            unified: "1F1EC-1F1FC",
            shortnames: ["flag-gw"]
        }, {
            unified: "1F1EC-1F1FE",
            shortnames: ["flag-gy"]
        }, {
            unified: "1F1ED-1F1F0",
            shortnames: ["flag-hk"]
        }, {
            unified: "1F1ED-1F1F2",
            shortnames: ["flag-hm"]
        }, {
            unified: "1F1ED-1F1F3",
            shortnames: ["flag-hn"]
        }, {
            unified: "1F1ED-1F1F7",
            shortnames: ["flag-hr"]
        }, {
            unified: "1F1ED-1F1F9",
            shortnames: ["flag-ht"]
        }, {
            unified: "1F1ED-1F1FA",
            shortnames: ["flag-hu"]
        }, {
            unified: "1F1EE-1F1E8",
            shortnames: ["flag-ic"]
        }, {
            unified: "1F1EE-1F1E9",
            shortnames: ["flag-id"]
        }, {
            unified: "1F1EE-1F1EA",
            shortnames: ["flag-ie"]
        }, {
            unified: "1F1EE-1F1F1",
            shortnames: ["flag-il"]
        }, {
            unified: "1F1EE-1F1F2",
            shortnames: ["flag-im"]
        }, {
            unified: "1F1EE-1F1F3",
            shortnames: ["flag-in"]
        }, {
            unified: "1F1EE-1F1F4",
            shortnames: ["flag-io"]
        }, {
            unified: "1F1EE-1F1F6",
            shortnames: ["flag-iq"]
        }, {
            unified: "1F1EE-1F1F7",
            shortnames: ["flag-ir"]
        }, {
            unified: "1F1EE-1F1F8",
            shortnames: ["flag-is"]
        }, {
            unified: "1F1EE-1F1F9",
            shortnames: ["it"]
        }, {
            unified: "1F1EF-1F1EA",
            shortnames: ["flag-je"]
        }, {
            unified: "1F1EF-1F1F2",
            shortnames: ["flag-jm"]
        }, {
            unified: "1F1EF-1F1F4",
            shortnames: ["flag-jo"]
        }, {
            unified: "1F1EF-1F1F5",
            shortnames: ["jp"]
        }, {
            unified: "1F1F0-1F1EA",
            shortnames: ["flag-ke"]
        }, {
            unified: "1F1F0-1F1EC",
            shortnames: ["flag-kg"]
        }, {
            unified: "1F1F0-1F1ED",
            shortnames: ["flag-kh"]
        }, {
            unified: "1F1F0-1F1EE",
            shortnames: ["flag-ki"]
        }, {
            unified: "1F1F0-1F1F2",
            shortnames: ["flag-km"]
        }, {
            unified: "1F1F0-1F1F3",
            shortnames: ["flag-kn"]
        }, {
            unified: "1F1F0-1F1F5",
            shortnames: ["flag-kp"]
        }, {
            unified: "1F1F0-1F1F7",
            shortnames: ["kr"]
        }, {
            unified: "1F1F0-1F1FC",
            shortnames: ["flag-kw"]
        }, {
            unified: "1F1F0-1F1FE",
            shortnames: ["flag-ky"]
        }, {
            unified: "1F1F0-1F1FF",
            shortnames: ["flag-kz"]
        }, {
            unified: "1F1F1-1F1E6",
            shortnames: ["flag-la"]
        }, {
            unified: "1F1F1-1F1E7",
            shortnames: ["flag-lb"]
        }, {
            unified: "1F1F1-1F1E8",
            shortnames: ["flag-lc"]
        }, {
            unified: "1F1F1-1F1EE",
            shortnames: ["flag-li"]
        }, {
            unified: "1F1F1-1F1F0",
            shortnames: ["flag-lk"]
        }, {
            unified: "1F1F1-1F1F7",
            shortnames: ["flag-lr"]
        }, {
            unified: "1F1F1-1F1F8",
            shortnames: ["flag-ls"]
        }, {
            unified: "1F1F1-1F1F9",
            shortnames: ["flag-lt"]
        }, {
            unified: "1F1F1-1F1FA",
            shortnames: ["flag-lu"]
        }, {
            unified: "1F1F1-1F1FB",
            shortnames: ["flag-lv"]
        }, {
            unified: "1F1F1-1F1FE",
            shortnames: ["flag-ly"]
        }, {
            unified: "1F1F2-1F1E6",
            shortnames: ["flag-ma"]
        }, {
            unified: "1F1F2-1F1E8",
            shortnames: ["flag-mc"]
        }, {
            unified: "1F1F2-1F1E9",
            shortnames: ["flag-md"]
        }, {
            unified: "1F1F2-1F1EA",
            shortnames: ["flag-me"]
        }, {
            unified: "1F1F2-1F1EB",
            shortnames: ["flag-mf"]
        }, {
            unified: "1F1F2-1F1EC",
            shortnames: ["flag-mg"]
        }, {
            unified: "1F1F2-1F1ED",
            shortnames: ["flag-mh"]
        }, {
            unified: "1F1F2-1F1F0",
            shortnames: ["flag-mk"]
        }, {
            unified: "1F1F2-1F1F1",
            shortnames: ["flag-ml"]
        }, {
            unified: "1F1F2-1F1F2",
            shortnames: ["flag-mm"]
        }, {
            unified: "1F1F2-1F1F3",
            shortnames: ["flag-mn"]
        }, {
            unified: "1F1F2-1F1F4",
            shortnames: ["flag-mo"]
        }, {
            unified: "1F1F2-1F1F5",
            shortnames: ["flag-mp"]
        }, {
            unified: "1F1F2-1F1F6",
            shortnames: ["flag-mq"]
        }, {
            unified: "1F1F2-1F1F7",
            shortnames: ["flag-mr"]
        }, {
            unified: "1F1F2-1F1F8",
            shortnames: ["flag-ms"]
        }, {
            unified: "1F1F2-1F1F9",
            shortnames: ["flag-mt"]
        }, {
            unified: "1F1F2-1F1FA",
            shortnames: ["flag-mu"]
        }, {
            unified: "1F1F2-1F1FB",
            shortnames: ["flag-mv"]
        }, {
            unified: "1F1F2-1F1FC",
            shortnames: ["flag-mw"]
        }, {
            unified: "1F1F2-1F1FD",
            shortnames: ["flag-mx"]
        }, {
            unified: "1F1F2-1F1FE",
            shortnames: ["flag-my"]
        }, {
            unified: "1F1F2-1F1FF",
            shortnames: ["flag-mz"]
        }, {
            unified: "1F1F3-1F1E6",
            shortnames: ["flag-na"]
        }, {
            unified: "1F1F3-1F1E8",
            shortnames: ["flag-nc"]
        }, {
            unified: "1F1F3-1F1EA",
            shortnames: ["flag-ne"]
        }, {
            unified: "1F1F3-1F1EB",
            shortnames: ["flag-nf"]
        }, {
            unified: "1F1F3-1F1EC",
            shortnames: ["flag-ng"]
        }, {
            unified: "1F1F3-1F1EE",
            shortnames: ["flag-ni"]
        }, {
            unified: "1F1F3-1F1F1",
            shortnames: ["flag-nl"]
        }, {
            unified: "1F1F3-1F1F4",
            shortnames: ["flag-no"]
        }, {
            unified: "1F1F3-1F1F5",
            shortnames: ["flag-np"]
        }, {
            unified: "1F1F3-1F1F7",
            shortnames: ["flag-nr"]
        }, {
            unified: "1F1F3-1F1FA",
            shortnames: ["flag-nu"]
        }, {
            unified: "1F1F3-1F1FF",
            shortnames: ["flag-nz"]
        }, {
            unified: "1F1F4-1F1F2",
            shortnames: ["flag-om"]
        }, {
            unified: "1F1F5-1F1E6",
            shortnames: ["flag-pa"]
        }, {
            unified: "1F1F5-1F1EA",
            shortnames: ["flag-pe"]
        }, {
            unified: "1F1F5-1F1EB",
            shortnames: ["flag-pf"]
        }, {
            unified: "1F1F5-1F1EC",
            shortnames: ["flag-pg"]
        }, {
            unified: "1F1F5-1F1ED",
            shortnames: ["flag-ph"]
        }, {
            unified: "1F1F5-1F1F0",
            shortnames: ["flag-pk"]
        }, {
            unified: "1F1F5-1F1F1",
            shortnames: ["flag-pl"]
        }, {
            unified: "1F1F5-1F1F2",
            shortnames: ["flag-pm"]
        }, {
            unified: "1F1F5-1F1F3",
            shortnames: ["flag-pn"]
        }, {
            unified: "1F1F5-1F1F7",
            shortnames: ["flag-pr"]
        }, {
            unified: "1F1F5-1F1F8",
            shortnames: ["flag-ps"]
        }, {
            unified: "1F1F5-1F1F9",
            shortnames: ["flag-pt"]
        }, {
            unified: "1F1F5-1F1FC",
            shortnames: ["flag-pw"]
        }, {
            unified: "1F1F5-1F1FE",
            shortnames: ["flag-py"]
        }, {
            unified: "1F1F6-1F1E6",
            shortnames: ["flag-qa"]
        }, {
            unified: "1F1F7-1F1EA",
            shortnames: ["flag-re"]
        }, {
            unified: "1F1F7-1F1F4",
            shortnames: ["flag-ro"]
        }, {
            unified: "1F1F7-1F1F8",
            shortnames: ["flag-rs"]
        }, {
            unified: "1F1F7-1F1FA",
            shortnames: ["ru"]
        }, {
            unified: "1F1F7-1F1FC",
            shortnames: ["flag-rw"]
        }, {
            unified: "1F1F8-1F1E6",
            shortnames: ["flag-sa"]
        }, {
            unified: "1F1F8-1F1E7",
            shortnames: ["flag-sb"]
        }, {
            unified: "1F1F8-1F1E8",
            shortnames: ["flag-sc"]
        }, {
            unified: "1F1F8-1F1E9",
            shortnames: ["flag-sd"]
        }, {
            unified: "1F1F8-1F1EA",
            shortnames: ["flag-se"]
        }, {
            unified: "1F1F8-1F1EC",
            shortnames: ["flag-sg"]
        }, {
            unified: "1F1F8-1F1ED",
            shortnames: ["flag-sh"]
        }, {
            unified: "1F1F8-1F1EE",
            shortnames: ["flag-si"]
        }, {
            unified: "1F1F8-1F1EF",
            shortnames: ["flag-sj"]
        }, {
            unified: "1F1F8-1F1F0",
            shortnames: ["flag-sk"]
        }, {
            unified: "1F1F8-1F1F1",
            shortnames: ["flag-sl"]
        }, {
            unified: "1F1F8-1F1F2",
            shortnames: ["flag-sm"]
        }, {
            unified: "1F1F8-1F1F3",
            shortnames: ["flag-sn"]
        }, {
            unified: "1F1F8-1F1F4",
            shortnames: ["flag-so"]
        }, {
            unified: "1F1F8-1F1F7",
            shortnames: ["flag-sr"]
        }, {
            unified: "1F1F8-1F1F8",
            shortnames: ["flag-ss"]
        }, {
            unified: "1F1F8-1F1F9",
            shortnames: ["flag-st"]
        }, {
            unified: "1F1F8-1F1FB",
            shortnames: ["flag-sv"]
        }, {
            unified: "1F1F8-1F1FD",
            shortnames: ["flag-sx"]
        }, {
            unified: "1F1F8-1F1FE",
            shortnames: ["flag-sy"]
        }, {
            unified: "1F1F8-1F1FF",
            shortnames: ["flag-sz"]
        }, {
            unified: "1F1F9-1F1E6",
            shortnames: ["flag-ta"]
        }, {
            unified: "1F1F9-1F1E8",
            shortnames: ["flag-tc"]
        }, {
            unified: "1F1F9-1F1E9",
            shortnames: ["flag-td"]
        }, {
            unified: "1F1F9-1F1EB",
            shortnames: ["flag-tf"]
        }, {
            unified: "1F1F9-1F1EC",
            shortnames: ["flag-tg"]
        }, {
            unified: "1F1F9-1F1ED",
            shortnames: ["flag-th"]
        }, {
            unified: "1F1F9-1F1EF",
            shortnames: ["flag-tj"]
        }, {
            unified: "1F1F9-1F1F0",
            shortnames: ["flag-tk"]
        }, {
            unified: "1F1F9-1F1F1",
            shortnames: ["flag-tl"]
        }, {
            unified: "1F1F9-1F1F2",
            shortnames: ["flag-tm"]
        }, {
            unified: "1F1F9-1F1F3",
            shortnames: ["flag-tn"]
        }, {
            unified: "1F1F9-1F1F4",
            shortnames: ["flag-to"]
        }, {
            unified: "1F1F9-1F1F7",
            shortnames: ["flag-tr"]
        }, {
            unified: "1F1F9-1F1F9",
            shortnames: ["flag-tt"]
        }, {
            unified: "1F1F9-1F1FB",
            shortnames: ["flag-tv"]
        }, {
            unified: "1F1F9-1F1FC",
            shortnames: ["flag-tw"]
        }, {
            unified: "1F1F9-1F1FF",
            shortnames: ["flag-tz"]
        }, {
            unified: "1F1FA-1F1E6",
            shortnames: ["flag-ua"]
        }, {
            unified: "1F1FA-1F1EC",
            shortnames: ["flag-ug"]
        }, {
            unified: "1F1FA-1F1F2",
            shortnames: ["flag-um"]
        }, {
            unified: "1F1FA-1F1F3",
            shortnames: ["flag-un"]
        }, {
            unified: "1F1FA-1F1F8",
            shortnames: ["us"]
        }, {
            unified: "1F1FA-1F1FE",
            shortnames: ["flag-uy"]
        }, {
            unified: "1F1FA-1F1FF",
            shortnames: ["flag-uz"]
        }, {
            unified: "1F1FB-1F1E6",
            shortnames: ["flag-va"]
        }, {
            unified: "1F1FB-1F1E8",
            shortnames: ["flag-vc"]
        }, {
            unified: "1F1FB-1F1EA",
            shortnames: ["flag-ve"]
        }, {
            unified: "1F1FB-1F1EC",
            shortnames: ["flag-vg"]
        }, {
            unified: "1F1FB-1F1EE",
            shortnames: ["flag-vi"]
        }, {
            unified: "1F1FB-1F1F3",
            shortnames: ["flag-vn"]
        }, {
            unified: "1F1FB-1F1FA",
            shortnames: ["flag-vu"]
        }, {
            unified: "1F1FC-1F1EB",
            shortnames: ["flag-wf"]
        }, {
            unified: "1F1FC-1F1F8",
            shortnames: ["flag-ws"]
        }, {
            unified: "1F1FD-1F1F0",
            shortnames: ["flag-xk"]
        }, {
            unified: "1F1FE-1F1EA",
            shortnames: ["flag-ye"]
        }, {
            unified: "1F1FE-1F1F9",
            shortnames: ["flag-yt"]
        }, {
            unified: "1F1FF-1F1E6",
            shortnames: ["flag-za"]
        }, {
            unified: "1F1FF-1F1F2",
            shortnames: ["flag-zm"]
        }, {
            unified: "1F1FF-1F1FC",
            shortnames: ["flag-zw"]
        }, {
            unified: "1F3F4-E0067-E0062-E0065-E006E-E0067-E007F",
            shortnames: ["flag-england"]
        }, {
            unified: "1F3F4-E0067-E0062-E0073-E0063-E0074-E007F",
            shortnames: ["flag-scotland"]
        }, {
            unified: "1F3F4-E0067-E0062-E0077-E006C-E0073-E007F",
            shortnames: ["flag-wales"]
        }]
    }];
    F.byShortName = {
        hash: "0023-FE0F-20E3",
        keycap_star: "002A-FE0F-20E3",
        zero: "0030-FE0F-20E3",
        one: "0031-FE0F-20E3",
        two: "0032-FE0F-20E3",
        three: "0033-FE0F-20E3",
        four: "0034-FE0F-20E3",
        five: "0035-FE0F-20E3",
        six: "0036-FE0F-20E3",
        seven: "0037-FE0F-20E3",
        eight: "0038-FE0F-20E3",
        nine: "0039-FE0F-20E3",
        copyright: "00A9-FE0F",
        registered: "00AE-FE0F",
        mahjong: "1F004",
        black_joker: "1F0CF",
        a: "1F170-FE0F",
        b: "1F171-FE0F",
        o2: "1F17E-FE0F",
        parking: "1F17F-FE0F",
        ab: "1F18E",
        cl: "1F191",
        cool: "1F192",
        free: "1F193",
        id: "1F194",
        new: "1F195",
        ng: "1F196",
        ok: "1F197",
        sos: "1F198",
        up: "1F199",
        vs: "1F19A",
        "flag-ac": "1F1E6-1F1E8",
        "flag-ad": "1F1E6-1F1E9",
        "flag-ae": "1F1E6-1F1EA",
        "flag-af": "1F1E6-1F1EB",
        "flag-ag": "1F1E6-1F1EC",
        "flag-ai": "1F1E6-1F1EE",
        "flag-al": "1F1E6-1F1F1",
        "flag-am": "1F1E6-1F1F2",
        "flag-ao": "1F1E6-1F1F4",
        "flag-aq": "1F1E6-1F1F6",
        "flag-ar": "1F1E6-1F1F7",
        "flag-as": "1F1E6-1F1F8",
        "flag-at": "1F1E6-1F1F9",
        "flag-au": "1F1E6-1F1FA",
        "flag-aw": "1F1E6-1F1FC",
        "flag-ax": "1F1E6-1F1FD",
        "flag-az": "1F1E6-1F1FF",
        "flag-ba": "1F1E7-1F1E6",
        "flag-bb": "1F1E7-1F1E7",
        "flag-bd": "1F1E7-1F1E9",
        "flag-be": "1F1E7-1F1EA",
        "flag-bf": "1F1E7-1F1EB",
        "flag-bg": "1F1E7-1F1EC",
        "flag-bh": "1F1E7-1F1ED",
        "flag-bi": "1F1E7-1F1EE",
        "flag-bj": "1F1E7-1F1EF",
        "flag-bl": "1F1E7-1F1F1",
        "flag-bm": "1F1E7-1F1F2",
        "flag-bn": "1F1E7-1F1F3",
        "flag-bo": "1F1E7-1F1F4",
        "flag-bq": "1F1E7-1F1F6",
        "flag-br": "1F1E7-1F1F7",
        "flag-bs": "1F1E7-1F1F8",
        "flag-bt": "1F1E7-1F1F9",
        "flag-bv": "1F1E7-1F1FB",
        "flag-bw": "1F1E7-1F1FC",
        "flag-by": "1F1E7-1F1FE",
        "flag-bz": "1F1E7-1F1FF",
        "flag-ca": "1F1E8-1F1E6",
        "flag-cc": "1F1E8-1F1E8",
        "flag-cd": "1F1E8-1F1E9",
        "flag-cf": "1F1E8-1F1EB",
        "flag-cg": "1F1E8-1F1EC",
        "flag-ch": "1F1E8-1F1ED",
        "flag-ci": "1F1E8-1F1EE",
        "flag-ck": "1F1E8-1F1F0",
        "flag-cl": "1F1E8-1F1F1",
        "flag-cm": "1F1E8-1F1F2",
        cn: "1F1E8-1F1F3",
        "flag-co": "1F1E8-1F1F4",
        "flag-cp": "1F1E8-1F1F5",
        "flag-cr": "1F1E8-1F1F7",
        "flag-cu": "1F1E8-1F1FA",
        "flag-cv": "1F1E8-1F1FB",
        "flag-cw": "1F1E8-1F1FC",
        "flag-cx": "1F1E8-1F1FD",
        "flag-cy": "1F1E8-1F1FE",
        "flag-cz": "1F1E8-1F1FF",
        de: "1F1E9-1F1EA",
        "flag-dg": "1F1E9-1F1EC",
        "flag-dj": "1F1E9-1F1EF",
        "flag-dk": "1F1E9-1F1F0",
        "flag-dm": "1F1E9-1F1F2",
        "flag-do": "1F1E9-1F1F4",
        "flag-dz": "1F1E9-1F1FF",
        "flag-ea": "1F1EA-1F1E6",
        "flag-ec": "1F1EA-1F1E8",
        "flag-ee": "1F1EA-1F1EA",
        "flag-eg": "1F1EA-1F1EC",
        "flag-eh": "1F1EA-1F1ED",
        "flag-er": "1F1EA-1F1F7",
        es: "1F1EA-1F1F8",
        "flag-et": "1F1EA-1F1F9",
        "flag-eu": "1F1EA-1F1FA",
        "flag-fi": "1F1EB-1F1EE",
        "flag-fj": "1F1EB-1F1EF",
        "flag-fk": "1F1EB-1F1F0",
        "flag-fm": "1F1EB-1F1F2",
        "flag-fo": "1F1EB-1F1F4",
        fr: "1F1EB-1F1F7",
        "flag-ga": "1F1EC-1F1E6",
        gb: "1F1EC-1F1E7",
        "flag-gd": "1F1EC-1F1E9",
        "flag-ge": "1F1EC-1F1EA",
        "flag-gf": "1F1EC-1F1EB",
        "flag-gg": "1F1EC-1F1EC",
        "flag-gh": "1F1EC-1F1ED",
        "flag-gi": "1F1EC-1F1EE",
        "flag-gl": "1F1EC-1F1F1",
        "flag-gm": "1F1EC-1F1F2",
        "flag-gn": "1F1EC-1F1F3",
        "flag-gp": "1F1EC-1F1F5",
        "flag-gq": "1F1EC-1F1F6",
        "flag-gr": "1F1EC-1F1F7",
        "flag-gs": "1F1EC-1F1F8",
        "flag-gt": "1F1EC-1F1F9",
        "flag-gu": "1F1EC-1F1FA",
        "flag-gw": "1F1EC-1F1FC",
        "flag-gy": "1F1EC-1F1FE",
        "flag-hk": "1F1ED-1F1F0",
        "flag-hm": "1F1ED-1F1F2",
        "flag-hn": "1F1ED-1F1F3",
        "flag-hr": "1F1ED-1F1F7",
        "flag-ht": "1F1ED-1F1F9",
        "flag-hu": "1F1ED-1F1FA",
        "flag-ic": "1F1EE-1F1E8",
        "flag-id": "1F1EE-1F1E9",
        "flag-ie": "1F1EE-1F1EA",
        "flag-il": "1F1EE-1F1F1",
        "flag-im": "1F1EE-1F1F2",
        "flag-in": "1F1EE-1F1F3",
        "flag-io": "1F1EE-1F1F4",
        "flag-iq": "1F1EE-1F1F6",
        "flag-ir": "1F1EE-1F1F7",
        "flag-is": "1F1EE-1F1F8",
        it: "1F1EE-1F1F9",
        "flag-je": "1F1EF-1F1EA",
        "flag-jm": "1F1EF-1F1F2",
        "flag-jo": "1F1EF-1F1F4",
        jp: "1F1EF-1F1F5",
        "flag-ke": "1F1F0-1F1EA",
        "flag-kg": "1F1F0-1F1EC",
        "flag-kh": "1F1F0-1F1ED",
        "flag-ki": "1F1F0-1F1EE",
        "flag-km": "1F1F0-1F1F2",
        "flag-kn": "1F1F0-1F1F3",
        "flag-kp": "1F1F0-1F1F5",
        kr: "1F1F0-1F1F7",
        "flag-kw": "1F1F0-1F1FC",
        "flag-ky": "1F1F0-1F1FE",
        "flag-kz": "1F1F0-1F1FF",
        "flag-la": "1F1F1-1F1E6",
        "flag-lb": "1F1F1-1F1E7",
        "flag-lc": "1F1F1-1F1E8",
        "flag-li": "1F1F1-1F1EE",
        "flag-lk": "1F1F1-1F1F0",
        "flag-lr": "1F1F1-1F1F7",
        "flag-ls": "1F1F1-1F1F8",
        "flag-lt": "1F1F1-1F1F9",
        "flag-lu": "1F1F1-1F1FA",
        "flag-lv": "1F1F1-1F1FB",
        "flag-ly": "1F1F1-1F1FE",
        "flag-ma": "1F1F2-1F1E6",
        "flag-mc": "1F1F2-1F1E8",
        "flag-md": "1F1F2-1F1E9",
        "flag-me": "1F1F2-1F1EA",
        "flag-mf": "1F1F2-1F1EB",
        "flag-mg": "1F1F2-1F1EC",
        "flag-mh": "1F1F2-1F1ED",
        "flag-mk": "1F1F2-1F1F0",
        "flag-ml": "1F1F2-1F1F1",
        "flag-mm": "1F1F2-1F1F2",
        "flag-mn": "1F1F2-1F1F3",
        "flag-mo": "1F1F2-1F1F4",
        "flag-mp": "1F1F2-1F1F5",
        "flag-mq": "1F1F2-1F1F6",
        "flag-mr": "1F1F2-1F1F7",
        "flag-ms": "1F1F2-1F1F8",
        "flag-mt": "1F1F2-1F1F9",
        "flag-mu": "1F1F2-1F1FA",
        "flag-mv": "1F1F2-1F1FB",
        "flag-mw": "1F1F2-1F1FC",
        "flag-mx": "1F1F2-1F1FD",
        "flag-my": "1F1F2-1F1FE",
        "flag-mz": "1F1F2-1F1FF",
        "flag-na": "1F1F3-1F1E6",
        "flag-nc": "1F1F3-1F1E8",
        "flag-ne": "1F1F3-1F1EA",
        "flag-nf": "1F1F3-1F1EB",
        "flag-ng": "1F1F3-1F1EC",
        "flag-ni": "1F1F3-1F1EE",
        "flag-nl": "1F1F3-1F1F1",
        "flag-no": "1F1F3-1F1F4",
        "flag-np": "1F1F3-1F1F5",
        "flag-nr": "1F1F3-1F1F7",
        "flag-nu": "1F1F3-1F1FA",
        "flag-nz": "1F1F3-1F1FF",
        "flag-om": "1F1F4-1F1F2",
        "flag-pa": "1F1F5-1F1E6",
        "flag-pe": "1F1F5-1F1EA",
        "flag-pf": "1F1F5-1F1EB",
        "flag-pg": "1F1F5-1F1EC",
        "flag-ph": "1F1F5-1F1ED",
        "flag-pk": "1F1F5-1F1F0",
        "flag-pl": "1F1F5-1F1F1",
        "flag-pm": "1F1F5-1F1F2",
        "flag-pn": "1F1F5-1F1F3",
        "flag-pr": "1F1F5-1F1F7",
        "flag-ps": "1F1F5-1F1F8",
        "flag-pt": "1F1F5-1F1F9",
        "flag-pw": "1F1F5-1F1FC",
        "flag-py": "1F1F5-1F1FE",
        "flag-qa": "1F1F6-1F1E6",
        "flag-re": "1F1F7-1F1EA",
        "flag-ro": "1F1F7-1F1F4",
        "flag-rs": "1F1F7-1F1F8",
        ru: "1F1F7-1F1FA",
        "flag-rw": "1F1F7-1F1FC",
        "flag-sa": "1F1F8-1F1E6",
        "flag-sb": "1F1F8-1F1E7",
        "flag-sc": "1F1F8-1F1E8",
        "flag-sd": "1F1F8-1F1E9",
        "flag-se": "1F1F8-1F1EA",
        "flag-sg": "1F1F8-1F1EC",
        "flag-sh": "1F1F8-1F1ED",
        "flag-si": "1F1F8-1F1EE",
        "flag-sj": "1F1F8-1F1EF",
        "flag-sk": "1F1F8-1F1F0",
        "flag-sl": "1F1F8-1F1F1",
        "flag-sm": "1F1F8-1F1F2",
        "flag-sn": "1F1F8-1F1F3",
        "flag-so": "1F1F8-1F1F4",
        "flag-sr": "1F1F8-1F1F7",
        "flag-ss": "1F1F8-1F1F8",
        "flag-st": "1F1F8-1F1F9",
        "flag-sv": "1F1F8-1F1FB",
        "flag-sx": "1F1F8-1F1FD",
        "flag-sy": "1F1F8-1F1FE",
        "flag-sz": "1F1F8-1F1FF",
        "flag-ta": "1F1F9-1F1E6",
        "flag-tc": "1F1F9-1F1E8",
        "flag-td": "1F1F9-1F1E9",
        "flag-tf": "1F1F9-1F1EB",
        "flag-tg": "1F1F9-1F1EC",
        "flag-th": "1F1F9-1F1ED",
        "flag-tj": "1F1F9-1F1EF",
        "flag-tk": "1F1F9-1F1F0",
        "flag-tl": "1F1F9-1F1F1",
        "flag-tm": "1F1F9-1F1F2",
        "flag-tn": "1F1F9-1F1F3",
        "flag-to": "1F1F9-1F1F4",
        "flag-tr": "1F1F9-1F1F7",
        "flag-tt": "1F1F9-1F1F9",
        "flag-tv": "1F1F9-1F1FB",
        "flag-tw": "1F1F9-1F1FC",
        "flag-tz": "1F1F9-1F1FF",
        "flag-ua": "1F1FA-1F1E6",
        "flag-ug": "1F1FA-1F1EC",
        "flag-um": "1F1FA-1F1F2",
        "flag-un": "1F1FA-1F1F3",
        us: "1F1FA-1F1F8",
        "flag-uy": "1F1FA-1F1FE",
        "flag-uz": "1F1FA-1F1FF",
        "flag-va": "1F1FB-1F1E6",
        "flag-vc": "1F1FB-1F1E8",
        "flag-ve": "1F1FB-1F1EA",
        "flag-vg": "1F1FB-1F1EC",
        "flag-vi": "1F1FB-1F1EE",
        "flag-vn": "1F1FB-1F1F3",
        "flag-vu": "1F1FB-1F1FA",
        "flag-wf": "1F1FC-1F1EB",
        "flag-ws": "1F1FC-1F1F8",
        "flag-xk": "1F1FD-1F1F0",
        "flag-ye": "1F1FE-1F1EA",
        "flag-yt": "1F1FE-1F1F9",
        "flag-za": "1F1FF-1F1E6",
        "flag-zm": "1F1FF-1F1F2",
        "flag-zw": "1F1FF-1F1FC",
        koko: "1F201",
        sa: "1F202-FE0F",
        u7121: "1F21A",
        u6307: "1F22F",
        u7981: "1F232",
        u7a7a: "1F233",
        u5408: "1F234",
        u6e80: "1F235",
        u6709: "1F236",
        u6708: "1F237-FE0F",
        u7533: "1F238",
        u5272: "1F239",
        u55b6: "1F23A",
        ideograph_advantage: "1F250",
        accept: "1F251",
        cyclone: "1F300",
        foggy: "1F301",
        closed_umbrella: "1F302",
        night_with_stars: "1F303",
        sunrise_over_mountains: "1F304",
        sunrise: "1F305",
        city_sunset: "1F306",
        city_sunrise: "1F307",
        rainbow: "1F308",
        bridge_at_night: "1F309",
        ocean: "1F30A",
        volcano: "1F30B",
        milky_way: "1F30C",
        earth_africa: "1F30D",
        earth_americas: "1F30E",
        earth_asia: "1F30F",
        globe_with_meridians: "1F310",
        new_moon: "1F311",
        waxing_crescent_moon: "1F312",
        first_quarter_moon: "1F313",
        moon: "1F314",
        full_moon: "1F315",
        waning_gibbous_moon: "1F316",
        last_quarter_moon: "1F317",
        waning_crescent_moon: "1F318",
        crescent_moon: "1F319",
        new_moon_with_face: "1F31A",
        first_quarter_moon_with_face: "1F31B",
        last_quarter_moon_with_face: "1F31C",
        full_moon_with_face: "1F31D",
        sun_with_face: "1F31E",
        star2: "1F31F",
        stars: "1F320",
        thermometer: "1F321-FE0F",
        mostly_sunny: "1F324-FE0F",
        barely_sunny: "1F325-FE0F",
        partly_sunny_rain: "1F326-FE0F",
        rain_cloud: "1F327-FE0F",
        snow_cloud: "1F328-FE0F",
        lightning: "1F329-FE0F",
        tornado: "1F32A-FE0F",
        fog: "1F32B-FE0F",
        wind_blowing_face: "1F32C-FE0F",
        hotdog: "1F32D",
        taco: "1F32E",
        burrito: "1F32F",
        chestnut: "1F330",
        seedling: "1F331",
        evergreen_tree: "1F332",
        deciduous_tree: "1F333",
        palm_tree: "1F334",
        cactus: "1F335",
        hot_pepper: "1F336-FE0F",
        tulip: "1F337",
        cherry_blossom: "1F338",
        rose: "1F339",
        hibiscus: "1F33A",
        sunflower: "1F33B",
        blossom: "1F33C",
        corn: "1F33D",
        ear_of_rice: "1F33E",
        herb: "1F33F",
        four_leaf_clover: "1F340",
        maple_leaf: "1F341",
        fallen_leaf: "1F342",
        leaves: "1F343",
        mushroom: "1F344",
        tomato: "1F345",
        eggplant: "1F346",
        grapes: "1F347",
        melon: "1F348",
        watermelon: "1F349",
        tangerine: "1F34A",
        lemon: "1F34B",
        banana: "1F34C",
        pineapple: "1F34D",
        apple: "1F34E",
        green_apple: "1F34F",
        pear: "1F350",
        peach: "1F351",
        cherries: "1F352",
        strawberry: "1F353",
        hamburger: "1F354",
        pizza: "1F355",
        meat_on_bone: "1F356",
        poultry_leg: "1F357",
        rice_cracker: "1F358",
        rice_ball: "1F359",
        rice: "1F35A",
        curry: "1F35B",
        ramen: "1F35C",
        spaghetti: "1F35D",
        bread: "1F35E",
        fries: "1F35F",
        sweet_potato: "1F360",
        dango: "1F361",
        oden: "1F362",
        sushi: "1F363",
        fried_shrimp: "1F364",
        fish_cake: "1F365",
        icecream: "1F366",
        shaved_ice: "1F367",
        ice_cream: "1F368",
        doughnut: "1F369",
        cookie: "1F36A",
        chocolate_bar: "1F36B",
        candy: "1F36C",
        lollipop: "1F36D",
        custard: "1F36E",
        honey_pot: "1F36F",
        cake: "1F370",
        bento: "1F371",
        stew: "1F372",
        fried_egg: "1F373",
        fork_and_knife: "1F374",
        tea: "1F375",
        sake: "1F376",
        wine_glass: "1F377",
        cocktail: "1F378",
        tropical_drink: "1F379",
        beer: "1F37A",
        beers: "1F37B",
        baby_bottle: "1F37C",
        knife_fork_plate: "1F37D-FE0F",
        champagne: "1F37E",
        popcorn: "1F37F",
        ribbon: "1F380",
        gift: "1F381",
        birthday: "1F382",
        jack_o_lantern: "1F383",
        christmas_tree: "1F384",
        santa: "1F385",
        fireworks: "1F386",
        sparkler: "1F387",
        balloon: "1F388",
        tada: "1F389",
        confetti_ball: "1F38A",
        tanabata_tree: "1F38B",
        crossed_flags: "1F38C",
        bamboo: "1F38D",
        dolls: "1F38E",
        flags: "1F38F",
        wind_chime: "1F390",
        rice_scene: "1F391",
        school_satchel: "1F392",
        mortar_board: "1F393",
        medal: "1F396-FE0F",
        reminder_ribbon: "1F397-FE0F",
        studio_microphone: "1F399-FE0F",
        level_slider: "1F39A-FE0F",
        control_knobs: "1F39B-FE0F",
        film_frames: "1F39E-FE0F",
        admission_tickets: "1F39F-FE0F",
        carousel_horse: "1F3A0",
        ferris_wheel: "1F3A1",
        roller_coaster: "1F3A2",
        fishing_pole_and_fish: "1F3A3",
        microphone: "1F3A4",
        movie_camera: "1F3A5",
        cinema: "1F3A6",
        headphones: "1F3A7",
        art: "1F3A8",
        tophat: "1F3A9",
        circus_tent: "1F3AA",
        ticket: "1F3AB",
        clapper: "1F3AC",
        performing_arts: "1F3AD",
        video_game: "1F3AE",
        dart: "1F3AF",
        slot_machine: "1F3B0",
        "8ball": "1F3B1",
        game_die: "1F3B2",
        bowling: "1F3B3",
        flower_playing_cards: "1F3B4",
        musical_note: "1F3B5",
        notes: "1F3B6",
        saxophone: "1F3B7",
        guitar: "1F3B8",
        musical_keyboard: "1F3B9",
        trumpet: "1F3BA",
        violin: "1F3BB",
        musical_score: "1F3BC",
        running_shirt_with_sash: "1F3BD",
        tennis: "1F3BE",
        ski: "1F3BF",
        basketball: "1F3C0",
        checkered_flag: "1F3C1",
        snowboarder: "1F3C2",
        "woman-running": "1F3C3-200D-2640-FE0F",
        "man-running": "1F3C3-200D-2642-FE0F",
        runner: "1F3C3-200D-2642-FE0F",
        "woman-surfing": "1F3C4-200D-2640-FE0F",
        "man-surfing": "1F3C4-200D-2642-FE0F",
        surfer: "1F3C4-200D-2642-FE0F",
        sports_medal: "1F3C5",
        trophy: "1F3C6",
        horse_racing: "1F3C7",
        football: "1F3C8",
        rugby_football: "1F3C9",
        "woman-swimming": "1F3CA-200D-2640-FE0F",
        "man-swimming": "1F3CA-200D-2642-FE0F",
        swimmer: "1F3CA-200D-2642-FE0F",
        "woman-lifting-weights": "1F3CB-FE0F-200D-2640-FE0F",
        "man-lifting-weights": "1F3CB-FE0F-200D-2642-FE0F",
        weight_lifter: "1F3CB-FE0F-200D-2642-FE0F",
        "woman-golfing": "1F3CC-FE0F-200D-2640-FE0F",
        "man-golfing": "1F3CC-FE0F-200D-2642-FE0F",
        golfer: "1F3CC-FE0F-200D-2642-FE0F",
        racing_motorcycle: "1F3CD-FE0F",
        racing_car: "1F3CE-FE0F",
        cricket_bat_and_ball: "1F3CF",
        volleyball: "1F3D0",
        field_hockey_stick_and_ball: "1F3D1",
        ice_hockey_stick_and_puck: "1F3D2",
        table_tennis_paddle_and_ball: "1F3D3",
        snow_capped_mountain: "1F3D4-FE0F",
        camping: "1F3D5-FE0F",
        beach_with_umbrella: "1F3D6-FE0F",
        building_construction: "1F3D7-FE0F",
        house_buildings: "1F3D8-FE0F",
        cityscape: "1F3D9-FE0F",
        derelict_house_building: "1F3DA-FE0F",
        classical_building: "1F3DB-FE0F",
        desert: "1F3DC-FE0F",
        desert_island: "1F3DD-FE0F",
        national_park: "1F3DE-FE0F",
        stadium: "1F3DF-FE0F",
        house: "1F3E0",
        house_with_garden: "1F3E1",
        office: "1F3E2",
        post_office: "1F3E3",
        european_post_office: "1F3E4",
        hospital: "1F3E5",
        bank: "1F3E6",
        atm: "1F3E7",
        hotel: "1F3E8",
        love_hotel: "1F3E9",
        convenience_store: "1F3EA",
        school: "1F3EB",
        department_store: "1F3EC",
        factory: "1F3ED",
        izakaya_lantern: "1F3EE",
        japanese_castle: "1F3EF",
        european_castle: "1F3F0",
        "rainbow-flag": "1F3F3-FE0F-200D-1F308",
        waving_white_flag: "1F3F3-FE0F",
        "flag-england": "1F3F4-E0067-E0062-E0065-E006E-E0067-E007F",
        "flag-scotland": "1F3F4-E0067-E0062-E0073-E0063-E0074-E007F",
        "flag-wales": "1F3F4-E0067-E0062-E0077-E006C-E0073-E007F",
        waving_black_flag: "1F3F4",
        rosette: "1F3F5-FE0F",
        label: "1F3F7-FE0F",
        badminton_racquet_and_shuttlecock: "1F3F8",
        bow_and_arrow: "1F3F9",
        amphora: "1F3FA",
        "skin-tone-2": "1F3FB",
        "skin-tone-3": "1F3FC",
        "skin-tone-4": "1F3FD",
        "skin-tone-5": "1F3FE",
        "skin-tone-6": "1F3FF",
        rat: "1F400",
        mouse2: "1F401",
        ox: "1F402",
        water_buffalo: "1F403",
        cow2: "1F404",
        tiger2: "1F405",
        leopard: "1F406",
        rabbit2: "1F407",
        cat2: "1F408",
        dragon: "1F409",
        crocodile: "1F40A",
        whale2: "1F40B",
        snail: "1F40C",
        snake: "1F40D",
        racehorse: "1F40E",
        ram: "1F40F",
        goat: "1F410",
        sheep: "1F411",
        monkey: "1F412",
        rooster: "1F413",
        chicken: "1F414",
        dog2: "1F415",
        pig2: "1F416",
        boar: "1F417",
        elephant: "1F418",
        octopus: "1F419",
        shell: "1F41A",
        bug: "1F41B",
        ant: "1F41C",
        bee: "1F41D",
        beetle: "1F41E",
        fish: "1F41F",
        tropical_fish: "1F420",
        blowfish: "1F421",
        turtle: "1F422",
        hatching_chick: "1F423",
        baby_chick: "1F424",
        hatched_chick: "1F425",
        bird: "1F426",
        penguin: "1F427",
        koala: "1F428",
        poodle: "1F429",
        dromedary_camel: "1F42A",
        camel: "1F42B",
        dolphin: "1F42C",
        mouse: "1F42D",
        cow: "1F42E",
        tiger: "1F42F",
        rabbit: "1F430",
        cat: "1F431",
        dragon_face: "1F432",
        whale: "1F433",
        horse: "1F434",
        monkey_face: "1F435",
        dog: "1F436",
        pig: "1F437",
        frog: "1F438",
        hamster: "1F439",
        wolf: "1F43A",
        bear: "1F43B",
        panda_face: "1F43C",
        pig_nose: "1F43D",
        feet: "1F43E",
        chipmunk: "1F43F-FE0F",
        eyes: "1F440",
        "eye-in-speech-bubble": "1F441-FE0F-200D-1F5E8-FE0F",
        eye: "1F441-FE0F",
        ear: "1F442",
        nose: "1F443",
        lips: "1F444",
        tongue: "1F445",
        point_up_2: "1F446",
        point_down: "1F447",
        point_left: "1F448",
        point_right: "1F449",
        facepunch: "1F44A",
        wave: "1F44B",
        ok_hand: "1F44C",
        "+1": "1F44D",
        "-1": "1F44E",
        clap: "1F44F",
        open_hands: "1F450",
        crown: "1F451",
        womans_hat: "1F452",
        eyeglasses: "1F453",
        necktie: "1F454",
        shirt: "1F455",
        jeans: "1F456",
        dress: "1F457",
        kimono: "1F458",
        bikini: "1F459",
        womans_clothes: "1F45A",
        purse: "1F45B",
        handbag: "1F45C",
        pouch: "1F45D",
        mans_shoe: "1F45E",
        athletic_shoe: "1F45F",
        high_heel: "1F460",
        sandal: "1F461",
        boot: "1F462",
        footprints: "1F463",
        bust_in_silhouette: "1F464",
        busts_in_silhouette: "1F465",
        boy: "1F466",
        girl: "1F467",
        "male-farmer": "1F468-200D-1F33E",
        "male-cook": "1F468-200D-1F373",
        "male-student": "1F468-200D-1F393",
        "male-singer": "1F468-200D-1F3A4",
        "male-artist": "1F468-200D-1F3A8",
        "male-teacher": "1F468-200D-1F3EB",
        "male-factory-worker": "1F468-200D-1F3ED",
        "man-boy-boy": "1F468-200D-1F466-200D-1F466",
        "man-boy": "1F468-200D-1F466",
        "man-girl-boy": "1F468-200D-1F467-200D-1F466",
        "man-girl-girl": "1F468-200D-1F467-200D-1F467",
        "man-girl": "1F468-200D-1F467",
        "man-man-boy": "1F468-200D-1F468-200D-1F466",
        "man-man-boy-boy": "1F468-200D-1F468-200D-1F466-200D-1F466",
        "man-man-girl": "1F468-200D-1F468-200D-1F467",
        "man-man-girl-boy": "1F468-200D-1F468-200D-1F467-200D-1F466",
        "man-man-girl-girl": "1F468-200D-1F468-200D-1F467-200D-1F467",
        "man-woman-boy": "1F468-200D-1F469-200D-1F466",
        "man-woman-boy-boy": "1F468-200D-1F469-200D-1F466-200D-1F466",
        "man-woman-girl": "1F468-200D-1F469-200D-1F467",
        "man-woman-girl-boy": "1F468-200D-1F469-200D-1F467-200D-1F466",
        "man-woman-girl-girl": "1F468-200D-1F469-200D-1F467-200D-1F467",
        "male-technologist": "1F468-200D-1F4BB",
        "male-office-worker": "1F468-200D-1F4BC",
        "male-mechanic": "1F468-200D-1F527",
        "male-scientist": "1F468-200D-1F52C",
        "male-astronaut": "1F468-200D-1F680",
        "male-firefighter": "1F468-200D-1F692",
        "male-doctor": "1F468-200D-2695-FE0F",
        "male-judge": "1F468-200D-2696-FE0F",
        "male-pilot": "1F468-200D-2708-FE0F",
        "man-heart-man": "1F468-200D-2764-FE0F-200D-1F468",
        "man-kiss-man": "1F468-200D-2764-FE0F-200D-1F48B-200D-1F468",
        man: "1F468",
        "female-farmer": "1F469-200D-1F33E",
        "female-cook": "1F469-200D-1F373",
        "female-student": "1F469-200D-1F393",
        "female-singer": "1F469-200D-1F3A4",
        "female-artist": "1F469-200D-1F3A8",
        "female-teacher": "1F469-200D-1F3EB",
        "female-factory-worker": "1F469-200D-1F3ED",
        "woman-boy-boy": "1F469-200D-1F466-200D-1F466",
        "woman-boy": "1F469-200D-1F466",
        "woman-girl-boy": "1F469-200D-1F467-200D-1F466",
        "woman-girl-girl": "1F469-200D-1F467-200D-1F467",
        "woman-girl": "1F469-200D-1F467",
        "woman-woman-boy": "1F469-200D-1F469-200D-1F466",
        "woman-woman-boy-boy": "1F469-200D-1F469-200D-1F466-200D-1F466",
        "woman-woman-girl": "1F469-200D-1F469-200D-1F467",
        "woman-woman-girl-boy": "1F469-200D-1F469-200D-1F467-200D-1F466",
        "woman-woman-girl-girl": "1F469-200D-1F469-200D-1F467-200D-1F467",
        "female-technologist": "1F469-200D-1F4BB",
        "female-office-worker": "1F469-200D-1F4BC",
        "female-mechanic": "1F469-200D-1F527",
        "female-scientist": "1F469-200D-1F52C",
        "female-astronaut": "1F469-200D-1F680",
        "female-firefighter": "1F469-200D-1F692",
        "female-doctor": "1F469-200D-2695-FE0F",
        "female-judge": "1F469-200D-2696-FE0F",
        "female-pilot": "1F469-200D-2708-FE0F",
        "woman-heart-man": "1F469-200D-2764-FE0F-200D-1F468",
        "woman-heart-woman": "1F469-200D-2764-FE0F-200D-1F469",
        "woman-kiss-man": "1F469-200D-2764-FE0F-200D-1F48B-200D-1F468",
        "woman-kiss-woman": "1F469-200D-2764-FE0F-200D-1F48B-200D-1F469",
        woman: "1F469",
        family: "1F468-200D-1F469-200D-1F466",
        couple: "1F46B",
        two_men_holding_hands: "1F46C",
        two_women_holding_hands: "1F46D",
        "female-police-officer": "1F46E-200D-2640-FE0F",
        "male-police-officer": "1F46E-200D-2642-FE0F",
        cop: "1F46E-200D-2642-FE0F",
        "woman-with-bunny-ears-partying": "1F46F-200D-2640-FE0F",
        "man-with-bunny-ears-partying": "1F46F-200D-2642-FE0F",
        dancers: "1F46F-200D-2640-FE0F",
        bride_with_veil: "1F470",
        "blond-haired-woman": "1F471-200D-2640-FE0F",
        "blond-haired-man": "1F471-200D-2642-FE0F",
        person_with_blond_hair: "1F471-200D-2642-FE0F",
        man_with_gua_pi_mao: "1F472",
        "woman-wearing-turban": "1F473-200D-2640-FE0F",
        "man-wearing-turban": "1F473-200D-2642-FE0F",
        man_with_turban: "1F473-200D-2642-FE0F",
        older_man: "1F474",
        older_woman: "1F475",
        baby: "1F476",
        "female-construction-worker": "1F477-200D-2640-FE0F",
        "male-construction-worker": "1F477-200D-2642-FE0F",
        construction_worker: "1F477-200D-2642-FE0F",
        princess: "1F478",
        japanese_ogre: "1F479",
        japanese_goblin: "1F47A",
        ghost: "1F47B",
        angel: "1F47C",
        alien: "1F47D",
        space_invader: "1F47E",
        imp: "1F47F",
        skull: "1F480",
        "woman-tipping-hand": "1F481-200D-2640-FE0F",
        "man-tipping-hand": "1F481-200D-2642-FE0F",
        information_desk_person: "1F481-200D-2640-FE0F",
        "female-guard": "1F482-200D-2640-FE0F",
        "male-guard": "1F482-200D-2642-FE0F",
        guardsman: "1F482-200D-2642-FE0F",
        dancer: "1F483",
        lipstick: "1F484",
        nail_care: "1F485",
        "woman-getting-massage": "1F486-200D-2640-FE0F",
        "man-getting-massage": "1F486-200D-2642-FE0F",
        massage: "1F486-200D-2640-FE0F",
        "woman-getting-haircut": "1F487-200D-2640-FE0F",
        "man-getting-haircut": "1F487-200D-2642-FE0F",
        haircut: "1F487-200D-2640-FE0F",
        barber: "1F488",
        syringe: "1F489",
        pill: "1F48A",
        kiss: "1F48B",
        love_letter: "1F48C",
        ring: "1F48D",
        gem: "1F48E",
        couplekiss: "1F469-200D-2764-FE0F-200D-1F48B-200D-1F468",
        bouquet: "1F490",
        couple_with_heart: "1F469-200D-2764-FE0F-200D-1F468",
        wedding: "1F492",
        heartbeat: "1F493",
        broken_heart: "1F494",
        two_hearts: "1F495",
        sparkling_heart: "1F496",
        heartpulse: "1F497",
        cupid: "1F498",
        blue_heart: "1F499",
        green_heart: "1F49A",
        yellow_heart: "1F49B",
        purple_heart: "1F49C",
        gift_heart: "1F49D",
        revolving_hearts: "1F49E",
        heart_decoration: "1F49F",
        diamond_shape_with_a_dot_inside: "1F4A0",
        bulb: "1F4A1",
        anger: "1F4A2",
        bomb: "1F4A3",
        zzz: "1F4A4",
        boom: "1F4A5",
        sweat_drops: "1F4A6",
        droplet: "1F4A7",
        dash: "1F4A8",
        hankey: "1F4A9",
        muscle: "1F4AA",
        dizzy: "1F4AB",
        speech_balloon: "1F4AC",
        thought_balloon: "1F4AD",
        white_flower: "1F4AE",
        100: "1F4AF",
        moneybag: "1F4B0",
        currency_exchange: "1F4B1",
        heavy_dollar_sign: "1F4B2",
        credit_card: "1F4B3",
        yen: "1F4B4",
        dollar: "1F4B5",
        euro: "1F4B6",
        pound: "1F4B7",
        money_with_wings: "1F4B8",
        chart: "1F4B9",
        seat: "1F4BA",
        computer: "1F4BB",
        briefcase: "1F4BC",
        minidisc: "1F4BD",
        floppy_disk: "1F4BE",
        cd: "1F4BF",
        dvd: "1F4C0",
        file_folder: "1F4C1",
        open_file_folder: "1F4C2",
        page_with_curl: "1F4C3",
        page_facing_up: "1F4C4",
        date: "1F4C5",
        calendar: "1F4C6",
        card_index: "1F4C7",
        chart_with_upwards_trend: "1F4C8",
        chart_with_downwards_trend: "1F4C9",
        bar_chart: "1F4CA",
        clipboard: "1F4CB",
        pushpin: "1F4CC",
        round_pushpin: "1F4CD",
        paperclip: "1F4CE",
        straight_ruler: "1F4CF",
        triangular_ruler: "1F4D0",
        bookmark_tabs: "1F4D1",
        ledger: "1F4D2",
        notebook: "1F4D3",
        notebook_with_decorative_cover: "1F4D4",
        closed_book: "1F4D5",
        book: "1F4D6",
        green_book: "1F4D7",
        blue_book: "1F4D8",
        orange_book: "1F4D9",
        books: "1F4DA",
        name_badge: "1F4DB",
        scroll: "1F4DC",
        memo: "1F4DD",
        telephone_receiver: "1F4DE",
        pager: "1F4DF",
        fax: "1F4E0",
        satellite_antenna: "1F4E1",
        loudspeaker: "1F4E2",
        mega: "1F4E3",
        outbox_tray: "1F4E4",
        inbox_tray: "1F4E5",
        package: "1F4E6",
        "e-mail": "1F4E7",
        incoming_envelope: "1F4E8",
        envelope_with_arrow: "1F4E9",
        mailbox_closed: "1F4EA",
        mailbox: "1F4EB",
        mailbox_with_mail: "1F4EC",
        mailbox_with_no_mail: "1F4ED",
        postbox: "1F4EE",
        postal_horn: "1F4EF",
        newspaper: "1F4F0",
        iphone: "1F4F1",
        calling: "1F4F2",
        vibration_mode: "1F4F3",
        mobile_phone_off: "1F4F4",
        no_mobile_phones: "1F4F5",
        signal_strength: "1F4F6",
        camera: "1F4F7",
        camera_with_flash: "1F4F8",
        video_camera: "1F4F9",
        tv: "1F4FA",
        radio: "1F4FB",
        vhs: "1F4FC",
        film_projector: "1F4FD-FE0F",
        prayer_beads: "1F4FF",
        twisted_rightwards_arrows: "1F500",
        repeat: "1F501",
        repeat_one: "1F502",
        arrows_clockwise: "1F503",
        arrows_counterclockwise: "1F504",
        low_brightness: "1F505",
        high_brightness: "1F506",
        mute: "1F507",
        speaker: "1F508",
        sound: "1F509",
        loud_sound: "1F50A",
        battery: "1F50B",
        electric_plug: "1F50C",
        mag: "1F50D",
        mag_right: "1F50E",
        lock_with_ink_pen: "1F50F",
        closed_lock_with_key: "1F510",
        key: "1F511",
        lock: "1F512",
        unlock: "1F513",
        bell: "1F514",
        no_bell: "1F515",
        bookmark: "1F516",
        link: "1F517",
        radio_button: "1F518",
        back: "1F519",
        end: "1F51A",
        on: "1F51B",
        soon: "1F51C",
        top: "1F51D",
        underage: "1F51E",
        keycap_ten: "1F51F",
        capital_abcd: "1F520",
        abcd: "1F521",
        1234: "1F522",
        symbols: "1F523",
        abc: "1F524",
        fire: "1F525",
        flashlight: "1F526",
        wrench: "1F527",
        hammer: "1F528",
        nut_and_bolt: "1F529",
        hocho: "1F52A",
        gun: "1F52B",
        microscope: "1F52C",
        telescope: "1F52D",
        crystal_ball: "1F52E",
        six_pointed_star: "1F52F",
        beginner: "1F530",
        trident: "1F531",
        black_square_button: "1F532",
        white_square_button: "1F533",
        red_circle: "1F534",
        large_blue_circle: "1F535",
        large_orange_diamond: "1F536",
        large_blue_diamond: "1F537",
        small_orange_diamond: "1F538",
        small_blue_diamond: "1F539",
        small_red_triangle: "1F53A",
        small_red_triangle_down: "1F53B",
        arrow_up_small: "1F53C",
        arrow_down_small: "1F53D",
        om_symbol: "1F549-FE0F",
        dove_of_peace: "1F54A-FE0F",
        kaaba: "1F54B",
        mosque: "1F54C",
        synagogue: "1F54D",
        menorah_with_nine_branches: "1F54E",
        clock1: "1F550",
        clock2: "1F551",
        clock3: "1F552",
        clock4: "1F553",
        clock5: "1F554",
        clock6: "1F555",
        clock7: "1F556",
        clock8: "1F557",
        clock9: "1F558",
        clock10: "1F559",
        clock11: "1F55A",
        clock12: "1F55B",
        clock130: "1F55C",
        clock230: "1F55D",
        clock330: "1F55E",
        clock430: "1F55F",
        clock530: "1F560",
        clock630: "1F561",
        clock730: "1F562",
        clock830: "1F563",
        clock930: "1F564",
        clock1030: "1F565",
        clock1130: "1F566",
        clock1230: "1F567",
        candle: "1F56F-FE0F",
        mantelpiece_clock: "1F570-FE0F",
        hole: "1F573-FE0F",
        man_in_business_suit_levitating: "1F574-FE0F",
        "female-detective": "1F575-FE0F-200D-2640-FE0F",
        "male-detective": "1F575-FE0F-200D-2642-FE0F",
        sleuth_or_spy: "1F575-FE0F-200D-2642-FE0F",
        dark_sunglasses: "1F576-FE0F",
        spider: "1F577-FE0F",
        spider_web: "1F578-FE0F",
        joystick: "1F579-FE0F",
        man_dancing: "1F57A",
        linked_paperclips: "1F587-FE0F",
        lower_left_ballpoint_pen: "1F58A-FE0F",
        lower_left_fountain_pen: "1F58B-FE0F",
        lower_left_paintbrush: "1F58C-FE0F",
        lower_left_crayon: "1F58D-FE0F",
        raised_hand_with_fingers_splayed: "1F590-FE0F",
        middle_finger: "1F595",
        "spock-hand": "1F596",
        black_heart: "1F5A4",
        desktop_computer: "1F5A5-FE0F",
        printer: "1F5A8-FE0F",
        three_button_mouse: "1F5B1-FE0F",
        trackball: "1F5B2-FE0F",
        frame_with_picture: "1F5BC-FE0F",
        card_index_dividers: "1F5C2-FE0F",
        card_file_box: "1F5C3-FE0F",
        file_cabinet: "1F5C4-FE0F",
        wastebasket: "1F5D1-FE0F",
        spiral_note_pad: "1F5D2-FE0F",
        spiral_calendar_pad: "1F5D3-FE0F",
        compression: "1F5DC-FE0F",
        old_key: "1F5DD-FE0F",
        rolled_up_newspaper: "1F5DE-FE0F",
        dagger_knife: "1F5E1-FE0F",
        speaking_head_in_silhouette: "1F5E3-FE0F",
        left_speech_bubble: "1F5E8-FE0F",
        right_anger_bubble: "1F5EF-FE0F",
        ballot_box_with_ballot: "1F5F3-FE0F",
        world_map: "1F5FA-FE0F",
        mount_fuji: "1F5FB",
        tokyo_tower: "1F5FC",
        statue_of_liberty: "1F5FD",
        japan: "1F5FE",
        moyai: "1F5FF",
        grinning: "1F600",
        grin: "1F601",
        joy: "1F602",
        smiley: "1F603",
        smile: "1F604",
        sweat_smile: "1F605",
        laughing: "1F606",
        innocent: "1F607",
        smiling_imp: "1F608",
        wink: "1F609",
        blush: "1F60A",
        yum: "1F60B",
        relieved: "1F60C",
        heart_eyes: "1F60D",
        sunglasses: "1F60E",
        smirk: "1F60F",
        neutral_face: "1F610",
        expressionless: "1F611",
        unamused: "1F612",
        sweat: "1F613",
        pensive: "1F614",
        confused: "1F615",
        confounded: "1F616",
        kissing: "1F617",
        kissing_heart: "1F618",
        kissing_smiling_eyes: "1F619",
        kissing_closed_eyes: "1F61A",
        stuck_out_tongue: "1F61B",
        stuck_out_tongue_winking_eye: "1F61C",
        stuck_out_tongue_closed_eyes: "1F61D",
        disappointed: "1F61E",
        worried: "1F61F",
        angry: "1F620",
        rage: "1F621",
        cry: "1F622",
        persevere: "1F623",
        triumph: "1F624",
        disappointed_relieved: "1F625",
        frowning: "1F626",
        anguished: "1F627",
        fearful: "1F628",
        weary: "1F629",
        sleepy: "1F62A",
        tired_face: "1F62B",
        grimacing: "1F62C",
        sob: "1F62D",
        open_mouth: "1F62E",
        hushed: "1F62F",
        cold_sweat: "1F630",
        scream: "1F631",
        astonished: "1F632",
        flushed: "1F633",
        sleeping: "1F634",
        dizzy_face: "1F635",
        no_mouth: "1F636",
        mask: "1F637",
        smile_cat: "1F638",
        joy_cat: "1F639",
        smiley_cat: "1F63A",
        heart_eyes_cat: "1F63B",
        smirk_cat: "1F63C",
        kissing_cat: "1F63D",
        pouting_cat: "1F63E",
        crying_cat_face: "1F63F",
        scream_cat: "1F640",
        slightly_frowning_face: "1F641",
        slightly_smiling_face: "1F642",
        upside_down_face: "1F643",
        face_with_rolling_eyes: "1F644",
        "woman-gesturing-no": "1F645-200D-2640-FE0F",
        "man-gesturing-no": "1F645-200D-2642-FE0F",
        no_good: "1F645-200D-2640-FE0F",
        "woman-gesturing-ok": "1F646-200D-2640-FE0F",
        "man-gesturing-ok": "1F646-200D-2642-FE0F",
        ok_woman: "1F646-200D-2640-FE0F",
        "woman-bowing": "1F647-200D-2640-FE0F",
        "man-bowing": "1F647-200D-2642-FE0F",
        bow: "1F647-200D-2642-FE0F",
        see_no_evil: "1F648",
        hear_no_evil: "1F649",
        speak_no_evil: "1F64A",
        "woman-raising-hand": "1F64B-200D-2640-FE0F",
        "man-raising-hand": "1F64B-200D-2642-FE0F",
        raising_hand: "1F64B-200D-2640-FE0F",
        raised_hands: "1F64C",
        "woman-frowning": "1F64D-200D-2640-FE0F",
        "man-frowning": "1F64D-200D-2642-FE0F",
        person_frowning: "1F64D-200D-2640-FE0F",
        "woman-pouting": "1F64E-200D-2640-FE0F",
        "man-pouting": "1F64E-200D-2642-FE0F",
        person_with_pouting_face: "1F64E-200D-2640-FE0F",
        pray: "1F64F",
        rocket: "1F680",
        helicopter: "1F681",
        steam_locomotive: "1F682",
        railway_car: "1F683",
        bullettrain_side: "1F684",
        bullettrain_front: "1F685",
        train2: "1F686",
        metro: "1F687",
        light_rail: "1F688",
        station: "1F689",
        tram: "1F68A",
        train: "1F68B",
        bus: "1F68C",
        oncoming_bus: "1F68D",
        trolleybus: "1F68E",
        busstop: "1F68F",
        minibus: "1F690",
        ambulance: "1F691",
        fire_engine: "1F692",
        police_car: "1F693",
        oncoming_police_car: "1F694",
        taxi: "1F695",
        oncoming_taxi: "1F696",
        car: "1F697",
        oncoming_automobile: "1F698",
        blue_car: "1F699",
        truck: "1F69A",
        articulated_lorry: "1F69B",
        tractor: "1F69C",
        monorail: "1F69D",
        mountain_railway: "1F69E",
        suspension_railway: "1F69F",
        mountain_cableway: "1F6A0",
        aerial_tramway: "1F6A1",
        ship: "1F6A2",
        "woman-rowing-boat": "1F6A3-200D-2640-FE0F",
        "man-rowing-boat": "1F6A3-200D-2642-FE0F",
        rowboat: "1F6A3-200D-2642-FE0F",
        speedboat: "1F6A4",
        traffic_light: "1F6A5",
        vertical_traffic_light: "1F6A6",
        construction: "1F6A7",
        rotating_light: "1F6A8",
        triangular_flag_on_post: "1F6A9",
        door: "1F6AA",
        no_entry_sign: "1F6AB",
        smoking: "1F6AC",
        no_smoking: "1F6AD",
        put_litter_in_its_place: "1F6AE",
        do_not_litter: "1F6AF",
        potable_water: "1F6B0",
        "non-potable_water": "1F6B1",
        bike: "1F6B2",
        no_bicycles: "1F6B3",
        "woman-biking": "1F6B4-200D-2640-FE0F",
        "man-biking": "1F6B4-200D-2642-FE0F",
        bicyclist: "1F6B4-200D-2642-FE0F",
        "woman-mountain-biking": "1F6B5-200D-2640-FE0F",
        "man-mountain-biking": "1F6B5-200D-2642-FE0F",
        mountain_bicyclist: "1F6B5-200D-2642-FE0F",
        "woman-walking": "1F6B6-200D-2640-FE0F",
        "man-walking": "1F6B6-200D-2642-FE0F",
        walking: "1F6B6-200D-2642-FE0F",
        no_pedestrians: "1F6B7",
        children_crossing: "1F6B8",
        mens: "1F6B9",
        womens: "1F6BA",
        restroom: "1F6BB",
        baby_symbol: "1F6BC",
        toilet: "1F6BD",
        wc: "1F6BE",
        shower: "1F6BF",
        bath: "1F6C0",
        bathtub: "1F6C1",
        passport_control: "1F6C2",
        customs: "1F6C3",
        baggage_claim: "1F6C4",
        left_luggage: "1F6C5",
        couch_and_lamp: "1F6CB-FE0F",
        sleeping_accommodation: "1F6CC",
        shopping_bags: "1F6CD-FE0F",
        bellhop_bell: "1F6CE-FE0F",
        bed: "1F6CF-FE0F",
        place_of_worship: "1F6D0",
        octagonal_sign: "1F6D1",
        shopping_trolley: "1F6D2",
        hammer_and_wrench: "1F6E0-FE0F",
        shield: "1F6E1-FE0F",
        oil_drum: "1F6E2-FE0F",
        motorway: "1F6E3-FE0F",
        railway_track: "1F6E4-FE0F",
        motor_boat: "1F6E5-FE0F",
        small_airplane: "1F6E9-FE0F",
        airplane_departure: "1F6EB",
        airplane_arriving: "1F6EC",
        satellite: "1F6F0-FE0F",
        passenger_ship: "1F6F3-FE0F",
        scooter: "1F6F4",
        motor_scooter: "1F6F5",
        canoe: "1F6F6",
        sled: "1F6F7",
        flying_saucer: "1F6F8",
        zipper_mouth_face: "1F910",
        money_mouth_face: "1F911",
        face_with_thermometer: "1F912",
        nerd_face: "1F913",
        thinking_face: "1F914",
        face_with_head_bandage: "1F915",
        robot_face: "1F916",
        hugging_face: "1F917",
        the_horns: "1F918",
        call_me_hand: "1F919",
        raised_back_of_hand: "1F91A",
        "left-facing_fist": "1F91B",
        "right-facing_fist": "1F91C",
        handshake: "1F91D",
        crossed_fingers: "1F91E",
        i_love_you_hand_sign: "1F91F",
        face_with_cowboy_hat: "1F920",
        clown_face: "1F921",
        nauseated_face: "1F922",
        rolling_on_the_floor_laughing: "1F923",
        drooling_face: "1F924",
        lying_face: "1F925",
        "woman-facepalming": "1F926-200D-2640-FE0F",
        "man-facepalming": "1F926-200D-2642-FE0F",
        face_palm: "1F926",
        sneezing_face: "1F927",
        face_with_raised_eyebrow: "1F928",
        "star-struck": "1F929",
        zany_face: "1F92A",
        shushing_face: "1F92B",
        face_with_symbols_on_mouth: "1F92C",
        face_with_hand_over_mouth: "1F92D",
        face_vomiting: "1F92E",
        exploding_head: "1F92F",
        pregnant_woman: "1F930",
        "breast-feeding": "1F931",
        palms_up_together: "1F932",
        selfie: "1F933",
        prince: "1F934",
        man_in_tuxedo: "1F935",
        mrs_claus: "1F936",
        "woman-shrugging": "1F937-200D-2640-FE0F",
        "man-shrugging": "1F937-200D-2642-FE0F",
        shrug: "1F937",
        "woman-cartwheeling": "1F938-200D-2640-FE0F",
        "man-cartwheeling": "1F938-200D-2642-FE0F",
        person_doing_cartwheel: "1F938",
        "woman-juggling": "1F939-200D-2640-FE0F",
        "man-juggling": "1F939-200D-2642-FE0F",
        juggling: "1F939",
        fencer: "1F93A",
        "woman-wrestling": "1F93C-200D-2640-FE0F",
        "man-wrestling": "1F93C-200D-2642-FE0F",
        wrestlers: "1F93C",
        "woman-playing-water-polo": "1F93D-200D-2640-FE0F",
        "man-playing-water-polo": "1F93D-200D-2642-FE0F",
        water_polo: "1F93D",
        "woman-playing-handball": "1F93E-200D-2640-FE0F",
        "man-playing-handball": "1F93E-200D-2642-FE0F",
        handball: "1F93E",
        wilted_flower: "1F940",
        drum_with_drumsticks: "1F941",
        clinking_glasses: "1F942",
        tumbler_glass: "1F943",
        spoon: "1F944",
        goal_net: "1F945",
        first_place_medal: "1F947",
        second_place_medal: "1F948",
        third_place_medal: "1F949",
        boxing_glove: "1F94A",
        martial_arts_uniform: "1F94B",
        curling_stone: "1F94C",
        croissant: "1F950",
        avocado: "1F951",
        cucumber: "1F952",
        bacon: "1F953",
        potato: "1F954",
        carrot: "1F955",
        baguette_bread: "1F956",
        green_salad: "1F957",
        shallow_pan_of_food: "1F958",
        stuffed_flatbread: "1F959",
        egg: "1F95A",
        glass_of_milk: "1F95B",
        peanuts: "1F95C",
        kiwifruit: "1F95D",
        pancakes: "1F95E",
        dumpling: "1F95F",
        fortune_cookie: "1F960",
        takeout_box: "1F961",
        chopsticks: "1F962",
        bowl_with_spoon: "1F963",
        cup_with_straw: "1F964",
        coconut: "1F965",
        broccoli: "1F966",
        pie: "1F967",
        pretzel: "1F968",
        cut_of_meat: "1F969",
        sandwich: "1F96A",
        canned_food: "1F96B",
        crab: "1F980",
        lion_face: "1F981",
        scorpion: "1F982",
        turkey: "1F983",
        unicorn_face: "1F984",
        eagle: "1F985",
        duck: "1F986",
        bat: "1F987",
        shark: "1F988",
        owl: "1F989",
        fox_face: "1F98A",
        butterfly: "1F98B",
        deer: "1F98C",
        gorilla: "1F98D",
        lizard: "1F98E",
        rhinoceros: "1F98F",
        shrimp: "1F990",
        squid: "1F991",
        giraffe_face: "1F992",
        zebra_face: "1F993",
        hedgehog: "1F994",
        sauropod: "1F995",
        "t-rex": "1F996",
        cricket: "1F997",
        cheese_wedge: "1F9C0",
        face_with_monocle: "1F9D0",
        adult: "1F9D1",
        child: "1F9D2",
        older_adult: "1F9D3",
        bearded_person: "1F9D4",
        person_with_headscarf: "1F9D5",
        woman_in_steamy_room: "1F9D6-200D-2640-FE0F",
        man_in_steamy_room: "1F9D6-200D-2642-FE0F",
        person_in_steamy_room: "1F9D6-200D-2642-FE0F",
        woman_climbing: "1F9D7-200D-2640-FE0F",
        man_climbing: "1F9D7-200D-2642-FE0F",
        person_climbing: "1F9D7-200D-2640-FE0F",
        woman_in_lotus_position: "1F9D8-200D-2640-FE0F",
        man_in_lotus_position: "1F9D8-200D-2642-FE0F",
        person_in_lotus_position: "1F9D8-200D-2640-FE0F",
        female_mage: "1F9D9-200D-2640-FE0F",
        male_mage: "1F9D9-200D-2642-FE0F",
        mage: "1F9D9-200D-2640-FE0F",
        female_fairy: "1F9DA-200D-2640-FE0F",
        male_fairy: "1F9DA-200D-2642-FE0F",
        fairy: "1F9DA-200D-2640-FE0F",
        female_vampire: "1F9DB-200D-2640-FE0F",
        male_vampire: "1F9DB-200D-2642-FE0F",
        vampire: "1F9DB-200D-2640-FE0F",
        mermaid: "1F9DC-200D-2640-FE0F",
        merman: "1F9DC-200D-2642-FE0F",
        merperson: "1F9DC-200D-2642-FE0F",
        female_elf: "1F9DD-200D-2640-FE0F",
        male_elf: "1F9DD-200D-2642-FE0F",
        elf: "1F9DD-200D-2642-FE0F",
        female_genie: "1F9DE-200D-2640-FE0F",
        male_genie: "1F9DE-200D-2642-FE0F",
        genie: "1F9DE-200D-2642-FE0F",
        female_zombie: "1F9DF-200D-2640-FE0F",
        male_zombie: "1F9DF-200D-2642-FE0F",
        zombie: "1F9DF-200D-2642-FE0F",
        brain: "1F9E0",
        orange_heart: "1F9E1",
        billed_cap: "1F9E2",
        scarf: "1F9E3",
        gloves: "1F9E4",
        coat: "1F9E5",
        socks: "1F9E6",
        bangbang: "203C-FE0F",
        interrobang: "2049-FE0F",
        tm: "2122-FE0F",
        information_source: "2139-FE0F",
        left_right_arrow: "2194-FE0F",
        arrow_up_down: "2195-FE0F",
        arrow_upper_left: "2196-FE0F",
        arrow_upper_right: "2197-FE0F",
        arrow_lower_right: "2198-FE0F",
        arrow_lower_left: "2199-FE0F",
        leftwards_arrow_with_hook: "21A9-FE0F",
        arrow_right_hook: "21AA-FE0F",
        watch: "231A",
        hourglass: "231B",
        keyboard: "2328-FE0F",
        eject: "23CF-FE0F",
        fast_forward: "23E9",
        rewind: "23EA",
        arrow_double_up: "23EB",
        arrow_double_down: "23EC",
        black_right_pointing_double_triangle_with_vertical_bar: "23ED-FE0F",
        black_left_pointing_double_triangle_with_vertical_bar: "23EE-FE0F",
        black_right_pointing_triangle_with_double_vertical_bar: "23EF-FE0F",
        alarm_clock: "23F0",
        stopwatch: "23F1-FE0F",
        timer_clock: "23F2-FE0F",
        hourglass_flowing_sand: "23F3",
        double_vertical_bar: "23F8-FE0F",
        black_square_for_stop: "23F9-FE0F",
        black_circle_for_record: "23FA-FE0F",
        m: "24C2-FE0F",
        black_small_square: "25AA-FE0F",
        white_small_square: "25AB-FE0F",
        arrow_forward: "25B6-FE0F",
        arrow_backward: "25C0-FE0F",
        white_medium_square: "25FB-FE0F",
        black_medium_square: "25FC-FE0F",
        white_medium_small_square: "25FD",
        black_medium_small_square: "25FE",
        sunny: "2600-FE0F",
        cloud: "2601-FE0F",
        umbrella: "2602-FE0F",
        snowman: "2603-FE0F",
        comet: "2604-FE0F",
        phone: "260E-FE0F",
        ballot_box_with_check: "2611-FE0F",
        umbrella_with_rain_drops: "2614",
        coffee: "2615",
        shamrock: "2618-FE0F",
        point_up: "261D-FE0F",
        skull_and_crossbones: "2620-FE0F",
        radioactive_sign: "2622-FE0F",
        biohazard_sign: "2623-FE0F",
        orthodox_cross: "2626-FE0F",
        star_and_crescent: "262A-FE0F",
        peace_symbol: "262E-FE0F",
        yin_yang: "262F-FE0F",
        wheel_of_dharma: "2638-FE0F",
        white_frowning_face: "2639-FE0F",
        relaxed: "263A-FE0F",
        female_sign: "2640-FE0F",
        male_sign: "2642-FE0F",
        aries: "2648",
        taurus: "2649",
        gemini: "264A",
        cancer: "264B",
        leo: "264C",
        virgo: "264D",
        libra: "264E",
        scorpius: "264F",
        sagittarius: "2650",
        capricorn: "2651",
        aquarius: "2652",
        pisces: "2653",
        spades: "2660-FE0F",
        clubs: "2663-FE0F",
        hearts: "2665-FE0F",
        diamonds: "2666-FE0F",
        hotsprings: "2668-FE0F",
        recycle: "267B-FE0F",
        wheelchair: "267F",
        hammer_and_pick: "2692-FE0F",
        anchor: "2693",
        crossed_swords: "2694-FE0F",
        medical_symbol: "2695-FE0F",
        scales: "2696-FE0F",
        alembic: "2697-FE0F",
        gear: "2699-FE0F",
        atom_symbol: "269B-FE0F",
        fleur_de_lis: "269C-FE0F",
        warning: "26A0-FE0F",
        zap: "26A1",
        white_circle: "26AA",
        black_circle: "26AB",
        coffin: "26B0-FE0F",
        funeral_urn: "26B1-FE0F",
        soccer: "26BD",
        baseball: "26BE",
        snowman_without_snow: "26C4",
        partly_sunny: "26C5",
        thunder_cloud_and_rain: "26C8-FE0F",
        ophiuchus: "26CE",
        pick: "26CF-FE0F",
        helmet_with_white_cross: "26D1-FE0F",
        chains: "26D3-FE0F",
        no_entry: "26D4",
        shinto_shrine: "26E9-FE0F",
        church: "26EA",
        mountain: "26F0-FE0F",
        umbrella_on_ground: "26F1-FE0F",
        fountain: "26F2",
        golf: "26F3",
        ferry: "26F4-FE0F",
        boat: "26F5",
        skier: "26F7-FE0F",
        ice_skate: "26F8-FE0F",
        "woman-bouncing-ball": "26F9-FE0F-200D-2640-FE0F",
        "man-bouncing-ball": "26F9-FE0F-200D-2642-FE0F",
        person_with_ball: "26F9-FE0F-200D-2642-FE0F",
        tent: "26FA",
        fuelpump: "26FD",
        scissors: "2702-FE0F",
        white_check_mark: "2705",
        airplane: "2708-FE0F",
        email: "2709-FE0F",
        fist: "270A",
        hand: "270B",
        v: "270C-FE0F",
        writing_hand: "270D-FE0F",
        pencil2: "270F-FE0F",
        black_nib: "2712-FE0F",
        heavy_check_mark: "2714-FE0F",
        heavy_multiplication_x: "2716-FE0F",
        latin_cross: "271D-FE0F",
        star_of_david: "2721-FE0F",
        sparkles: "2728",
        eight_spoked_asterisk: "2733-FE0F",
        eight_pointed_black_star: "2734-FE0F",
        snowflake: "2744-FE0F",
        sparkle: "2747-FE0F",
        x: "274C",
        negative_squared_cross_mark: "274E",
        question: "2753",
        grey_question: "2754",
        grey_exclamation: "2755",
        exclamation: "2757",
        heavy_heart_exclamation_mark_ornament: "2763-FE0F",
        heart: "2764-FE0F",
        heavy_plus_sign: "2795",
        heavy_minus_sign: "2796",
        heavy_division_sign: "2797",
        arrow_right: "27A1-FE0F",
        curly_loop: "27B0",
        loop: "27BF",
        arrow_heading_up: "2934-FE0F",
        arrow_heading_down: "2935-FE0F",
        arrow_left: "2B05-FE0F",
        arrow_up: "2B06-FE0F",
        arrow_down: "2B07-FE0F",
        black_large_square: "2B1B",
        white_large_square: "2B1C",
        star: "2B50",
        o: "2B55",
        wavy_dash: "3030-FE0F",
        part_alternation_mark: "303D-FE0F",
        congratulations: "3297-FE0F",
        secret: "3299-FE0F"
    }
});
define("core/emoji/picker", ["exports", "core/localstorage", "core/emoji/data", "core/utils", "core/str", "core/templates"], function(a, b, c, d, e, f) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    a.default = void 0;
    b = function(a) {
        return a && a.__esModule ? a : {
            default: a
        }
    }(b);
    c = function(a) {
        if (a && a.__esModule) {
            return a
        } else {
            var b = {};
            if (null != a) {
                for (var c in a) {
                    if (Object.prototype.hasOwnProperty.call(a, c)) {
                        var d = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(a, c) : {};
                        if (d.get || d.set) {
                            Object.defineProperty(b, c, d)
                        } else {
                            b[c] = a[c]
                        }
                    }
                }
            }
            b.default = a;
            return b
        }
    }(c);

    function g(a) {
        if ("function" == typeof Symbol && "symbol" == typeof Symbol.iterator) {
            g = function(a) {
                return typeof a
            }
        } else {
            g = function(a) {
                return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
            }
        }
        return g(a)
    }

    function h(a) {
        return k(a) || j(a) || i()
    }

    function i() {
        throw new TypeError("Invalid attempt to spread non-iterable instance")
    }

    function j(a) {
        if (Symbol.iterator in Object(a) || "[object Arguments]" === Object.prototype.toString.call(a)) return Array.from(a)
    }

    function k(a) {
        if (Array.isArray(a)) {
            for (var b = 0, c = Array(a.length); b < a.length; b++) {
                c[b] = a[b]
            }
            return c
        }
    }

    function l(a, b) {
        return o(a) || n(a, b) || m()
    }

    function m() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance")
    }

    function n(a, b) {
        var c = [],
            d = !0,
            e = !1,
            f = void 0;
        try {
            for (var g = a[Symbol.iterator](), h; !(d = (h = g.next()).done); d = !0) {
                c.push(h.value);
                if (b && c.length === b) break
            }
        } catch (a) {
            e = !0;
            f = a
        } finally {
            try {
                if (!d && null != g["return"]) g["return"]()
            } finally {
                if (e) throw f
            }
        }
        return c
    }

    function o(a) {
        if (Array.isArray(a)) return a
    }

    function p(a, b, c, d, e, f, g) {
        try {
            var h = a[f](g),
                i = h.value
        } catch (a) {
            c(a);
            return
        }
        if (h.done) {
            b(i)
        } else {
            Promise.resolve(i).then(d, e)
        }
    }

    function q(a) {
        return function() {
            var b = this,
                c = arguments;
            return new Promise(function(d, e) {
                var h = a.apply(b, c);

                function f(a) {
                    p(h, d, e, f, g, "next", a)
                }

                function g(a) {
                    p(h, d, e, f, g, "throw", a)
                }
                f(void 0)
            })
        }
    }

    function r(a) {
        for (var b = 1; b < arguments.length; b++) {
            var c = null != arguments[b] ? arguments[b] : {},
                d = Object.keys(c);
            if ("function" == typeof Object.getOwnPropertySymbols) {
                d = d.concat(Object.getOwnPropertySymbols(c).filter(function(a) {
                    return Object.getOwnPropertyDescriptor(c, a).enumerable
                }))
            }
            d.forEach(function(b) {
                s(a, b, c[b])
            })
        }
        return a
    }

    function s(a, b, c) {
        if (b in a) {
            Object.defineProperty(a, b, {
                value: c,
                enumerable: !0,
                configurable: !0,
                writable: !0
            })
        } else {
            a[b] = c
        }
        return a
    }
    var t = 5,
        u = "moodle-recent-emojis",
        v = 40,
        w = 7,
        x = {
            EMOJI: 0,
            HEADER: 1
        },
        y = {
            CATEGORY_SELECTOR: "[data-action=\"show-category\"]",
            EMOJIS_CONTAINER: "[data-region=\"emojis-container\"]",
            EMOJI_PREVIEW: "[data-region=\"emoji-preview\"]",
            EMOJI_SHORT_NAME: "[data-region=\"emoji-short-name\"]",
            ROW_CONTAINER: "[data-region=\"row-container\"]",
            SEARCH_INPUT: "[data-region=\"search-input\"]",
            SEARCH_RESULTS_CONTAINER: "[data-region=\"search-results-container\"]"
        },
        z = function(a, b, c, d) {
            var e = [];
            e.push({
                index: d + e.length,
                type: x.HEADER,
                data: {
                    name: a,
                    displayName: b
                }
            });
            for (var f = 0, g; f < c.length; f += w) {
                g = c.slice(f, f + w);
                e.push({
                    index: d + e.length,
                    type: x.EMOJI,
                    data: g
                })
            }
            return e
        },
        A = function(a) {
            return a.map(function(a, b) {
                return r({}, a, {
                    index: b
                })
            })
        },
        B = function(a) {
            return a.reduce(function(a, b, c) {
                if (b.type === x.HEADER) {
                    a[b.data.name] = c * v
                }
                return a
            }, {})
        },
        C = function() {
            var a = q(regeneratorRuntime.mark(function a(b, c) {
                var d, e, g;
                return regeneratorRuntime.wrap(function(a) {
                    while (1) {
                        switch (a.prev = a.next) {
                            case 0:
                                d = {
                                    index: b,
                                    text: c
                                };
                                a.next = 3;
                                return (0, f.render)("core/emoji/header_row", d);
                            case 3:
                                e = a.sent;
                                g = document.createElement("div");
                                g.innerHTML = e;
                                return a.abrupt("return", g.firstChild);
                            case 7:
                            case "end":
                                return a.stop();
                        }
                    }
                }, a)
            }));
            return function() {
                return a.apply(this, arguments)
            }
        }(),
        D = function() {
            var a = q(regeneratorRuntime.mark(function a(b, c) {
                var d, e, g;
                return regeneratorRuntime.wrap(function(a) {
                    while (1) {
                        switch (a.prev = a.next) {
                            case 0:
                                d = {
                                    index: b,
                                    emojis: c.map(function(a) {
                                        var b = a.unified.split("-").map(function(a) {
                                                return "0x".concat(a)
                                            }),
                                            c = String.fromCodePoint.apply(null, b);
                                        return {
                                            shortnames: ":".concat(a.shortnames.join(": :"), ":"),
                                            unified: a.unified,
                                            text: c,
                                            spacer: !1
                                        }
                                    }),
                                    spacers: Array(w - c.length).fill(!0)
                                };
                                a.next = 3;
                                return (0, f.render)("core/emoji/emoji_row", d);
                            case 3:
                                e = a.sent;
                                g = document.createElement("div");
                                g.innerHTML = e;
                                return a.abrupt("return", g.firstChild);
                            case 7:
                            case "end":
                                return a.stop();
                        }
                    }
                }, a)
            }));
            return function() {
                return a.apply(this, arguments)
            }
        }(),
        E = function(a) {
            return null !== a.getAttribute("data-short-names")
        },
        F = function(a) {
            if (!a) {
                return null
            }
            if ("show-category" === a.getAttribute("data-action")) {
                return a
            } else {
                return F(a.parentElement)
            }
        },
        G = function(a, b) {
            return a.querySelector("[data-category=\"".concat(b, "\"]"))
        },
        H = function(a, b) {
            for (var c = a.querySelectorAll(y.CATEGORY_SELECTOR), d = 0, e; d < c.length; d++) {
                e = c[d];
                e.classList.remove("selected")
            }
            b.classList.add("selected")
        },
        I = function(a, b, c) {
            var d = [];
            if (0 > b) {
                b = 0
            }
            for (var i in c) {
                var j = c[i];
                d.push([j, i])
            }
            d.sort(function(c, d) {
                var e = l(c, 1),
                    f = e[0],
                    a = l(d, 1),
                    g = a[0];
                if (f < g) {
                    return -1
                } else if (f > g) {
                    return 1
                } else {
                    return 0
                }
            });
            var e = d.reduce(function(a, c) {
                    var d = l(c, 2),
                        e = d[0],
                        f = d[1];
                    if (e <= b) {
                        a.categoryName = f;
                        a.previousPosition = a.currentPosition;
                        a.currentPosition = b
                    } else if (null === a.nextPosition) {
                        a.nextPosition = e
                    }
                    return a
                }, {
                    categoryName: null,
                    currentPosition: null,
                    previousPosition: null,
                    nextPosition: null
                }),
                f = e.categoryName,
                g = e.previousPosition,
                h = e.nextPosition;
            return [G(a, f), g, h]
        },
        J = function() {
            var a = b.default.get(u);
            return a ? JSON.parse(a) : []
        },
        K = function(a) {
            b.default.set(u, JSON.stringify(a))
        },
        L = function(a, b, c) {
            var d = a[0].data.name,
                e = a[0].data.displayName,
                f = J(),
                g = [c].concat(h(f.filter(function(a) {
                    return a.unified != c.unified
                })));
            g = g.slice(0, 3 * w);
            var i = z(d, e, g);
            K(g);
            return [A(i.concat(a.slice(b))), i.length]
        },
        M = function(a, b, c) {
            var d = a > v ? Math.floor(a / v) : 0,
                e = d >= t ? d - t : d,
                f = c.slice(e, d + b + t);
            return f
        },
        N = function() {
            var a = q(regeneratorRuntime.mark(function a(b) {
                var c;
                return regeneratorRuntime.wrap(function(a) {
                    while (1) {
                        switch (a.prev = a.next) {
                            case 0:
                                c = null;
                                if (!(b.type === x.HEADER)) {
                                    a.next = 7;
                                    break
                                }
                                a.next = 4;
                                return C(b.index, b.data.displayName);
                            case 4:
                                c = a.sent;
                                a.next = 10;
                                break;
                            case 7:
                                a.next = 9;
                                return D(b.index, b.data);
                            case 9:
                                c = a.sent;
                            case 10:
                                c.style.position = "absolute";
                                c.style.left = 0;
                                c.style.right = 0;
                                c.style.top = "".concat(b.index * v, "px");
                                return a.abrupt("return", c);
                            case 15:
                            case "end":
                                return a.stop();
                        }
                    }
                }, a)
            }));
            return function() {
                return a.apply(this, arguments)
            }
        }(),
        O = function(c, a) {
            if (c.index !== a.index) {
                return !1
            }
            if (c.type !== a.type) {
                return !1
            }
            if (g(c.data) != g(a.data)) {
                return !1
            }
            if (c.type === x.HEADER) {
                return c.data.name === a.data.name
            } else {
                if (c.data.length !== a.data.length) {
                    return !1
                }
                for (var b = 0; b < c.data.length; b++) {
                    if (c.data[b].unified != a.data[b].unified) {
                        return !1
                    }
                }
            }
            return !0
        },
        P = function() {
            var a = q(regeneratorRuntime.mark(function a(b, c, d) {
                var e, f, g, h, i;
                return regeneratorRuntime.wrap(function(a) {
                    while (1) {
                        switch (a.prev = a.next) {
                            case 0:
                                e = d.filter(function(a) {
                                    return !c.some(function(b) {
                                        return O(b, a)
                                    })
                                });
                                f = c.filter(function(a) {
                                    return d.some(function(b) {
                                        return O(a, b)
                                    })
                                });
                                g = c.filter(function(a) {
                                    return !d.some(function(b) {
                                        return O(a, b)
                                    })
                                });
                                h = g.map(function(a) {
                                    return b.querySelectorAll("[data-row=\"".concat(a.index, "\"]"))
                                });
                                a.next = 6;
                                return Promise.all(e.map(function(a) {
                                    return N(a)
                                }));
                            case 6:
                                i = a.sent;
                                i.forEach(function(a, c) {
                                    for (var d = e[c], g = null, h = 0, j; h < f.length; h++) {
                                        j = f[h];
                                        if (j.index > d.index) {
                                            g = h;
                                            break
                                        }
                                    }
                                    if (null !== g) {
                                        var k = f[g],
                                            l = b.querySelector("[data-row=\"".concat(k.index, "\"]"));
                                        b.insertBefore(a, l);
                                        f.splice(g, 0, f)
                                    } else {
                                        f.push(d);
                                        b.appendChild(a)
                                    }
                                });
                                h.forEach(function(a) {
                                    for (var c = 0, d; c < a.length; c++) {
                                        d = a[c];
                                        b.removeChild(d)
                                    }
                                });
                            case 9:
                            case "end":
                                return a.stop();
                        }
                    }
                }, a)
            }));
            return function() {
                return a.apply(this, arguments)
            }
        }(),
        Q = function(a) {
            var b = [],
                c = [],
                d = 0,
                e = !1,
                f = function() {
                    var d = q(regeneratorRuntime.mark(function d() {
                        var g;
                        return regeneratorRuntime.wrap(function(d) {
                            while (1) {
                                switch (d.prev = d.next) {
                                    case 0:
                                        if (c.length) {
                                            d.next = 2;
                                            break
                                        }
                                        return d.abrupt("return");
                                    case 2:
                                        if (!e) {
                                            d.next = 4;
                                            break
                                        }
                                        return d.abrupt("return");
                                    case 4:
                                        e = !0;
                                        g = c.slice();
                                        c = [];
                                        d.next = 9;
                                        return P(a, b, g);
                                    case 9:
                                        b = g;
                                        e = !1;
                                        f();
                                    case 12:
                                    case "end":
                                        return d.stop();
                                }
                            }
                        }, d)
                    }));
                    return function() {
                        return d.apply(this, arguments)
                    }
                }();
            return function(b, e) {
                var g = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : 10;
                c = M(b, g, e);
                f();
                if (d !== e.length) {
                    a.style.height = "".concat(e.length * v, "px")
                }
                d = e.length
            }
        },
        R = function(a, b) {
            b.classList.remove("hidden");
            a.classList.add("hidden")
        },
        S = function(a, b, c) {
            b.classList.add("hidden");
            a.classList.remove("hidden");
            c.value = ""
        },
        T = function(a, b) {
            return function(c) {
                var d = c.target;
                if (E(d)) {
                    b.textContent = d.getAttribute("data-short-names");
                    a.textContent = d.textContent
                }
            }
        },
        U = function(a, b) {
            return function(c) {
                var d = c.target;
                if (E(d)) {
                    b.textContent = "";
                    a.textContent = ""
                }
            }
        },
        V = function(a, b, c, d, e, f) {
            return function(g, h, i) {
                var j = g.target,
                    k = h,
                    m = i;
                S(b, c, d);
                if (E(j)) {
                    var n = j.getAttribute("data-unified"),
                        o = j.getAttribute("data-short-names").replace(/:/g, "").split(" "),
                        p = b.scrollTop,
                        q = null !== b.querySelector("[data-row=\"".concat(a - 1, "\"]")),
                        r = L(h, a, {
                            unified: n,
                            shortnames: o
                        }),
                        s = l(r, 2);
                    k = s[0];
                    a = s[1];
                    m = B(k);
                    if (q) {
                        f(p, k)
                    }
                    e(j.textContent);
                    return [k, m]
                }
                var t = F(j);
                if (t) {
                    var u = t.getAttribute("data-category"),
                        v = i[u];
                    b.scrollTop = v
                }
                return [k, m]
            }
        },
        W = function(a, b, c, d, e) {
            var f = I(a, c.scrollTop, d),
                g = l(f, 3),
                h = g[0],
                i = g[1],
                j = g[2];
            return function(d, f) {
                var g = c.scrollTop,
                    k = b + v,
                    m = b - v,
                    n = g >= j || g < i;
                if (n) {
                    var o = I(a, g, d),
                        p = l(o, 3);
                    h = p[0];
                    i = p[1];
                    j = p[2];
                    H(a, h)
                }
                if (g < m || g > k) {
                    requestAnimationFrame(function() {
                        e(g, f);
                        b = g
                    })
                }
            }
        },
        X = function(a, b, d) {
            var f = b.querySelector(y.ROW_CONTAINER),
                g = Q(f);
            b.appendChild(f);
            return q(regeneratorRuntime.mark(function f() {
                var h, i, j, k;
                return regeneratorRuntime.wrap(function(f) {
                    while (1) {
                        switch (f.prev = f.next) {
                            case 0:
                                h = a.value.toLowerCase();
                                if (!h) {
                                    f.next = 11;
                                    break
                                }
                                R(d, b);
                                i = Object.keys(c.byShortName).reduce(function(a, b) {
                                    if (b.includes(h)) {
                                        a.push({
                                            shortnames: [b],
                                            unified: c.byShortName[b]
                                        })
                                    }
                                    return a
                                }, []);
                                f.next = 6;
                                return (0, e.get_string)("searchresults", "core");
                            case 6:
                                j = f.sent;
                                k = z(j, j, i, 0);
                                g(0, k, k.length);
                                f.next = 12;
                                break;
                            case 11:
                                S(d, b, a);
                            case 12:
                            case "end":
                                return f.stop();
                        }
                    }
                }, f)
            }))
        },
        Y = function(a, b, c, e, f, g, h, i) {
            var j = a.querySelector(y.SEARCH_INPUT),
                k = a.querySelector(y.SEARCH_RESULTS_CONTAINER),
                m = a.querySelector(y.EMOJI_PREVIEW),
                n = a.querySelector(y.EMOJI_SHORT_NAME),
                o = V(i, b, k, j, f, c),
                p = W(a, e, b, g, c),
                q = X(j, k, b);
            a.addEventListener("focus", T(m, n), !0);
            a.addEventListener("blur", U(m, n), !0);
            a.addEventListener("mouseenter", T(m, n), !0);
            a.addEventListener("mouseleave", U(m, n), !0);
            a.addEventListener("click", function(a) {
                var b = o(a, h, g),
                    c = l(b, 2);
                h = c[0];
                g = c[1]
            });
            b.addEventListener("scroll", (0, d.throttle)(function() {
                return p(g, h)
            }, 50));
            j.addEventListener("input", (0, d.debounce)(q, 200))
        },
        Z = function(a, b) {
            var d = a.querySelector(y.EMOJIS_CONTAINER),
                e = d.querySelector(y.ROW_CONTAINER),
                f = J(),
                g = [{
                    name: "Recent",
                    emojis: f
                }].concat(h(c.byCategory)),
                i = [],
                j = 0;
            g.forEach(function(b) {
                var c = G(a, b.name),
                    d = c.title,
                    e = z(b.name, d, b.emojis, i.length);
                if ("Recent" === b.name) {
                    j = e.length
                }
                i = i.concat(e)
            });
            i = A(i);
            var k = B(i),
                l = Q(e);
            l(0, i);
            Y(a, d, l, 0, b, k, i, j)
        };
    a.default = Z;
    return a.default
});
define("core/config", function() {
    return M.cfg
});
define("core/chart_base", ["core/chart_series", "core/chart_axis"], function(a, b) {
    function c() {
        this._series = [];
        this._labels = [];
        this._xaxes = [];
        this._yaxes = [];
        this._setDefaults()
    }
    c.prototype._series = null;
    c.prototype._labels = null;
    c.prototype._title = null;
    c.prototype._xaxes = null;
    c.prototype._yaxes = null;
    c.prototype.COLORSET = ["#f3c300", "#875692", "#f38400", "#a1caf1", "#be0032", "#c2b280", "#7f180d", "#008856", "#e68fac", "#0067a5"];
    c.prototype._configColorSet = null;
    c.prototype.TYPE = null;
    c.prototype.addSeries = function(a) {
        this._validateSeries(a);
        this._series.push(a);
        if (null === a.getColor()) {
            var b = this.getConfigColorSet() || c.prototype.COLORSET;
            a.setColor(b[this._series.length % b.length])
        }
    };
    c.prototype.create = function(c, d) {
        var e = new c;
        e.setConfigColorSet(d.config_colorset);
        e.setLabels(d.labels);
        e.setTitle(d.title);
        d.series.forEach(function(b) {
            e.addSeries(a.prototype.create(b))
        });
        d.axes.x.forEach(function(a, c) {
            e.setXAxis(b.prototype.create(a), c)
        });
        d.axes.y.forEach(function(a, c) {
            e.setYAxis(b.prototype.create(a), c)
        });
        return e
    };
    c.prototype.__getAxis = function(a, c, d) {
        var e = "x" === a ? this._xaxes : this._yaxes,
            f = ("x" === a ? this.setXAxis : this.setYAxis).bind(this),
            g;
        c = "undefined" == typeof c ? 0 : c;
        d = "undefined" == typeof d ? !1 : d;
        g = e[c];
        if ("undefined" == typeof g) {
            if (!d) {
                throw new Error("Unknown axis.")
            }
            g = new b;
            f(g, c)
        }
        return g
    };
    c.prototype.getConfigColorSet = function() {
        return this._configColorSet
    };
    c.prototype.getLabels = function() {
        return this._labels
    };
    c.prototype.getSeries = function() {
        return this._series
    };
    c.prototype.getTitle = function() {
        return this._title
    };
    c.prototype.getType = function() {
        if (!this.TYPE) {
            throw new Error("The TYPE property has not been set.")
        }
        return this.TYPE
    };
    c.prototype.getXAxes = function() {
        return this._xaxes
    };
    c.prototype.getXAxis = function(a, b) {
        return this.__getAxis("x", a, b)
    };
    c.prototype.getYAxes = function() {
        return this._yaxes
    };
    c.prototype.getYAxis = function(a, b) {
        return this.__getAxis("y", a, b)
    };
    c.prototype.setConfigColorSet = function(a) {
        this._configColorSet = a
    };
    c.prototype._setDefaults = function() {};
    c.prototype.setLabels = function(a) {
        if (a.length && this._series.length && this._series[0].length != a.length) {
            throw new Error("Series must match label values.")
        }
        this._labels = a
    };
    c.prototype.setTitle = function(a) {
        this._title = a
    };
    c.prototype.setXAxis = function(a, b) {
        b = "undefined" == typeof b ? 0 : b;
        this._validateAxis("x", a, b);
        this._xaxes[b] = a
    };
    c.prototype.setYAxis = function(a, b) {
        b = "undefined" == typeof b ? 0 : b;
        this._validateAxis("y", a, b);
        this._yaxes[b] = a
    };
    c.prototype._validateAxis = function(a, b, c) {
        c = "undefined" == typeof c ? 0 : c;
        if (0 < c) {
            var d = "x" == a ? this._xaxes : this._yaxes;
            if ("undefined" == typeof d[c - 1]) {
                throw new Error("Missing " + a + " axis at index lower than " + c)
            }
        }
    };
    c.prototype._validateSeries = function(a) {
        if (this._series.length && this._series[0].getCount() != a.getCount()) {
            throw new Error("Series do not have an equal number of values.")
        } else if (this._labels.length && this._labels.length != a.getCount()) {
            throw new Error("Series must match label values.")
        }
    };
    return c
});
define("core/inplace_editable", ["jquery", "core/ajax", "core/templates", "core/notification", "core/str", "core/config", "core/url", "core/form-autocomplete", "core/pending"], function(a, b, c, d, e, f, g, h, i) {
    a("body").on("click keypress", "[data-inplaceeditable] [data-inplaceeditablelink]", function(j) {
        if ("keypress" === j.type && 13 !== j.keyCode) {
            return
        }
        var k = new i("autocomplete-start-editing");
        j.stopImmediatePropagation();
        j.preventDefault();
        var l = a(this),
            m = l.closest("[data-inplaceeditable]"),
            n = function(b) {
                b.addClass("updating");
                var c = b.find("img.spinner");
                if (c.length) {
                    c.show()
                } else {
                    c = a("<img/>").attr("src", g.imageUrl("i/loading_small")).addClass("spinner").addClass("smallicon");
                    b.append(c)
                }
            },
            o = function(a) {
                a.removeClass("updating");
                a.find("img.spinner").hide()
            },
            p = function(f, g) {
                var h = [f.attr("data-itemid"), f.attr("data-component"), f.attr("data-itemtype")].join("-"),
                    j = new i(h);
                n(f);
                b.call([{
                    methodname: "core_update_inplace_editable",
                    args: {
                        itemid: f.attr("data-itemid"),
                        component: f.attr("data-component"),
                        itemtype: f.attr("data-itemtype"),
                        value: g
                    }
                }])[0].then(function(b) {
                    return c.render("core/inplace_editable", b).then(function(d, e) {
                        var g = f.attr("data-value"),
                            h = a(d);
                        c.replaceNode(f, h, e);
                        h.find("[data-inplaceeditablelink]").focus();
                        h.trigger({
                            type: "updated",
                            ajaxreturn: b,
                            oldvalue: g
                        })
                    })
                }).then(function() {
                    return j.resolve()
                }).fail(function(b) {
                    var c = a.Event("updatefailed", {
                        exception: b,
                        newvalue: g
                    });
                    o(f);
                    M.util.js_complete(h);
                    f.trigger(c);
                    if (!c.isDefaultPrevented()) {
                        d.exception(b)
                    }
                })
            },
            q = function(a) {
                a.find("input").off();
                a.find("select").off();
                a.html(a.attr("data-oldcontent"));
                a.removeAttr("data-oldcontent");
                a.removeClass("inplaceeditingon");
                a.find("[data-inplaceeditablelink]").focus()
            },
            r = function(b, c) {
                var d = b,
                    e;
                for (e = 0; e < c; e++) {
                    d += Math.floor(10 * Math.random()) + ""
                }
                if (0 === a("#" + d).length) {
                    return d
                }
                return r(b, c)
            },
            s = function(b) {
                e.get_string("edittitleinstructions").done(function(c) {
                    var d = a("<span class=\"editinstructions\">" + c + "</span>").attr("id", r("id_editinstructions_", 20)),
                        e = a("<input type=\"text\"/>").attr("id", r("id_inplacevalue_", 20)).attr("value", b.attr("data-value")).attr("aria-describedby", d.attr("id")).addClass("ignoredirty").addClass("form-control"),
                        g = a("<label class=\"accesshide\">" + m.attr("data-editlabel") + "</label>").attr("for", e.attr("id"));
                    b.html("").append(d).append(g).append(e);
                    e.focus();
                    e.select();
                    e.on("keyup keypress focusout", function(a) {
                        if (f.behatsiterunning && "focusout" === a.type) {
                            return
                        }
                        if ("keypress" === a.type && 13 === a.keyCode) {
                            var c = e.val();
                            q(b);
                            p(b, c)
                        }
                        if ("keyup" === a.type && 27 === a.keyCode || "focusout" === a.type) {
                            q(b)
                        }
                    })
                })
            },
            t = function(a, b) {
                q(a);
                p(a, b)
            },
            u = function(b, c) {
                var d, e = a("<select></select>").attr("id", r("id_inplacevalue_", 20)).addClass("custom-select"),
                    g = a("<label class=\"accesshide\">" + m.attr("data-editlabel") + "</label>").attr("for", e.attr("id"));
                for (d in c) {
                    e.append(a("<option>").attr("value", c[d].key).html(c[d].value))
                }
                e.val(b.attr("data-value"));
                b.html("").append(g).append(e);
                e.focus();
                e.select();
                e.on("keyup change focusout", function(a) {
                    if (f.behatsiterunning && "focusout" === a.type) {
                        return
                    }
                    if ("change" === a.type) {
                        var c = e.val();
                        q(b);
                        p(b, c)
                    }
                    if ("keyup" === a.type && 27 === a.keyCode || "focusout" === a.type) {
                        q(b)
                    }
                })
            },
            v = function(b, f) {
                var g, j = a("<select></select>").attr("id", r("id_inplacevalue_", 20)).addClass("form-autocomplete-original-select").addClass("custom-select"),
                    k = a("<label class=\"accesshide\">" + m.attr("data-editlabel") + "</label>").attr("for", j.attr("id")),
                    l = f.options,
                    n = f.attributes,
                    o = a("<a href=\"#\"></a>"),
                    s = a("<a href=\"#\"></a>");
                for (g in l) {
                    j.append(a("<option>").attr("value", l[g].key).html(l[g].value))
                }
                if (n.multiple) {
                    j.attr("multiple", "true")
                }
                j.val(JSON.parse(b.attr("data-value")));
                e.get_string("savechanges", "core").then(function(a) {
                    return c.renderPix("e/save", "core", a)
                }).then(function(a) {
                    o.append(a)
                }).fail(d.exception);
                e.get_string("cancel", "core").then(function(a) {
                    return c.renderPix("e/cancel", "core", a)
                }).then(function(a) {
                    s.append(a)
                }).fail(d.exception);
                b.html("").append(k).append(j).append(o).append(s);
                j.focus();
                j.select();
                h.enhance(j, n.tags, n.ajax, n.placeholder, n.caseSensitive, n.showSuggestions, n.noSelectionString).then(function() {
                    b.find("[role=combobox]").focus()
                }).fail(d.exception);
                j.on("keyup", function(a) {
                    if ("keyup" === a.type && 27 === a.keyCode || "focusout" === a.type) {
                        q(b)
                    }
                });
                o.on("click", function(a) {
                    var c = JSON.stringify(j.val());
                    j.empty();
                    q(b);
                    p(b, c);
                    a.preventDefault()
                });
                s.on("click", function(a) {
                    j.empty();
                    q(b);
                    a.preventDefault()
                })
            };
        (function turnEditingOffEverywhere() {
            a("span.inplaceeditable.inplaceeditingon").each(function() {
                q(a(this))
            })
        })();
        (function turnEditingOn(b) {
            b.addClass("inplaceeditingon");
            b.attr("data-oldcontent", b.html());
            var c = b.attr("data-type"),
                d = b.attr("data-options");
            if ("toggle" === c) {
                t(b, d)
            } else if ("select" === c) {
                u(b, a.parseJSON(d))
            } else if ("autocomplete" === c) {
                v(b, a.parseJSON(d))
            } else {
                s(b)
            }
        })(m);
        k.resolve()
    });
    return {}
});
define("core/notification", ["core/yui", "jquery", "core/log", "core/pending"], function(a, b, c, d) {
    var e = {
        types: {
            success: "core/notification_success",
            info: "core/notification_info",
            warning: "core/notification_warning",
            error: "core/notification_error"
        },
        fieldName: "user-notifications",
        fetchNotifications: function fetchNotifications() {
            var a = new d("core/notification:fetchNotifications");
            require(["core/ajax"], function(b) {
                var c = b.call([{
                    methodname: "core_fetch_notifications",
                    args: {
                        contextid: e.contextid
                    }
                }]);
                c[0].then(e.addNotifications).always(a.resolve)
            })
        },
        addNotifications: function addNotifications(a) {
            var c = new d("core/notification:addNotifications");
            if (!a) {
                a = []
            }
            b.each(a, function(a, b) {
                e.renderNotification(b.template, b.variables)
            });
            c.resolve()
        },
        setupTargetRegion: function setupTargetRegion() {
            var a = b("#" + e.fieldName);
            if (a.length) {
                return !1
            }
            var c = b("<span>").attr("id", e.fieldName);
            a = b("#region-main");
            if (a.length) {
                return a.prepend(c)
            }
            a = b("[role=\"main\"]");
            if (a.length) {
                return a.prepend(c)
            }
            a = b("body");
            return a.prepend(c)
        },
        addNotification: function addNotification(a) {
            var c = new d("core/notification:addNotifications"),
                f = e.types.error;
            a = b.extend({
                closebutton: !0,
                announce: !0,
                type: "error"
            }, a);
            if (a.template) {
                f = a.template;
                delete a.template
            } else if (a.type) {
                if ("undefined" != typeof e.types[a.type]) {
                    f = e.types[a.type]
                }
                delete a.type
            }
            c.resolve();
            return e.renderNotification(f, a)
        },
        renderNotification: function renderNotification(a, f) {
            if ("undefined" == typeof f.message || !f.message) {
                c.debug("Notification received without content. Skipping.");
                return
            }
            var g = new d("core/notification:renderNotification");
            require(["core/templates"], function(c) {
                c.render(a, f).then(function(a, d) {
                    b("#" + e.fieldName).prepend(a);
                    c.runTemplateJS(d)
                }).then(g.resolve).catch(e.exception)
            })
        },
        alert: function alert(b, c, e) {
            var f = new d("core/notification:alert");
            a.use("moodle-core-notification-alert", function() {
                var a = new M.core.alert({
                    title: b,
                    message: c,
                    yesLabel: e
                });
                a.show();
                f.resolve()
            })
        },
        confirm: function confirm(b, c, e, f, g, h) {
            var i = new d("core/notification:confirm");
            a.use("moodle-core-notification-confirm", function() {
                var a = new M.core.confirm({
                    title: b,
                    question: c,
                    yesLabel: e,
                    noLabel: f
                });
                a.on("complete-yes", function() {
                    g()
                });
                if (h) {
                    a.on("complete-no", function() {
                        h()
                    })
                }
                a.show();
                i.resolve()
            })
        },
        exception: function exception(b) {
            var c = new d("core/notification:addNotifications");
            if ("undefined" == typeof b.stack) {
                b.stack = ""
            }
            if (b.debuginfo) {
                b.stack += b.debuginfo + "\n"
            }
            if (!b.backtrace && b.stacktrace) {
                b.backtrace = b.stacktrace
            }
            if (b.backtrace) {
                b.stack += b.backtrace;
                var e = b.backtrace.match(/line ([^ ]*) of/),
                    f = b.backtrace.match(/ of ([^:]*): /);
                if (e && e[1]) {
                    b.lineNumber = e[1]
                }
                if (f && f[1]) {
                    b.fileName = f[1];
                    if (30 < b.fileName.length) {
                        b.fileName = "..." + b.fileName.substr(b.fileName.length - 27)
                    }
                }
            }
            if ("undefined" == typeof b.name && b.errorcode) {
                b.name = b.errorcode
            }
            a.use("moodle-core-notification-exception", function() {
                var a = new M.core.exception(b);
                a.show();
                c.resolve()
            })
        }
    };
    return {
        init: function init(a, b) {
            e.contextid = a;
            e.setupTargetRegion();
            e.addNotifications(b);
            e.fetchNotifications()
        },
        fetchNotifications: e.fetchNotifications,
        addNotification: e.addNotification,
        alert: e.alert,
        confirm: e.confirm,
        exception: e.exception
    }
});
define("core/autoscroll", ["jquery"], function(a) {
    var b = {
        SCROLL_THRESHOLD: 30,
        SCROLL_FREQUENCY: 1e3 / 60,
        SCROLL_SPEED: .5,
        scrollingId: null,
        scrollAmount: 0,
        callback: null,
        start: function start(c) {
            a(window).on("mousemove", b.mouseMove);
            a(window).on("touchmove", b.touchMove);
            b.callback = c
        },
        stop: function stop() {
            a(window).off("mousemove", b.mouseMove);
            a(window).off("touchmove", b.touchMove);
            if (null !== b.scrollingId) {
                b.stopScrolling()
            }
        },
        touchMove: function touchMove(a) {
            for (var c = 0; c < a.changedTouches.length; c++) {
                b.handleMove(a.changedTouches[c].clientX, a.changedTouches[c].clientY)
            }
        },
        mouseMove: function mouseMove(a) {
            b.handleMove(a.clientX, a.clientY)
        },
        handleMove: function handleMove(c, d) {
            if (d < b.SCROLL_THRESHOLD) {
                b.scrollAmount = -Math.min(b.SCROLL_THRESHOLD - d, b.SCROLL_THRESHOLD)
            } else if (d > a(window).height() - b.SCROLL_THRESHOLD) {
                b.scrollAmount = Math.min(d - (a(window).height() - b.SCROLL_THRESHOLD), b.SCROLL_THRESHOLD)
            } else {
                b.scrollAmount = 0
            }
            if (b.scrollAmount && null === b.scrollingId) {
                b.startScrolling()
            } else if (!b.scrollAmount && null !== b.scrollingId) {
                b.stopScrolling()
            }
        },
        startScrolling: function startScrolling() {
            var c = a(document).height() - a(window).height();
            b.scrollingId = window.setInterval(function() {
                var d = a(window).scrollTop(),
                    e = Math.round(b.scrollAmount * b.SCROLL_SPEED);
                if (0 > d + e) {
                    e = -d
                }
                if (d + e > c) {
                    e = c - d
                }
                if (0 === e) {
                    return
                }
                a(window).scrollTop(d + e);
                var f = a(window).scrollTop() - d;
                if (0 == f) {
                    return
                }
                if (b.callback) {
                    b.callback(f)
                }
            }, b.SCROLL_FREQUENCY)
        },
        stopScrolling: function stopScrolling() {
            window.clearInterval(b.scrollingId);
            b.scrollingId = null
        }
    };
    return {
        start: b.start,
        stop: b.stop
    }
});
define("core/drawer", ["exports", "jquery", "core/pubsub", "core/drawer_events"], function(a, b, c, d) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    a.default = void 0;
    b = e(b);
    c = function(a) {
        if (a && a.__esModule) {
            return a
        } else {
            var b = {};
            if (null != a) {
                for (var c in a) {
                    if (Object.prototype.hasOwnProperty.call(a, c)) {
                        var d = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(a, c) : {};
                        if (d.get || d.set) {
                            Object.defineProperty(b, c, d)
                        } else {
                            b[c] = a[c]
                        }
                    }
                }
            }
            b.default = a;
            return b
        }
    }(c);
    d = e(d);

    function e(a) {
        return a && a.__esModule ? a : {
            default: a
        }
    }
    var f = function(a) {
            a.removeClass("hidden");
            a.attr("aria-expanded", !0);
            a.removeAttr("aria-hidden");
            a.focus();
            c.publish(d.default.DRAWER_SHOWN, a)
        },
        g = function(a) {
            a.addClass("hidden");
            a.attr("aria-expanded", !1);
            a.attr("aria-hidden", !0);
            c.publish(d.default.DRAWER_HIDDEN, a)
        },
        h = function(a) {
            var b = a.hasClass("hidden");
            return !b
        },
        i = function(a) {
            if (h(a)) {
                g(a)
            } else {
                f(a)
            }
        },
        j = function(a) {
            a = (0, b.default)(a);
            return a.closest("[data-region=\"right-hand-drawer\"]")
        };
    a.default = {
        hide: g,
        show: f,
        isVisible: h,
        toggle: i,
        registerToggles: function registerToggles(a, b) {
            var c = null;
            b.attr("aria-expanded", h(a));
            b.on("click", function(d) {
                d.preventDefault();
                var e = h(a);
                i(a);
                b.attr("aria-expanded", !e);
                if (!e) {
                    c = b.filter(function(a, b) {
                        return b == d.target || b.contains(d.target)
                    })
                } else if (c) {
                    c.focus();
                    c = null
                }
            })
        },
        getDrawerRoot: j
    };
    return a.default
});
define("core/showhidesettings", ["jquery"], function(a) {
    var o;

    function b(a) {
        return a.is("input[type=hidden]") && a.siblings("input[type=checkbox][name=\"" + a.attr("name") + "\"]").length
    }

    function c(a, b) {
        return a.is("input[type=radio]") && a.attr("value") !== b
    }

    function d(a, d) {
        return !b(a) && !c(a, d)
    }

    function e(a) {
        return a.is("input[type=radio]") && !a.prop("checked")
    }

    function f(a) {
        return a.is("input[type=checkbox]") && !a.prop("checked")
    }

    function g(a) {
        return a.is("select") && a.prop("multiple")
    }

    function h(a, b) {
        var c = a.val() || [];
        if (!b.length) {
            return !1
        }
        if (c.length !== b.length) {
            return !1
        }
        for (var d in c) {
            if (c.hasOwnProperty(d)) {
                if (-1 === b.indexOf(c[d])) {
                    return !1
                }
            }
        }
        return !0
    }
    var p = {
        notchecked: function notchecked(b, c) {
            var e = !1;
            c = c + "";
            b.each(function(b, f) {
                var g = a(f);
                if (d(g, c)) {
                    e = e || !g.prop("checked")
                }
            });
            return e
        },
        checked: function checked(b, c) {
            var e = !1;
            c = c + "";
            b.each(function(b, f) {
                var g = a(f);
                if (d(g, c)) {
                    e = e || g.prop("checked")
                }
            });
            return e
        },
        noitemselected: function noitemselected(b) {
            var c = !1;
            b.each(function(b, d) {
                var e = a(d);
                c = c || -1 === e.prop("selectedIndex")
            });
            return c
        },
        eq: function eq(c, d) {
            var i = !1,
                j = !1;
            d = d + "";
            c.each(function(c, k) {
                var l = a(k);
                if (e(l)) {
                    return
                }
                if (b(l)) {
                    j = l.val() === d;
                    return
                }
                if (f(l)) {
                    i = i || j;
                    return
                }
                if (g(l)) {
                    var m = d.split("|");
                    i = h(l, m);
                    return
                }
                i = i || l.val() === d
            });
            return i
        },
        in: function _in(c, d) {
            var i = !1,
                j = !1,
                k = d.split("|");
            c.each(function(c, d) {
                var l = a(d);
                if (e(l)) {
                    return
                }
                if (b(l)) {
                    j = -1 < k.indexOf(l.val());
                    return
                }
                if (f(l)) {
                    i = i || j;
                    return
                }
                if (g(l)) {
                    i = h(l, k);
                    return
                }
                i = i || -1 < k.indexOf(l.val())
            });
            return i
        },
        defaultCondition: function defaultCondition(c, d) {
            var i = !1,
                j = !1;
            d = d + "";
            c.each(function(c, k) {
                var l = a(k);
                if (e(l)) {
                    return
                }
                if (b(l)) {
                    j = l.val() !== d;
                    return
                }
                if (f(l)) {
                    i = i || j;
                    return
                }
                if (g(l)) {
                    var m = d.split("|");
                    i = !h(l, m);
                    return
                }
                i = i || l.val() !== d
            });
            return i
        }
    };

    function i(b) {
        return a("[name=\"" + b + "\"],[name=\"" + b + "[]\"]")
    }

    function j(b) {
        return a(b).attr("name").replace(/\[]/, "")
    }

    function k(a, b, c) {
        if ("function" == typeof p[b]) {
            return p[b](a, c)
        }
        return p.defaultCondition(a, c)
    }

    function l(b, c) {
        c = c || j(b.currentTarget);
        var d = i(c);
        if (!o.hasOwnProperty(c)) {
            return
        }
        var e = {};
        a.each(o[c], function(b, c) {
            a.each(c, function(c, f) {
                var g = k(d, b, c);
                a.each(f, function(a, b) {
                    if (e.hasOwnProperty(b)) {
                        e[b] = e[b] || g
                    } else {
                        e[b] = g
                    }
                })
            })
        });
        a.each(e, function(b, c) {
            i(b).each(function(b, d) {
                var e = a(d).closest(".form-item");
                if (e.length) {
                    if (c) {
                        e.hide()
                    } else {
                        e.show()
                    }
                }
            })
        })
    }

    function m() {
        a.each(o, function(a) {
            var b = i(a);
            if (b.length) {
                b.on("change", l);
                l(null, a)
            }
        })
    }

    function n() {
        a(".form-dependenton").hide()
    }
    return {
        init: function init(a) {
            o = a.dependencies;
            m();
            n()
        }
    }
});

function _typeof(e) {
    if ("function" == typeof Symbol && "symbol" == typeof Symbol.iterator) {
        _typeof = function(e) {
            return typeof e
        }
    } else {
        _typeof = function(e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        }
    }
    return _typeof(e)
}(function(e, t) {
    "object" === ("undefined" == typeof exports ? "undefined" : _typeof(exports)) && "undefined" != typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define("core/popper", t) : e.Popper = t()
})(this, function() {
    'use strict';
    for (var _ = "undefined" != typeof window && "undefined" != typeof window.document, X = ["Edge", "Trident", "Firefox"], J = 0, Q = 0; Q < X.length; Q += 1) {
        if (_ && 0 <= navigator.userAgent.indexOf(X[Q])) {
            J = 1;
            break
        }
    }
    var Z = _ && window.Promise,
        $ = Z ? function(e) {
            var t = !1;
            return function() {
                if (t) {
                    return
                }
                t = !0;
                Promise.resolve().then(function() {
                    t = !1;
                    e()
                })
            }
        } : function(e) {
            var t = !1;
            return function() {
                if (!t) {
                    t = !0;
                    setTimeout(function() {
                        t = !1;
                        e()
                    }, J)
                }
            }
        };

    function e(e) {
        return e && "[object Function]" === {}.toString.call(e)
    }

    function t(e, t) {
        if (1 !== e.nodeType) {
            return []
        }
        var o = window.getComputedStyle(e, null);
        return t ? o[t] : o
    }

    function o(e) {
        if ("HTML" === e.nodeName) {
            return e
        }
        return e.parentNode || e.host
    }

    function n(e) {
        if (!e) {
            return window.document.body
        }
        switch (e.nodeName) {
            case "HTML":
            case "BODY":
                return e.ownerDocument.body;
            case "#document":
                return e.body;
        }
        var i = t(e),
            r = i.overflow,
            p = i.overflowX,
            s = i.overflowY;
        if (/(auto|scroll)/.test(r + s + p)) {
            return e
        }
        return n(o(e))
    }

    function r(e) {
        var o = e && e.offsetParent,
            i = o && o.nodeName;
        if (!i || "BODY" === i || "HTML" === i) {
            if (e) {
                return e.ownerDocument.documentElement
            }
            return window.document.documentElement
        }
        if (-1 !== ["TD", "TABLE"].indexOf(o.nodeName) && "static" === t(o, "position")) {
            return r(o)
        }
        return o
    }

    function p(e) {
        var t = e.nodeName;
        if ("BODY" === t) {
            return !1
        }
        return "HTML" === t || r(e.firstElementChild) === e
    }

    function s(e) {
        if (null !== e.parentNode) {
            return s(e.parentNode)
        }
        return e
    }

    function d(e, t) {
        if (!e || !e.nodeType || !t || !t.nodeType) {
            return window.document.documentElement
        }
        var o = e.compareDocumentPosition(t) & Node.DOCUMENT_POSITION_FOLLOWING,
            i = o ? e : t,
            n = o ? t : e,
            a = document.createRange();
        a.setStart(i, 0);
        a.setEnd(n, 0);
        var l = a.commonAncestorContainer;
        if (e !== l && t !== l || i.contains(n)) {
            if (p(l)) {
                return l
            }
            return r(l)
        }
        var f = s(e);
        if (f.host) {
            return d(f.host, t)
        } else {
            return d(e, s(t).host)
        }
    }

    function a(e) {
        var t = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : "top",
            o = "top" === t ? "scrollTop" : "scrollLeft",
            i = e.nodeName;
        if ("BODY" === i || "HTML" === i) {
            var n = e.ownerDocument.documentElement,
                r = e.ownerDocument.scrollingElement || n;
            return r[o]
        }
        return e[o]
    }

    function l(e, t) {
        var o = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : !1,
            i = a(t, "top"),
            n = a(t, "left"),
            r = o ? -1 : 1;
        e.top += i * r;
        e.bottom += i * r;
        e.left += n * r;
        e.right += n * r;
        return e
    }

    function f(e, t) {
        var o = "x" === t ? "Left" : "Top",
            i = "Left" === o ? "Right" : "Bottom";
        return +e["border" + o + "Width"].split("px")[0] + +e["border" + i + "Width"].split("px")[0]
    }
    var ee = void 0,
        te = function() {
            if (ee === void 0) {
                ee = -1 !== navigator.appVersion.indexOf("MSIE 10")
            }
            return ee
        };

    function m(e, t, o, i) {
        return Math.max(t["offset" + e], t["scroll" + e], o["client" + e], o["offset" + e], o["scroll" + e], te() ? o["offset" + e] + i["margin" + ("Height" === e ? "Top" : "Left")] + i["margin" + ("Height" === e ? "Bottom" : "Right")] : 0)
    }

    function c() {
        var e = window.document.body,
            t = window.document.documentElement,
            o = te() && window.getComputedStyle(t);
        return {
            height: m("Height", e, t, o),
            width: m("Width", e, t, o)
        }
    }
    var oe = function(e, t) {
            if (!(e instanceof t)) {
                throw new TypeError("Cannot call a class as a function")
            }
        },
        ie = function() {
            function e(e, t) {
                for (var o = 0, n; o < t.length; o++) {
                    n = t[o];
                    n.enumerable = n.enumerable || !1;
                    n.configurable = !0;
                    if ("value" in n) n.writable = !0;
                    Object.defineProperty(e, n.key, n)
                }
            }
            return function(t, o, i) {
                if (o) e(t.prototype, o);
                if (i) e(t, i);
                return t
            }
        }(),
        ne = function(e, t, o) {
            if (t in e) {
                Object.defineProperty(e, t, {
                    value: o,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                })
            } else {
                e[t] = o
            }
            return e
        },
        re = Object.assign || function(e) {
            for (var t = 1, o; t < arguments.length; t++) {
                o = arguments[t];
                for (var n in o) {
                    if (Object.prototype.hasOwnProperty.call(o, n)) {
                        e[n] = o[n]
                    }
                }
            }
            return e
        };

    function h(e) {
        return re({}, e, {
            right: e.left + e.width,
            bottom: e.top + e.height
        })
    }

    function u(e) {
        var o = {};
        if (te()) {
            try {
                o = e.getBoundingClientRect();
                var i = a(e, "top"),
                    n = a(e, "left");
                o.top += i;
                o.left += n;
                o.bottom += i;
                o.right += n
            } catch (e) {}
        } else {
            o = e.getBoundingClientRect()
        }
        var r = {
                left: o.left,
                top: o.top,
                width: o.right - o.left,
                height: o.bottom - o.top
            },
            p = "HTML" === e.nodeName ? c() : {},
            s = p.width || e.clientWidth || r.right - r.left,
            d = p.height || e.clientHeight || r.bottom - r.top,
            l = e.offsetWidth - s,
            m = e.offsetHeight - d;
        if (l || m) {
            var u = t(e);
            l -= f(u, "x");
            m -= f(u, "y");
            r.width -= l;
            r.height -= m
        }
        return h(r)
    }

    function g(e, o) {
        var i = te(),
            r = "HTML" === o.nodeName,
            p = u(e),
            s = u(o),
            d = n(e),
            a = t(o),
            f = +a.borderTopWidth.split("px")[0],
            m = +a.borderLeftWidth.split("px")[0],
            c = h({
                top: p.top - s.top - f,
                left: p.left - s.left - m,
                width: p.width,
                height: p.height
            });
        c.marginTop = 0;
        c.marginLeft = 0;
        if (!i && r) {
            var g = +a.marginTop.split("px")[0],
                b = +a.marginLeft.split("px")[0];
            c.top -= f - g;
            c.bottom -= f - g;
            c.left -= m - b;
            c.right -= m - b;
            c.marginTop = g;
            c.marginLeft = b
        }
        if (i ? o.contains(d) : o === d && "BODY" !== d.nodeName) {
            c = l(c, o)
        }
        return c
    }

    function b(e) {
        var t = e.ownerDocument.documentElement,
            o = g(e, t),
            i = Math.max(t.clientWidth, window.innerWidth || 0),
            n = Math.max(t.clientHeight, window.innerHeight || 0),
            r = a(t),
            p = a(t, "left"),
            s = {
                top: r - o.top + o.marginTop,
                left: p - o.left + o.marginLeft,
                width: i,
                height: n
            };
        return h(s)
    }

    function y(e) {
        var i = e.nodeName;
        if ("BODY" === i || "HTML" === i) {
            return !1
        }
        if ("fixed" === t(e, "position")) {
            return !0
        }
        return y(o(e))
    }

    function w(e, t, i, r) {
        var p = {
                top: 0,
                left: 0
            },
            s = d(e, t);
        if ("viewport" === r) {
            p = b(s)
        } else {
            var a;
            if ("scrollParent" === r) {
                a = n(o(e));
                if ("BODY" === a.nodeName) {
                    a = e.ownerDocument.documentElement
                }
            } else if ("window" === r) {
                a = e.ownerDocument.documentElement
            } else {
                a = r
            }
            var l = g(a, s);
            if ("HTML" === a.nodeName && !y(s)) {
                var f = c(),
                    m = f.height,
                    h = f.width;
                p.top += l.top - l.marginTop;
                p.bottom = m + l.top;
                p.left += l.left - l.marginLeft;
                p.right = h + l.left
            } else {
                p = l
            }
        }
        p.left += i;
        p.top += i;
        p.right -= i;
        p.bottom -= i;
        return p
    }

    function E(e) {
        var t = e.width,
            o = e.height;
        return t * o
    }

    function v(e, t, o, i, n) {
        var r = 5 < arguments.length && arguments[5] !== void 0 ? arguments[5] : 0;
        if (-1 === e.indexOf("auto")) {
            return e
        }
        var p = w(o, i, r, n),
            s = {
                top: {
                    width: p.width,
                    height: t.top - p.top
                },
                right: {
                    width: p.right - t.right,
                    height: p.height
                },
                bottom: {
                    width: p.width,
                    height: p.bottom - t.bottom
                },
                left: {
                    width: t.left - p.left,
                    height: p.height
                }
            },
            d = Object.keys(s).map(function(e) {
                return re({
                    key: e
                }, s[e], {
                    area: E(s[e])
                })
            }).sort(function(e, t) {
                return t.area - e.area
            }),
            a = d.filter(function(e) {
                var t = e.width,
                    i = e.height;
                return t >= o.clientWidth && i >= o.clientHeight
            }),
            l = 0 < a.length ? a[0].key : d[0].key,
            f = e.split("-")[1];
        return l + (f ? "-" + f : "")
    }

    function x(e, t, o) {
        var i = d(t, o);
        return g(o, i)
    }

    function O(e) {
        var t = window.getComputedStyle(e),
            o = parseFloat(t.marginTop) + parseFloat(t.marginBottom),
            i = parseFloat(t.marginLeft) + parseFloat(t.marginRight),
            n = {
                width: e.offsetWidth + i,
                height: e.offsetHeight + o
            };
        return n
    }

    function L(e) {
        var t = {
            left: "right",
            right: "left",
            bottom: "top",
            top: "bottom"
        };
        return e.replace(/left|right|bottom|top/g, function(e) {
            return t[e]
        })
    }

    function S(e, t, o) {
        o = o.split("-")[0];
        var i = O(e),
            n = {
                width: i.width,
                height: i.height
            },
            r = -1 !== ["right", "left"].indexOf(o),
            p = r ? "top" : "left",
            s = r ? "left" : "top",
            d = r ? "height" : "width",
            a = !r ? "height" : "width";
        n[p] = t[p] + t[d] / 2 - i[d] / 2;
        if (o === s) {
            n[s] = t[s] - i[a]
        } else {
            n[s] = t[L(s)]
        }
        return n
    }

    function T(e, t) {
        if (Array.prototype.find) {
            return e.find(t)
        }
        return e.filter(t)[0]
    }

    function C(e, t, o) {
        if (Array.prototype.findIndex) {
            return e.findIndex(function(e) {
                return e[t] === o
            })
        }
        var i = T(e, function(e) {
            return e[t] === o
        });
        return e.indexOf(i)
    }

    function D(t, o, i) {
        var n = i === void 0 ? t : t.slice(0, C(t, "name", i));
        n.forEach(function(t) {
            if (t["function"]) {
                console.warn("`modifier.function` is deprecated, use `modifier.fn`!")
            }
            var i = t["function"] || t.fn;
            if (t.enabled && e(i)) {
                o.offsets.popper = h(o.offsets.popper);
                o.offsets.reference = h(o.offsets.reference);
                o = i(o, t)
            }
        });
        return o
    }

    function N() {
        if (this.state.isDestroyed) {
            return
        }
        var e = {
            instance: this,
            styles: {},
            arrowStyles: {},
            attributes: {},
            flipped: !1,
            offsets: {}
        };
        e.offsets.reference = x(this.state, this.popper, this.reference);
        e.placement = v(this.options.placement, e.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);
        e.originalPlacement = e.placement;
        e.offsets.popper = S(this.popper, e.offsets.reference, e.placement);
        e.offsets.popper.position = "absolute";
        e = D(this.modifiers, e);
        if (!this.state.isCreated) {
            this.state.isCreated = !0;
            this.options.onCreate(e)
        } else {
            this.options.onUpdate(e)
        }
    }

    function k(e, t) {
        return e.some(function(e) {
            var o = e.name,
                i = e.enabled;
            return i && o === t
        })
    }

    function W(e) {
        for (var t = [!1, "ms", "Webkit", "Moz", "O"], o = e.charAt(0).toUpperCase() + e.slice(1), n = 0; n < t.length - 1; n++) {
            var r = t[n],
                p = r ? "" + r + o : e;
            if ("undefined" != typeof window.document.body.style[p]) {
                return p
            }
        }
        return null
    }

    function P() {
        this.state.isDestroyed = !0;
        if (k(this.modifiers, "applyStyle")) {
            this.popper.removeAttribute("x-placement");
            this.popper.style.left = "";
            this.popper.style.position = "";
            this.popper.style.top = "";
            this.popper.style[W("transform")] = ""
        }
        this.disableEventListeners();
        if (this.options.removeOnDestroy) {
            this.popper.parentNode.removeChild(this.popper)
        }
        return this
    }

    function B(e) {
        var t = e.ownerDocument;
        return t ? t.defaultView : window
    }

    function H(e, t, o, i) {
        var r = "BODY" === e.nodeName,
            p = r ? e.ownerDocument.defaultView : e;
        p.addEventListener(t, o, {
            passive: !0
        });
        if (!r) {
            H(n(p.parentNode), t, o, i)
        }
        i.push(p)
    }

    function A(e, t, o, i) {
        o.updateBound = i;
        B(e).addEventListener("resize", o.updateBound, {
            passive: !0
        });
        var r = n(e);
        H(r, "scroll", o.updateBound, o.scrollParents);
        o.scrollElement = r;
        o.eventsEnabled = !0;
        return o
    }

    function I() {
        if (!this.state.eventsEnabled) {
            this.state = A(this.reference, this.options, this.state, this.scheduleUpdate)
        }
    }

    function M(e, t) {
        B(e).removeEventListener("resize", t.updateBound);
        t.scrollParents.forEach(function(e) {
            e.removeEventListener("scroll", t.updateBound)
        });
        t.updateBound = null;
        t.scrollParents = [];
        t.scrollElement = null;
        t.eventsEnabled = !1;
        return t
    }

    function R() {
        if (this.state.eventsEnabled) {
            window.cancelAnimationFrame(this.scheduleUpdate);
            this.state = M(this.reference, this.state)
        }
    }

    function U(e) {
        return "" !== e && !isNaN(parseFloat(e)) && isFinite(e)
    }

    function Y(e, t) {
        Object.keys(t).forEach(function(o) {
            var i = "";
            if (-1 !== ["width", "height", "top", "right", "bottom", "left"].indexOf(o) && U(t[o])) {
                i = "px"
            }
            e.style[o] = t[o] + i
        })
    }

    function F(e, t) {
        Object.keys(t).forEach(function(o) {
            var i = t[o];
            if (!1 !== i) {
                e.setAttribute(o, t[o])
            } else {
                e.removeAttribute(o)
            }
        })
    }

    function j(e, t, o) {
        var i = T(e, function(e) {
                var o = e.name;
                return o === t
            }),
            n = !!i && e.some(function(e) {
                return e.name === o && e.enabled && e.order < i.order
            });
        if (!n) {
            var r = "`" + t + "`";
            console.warn("`" + o + "`" + " modifier is required by " + r + " modifier in order to work, be sure to include it before " + r + "!")
        }
        return n
    }

    function K(e) {
        if ("end" === e) {
            return "start"
        } else if ("start" === e) {
            return "end"
        }
        return e
    }
    var pe = ["auto-start", "auto", "auto-end", "top-start", "top", "top-end", "right-start", "right", "right-end", "bottom-end", "bottom", "bottom-start", "left-end", "left", "left-start"],
        se = pe.slice(3);

    function q(e) {
        var t = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : !1,
            o = se.indexOf(e),
            i = se.slice(o + 1).concat(se.slice(0, o));
        return t ? i.reverse() : i
    }
    var de = {
        FLIP: "flip",
        CLOCKWISE: "clockwise",
        COUNTERCLOCKWISE: "counterclockwise"
    };

    function V(e, t, o, i) {
        var n = e.match(/((?:\-|\+)?\d*\.?\d*)(.*)/),
            r = +n[1],
            p = n[2];
        if (!r) {
            return e
        }
        if (0 === p.indexOf("%")) {
            var s;
            switch (p) {
                case "%p":
                    s = o;
                    break;
                case "%":
                case "%r":
                default:
                    s = i;
            }
            var d = h(s);
            return d[t] / 100 * r
        } else if ("vh" === p || "vw" === p) {
            var a;
            if ("vh" === p) {
                a = Math.max(document.documentElement.clientHeight, window.innerHeight || 0)
            } else {
                a = Math.max(document.documentElement.clientWidth, window.innerWidth || 0)
            }
            return a / 100 * r
        } else {
            return r
        }
    }

    function z(e, t, o, i) {
        var n = [0, 0],
            r = -1 !== ["right", "left"].indexOf(i),
            p = e.split(/(\+|\-)/).map(function(e) {
                return e.trim()
            }),
            s = p.indexOf(T(p, function(e) {
                return -1 !== e.search(/,|\s/)
            }));
        if (p[s] && -1 === p[s].indexOf(",")) {
            console.warn("Offsets separated by white space(s) are deprecated, use a comma (,) instead.")
        }
        var d = /\s*,\s*|\s+/,
            a = -1 !== s ? [p.slice(0, s).concat([p[s].split(d)[0]]), [p[s].split(d)[1]].concat(p.slice(s + 1))] : [p];
        a = a.map(function(e, i) {
            var n = (1 === i ? !r : r) ? "height" : "width",
                p = !1;
            return e.reduce(function(e, t) {
                if ("" === e[e.length - 1] && -1 !== ["+", "-"].indexOf(t)) {
                    e[e.length - 1] = t;
                    p = !0;
                    return e
                } else if (p) {
                    e[e.length - 1] += t;
                    p = !1;
                    return e
                } else {
                    return e.concat(t)
                }
            }, []).map(function(e) {
                return V(e, n, t, o)
            })
        });
        a.forEach(function(e, t) {
            e.forEach(function(o, i) {
                if (U(o)) {
                    n[t] += o * ("-" === e[i - 1] ? -1 : 1)
                }
            })
        });
        return n
    }

    function G(e, t) {
        var o = t.offset,
            i = e.placement,
            n = e.offsets,
            r = n.popper,
            p = n.reference,
            s = i.split("-")[0],
            d = void 0;
        if (U(+o)) {
            d = [+o, 0]
        } else {
            d = z(o, r, p, s)
        }
        if ("left" === s) {
            r.top += d[0];
            r.left -= d[1]
        } else if ("right" === s) {
            r.top += d[0];
            r.left += d[1]
        } else if ("top" === s) {
            r.left += d[0];
            r.top -= d[1]
        } else if ("bottom" === s) {
            r.left += d[0];
            r.top += d[1]
        }
        e.popper = r;
        return e
    }
    var ae = function() {
        function t(o, i) {
            var n = this,
                r = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : {};
            oe(this, t);
            this.scheduleUpdate = function() {
                return requestAnimationFrame(n.update)
            };
            this.update = $(this.update.bind(this));
            this.options = re({}, t.Defaults, r);
            this.state = {
                isDestroyed: !1,
                isCreated: !1,
                scrollParents: []
            };
            this.reference = o && o.jquery ? o[0] : o;
            this.popper = i && i.jquery ? i[0] : i;
            this.options.modifiers = {};
            Object.keys(re({}, t.Defaults.modifiers, r.modifiers)).forEach(function(e) {
                n.options.modifiers[e] = re({}, t.Defaults.modifiers[e] || {}, r.modifiers ? r.modifiers[e] : {})
            });
            this.modifiers = Object.keys(this.options.modifiers).map(function(e) {
                return re({
                    name: e
                }, n.options.modifiers[e])
            }).sort(function(e, t) {
                return e.order - t.order
            });
            this.modifiers.forEach(function(t) {
                if (t.enabled && e(t.onLoad)) {
                    t.onLoad(n.reference, n.popper, n.options, t, n.state)
                }
            });
            this.update();
            var p = this.options.eventsEnabled;
            if (p) {
                this.enableEventListeners()
            }
            this.state.eventsEnabled = p
        }
        ie(t, [{
            key: "update",
            value: function() {
                return N.call(this)
            }
        }, {
            key: "destroy",
            value: function() {
                return P.call(this)
            }
        }, {
            key: "enableEventListeners",
            value: function() {
                return I.call(this)
            }
        }, {
            key: "disableEventListeners",
            value: function() {
                return R.call(this)
            }
        }]);
        return t
    }();
    ae.Utils = ("undefined" != typeof window ? window : global).PopperUtils;
    ae.placements = pe;
    ae.Defaults = {
        placement: "bottom",
        eventsEnabled: !0,
        removeOnDestroy: !1,
        onCreate: function() {},
        onUpdate: function() {},
        modifiers: {
            shift: {
                order: 100,
                enabled: !0,
                fn: function(e) {
                    var t = e.placement,
                        o = t.split("-")[0],
                        i = t.split("-")[1];
                    if (i) {
                        var n = e.offsets,
                            r = n.reference,
                            p = n.popper,
                            s = -1 !== ["bottom", "top"].indexOf(o),
                            d = s ? "left" : "top",
                            a = s ? "width" : "height",
                            l = {
                                start: ne({}, d, r[d]),
                                end: ne({}, d, r[d] + r[a] - p[a])
                            };
                        e.offsets.popper = re({}, p, l[i])
                    }
                    return e
                }
            },
            offset: {
                order: 200,
                enabled: !0,
                fn: G,
                offset: 0
            },
            preventOverflow: {
                order: 300,
                enabled: !0,
                fn: function(e, t) {
                    var o = t.boundariesElement || r(e.instance.popper);
                    if (e.instance.reference === o) {
                        o = r(o)
                    }
                    var i = w(e.instance.popper, e.instance.reference, t.padding, o);
                    t.boundaries = i;
                    var n = t.priority,
                        p = e.offsets.popper,
                        s = {
                            primary: function(e) {
                                var o = p[e];
                                if (p[e] < i[e] && !t.escapeWithReference) {
                                    o = Math.max(p[e], i[e])
                                }
                                return ne({}, e, o)
                            },
                            secondary: function(e) {
                                var o = "right" === e ? "left" : "top",
                                    n = p[o];
                                if (p[e] > i[e] && !t.escapeWithReference) {
                                    n = Math.min(p[o], i[e] - ("right" === e ? p.width : p.height))
                                }
                                return ne({}, o, n)
                            }
                        };
                    n.forEach(function(e) {
                        var t = -1 !== ["left", "top"].indexOf(e) ? "primary" : "secondary";
                        p = re({}, p, s[t](e))
                    });
                    e.offsets.popper = p;
                    return e
                },
                priority: ["left", "right", "top", "bottom"],
                padding: 5,
                boundariesElement: "scrollParent"
            },
            keepTogether: {
                order: 400,
                enabled: !0,
                fn: function(e) {
                    var t = e.offsets,
                        o = t.popper,
                        i = t.reference,
                        n = e.placement.split("-")[0],
                        r = Math.floor,
                        p = -1 !== ["top", "bottom"].indexOf(n),
                        s = p ? "right" : "bottom",
                        d = p ? "left" : "top",
                        a = p ? "width" : "height";
                    if (o[s] < r(i[d])) {
                        e.offsets.popper[d] = r(i[d]) - o[a]
                    }
                    if (o[d] > r(i[s])) {
                        e.offsets.popper[d] = r(i[s])
                    }
                    return e
                }
            },
            arrow: {
                order: 500,
                enabled: !0,
                fn: function(e, o) {
                    if (!j(e.instance.modifiers, "arrow", "keepTogether")) {
                        return e
                    }
                    var i = o.element;
                    if ("string" == typeof i) {
                        i = e.instance.popper.querySelector(i);
                        if (!i) {
                            return e
                        }
                    } else {
                        if (!e.instance.popper.contains(i)) {
                            console.warn("WARNING: `arrow.element` must be child of its popper element!");
                            return e
                        }
                    }
                    var n = e.placement.split("-")[0],
                        r = e.offsets,
                        p = r.popper,
                        s = r.reference,
                        d = -1 !== ["left", "right"].indexOf(n),
                        a = d ? "height" : "width",
                        l = d ? "Top" : "Left",
                        f = l.toLowerCase(),
                        m = d ? "left" : "top",
                        c = d ? "bottom" : "right",
                        u = O(i)[a];
                    if (s[c] - u < p[f]) {
                        e.offsets.popper[f] -= p[f] - (s[c] - u)
                    }
                    if (s[f] + u > p[c]) {
                        e.offsets.popper[f] += s[f] + u - p[c]
                    }
                    var g = s[f] + s[a] / 2 - u / 2,
                        b = t(e.instance.popper, "margin" + l).replace("px", ""),
                        y = g - h(e.offsets.popper)[f] - b;
                    y = Math.max(Math.min(p[a] - u, y), 0);
                    e.arrowElement = i;
                    e.offsets.arrow = {};
                    e.offsets.arrow[f] = Math.round(y);
                    e.offsets.arrow[m] = "";
                    return e
                },
                element: "[x-arrow]"
            },
            flip: {
                order: 600,
                enabled: !0,
                fn: function(e, t) {
                    if (k(e.instance.modifiers, "inner")) {
                        return e
                    }
                    if (e.flipped && e.placement === e.originalPlacement) {
                        return e
                    }
                    var o = w(e.instance.popper, e.instance.reference, t.padding, t.boundariesElement),
                        i = e.placement.split("-")[0],
                        n = L(i),
                        r = e.placement.split("-")[1] || "",
                        p = [];
                    switch (t.behavior) {
                        case de.FLIP:
                            p = [i, n];
                            break;
                        case de.CLOCKWISE:
                            p = q(i);
                            break;
                        case de.COUNTERCLOCKWISE:
                            p = q(i, !0);
                            break;
                        default:
                            p = t.behavior;
                    }
                    p.forEach(function(s, d) {
                        if (i !== s || p.length === d + 1) {
                            return e
                        }
                        i = e.placement.split("-")[0];
                        n = L(i);
                        var a = e.offsets.popper,
                            l = e.offsets.reference,
                            f = Math.floor,
                            m = "left" === i && f(a.right) > f(l.left) || "right" === i && f(a.left) < f(l.right) || "top" === i && f(a.bottom) > f(l.top) || "bottom" === i && f(a.top) < f(l.bottom),
                            c = f(a.left) < f(o.left),
                            h = f(a.right) > f(o.right),
                            u = f(a.top) < f(o.top),
                            g = f(a.bottom) > f(o.bottom),
                            b = "left" === i && c || "right" === i && h || "top" === i && u || "bottom" === i && g,
                            y = -1 !== ["top", "bottom"].indexOf(i),
                            w = !!t.flipVariations && (y && "start" === r && c || y && "end" === r && h || !y && "start" === r && u || !y && "end" === r && g);
                        if (m || b || w) {
                            e.flipped = !0;
                            if (m || b) {
                                i = p[d + 1]
                            }
                            if (w) {
                                r = K(r)
                            }
                            e.placement = i + (r ? "-" + r : "");
                            e.offsets.popper = re({}, e.offsets.popper, S(e.instance.popper, e.offsets.reference, e.placement));
                            e = D(e.instance.modifiers, e, "flip")
                        }
                    });
                    return e
                },
                behavior: "flip",
                padding: 5,
                boundariesElement: "viewport"
            },
            inner: {
                order: 700,
                enabled: !1,
                fn: function(e) {
                    var t = e.placement,
                        o = t.split("-")[0],
                        i = e.offsets,
                        n = i.popper,
                        r = i.reference,
                        p = -1 !== ["left", "right"].indexOf(o),
                        s = -1 === ["top", "left"].indexOf(o);
                    n[p ? "left" : "top"] = r[o] - (s ? n[p ? "width" : "height"] : 0);
                    e.placement = L(t);
                    e.offsets.popper = h(n);
                    return e
                }
            },
            hide: {
                order: 800,
                enabled: !0,
                fn: function(e) {
                    if (!j(e.instance.modifiers, "hide", "preventOverflow")) {
                        return e
                    }
                    var t = e.offsets.reference,
                        o = T(e.instance.modifiers, function(e) {
                            return "preventOverflow" === e.name
                        }).boundaries;
                    if (t.bottom < o.top || t.left > o.right || t.top > o.bottom || t.right < o.left) {
                        if (!0 === e.hide) {
                            return e
                        }
                        e.hide = !0;
                        e.attributes["x-out-of-boundaries"] = ""
                    } else {
                        if (!1 === e.hide) {
                            return e
                        }
                        e.hide = !1;
                        e.attributes["x-out-of-boundaries"] = !1
                    }
                    return e
                }
            },
            computeStyle: {
                order: 850,
                enabled: !0,
                fn: function(e, t) {
                    var o = t.x,
                        i = t.y,
                        n = e.offsets.popper,
                        p = T(e.instance.modifiers, function(e) {
                            return "applyStyle" === e.name
                        }).gpuAcceleration;
                    if (p !== void 0) {
                        console.warn("WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!")
                    }
                    var s = p !== void 0 ? p : t.gpuAcceleration,
                        d = r(e.instance.popper),
                        a = u(d),
                        l = {
                            position: n.position
                        },
                        f = {
                            left: Math.floor(n.left),
                            top: Math.floor(n.top),
                            bottom: Math.floor(n.bottom),
                            right: Math.floor(n.right)
                        },
                        m = "bottom" === o ? "top" : "bottom",
                        c = "right" === i ? "left" : "right",
                        h = W("transform"),
                        g = void 0,
                        b = void 0;
                    if ("bottom" === m) {
                        b = -a.height + f.bottom
                    } else {
                        b = f.top
                    }
                    if ("right" === c) {
                        g = -a.width + f.right
                    } else {
                        g = f.left
                    }
                    if (s && h) {
                        l[h] = "translate3d(" + g + "px, " + b + "px, 0)";
                        l[m] = 0;
                        l[c] = 0;
                        l.willChange = "transform"
                    } else {
                        var y = "bottom" === m ? -1 : 1,
                            w = "right" === c ? -1 : 1;
                        l[m] = b * y;
                        l[c] = g * w;
                        l.willChange = m + ", " + c
                    }
                    var E = {
                        "x-placement": e.placement
                    };
                    e.attributes = re({}, E, e.attributes);
                    e.styles = re({}, l, e.styles);
                    e.arrowStyles = re({}, e.offsets.arrow, e.arrowStyles);
                    return e
                },
                gpuAcceleration: !0,
                x: "bottom",
                y: "right"
            },
            applyStyle: {
                order: 900,
                enabled: !0,
                fn: function(e) {
                    Y(e.instance.popper, e.styles);
                    F(e.instance.popper, e.attributes);
                    if (e.arrowElement && Object.keys(e.arrowStyles).length) {
                        Y(e.arrowElement, e.arrowStyles)
                    }
                    return e
                },
                onLoad: function(e, t, o, i, n) {
                    var r = x(n, t, e),
                        p = v(o.placement, r, t, e, o.modifiers.flip.boundariesElement, o.modifiers.flip.padding);
                    t.setAttribute("x-placement", p);
                    Y(t, {
                        position: "absolute"
                    });
                    return o
                },
                gpuAcceleration: void 0
            }
        }
    };
    return ae
});
define("core/paged_content", ["jquery", "core/paged_content_pages", "core/paged_content_paging_bar", "core/paged_content_paging_bar_limit_selector", "core/paged_content_paging_dropdown"], function(a, b, c, d, e) {
    return {
        init: function init(f, g, h) {
            f = a(f);
            var i = f.find(b.rootSelector),
                j = f.find(c.rootSelector),
                k = f.find(e.rootSelector),
                l = f.find(d.rootSelector),
                m = f.attr("id");
            if (h) {
                m = h
            }
            b.init(i, m, g);
            if (j.length) {
                c.init(j, m)
            }
            if (l.length) {
                d.init(l, m)
            }
            if (k.length) {
                e.init(k, m)
            }
        },
        rootSelector: "[data-region=\"paged-content-container\"]"
    }
});
define("core/paged_content_paging_dropdown", ["jquery", "core/custom_interaction_events", "core/paged_content_events", "core/pubsub"], function(a, b, c, d) {
    var f = {
            ROOT: "[data-region=\"paging-dropdown-container\"]",
            DROPDOWN_ITEM: "[data-region=\"dropdown-item\"]",
            DROPDOWN_TOGGLE: "[data-region=\"dropdown-toggle\"]",
            ACTIVE_DROPDOWN_ITEM: "[data-region=\"dropdown-item\"].active",
            CARET: "[data-region=\"caret\"]"
        },
        g = function(a) {
            return parseInt(a.attr("data-page-number"), 10)
        },
        h = function(a) {
            return a.find(f.DROPDOWN_ITEM)
        },
        i = function(b, c) {
            var d = g(c);
            return h(b).filter(function(b, c) {
                return g(a(c)) < d
            })
        },
        j = function(a) {
            return parseInt(a.attr("data-item-count"), 10)
        },
        k = function(b, c) {
            if (c.attr("data-offset") != void 0) {
                return parseInt(c.attr("data-offset"), 10)
            }
            var d = 0;
            i(b, c).each(function(b, c) {
                c = a(c);
                d += j(c)
            });
            c.attr("data-offset", d);
            return d
        },
        l = function(a) {
            return a.find(f.ACTIVE_DROPDOWN_ITEM)
        },
        m = function(b, c) {
            return c.map(function(c, d) {
                d = a(d);
                return {
                    pageNumber: g(d),
                    limit: j(d),
                    offset: k(b, d)
                }
            }).get()
        },
        n = function(b) {
            b.each(function(b, c) {
                c = a(c);
                c.attr("data-page-number", b + 1)
            })
        },
        o = function(a, b, e) {
            var g = i(a, b),
                h = g.add(b),
                j = m(a, h),
                k = a.find(f.DROPDOWN_TOGGLE),
                n = k.find(f.CARET);
            l(a).removeClass("active");
            b.addClass("active");
            k.html(b.text());
            k.append(n);
            d.publish(e + c.SHOW_PAGES, j)
        };
    return {
        init: function init(c, d) {
            c = a(c);
            var e = h(c);
            n(e);
            var g = l(c);
            if (g.length) {
                o(c, g, d)
            }
            b.define(c, [b.events.activate]);
            c.on(b.events.activate, f.DROPDOWN_ITEM, function(b, e) {
                var g = a(b.target).closest(f.DROPDOWN_ITEM);
                o(c, g, d);
                e.originalEvent.preventDefault()
            })
        },
        rootSelector: f.ROOT
    }
});
define("core/utils", ["exports"], function(a) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    a.debounce = a.throttle = void 0;
    a.throttle = function throttle(a, b) {
        var c = !1,
            d = null,
            e = function() {
                for (var f = arguments.length, g = Array(f), h = 0; h < f; h++) {
                    g[h] = arguments[h]
                }
                if (null === d) {
                    d = !1
                } else {
                    d = !0
                }
                if (c) {
                    return
                }
                a.apply(this, g);
                c = !0;
                setTimeout(function() {
                    var a = d;
                    c = !1;
                    d = null;
                    if (a) {
                        e(g)
                    }
                }, b)
            };
        return e
    };
    a.debounce = function debounce(a, b) {
        var c = null;
        return function() {
            for (var d = this, e = arguments.length, f = Array(e), g = 0; g < e; g++) {
                f[g] = arguments[g]
            }
            clearTimeout(c);
            c = setTimeout(function() {
                a.apply(d, f)
            }, b)
        }
    }
});
define("core/chart_bar", ["core/chart_base"], function(a) {
    function b() {
        a.prototype.constructor.apply(this, arguments)
    }
    b.prototype = Object.create(a.prototype);
    b.prototype._horizontal = !1;
    b.prototype._stacked = !1;
    b.prototype.TYPE = "bar";
    b.prototype.create = function(b, c) {
        var d = a.prototype.create.apply(this, arguments);
        d.setHorizontal(c.horizontal);
        d.setStacked(c.stacked);
        return d
    };
    b.prototype._setDefaults = function() {
        a.prototype._setDefaults.apply(this, arguments);
        var b = this.getYAxis(0, !0);
        b.setMin(0)
    };
    b.prototype.getHorizontal = function() {
        return this._horizontal
    };
    b.prototype.getStacked = function() {
        return this._stacked
    };
    b.prototype.setHorizontal = function(a) {
        var b = this.getXAxis(0, !0);
        if (null === b.getMin()) {
            b.setMin(0)
        }
        this._horizontal = !!a
    };
    b.prototype.setStacked = function(a) {
        this._stacked = !!a
    };
    return b
});
define("core/yui", function() {
    return Y
});
define("core/chart_output_chartjs", ["jquery", "core/chartjs", "core/chart_axis", "core/chart_bar", "core/chart_output_base", "core/chart_line", "core/chart_pie", "core/chart_series"], function(a, b, c, d, e, f, g, h) {
    var j = function(a, b) {
        return "axis-" + a + "-" + b
    };

    function i() {
        e.prototype.constructor.apply(this, arguments);
        this._canvas = this._node;
        if ("CANVAS" != this._canvas.prop("tagName")) {
            this._canvas = a("<canvas>");
            this._node.append(this._canvas)
        }
        this._build()
    }
    i.prototype = Object.create(e.prototype);
    i.prototype._config = null;
    i.prototype._chartjs = null;
    i.prototype._canvas = null;
    i.prototype._build = function() {
        this._config = this._makeConfig();
        this._chartjs = new b(this._canvas[0], this._config)
    };
    i.prototype._cleanData = function(b) {
        if (b instanceof Array) {
            return b.map(function(b) {
                return a("<span>").html(b).text()
            })
        } else {
            return a("<span>").html(b).text()
        }
    };
    i.prototype._getChartType = function() {
        var a = this._chart.getType();
        if (this._chart.getType() === d.prototype.TYPE && !0 === this._chart.getHorizontal()) {
            a = "horizontalBar"
        } else if (this._chart.getType() === g.prototype.TYPE && !0 === this._chart.getDoughnut()) {
            a = "doughnut"
        }
        return a
    };
    i.prototype._makeAxisConfig = function(a, b, d) {
        var e = {
            id: j(b, d)
        };
        if (a.getPosition() !== c.prototype.POS_DEFAULT) {
            e.position = a.getPosition()
        }
        if (null !== a.getLabel()) {
            e.scaleLabel = {
                display: !0,
                labelString: this._cleanData(a.getLabel())
            }
        }
        if (null !== a.getStepSize()) {
            e.ticks = e.ticks || {};
            e.ticks.stepSize = a.getStepSize()
        }
        if (null !== a.getMax()) {
            e.ticks = e.ticks || {};
            e.ticks.max = a.getMax()
        }
        if (null !== a.getMin()) {
            e.ticks = e.ticks || {};
            e.ticks.min = a.getMin()
        }
        return e
    };
    i.prototype._makeConfig = function() {
        var a = {
            type: this._getChartType(),
            data: {
                labels: this._cleanData(this._chart.getLabels()),
                datasets: this._makeDatasetsConfig()
            },
            options: {
                title: {
                    display: null !== this._chart.getTitle(),
                    text: this._cleanData(this._chart.getTitle())
                }
            }
        };
        this._chart.getXAxes().forEach(function(b, c) {
            var d = b.getLabels();
            a.options.scales = a.options.scales || {};
            a.options.scales.xAxes = a.options.scales.xAxes || [];
            a.options.scales.xAxes[c] = this._makeAxisConfig(b, "x", c);
            if (null !== d) {
                a.options.scales.xAxes[c].ticks.callback = function(a, b) {
                    return d[b] || ""
                }
            }
            a.options.scales.xAxes[c].stacked = this._isStacked()
        }.bind(this));
        this._chart.getYAxes().forEach(function(b, c) {
            var d = b.getLabels();
            a.options.scales = a.options.scales || {};
            a.options.scales.yAxes = a.options.scales.yAxes || [];
            a.options.scales.yAxes[c] = this._makeAxisConfig(b, "y", c);
            if (null !== d) {
                a.options.scales.yAxes[c].ticks.callback = function(a) {
                    return d[parseInt(a, 10)] || ""
                }
            }
            a.options.scales.yAxes[c].stacked = this._isStacked()
        }.bind(this));
        a.options.tooltips = {
            callbacks: {
                label: this._makeTooltip.bind(this)
            }
        };
        return a
    };
    i.prototype._makeDatasetsConfig = function() {
        var a = this._chart.getSeries().map(function(a) {
            var b = a.hasColoredValues() ? a.getColors() : a.getColor(),
                c = {
                    label: this._cleanData(a.getLabel()),
                    data: a.getValues(),
                    type: a.getType(),
                    fill: !1,
                    backgroundColor: b,
                    borderColor: this._chart.getType() == g.prototype.TYPE ? "#fff" : b,
                    lineTension: this._isSmooth(a) ? .3 : 0
                };
            if (null !== a.getXAxis()) {
                c.xAxisID = j("x", a.getXAxis())
            }
            if (null !== a.getYAxis()) {
                c.yAxisID = j("y", a.getYAxis())
            }
            return c
        }.bind(this));
        return a
    };
    i.prototype._makeTooltip = function(a, b) {
        var c = this._chart.getSeries()[a.datasetIndex],
            d = c.getLabel(),
            e = c.getLabels(),
            f = b.datasets[a.datasetIndex].data,
            g = f[a.index],
            h = [];
        if ("" == a.xLabel && "" == a.yLabel) {
            var i = this._cleanData(this._chart.getLabels());
            h.push(i[a.index])
        }
        if (null !== e) {
            h.push(this._cleanData(e[a.index]))
        } else {
            h.push(this._cleanData(d) + ": " + g)
        }
        return h
    };
    i.prototype._isSmooth = function(a) {
        var b = !1;
        if (this._chart.getType() === f.prototype.TYPE) {
            b = a.getSmooth();
            if (null === b) {
                b = this._chart.getSmooth()
            }
        } else if (a.getType() === h.prototype.TYPE_LINE) {
            b = a.getSmooth()
        }
        return b
    };
    i.prototype._isStacked = function() {
        var a = !1;
        if (this._chart.getType() === d.prototype.TYPE) {
            a = this._chart.getStacked()
        }
        return a
    };
    i.prototype.update = function() {
        a.extend(!0, this._config, this._makeConfig());
        this._chartjs.update()
    };
    return i
});
define("core/toast", ["exports", "core/templates", "core/notification", "core/pending"], function(a, b, c, d) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    a.add = a.addToastRegion = void 0;
    b = e(b);
    c = e(c);
    d = e(d);

    function e(a) {
        return a && a.__esModule ? a : {
            default: a
        }
    }

    function f(a) {
        for (var b = 1; b < arguments.length; b++) {
            var c = null != arguments[b] ? arguments[b] : {},
                d = Object.keys(c);
            if ("function" == typeof Object.getOwnPropertySymbols) {
                d = d.concat(Object.getOwnPropertySymbols(c).filter(function(a) {
                    return Object.getOwnPropertyDescriptor(c, a).enumerable
                }))
            }
            d.forEach(function(b) {
                g(a, b, c[b])
            })
        }
        return a
    }

    function g(a, b, c) {
        if (b in a) {
            Object.defineProperty(a, b, {
                value: c,
                enumerable: !0,
                configurable: !0,
                writable: !0
            })
        } else {
            a[b] = c
        }
        return a
    }

    function h(a, b, c, d, e, f, g) {
        try {
            var h = a[f](g),
                i = h.value
        } catch (a) {
            c(a);
            return
        }
        if (h.done) {
            b(i)
        } else {
            Promise.resolve(i).then(d, e)
        }
    }

    function i(a) {
        return function() {
            var b = this,
                c = arguments;
            return new Promise(function(d, e) {
                var i = a.apply(b, c);

                function f(a) {
                    h(i, d, e, f, g, "next", a)
                }

                function g(a) {
                    h(i, d, e, f, g, "throw", a)
                }
                f(void 0)
            })
        }
    }
    var j = function() {
        var a = i(regeneratorRuntime.mark(function a(e) {
            var f, g, h, i;
            return regeneratorRuntime.wrap(function(a) {
                while (1) {
                    switch (a.prev = a.next) {
                        case 0:
                            f = new d.default("addToastRegion");
                            a.prev = 1;
                            a.next = 4;
                            return b.default.renderForPromise("core/local/toast/wrapper", {});
                        case 4:
                            g = a.sent;
                            h = g.html;
                            i = g.js;
                            b.default.prependNodeContents(e, h, i);
                            a.next = 13;
                            break;
                        case 10:
                            a.prev = 10;
                            a.t0 = a["catch"](1);
                            c.default.exception(a.t0);
                        case 13:
                            f.resolve();
                        case 14:
                        case "end":
                            return a.stop();
                    }
                }
            }, a, null, [
                [1, 10]
            ])
        }));
        return function() {
            return a.apply(this, arguments)
        }
    }();
    a.addToastRegion = j;
    var k = function() {
        var a = i(regeneratorRuntime.mark(function a(e, g) {
            var h, i, j, k, m, n;
            return regeneratorRuntime.wrap(function(a) {
                while (1) {
                    switch (a.prev = a.next) {
                        case 0:
                            h = new d.default("addToastRegion");
                            g = f({
                                closeButton: !1,
                                autohide: !0,
                                delay: 4e3
                            }, g);
                            i = "core/local/toast/message";
                            a.prev = 3;
                            a.next = 6;
                            return l();
                        case 6:
                            j = a.sent;
                            a.next = 9;
                            return b.default.renderForPromise(i, f({
                                message: e
                            }, g));
                        case 9:
                            k = a.sent;
                            m = k.html;
                            n = k.js;
                            b.default.prependNodeContents(j, m, n);
                            a.next = 18;
                            break;
                        case 15:
                            a.prev = 15;
                            a.t0 = a["catch"](3);
                            c.default.exception(a.t0);
                        case 18:
                            h.resolve();
                        case 19:
                        case "end":
                            return a.stop();
                    }
                }
            }, a, null, [
                [3, 15]
            ])
        }));
        return function() {
            return a.apply(this, arguments)
        }
    }();
    a.add = k;
    var l = function() {
        var a = i(regeneratorRuntime.mark(function a() {
            var b;
            return regeneratorRuntime.wrap(function(a) {
                while (1) {
                    switch (a.prev = a.next) {
                        case 0:
                            b = document.querySelectorAll(".toast-wrapper");
                            if (!b.length) {
                                a.next = 3;
                                break
                            }
                            return a.abrupt("return", b[b.length - 1]);
                        case 3:
                            a.next = 5;
                            return j(document.body, "fixed-bottom");
                        case 5:
                            return a.abrupt("return", l());
                        case 6:
                        case "end":
                            return a.stop();
                    }
                }
            }, a)
        }));
        return function() {
            return a.apply(this, arguments)
        }
    }()
});

function _typeof(e) {
    if ("function" == typeof Symbol && "symbol" == typeof Symbol.iterator) {
        _typeof = function(e) {
            return typeof e
        }
    } else {
        _typeof = function(e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        }
    }
    return _typeof(e)
}
define("core/adapter", [], function() {
    return function c(d, e, t) {
        function r(i, o) {
            if (!e[i]) {
                if (!d[i]) {
                    var s = "function" == typeof require && require;
                    if (!o && s) return s(i, !0);
                    if (n) return n(i, !0);
                    var a = new Error("Cannot find module '" + i + "'");
                    throw a.code = "MODULE_NOT_FOUND", a
                }
                var p = e[i] = {
                    exports: {}
                };
                d[i][0].call(p.exports, function(t) {
                    var e = d[i][1][t];
                    return r(e ? e : t)
                }, p, p.exports, c, d, e, t)
            }
            return e[i].exports
        }
        for (var n = "function" == typeof require && require, a = 0; a < t.length; a++) {
            r(t[a])
        }
        return r
    }({
        1: [function(e, t) {
            'use strict';
            var d = e("sdp");

            function r(e) {
                return {
                    inboundrtp: "inbound-rtp",
                    outboundrtp: "outbound-rtp",
                    candidatepair: "candidate-pair",
                    localcandidate: "local-candidate",
                    remotecandidate: "remote-candidate"
                }[e.type] || e.type
            }

            function a(e, t, r, a, n) {
                var i = d.writeRtpDescription(e.kind, t);
                i += d.writeIceParameters(e.iceGatherer.getLocalParameters());
                i += d.writeDtlsParameters(e.dtlsTransport.getLocalParameters(), "offer" === r ? "actpass" : n || "active");
                i += "a=mid:" + e.mid + "\r\n";
                if (e.rtpSender && e.rtpReceiver) {
                    i += "a=sendrecv\r\n"
                } else if (e.rtpSender) {
                    i += "a=sendonly\r\n"
                } else if (e.rtpReceiver) {
                    i += "a=recvonly\r\n"
                } else {
                    i += "a=inactive\r\n"
                }
                if (e.rtpSender) {
                    var o = e.rtpSender._initialTrackId || e.rtpSender.track.id;
                    e.rtpSender._initialTrackId = o;
                    var s = "msid:" + (a ? a.id : "-") + " " + o + "\r\n";
                    i += "a=" + s;
                    i += "a=ssrc:" + e.sendEncodingParameters[0].ssrc + " " + s;
                    if (e.sendEncodingParameters[0].rtx) {
                        i += "a=ssrc:" + e.sendEncodingParameters[0].rtx.ssrc + " " + s;
                        i += "a=ssrc-group:FID " + e.sendEncodingParameters[0].ssrc + " " + e.sendEncodingParameters[0].rtx.ssrc + "\r\n"
                    }
                }
                i += "a=ssrc:" + e.sendEncodingParameters[0].ssrc + " cname:" + d.localCName + "\r\n";
                if (e.rtpSender && e.sendEncodingParameters[0].rtx) {
                    i += "a=ssrc:" + e.sendEncodingParameters[0].rtx.ssrc + " cname:" + d.localCName + "\r\n"
                }
                return i
            }

            function n(e, t) {
                var r = !1;
                e = JSON.parse(JSON.stringify(e));
                return e.filter(function(e) {
                    if (e && (e.urls || e.url)) {
                        var a = e.urls || e.url;
                        if (e.url && !e.urls) {
                            console.warn("RTCIceServer.url is deprecated! Use urls instead.")
                        }
                        var n = "string" == typeof a;
                        if (n) {
                            a = [a]
                        }
                        a = a.filter(function(e) {
                            var a = 0 === e.indexOf("turn:") && -1 !== e.indexOf("transport=udp") && -1 === e.indexOf("turn:[") && !r;
                            if (a) {
                                r = !0;
                                return !0
                            }
                            return 0 === e.indexOf("stun:") && 14393 <= t && -1 === e.indexOf("?transport=udp")
                        });
                        delete e.url;
                        e.urls = n ? a[0] : a;
                        return !!a.length
                    }
                })
            }

            function i(e, t) {
                var r = {
                        codecs: [],
                        headerExtensions: [],
                        fecMechanisms: []
                    },
                    a = function(e, t) {
                        e = parseInt(e, 10);
                        for (var r = 0; r < t.length; r++) {
                            if (t[r].payloadType === e || t[r].preferredPayloadType === e) {
                                return t[r]
                            }
                        }
                    },
                    n = function(e, t, r, n) {
                        var i = a(e.parameters.apt, r),
                            o = a(t.parameters.apt, n);
                        return i && o && i.name.toLowerCase() === o.name.toLowerCase()
                    };
                e.codecs.forEach(function(a) {
                    for (var o = 0, s; o < t.codecs.length; o++) {
                        s = t.codecs[o];
                        if (a.name.toLowerCase() === s.name.toLowerCase() && a.clockRate === s.clockRate) {
                            if ("rtx" === a.name.toLowerCase() && a.parameters && s.parameters.apt) {
                                if (!n(a, s, e.codecs, t.codecs)) {
                                    continue
                                }
                            }
                            s = JSON.parse(JSON.stringify(s));
                            s.numChannels = Math.min(a.numChannels, s.numChannels);
                            r.codecs.push(s);
                            s.rtcpFeedback = s.rtcpFeedback.filter(function(e) {
                                for (var t = 0; t < a.rtcpFeedback.length; t++) {
                                    if (a.rtcpFeedback[t].type === e.type && a.rtcpFeedback[t].parameter === e.parameter) {
                                        return !0
                                    }
                                }
                                return !1
                            });
                            break
                        }
                    }
                });
                e.headerExtensions.forEach(function(e) {
                    for (var a = 0, n; a < t.headerExtensions.length; a++) {
                        n = t.headerExtensions[a];
                        if (e.uri === n.uri) {
                            r.headerExtensions.push(n);
                            break
                        }
                    }
                });
                return r
            }

            function o(e, t, r) {
                return -1 !== {
                    offer: {
                        setLocalDescription: ["stable", "have-local-offer"],
                        setRemoteDescription: ["stable", "have-remote-offer"]
                    },
                    answer: {
                        setLocalDescription: ["have-remote-offer", "have-local-pranswer"],
                        setRemoteDescription: ["have-local-offer", "have-remote-pranswer"]
                    }
                }[t][e].indexOf(r)
            }

            function s(e, t) {
                var r = e.getRemoteCandidates().find(function(e) {
                    return t.foundation === e.foundation && t.ip === e.ip && t.port === e.port && t.priority === e.priority && t.protocol === e.protocol && t.type === e.type
                });
                if (!r) {
                    e.addRemoteCandidate(t)
                }
                return !r
            }

            function c(t, r) {
                var a = new Error(r);
                a.name = t;
                a.code = {
                    NotSupportedError: 9,
                    InvalidStateError: 11,
                    InvalidAccessError: 15,
                    TypeError: void 0,
                    OperationError: void 0
                }[t];
                return a
            }
            t.exports = function(e, t) {
                function p(t, r) {
                    r.addTrack(t);
                    r.dispatchEvent(new e.MediaStreamTrackEvent("addtrack", {
                        track: t
                    }))
                }

                function m(t, r) {
                    r.removeTrack(t);
                    r.dispatchEvent(new e.MediaStreamTrackEvent("removetrack", {
                        track: t
                    }))
                }

                function l(t, r, a, n) {
                    var i = new Event("track");
                    i.track = r;
                    i.receiver = a;
                    i.transceiver = {
                        receiver: a
                    };
                    i.streams = n;
                    e.setTimeout(function() {
                        t._dispatchEvent("track", i)
                    })
                }
                var g = function(r) {
                    var a = this,
                        o = document.createDocumentFragment();
                    ["addEventListener", "removeEventListener", "dispatchEvent"].forEach(function(e) {
                        a[e] = o[e].bind(o)
                    });
                    this.canTrickleIceCandidates = null;
                    this.needNegotiation = !1;
                    this.localStreams = [];
                    this.remoteStreams = [];
                    this._localDescription = null;
                    this._remoteDescription = null;
                    this.signalingState = "stable";
                    this.iceConnectionState = "new";
                    this.connectionState = "new";
                    this.iceGatheringState = "new";
                    r = JSON.parse(JSON.stringify(r || {}));
                    this.usingBundle = "max-bundle" === r.bundlePolicy;
                    if ("negotiate" === r.rtcpMuxPolicy) {
                        throw c("NotSupportedError", "rtcpMuxPolicy 'negotiate' is not supported")
                    } else if (!r.rtcpMuxPolicy) {
                        r.rtcpMuxPolicy = "require"
                    }
                    switch (r.iceTransportPolicy) {
                        case "all":
                        case "relay":
                            break;
                        default:
                            r.iceTransportPolicy = "all";
                            break;
                    }
                    switch (r.bundlePolicy) {
                        case "balanced":
                        case "max-compat":
                        case "max-bundle":
                            break;
                        default:
                            r.bundlePolicy = "balanced";
                            break;
                    }
                    r.iceServers = n(r.iceServers || [], t);
                    this._iceGatherers = [];
                    if (r.iceCandidatePoolSize) {
                        for (var s = r.iceCandidatePoolSize; 0 < s; s--) {
                            this._iceGatherers.push(new e.RTCIceGatherer({
                                iceServers: r.iceServers,
                                gatherPolicy: r.iceTransportPolicy
                            }))
                        }
                    } else {
                        r.iceCandidatePoolSize = 0
                    }
                    this._config = r;
                    this.transceivers = [];
                    this._sdpSessionId = d.generateSessionId();
                    this._sdpSessionVersion = 0;
                    this._dtlsRole = void 0;
                    this._isClosed = !1
                };
                Object.defineProperty(g.prototype, "localDescription", {
                    configurable: !0,
                    get: function get() {
                        return this._localDescription
                    }
                });
                Object.defineProperty(g.prototype, "remoteDescription", {
                    configurable: !0,
                    get: function get() {
                        return this._remoteDescription
                    }
                });
                g.prototype.onicecandidate = null;
                g.prototype.onaddstream = null;
                g.prototype.ontrack = null;
                g.prototype.onremovestream = null;
                g.prototype.onsignalingstatechange = null;
                g.prototype.oniceconnectionstatechange = null;
                g.prototype.onconnectionstatechange = null;
                g.prototype.onicegatheringstatechange = null;
                g.prototype.onnegotiationneeded = null;
                g.prototype.ondatachannel = null;
                g.prototype._dispatchEvent = function(e, t) {
                    if (this._isClosed) {
                        return
                    }
                    this.dispatchEvent(t);
                    if ("function" == typeof this["on" + e]) {
                        this["on" + e](t)
                    }
                };
                g.prototype._emitGatheringStateChange = function() {
                    var e = new Event("icegatheringstatechange");
                    this._dispatchEvent("icegatheringstatechange", e)
                };
                g.prototype.getConfiguration = function() {
                    return this._config
                };
                g.prototype.getLocalStreams = function() {
                    return this.localStreams
                };
                g.prototype.getRemoteStreams = function() {
                    return this.remoteStreams
                };
                g.prototype._createTransceiver = function(e, t) {
                    var r = 0 < this.transceivers.length,
                        a = {
                            track: null,
                            iceGatherer: null,
                            iceTransport: null,
                            dtlsTransport: null,
                            localCapabilities: null,
                            remoteCapabilities: null,
                            rtpSender: null,
                            rtpReceiver: null,
                            kind: e,
                            mid: null,
                            sendEncodingParameters: null,
                            recvEncodingParameters: null,
                            stream: null,
                            associatedRemoteMediaStreams: [],
                            wantReceive: !0
                        };
                    if (this.usingBundle && r) {
                        a.iceTransport = this.transceivers[0].iceTransport;
                        a.dtlsTransport = this.transceivers[0].dtlsTransport
                    } else {
                        var n = this._createIceAndDtlsTransports();
                        a.iceTransport = n.iceTransport;
                        a.dtlsTransport = n.dtlsTransport
                    }
                    if (!t) {
                        this.transceivers.push(a)
                    }
                    return a
                };
                g.prototype.addTrack = function(t, r) {
                    if (this._isClosed) {
                        throw c("InvalidStateError", "Attempted to call addTrack on a closed peerconnection.")
                    }
                    var a = this.transceivers.find(function(e) {
                        return e.track === t
                    });
                    if (a) {
                        throw c("InvalidAccessError", "Track already exists.")
                    }
                    for (var n, o = 0; o < this.transceivers.length; o++) {
                        if (!this.transceivers[o].track && this.transceivers[o].kind === t.kind) {
                            n = this.transceivers[o]
                        }
                    }
                    if (!n) {
                        n = this._createTransceiver(t.kind)
                    }
                    this._maybeFireNegotiationNeeded();
                    if (-1 === this.localStreams.indexOf(r)) {
                        this.localStreams.push(r)
                    }
                    n.track = t;
                    n.stream = r;
                    n.rtpSender = new e.RTCRtpSender(t, n.dtlsTransport);
                    return n.rtpSender
                };
                g.prototype.addStream = function(e) {
                    var r = this;
                    if (15025 <= t) {
                        e.getTracks().forEach(function(t) {
                            r.addTrack(t, e)
                        })
                    } else {
                        var a = e.clone();
                        e.getTracks().forEach(function(e, t) {
                            var r = a.getTracks()[t];
                            e.addEventListener("enabled", function(e) {
                                r.enabled = e.enabled
                            })
                        });
                        a.getTracks().forEach(function(e) {
                            r.addTrack(e, a)
                        })
                    }
                };
                g.prototype.removeTrack = function(r) {
                    if (this._isClosed) {
                        throw c("InvalidStateError", "Attempted to call removeTrack on a closed peerconnection.")
                    }
                    if (!(r instanceof e.RTCRtpSender)) {
                        throw new TypeError("Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender.")
                    }
                    var a = this.transceivers.find(function(e) {
                        return e.rtpSender === r
                    });
                    if (!a) {
                        throw c("InvalidAccessError", "Sender was not created by this connection.")
                    }
                    var n = a.stream;
                    a.rtpSender.stop();
                    a.rtpSender = null;
                    a.track = null;
                    a.stream = null;
                    var i = this.transceivers.map(function(e) {
                        return e.stream
                    });
                    if (-1 === i.indexOf(n) && -1 < this.localStreams.indexOf(n)) {
                        this.localStreams.splice(this.localStreams.indexOf(n), 1)
                    }
                    this._maybeFireNegotiationNeeded()
                };
                g.prototype.removeStream = function(e) {
                    var t = this;
                    e.getTracks().forEach(function(e) {
                        var r = t.getSenders().find(function(t) {
                            return t.track === e
                        });
                        if (r) {
                            t.removeTrack(r)
                        }
                    })
                };
                g.prototype.getSenders = function() {
                    return this.transceivers.filter(function(e) {
                        return !!e.rtpSender
                    }).map(function(e) {
                        return e.rtpSender
                    })
                };
                g.prototype.getReceivers = function() {
                    return this.transceivers.filter(function(e) {
                        return !!e.rtpReceiver
                    }).map(function(e) {
                        return e.rtpReceiver
                    })
                };
                g.prototype._createIceGatherer = function(t, r) {
                    var a = this;
                    if (r && 0 < t) {
                        return this.transceivers[0].iceGatherer
                    } else if (this._iceGatherers.length) {
                        return this._iceGatherers.shift()
                    }
                    var n = new e.RTCIceGatherer({
                        iceServers: this._config.iceServers,
                        gatherPolicy: this._config.iceTransportPolicy
                    });
                    Object.defineProperty(n, "state", {
                        value: "new",
                        writable: !0
                    });
                    this.transceivers[t].bufferedCandidateEvents = [];
                    this.transceivers[t].bufferCandidates = function(e) {
                        var r = !e.candidate || 0 === Object.keys(e.candidate).length;
                        n.state = r ? "completed" : "gathering";
                        if (null !== a.transceivers[t].bufferedCandidateEvents) {
                            a.transceivers[t].bufferedCandidateEvents.push(e)
                        }
                    };
                    n.addEventListener("localcandidate", this.transceivers[t].bufferCandidates);
                    return n
                };
                g.prototype._gather = function(t, r) {
                    var a = this,
                        n = this.transceivers[r].iceGatherer;
                    if (n.onlocalcandidate) {
                        return
                    }
                    var i = this.transceivers[r].bufferedCandidateEvents;
                    this.transceivers[r].bufferedCandidateEvents = null;
                    n.removeEventListener("localcandidate", this.transceivers[r].bufferCandidates);
                    n.onlocalcandidate = function(e) {
                        if (a.usingBundle && 0 < r) {
                            return
                        }
                        var i = new Event("icecandidate");
                        i.candidate = {
                            sdpMid: t,
                            sdpMLineIndex: r
                        };
                        var o = e.candidate,
                            s = !o || 0 === Object.keys(o).length;
                        if (s) {
                            if ("new" === n.state || "gathering" === n.state) {
                                n.state = "completed"
                            }
                        } else {
                            if ("new" === n.state) {
                                n.state = "gathering"
                            }
                            o.component = 1;
                            o.ufrag = n.getLocalParameters().usernameFragment;
                            var c = d.writeCandidate(o);
                            i.candidate = Object.assign(i.candidate, d.parseCandidate(c));
                            i.candidate.candidate = c;
                            i.candidate.toJSON = function() {
                                return {
                                    candidate: i.candidate.candidate,
                                    sdpMid: i.candidate.sdpMid,
                                    sdpMLineIndex: i.candidate.sdpMLineIndex,
                                    usernameFragment: i.candidate.usernameFragment
                                }
                            }
                        }
                        var p = d.getMediaSections(a._localDescription.sdp);
                        if (!s) {
                            p[i.candidate.sdpMLineIndex] += "a=" + i.candidate.candidate + "\r\n"
                        } else {
                            p[i.candidate.sdpMLineIndex] += "a=end-of-candidates\r\n"
                        }
                        a._localDescription.sdp = d.getDescription(a._localDescription.sdp) + p.join("");
                        var m = a.transceivers.every(function(e) {
                            return e.iceGatherer && "completed" === e.iceGatherer.state
                        });
                        if ("gathering" !== a.iceGatheringState) {
                            a.iceGatheringState = "gathering";
                            a._emitGatheringStateChange()
                        }
                        if (!s) {
                            a._dispatchEvent("icecandidate", i)
                        }
                        if (m) {
                            a._dispatchEvent("icecandidate", new Event("icecandidate"));
                            a.iceGatheringState = "complete";
                            a._emitGatheringStateChange()
                        }
                    };
                    e.setTimeout(function() {
                        i.forEach(function(t) {
                            n.onlocalcandidate(t)
                        })
                    }, 0)
                };
                g.prototype._createIceAndDtlsTransports = function() {
                    var t = this,
                        r = new e.RTCIceTransport(null);
                    r.onicestatechange = function() {
                        t._updateIceConnectionState();
                        t._updateConnectionState()
                    };
                    var a = new e.RTCDtlsTransport(r);
                    a.ondtlsstatechange = function() {
                        t._updateConnectionState()
                    };
                    a.onerror = function() {
                        Object.defineProperty(a, "state", {
                            value: "failed",
                            writable: !0
                        });
                        t._updateConnectionState()
                    };
                    return {
                        iceTransport: r,
                        dtlsTransport: a
                    }
                };
                g.prototype._disposeIceAndDtlsTransports = function(e) {
                    var t = this.transceivers[e].iceGatherer;
                    if (t) {
                        delete t.onlocalcandidate;
                        delete this.transceivers[e].iceGatherer
                    }
                    var r = this.transceivers[e].iceTransport;
                    if (r) {
                        delete r.onicestatechange;
                        delete this.transceivers[e].iceTransport
                    }
                    var a = this.transceivers[e].dtlsTransport;
                    if (a) {
                        delete a.ondtlsstatechange;
                        delete a.onerror;
                        delete this.transceivers[e].dtlsTransport
                    }
                };
                g.prototype._transceive = function(e, r, a) {
                    var n = i(e.localCapabilities, e.remoteCapabilities);
                    if (r && e.rtpSender) {
                        n.encodings = e.sendEncodingParameters;
                        n.rtcp = {
                            cname: d.localCName,
                            compound: e.rtcpParameters.compound
                        };
                        if (e.recvEncodingParameters.length) {
                            n.rtcp.ssrc = e.recvEncodingParameters[0].ssrc
                        }
                        e.rtpSender.send(n)
                    }
                    if (a && e.rtpReceiver && 0 < n.codecs.length) {
                        if ("video" === e.kind && e.recvEncodingParameters && 15019 > t) {
                            e.recvEncodingParameters.forEach(function(e) {
                                delete e.rtx
                            })
                        }
                        if (e.recvEncodingParameters.length) {
                            n.encodings = e.recvEncodingParameters
                        } else {
                            n.encodings = [{}]
                        }
                        n.rtcp = {
                            compound: e.rtcpParameters.compound
                        };
                        if (e.rtcpParameters.cname) {
                            n.rtcp.cname = e.rtcpParameters.cname
                        }
                        if (e.sendEncodingParameters.length) {
                            n.rtcp.ssrc = e.sendEncodingParameters[0].ssrc
                        }
                        e.rtpReceiver.receive(n)
                    }
                };
                g.prototype.setLocalDescription = function(e) {
                    var t = this;
                    if (-1 === ["offer", "answer"].indexOf(e.type)) {
                        return Promise.reject(c("TypeError", "Unsupported type \"" + e.type + "\""))
                    }
                    if (!o("setLocalDescription", e.type, t.signalingState) || t._isClosed) {
                        return Promise.reject(c("InvalidStateError", "Can not set local " + e.type + " in state " + t.signalingState))
                    }
                    var r, a;
                    if ("offer" === e.type) {
                        r = d.splitSections(e.sdp);
                        a = r.shift();
                        r.forEach(function(e, r) {
                            var a = d.parseRtpParameters(e);
                            t.transceivers[r].localCapabilities = a
                        });
                        t.transceivers.forEach(function(e, r) {
                            t._gather(e.mid, r)
                        })
                    } else if ("answer" === e.type) {
                        r = d.splitSections(t._remoteDescription.sdp);
                        a = r.shift();
                        var n = 0 < d.matchPrefix(a, "a=ice-lite").length;
                        r.forEach(function(e, r) {
                            var o = t.transceivers[r],
                                s = o.iceGatherer,
                                c = o.iceTransport,
                                p = o.dtlsTransport,
                                m = o.localCapabilities,
                                l = o.remoteCapabilities,
                                g = d.isRejected(e) && 0 === d.matchPrefix(e, "a=bundle-only").length;
                            if (!g && !o.rejected) {
                                var h = d.getIceParameters(e, a),
                                    f = d.getDtlsParameters(e, a);
                                if (n) {
                                    f.role = "server"
                                }
                                if (!t.usingBundle || 0 === r) {
                                    t._gather(o.mid, r);
                                    if ("new" === c.state) {
                                        c.start(s, h, n ? "controlling" : "controlled")
                                    }
                                    if ("new" === p.state) {
                                        p.start(f)
                                    }
                                }
                                var C = i(m, l);
                                t._transceive(o, 0 < C.codecs.length, !1)
                            }
                        })
                    }
                    t._localDescription = {
                        type: e.type,
                        sdp: e.sdp
                    };
                    if ("offer" === e.type) {
                        t._updateSignalingState("have-local-offer")
                    } else {
                        t._updateSignalingState("stable")
                    }
                    return Promise.resolve()
                };
                g.prototype.setRemoteDescription = function(r) {
                    var a = this;
                    if (-1 === ["offer", "answer"].indexOf(r.type)) {
                        return Promise.reject(c("TypeError", "Unsupported type \"" + r.type + "\""))
                    }
                    if (!o("setRemoteDescription", r.type, a.signalingState) || a._isClosed) {
                        return Promise.reject(c("InvalidStateError", "Can not set remote " + r.type + " in state " + a.signalingState))
                    }
                    var n = {};
                    a.remoteStreams.forEach(function(e) {
                        n[e.id] = e
                    });
                    var g = [],
                        h = d.splitSections(r.sdp),
                        f = h.shift(),
                        C = 0 < d.matchPrefix(f, "a=ice-lite").length,
                        v = 0 < d.matchPrefix(f, "a=group:BUNDLE ").length;
                    a.usingBundle = v;
                    var y = d.matchPrefix(f, "a=ice-options:")[0];
                    if (y) {
                        a.canTrickleIceCandidates = 0 <= y.substr(14).split(" ").indexOf("trickle")
                    } else {
                        a.canTrickleIceCandidates = !1
                    }
                    h.forEach(function(o, c) {
                        var l = d.splitLines(o),
                            h = d.getKind(o),
                            y = d.isRejected(o) && 0 === d.matchPrefix(o, "a=bundle-only").length,
                            u = l[0].substr(2).split(" ")[2],
                            T = d.getDirection(o, f),
                            S = d.parseMsid(o),
                            R = d.getMid(o) || d.generateIdentifier();
                        if (y || "application" === h && ("DTLS/SCTP" === u || "UDP/DTLS/SCTP" === u)) {
                            a.transceivers[c] = {
                                mid: R,
                                kind: h,
                                protocol: u,
                                rejected: !0
                            };
                            return
                        }
                        if (!y && a.transceivers[c] && a.transceivers[c].rejected) {
                            a.transceivers[c] = a._createTransceiver(h, !0)
                        }
                        var P, E, k, b, _, x, M, L, I, D = d.parseRtpParameters(o),
                            w, j;
                        if (!y) {
                            w = d.getIceParameters(o, f);
                            j = d.getDtlsParameters(o, f);
                            j.role = "client"
                        }
                        M = d.parseRtpEncodingParameters(o);
                        var O = d.parseRtcpParameters(o),
                            U = 0 < d.matchPrefix(o, "a=end-of-candidates", f).length,
                            A = d.matchPrefix(o, "a=candidate:").map(function(e) {
                                return d.parseCandidate(e)
                            }).filter(function(e) {
                                return 1 === e.component
                            });
                        if (("offer" === r.type || "answer" === r.type) && !y && v && 0 < c && a.transceivers[c]) {
                            a._disposeIceAndDtlsTransports(c);
                            a.transceivers[c].iceGatherer = a.transceivers[0].iceGatherer;
                            a.transceivers[c].iceTransport = a.transceivers[0].iceTransport;
                            a.transceivers[c].dtlsTransport = a.transceivers[0].dtlsTransport;
                            if (a.transceivers[c].rtpSender) {
                                a.transceivers[c].rtpSender.setTransport(a.transceivers[0].dtlsTransport)
                            }
                            if (a.transceivers[c].rtpReceiver) {
                                a.transceivers[c].rtpReceiver.setTransport(a.transceivers[0].dtlsTransport)
                            }
                        }
                        if ("offer" === r.type && !y) {
                            P = a.transceivers[c] || a._createTransceiver(h);
                            P.mid = R;
                            if (!P.iceGatherer) {
                                P.iceGatherer = a._createIceGatherer(c, v)
                            }
                            if (A.length && "new" === P.iceTransport.state) {
                                if (U && (!v || 0 === c)) {
                                    P.iceTransport.setRemoteCandidates(A)
                                } else {
                                    A.forEach(function(e) {
                                        s(P.iceTransport, e)
                                    })
                                }
                            }
                            L = e.RTCRtpReceiver.getCapabilities(h);
                            if (15019 > t) {
                                L.codecs = L.codecs.filter(function(e) {
                                    return "rtx" !== e.name
                                })
                            }
                            x = P.sendEncodingParameters || [{
                                ssrc: 1001 * (2 * c + 2)
                            }];
                            var G = !1;
                            if ("sendrecv" === T || "sendonly" === T) {
                                G = !P.rtpReceiver;
                                _ = P.rtpReceiver || new e.RTCRtpReceiver(P.dtlsTransport, h);
                                if (G) {
                                    var N;
                                    I = _.track;
                                    if (S && "-" === S.stream) {} else if (S) {
                                        if (!n[S.stream]) {
                                            n[S.stream] = new e.MediaStream;
                                            Object.defineProperty(n[S.stream], "id", {
                                                get: function get() {
                                                    return S.stream
                                                }
                                            })
                                        }
                                        Object.defineProperty(I, "id", {
                                            get: function get() {
                                                return S.track
                                            }
                                        });
                                        N = n[S.stream]
                                    } else {
                                        if (!n.default) {
                                            n.default = new e.MediaStream
                                        }
                                        N = n.default
                                    }
                                    if (N) {
                                        p(I, N);
                                        P.associatedRemoteMediaStreams.push(N)
                                    }
                                    g.push([I, _, N])
                                }
                            } else if (P.rtpReceiver && P.rtpReceiver.track) {
                                P.associatedRemoteMediaStreams.forEach(function(e) {
                                    var t = e.getTracks().find(function(e) {
                                        return e.id === P.rtpReceiver.track.id
                                    });
                                    if (t) {
                                        m(t, e)
                                    }
                                });
                                P.associatedRemoteMediaStreams = []
                            }
                            P.localCapabilities = L;
                            P.remoteCapabilities = D;
                            P.rtpReceiver = _;
                            P.rtcpParameters = O;
                            P.sendEncodingParameters = x;
                            P.recvEncodingParameters = M;
                            a._transceive(a.transceivers[c], !1, G)
                        } else if ("answer" === r.type && !y) {
                            P = a.transceivers[c];
                            E = P.iceGatherer;
                            k = P.iceTransport;
                            b = P.dtlsTransport;
                            _ = P.rtpReceiver;
                            x = P.sendEncodingParameters;
                            L = P.localCapabilities;
                            a.transceivers[c].recvEncodingParameters = M;
                            a.transceivers[c].remoteCapabilities = D;
                            a.transceivers[c].rtcpParameters = O;
                            if (A.length && "new" === k.state) {
                                if ((C || U) && (!v || 0 === c)) {
                                    k.setRemoteCandidates(A)
                                } else {
                                    A.forEach(function(e) {
                                        s(P.iceTransport, e)
                                    })
                                }
                            }
                            if (!v || 0 === c) {
                                if ("new" === k.state) {
                                    k.start(E, w, "controlling")
                                }
                                if ("new" === b.state) {
                                    b.start(j)
                                }
                            }
                            var F = i(P.localCapabilities, P.remoteCapabilities),
                                z = F.codecs.filter(function(e) {
                                    return "rtx" === e.name.toLowerCase()
                                }).length;
                            if (!z && P.sendEncodingParameters[0].rtx) {
                                delete P.sendEncodingParameters[0].rtx
                            }
                            a._transceive(P, "sendrecv" === T || "recvonly" === T, "sendrecv" === T || "sendonly" === T);
                            if (_ && ("sendrecv" === T || "sendonly" === T)) {
                                I = _.track;
                                if (S) {
                                    if (!n[S.stream]) {
                                        n[S.stream] = new e.MediaStream
                                    }
                                    p(I, n[S.stream]);
                                    g.push([I, _, n[S.stream]])
                                } else {
                                    if (!n.default) {
                                        n.default = new e.MediaStream
                                    }
                                    p(I, n.default);
                                    g.push([I, _, n.default])
                                }
                            } else {
                                delete P.rtpReceiver
                            }
                        }
                    });
                    if (a._dtlsRole === void 0) {
                        a._dtlsRole = "offer" === r.type ? "active" : "passive"
                    }
                    a._remoteDescription = {
                        type: r.type,
                        sdp: r.sdp
                    };
                    if ("offer" === r.type) {
                        a._updateSignalingState("have-remote-offer")
                    } else {
                        a._updateSignalingState("stable")
                    }
                    Object.keys(n).forEach(function(t) {
                        var r = n[t];
                        if (r.getTracks().length) {
                            if (-1 === a.remoteStreams.indexOf(r)) {
                                a.remoteStreams.push(r);
                                var i = new Event("addstream");
                                i.stream = r;
                                e.setTimeout(function() {
                                    a._dispatchEvent("addstream", i)
                                })
                            }
                            g.forEach(function(e) {
                                var t = e[0],
                                    n = e[1];
                                if (r.id !== e[2].id) {
                                    return
                                }
                                l(a, t, n, [r])
                            })
                        }
                    });
                    g.forEach(function(e) {
                        if (e[2]) {
                            return
                        }
                        l(a, e[0], e[1], [])
                    });
                    e.setTimeout(function() {
                        if (!(a && a.transceivers)) {
                            return
                        }
                        a.transceivers.forEach(function(e) {
                            if (e.iceTransport && "new" === e.iceTransport.state && 0 < e.iceTransport.getRemoteCandidates().length) {
                                console.warn("Timeout for addRemoteCandidate. Consider sending an end-of-candidates notification");
                                e.iceTransport.addRemoteCandidate({})
                            }
                        })
                    }, 4e3);
                    return Promise.resolve()
                };
                g.prototype.close = function() {
                    this.transceivers.forEach(function(e) {
                        if (e.iceTransport) {
                            e.iceTransport.stop()
                        }
                        if (e.dtlsTransport) {
                            e.dtlsTransport.stop()
                        }
                        if (e.rtpSender) {
                            e.rtpSender.stop()
                        }
                        if (e.rtpReceiver) {
                            e.rtpReceiver.stop()
                        }
                    });
                    this._isClosed = !0;
                    this._updateSignalingState("closed")
                };
                g.prototype._updateSignalingState = function(e) {
                    this.signalingState = e;
                    var t = new Event("signalingstatechange");
                    this._dispatchEvent("signalingstatechange", t)
                };
                g.prototype._maybeFireNegotiationNeeded = function() {
                    var t = this;
                    if ("stable" !== this.signalingState || !0 === this.needNegotiation) {
                        return
                    }
                    this.needNegotiation = !0;
                    e.setTimeout(function() {
                        if (t.needNegotiation) {
                            t.needNegotiation = !1;
                            var e = new Event("negotiationneeded");
                            t._dispatchEvent("negotiationneeded", e)
                        }
                    }, 0)
                };
                g.prototype._updateIceConnectionState = function() {
                    var e, t = {
                        new: 0,
                        closed: 0,
                        checking: 0,
                        connected: 0,
                        completed: 0,
                        disconnected: 0,
                        failed: 0
                    };
                    this.transceivers.forEach(function(e) {
                        t[e.iceTransport.state]++
                    });
                    e = "new";
                    if (0 < t.failed) {
                        e = "failed"
                    } else if (0 < t.checking) {
                        e = "checking"
                    } else if (0 < t.disconnected) {
                        e = "disconnected"
                    } else if (0 < t.new) {
                        e = "new"
                    } else if (0 < t.connected) {
                        e = "connected"
                    } else if (0 < t.completed) {
                        e = "completed"
                    }
                    if (e !== this.iceConnectionState) {
                        this.iceConnectionState = e;
                        var r = new Event("iceconnectionstatechange");
                        this._dispatchEvent("iceconnectionstatechange", r)
                    }
                };
                g.prototype._updateConnectionState = function() {
                    var e, t = {
                        new: 0,
                        closed: 0,
                        connecting: 0,
                        connected: 0,
                        completed: 0,
                        disconnected: 0,
                        failed: 0
                    };
                    this.transceivers.forEach(function(e) {
                        t[e.iceTransport.state]++;
                        t[e.dtlsTransport.state]++
                    });
                    t.connected += t.completed;
                    e = "new";
                    if (0 < t.failed) {
                        e = "failed"
                    } else if (0 < t.connecting) {
                        e = "connecting"
                    } else if (0 < t.disconnected) {
                        e = "disconnected"
                    } else if (0 < t.new) {
                        e = "new"
                    } else if (0 < t.connected) {
                        e = "connected"
                    }
                    if (e !== this.connectionState) {
                        this.connectionState = e;
                        var r = new Event("connectionstatechange");
                        this._dispatchEvent("connectionstatechange", r)
                    }
                };
                g.prototype.createOffer = function() {
                    var r = this;
                    if (r._isClosed) {
                        return Promise.reject(c("InvalidStateError", "Can not call createOffer after close"))
                    }
                    var n = r.transceivers.filter(function(e) {
                            return "audio" === e.kind
                        }).length,
                        i = r.transceivers.filter(function(e) {
                            return "video" === e.kind
                        }).length,
                        o = arguments[0];
                    if (o) {
                        if (o.mandatory || o.optional) {
                            throw new TypeError("Legacy mandatory/optional constraints not supported.")
                        }
                        if (o.offerToReceiveAudio !== void 0) {
                            if (!0 === o.offerToReceiveAudio) {
                                n = 1
                            } else if (!1 === o.offerToReceiveAudio) {
                                n = 0
                            } else {
                                n = o.offerToReceiveAudio
                            }
                        }
                        if (o.offerToReceiveVideo !== void 0) {
                            if (!0 === o.offerToReceiveVideo) {
                                i = 1
                            } else if (!1 === o.offerToReceiveVideo) {
                                i = 0
                            } else {
                                i = o.offerToReceiveVideo
                            }
                        }
                    }
                    r.transceivers.forEach(function(e) {
                        if ("audio" === e.kind) {
                            n--;
                            if (0 > n) {
                                e.wantReceive = !1
                            }
                        } else if ("video" === e.kind) {
                            i--;
                            if (0 > i) {
                                e.wantReceive = !1
                            }
                        }
                    });
                    while (0 < n || 0 < i) {
                        if (0 < n) {
                            r._createTransceiver("audio");
                            n--
                        }
                        if (0 < i) {
                            r._createTransceiver("video");
                            i--
                        }
                    }
                    var s = d.writeSessionBoilerplate(r._sdpSessionId, r._sdpSessionVersion++);
                    r.transceivers.forEach(function(a, n) {
                        var i = a.track,
                            o = a.kind,
                            s = a.mid || d.generateIdentifier();
                        a.mid = s;
                        if (!a.iceGatherer) {
                            a.iceGatherer = r._createIceGatherer(n, r.usingBundle)
                        }
                        var c = e.RTCRtpSender.getCapabilities(o);
                        if (15019 > t) {
                            c.codecs = c.codecs.filter(function(e) {
                                return "rtx" !== e.name
                            })
                        }
                        c.codecs.forEach(function(e) {
                            if ("H264" === e.name && e.parameters["level-asymmetry-allowed"] === void 0) {
                                e.parameters["level-asymmetry-allowed"] = "1"
                            }
                            if (a.remoteCapabilities && a.remoteCapabilities.codecs) {
                                a.remoteCapabilities.codecs.forEach(function(t) {
                                    if (e.name.toLowerCase() === t.name.toLowerCase() && e.clockRate === t.clockRate) {
                                        e.preferredPayloadType = t.payloadType
                                    }
                                })
                            }
                        });
                        c.headerExtensions.forEach(function(e) {
                            var t = a.remoteCapabilities && a.remoteCapabilities.headerExtensions || [];
                            t.forEach(function(t) {
                                if (e.uri === t.uri) {
                                    e.id = t.id
                                }
                            })
                        });
                        var p = a.sendEncodingParameters || [{
                            ssrc: 1001 * (2 * n + 1)
                        }];
                        if (i) {
                            if (15019 <= t && "video" === o && !p[0].rtx) {
                                p[0].rtx = {
                                    ssrc: p[0].ssrc + 1
                                }
                            }
                        }
                        if (a.wantReceive) {
                            a.rtpReceiver = new e.RTCRtpReceiver(a.dtlsTransport, o)
                        }
                        a.localCapabilities = c;
                        a.sendEncodingParameters = p
                    });
                    if ("max-compat" !== r._config.bundlePolicy) {
                        s += "a=group:BUNDLE " + r.transceivers.map(function(e) {
                            return e.mid
                        }).join(" ") + "\r\n"
                    }
                    s += "a=ice-options:trickle\r\n";
                    r.transceivers.forEach(function(e, t) {
                        s += a(e, e.localCapabilities, "offer", e.stream, r._dtlsRole);
                        s += "a=rtcp-rsize\r\n";
                        if (e.iceGatherer && "new" !== r.iceGatheringState && (0 === t || !r.usingBundle)) {
                            e.iceGatherer.getLocalCandidates().forEach(function(e) {
                                e.component = 1;
                                s += "a=" + d.writeCandidate(e) + "\r\n"
                            });
                            if ("completed" === e.iceGatherer.state) {
                                s += "a=end-of-candidates\r\n"
                            }
                        }
                    });
                    var p = new e.RTCSessionDescription({
                        type: "offer",
                        sdp: s
                    });
                    return Promise.resolve(p)
                };
                g.prototype.createAnswer = function() {
                    var r = this;
                    if (r._isClosed) {
                        return Promise.reject(c("InvalidStateError", "Can not call createAnswer after close"))
                    }
                    if (!("have-remote-offer" === r.signalingState || "have-local-pranswer" === r.signalingState)) {
                        return Promise.reject(c("InvalidStateError", "Can not call createAnswer in signalingState " + r.signalingState))
                    }
                    var n = d.writeSessionBoilerplate(r._sdpSessionId, r._sdpSessionVersion++);
                    if (r.usingBundle) {
                        n += "a=group:BUNDLE " + r.transceivers.map(function(e) {
                            return e.mid
                        }).join(" ") + "\r\n"
                    }
                    n += "a=ice-options:trickle\r\n";
                    var o = d.getMediaSections(r._remoteDescription.sdp).length;
                    r.transceivers.forEach(function(e, s) {
                        if (s + 1 > o) {
                            return
                        }
                        if (e.rejected) {
                            if ("application" === e.kind) {
                                if ("DTLS/SCTP" === e.protocol) {
                                    n += "m=application 0 DTLS/SCTP 5000\r\n"
                                } else {
                                    n += "m=application 0 " + e.protocol + " webrtc-datachannel\r\n"
                                }
                            } else if ("audio" === e.kind) {
                                n += "m=audio 0 UDP/TLS/RTP/SAVPF 0\r\na=rtpmap:0 PCMU/8000\r\n"
                            } else if ("video" === e.kind) {
                                n += "m=video 0 UDP/TLS/RTP/SAVPF 120\r\na=rtpmap:120 VP8/90000\r\n"
                            }
                            n += "c=IN IP4 0.0.0.0\r\na=inactive\r\na=mid:" + e.mid + "\r\n";
                            return
                        }
                        if (e.stream) {
                            var c;
                            if ("audio" === e.kind) {
                                c = e.stream.getAudioTracks()[0]
                            } else if ("video" === e.kind) {
                                c = e.stream.getVideoTracks()[0]
                            }
                            if (c) {
                                if (15019 <= t && "video" === e.kind && !e.sendEncodingParameters[0].rtx) {
                                    e.sendEncodingParameters[0].rtx = {
                                        ssrc: e.sendEncodingParameters[0].ssrc + 1
                                    }
                                }
                            }
                        }
                        var d = i(e.localCapabilities, e.remoteCapabilities),
                            p = d.codecs.filter(function(e) {
                                return "rtx" === e.name.toLowerCase()
                            }).length;
                        if (!p && e.sendEncodingParameters[0].rtx) {
                            delete e.sendEncodingParameters[0].rtx
                        }
                        n += a(e, d, "answer", e.stream, r._dtlsRole);
                        if (e.rtcpParameters && e.rtcpParameters.reducedSize) {
                            n += "a=rtcp-rsize\r\n"
                        }
                    });
                    var s = new e.RTCSessionDescription({
                        type: "answer",
                        sdp: n
                    });
                    return Promise.resolve(s)
                };
                g.prototype.addIceCandidate = function(e) {
                    var t = this,
                        r;
                    if (e && !(e.sdpMLineIndex !== void 0 || e.sdpMid)) {
                        return Promise.reject(new TypeError("sdpMLineIndex or sdpMid required"))
                    }
                    return new Promise(function(a, n) {
                        if (!t._remoteDescription) {
                            return n(c("InvalidStateError", "Can not add ICE candidate without a remote description"))
                        } else if (!e || "" === e.candidate) {
                            for (var o = 0; o < t.transceivers.length; o++) {
                                if (t.transceivers[o].rejected) {
                                    continue
                                }
                                t.transceivers[o].iceTransport.addRemoteCandidate({});
                                r = d.getMediaSections(t._remoteDescription.sdp);
                                r[o] += "a=end-of-candidates\r\n";
                                t._remoteDescription.sdp = d.getDescription(t._remoteDescription.sdp) + r.join("");
                                if (t.usingBundle) {
                                    break
                                }
                            }
                        } else {
                            var p = e.sdpMLineIndex;
                            if (e.sdpMid) {
                                for (var m = 0; m < t.transceivers.length; m++) {
                                    if (t.transceivers[m].mid === e.sdpMid) {
                                        p = m;
                                        break
                                    }
                                }
                            }
                            var l = t.transceivers[p];
                            if (l) {
                                if (l.rejected) {
                                    return a()
                                }
                                var g = 0 < Object.keys(e.candidate).length ? d.parseCandidate(e.candidate) : {};
                                if ("tcp" === g.protocol && (0 === g.port || 9 === g.port)) {
                                    return a()
                                }
                                if (g.component && 1 !== g.component) {
                                    return a()
                                }
                                if (0 === p || 0 < p && l.iceTransport !== t.transceivers[0].iceTransport) {
                                    if (!s(l.iceTransport, g)) {
                                        return n(c("OperationError", "Can not add ICE candidate"))
                                    }
                                }
                                var h = e.candidate.trim();
                                if (0 === h.indexOf("a=")) {
                                    h = h.substr(2)
                                }
                                r = d.getMediaSections(t._remoteDescription.sdp);
                                r[p] += "a=" + (g.type ? h : "end-of-candidates") + "\r\n";
                                t._remoteDescription.sdp = d.getDescription(t._remoteDescription.sdp) + r.join("")
                            } else {
                                return n(c("OperationError", "Can not add ICE candidate"))
                            }
                        }
                        a()
                    })
                };
                g.prototype.getStats = function(t) {
                    if (t && t instanceof e.MediaStreamTrack) {
                        var r = null;
                        this.transceivers.forEach(function(e) {
                            if (e.rtpSender && e.rtpSender.track === t) {
                                r = e.rtpSender
                            } else if (e.rtpReceiver && e.rtpReceiver.track === t) {
                                r = e.rtpReceiver
                            }
                        });
                        if (!r) {
                            throw c("InvalidAccessError", "Invalid selector.")
                        }
                        return r.getStats()
                    }
                    var a = [];
                    this.transceivers.forEach(function(e) {
                        ["rtpSender", "rtpReceiver", "iceGatherer", "iceTransport", "dtlsTransport"].forEach(function(t) {
                            if (e[t]) {
                                a.push(e[t].getStats())
                            }
                        })
                    });
                    return Promise.all(a).then(function(e) {
                        var t = new Map;
                        e.forEach(function(e) {
                            e.forEach(function(e) {
                                t.set(e.id, e)
                            })
                        });
                        return t
                    })
                };
                ["RTCRtpSender", "RTCRtpReceiver", "RTCIceGatherer", "RTCIceTransport", "RTCDtlsTransport"].forEach(function(t) {
                    var a = e[t];
                    if (a && a.prototype && a.prototype.getStats) {
                        var n = a.prototype.getStats;
                        a.prototype.getStats = function() {
                            return n.apply(this).then(function(e) {
                                var t = new Map;
                                Object.keys(e).forEach(function(a) {
                                    e[a].type = r(e[a]);
                                    t.set(a, e[a])
                                });
                                return t
                            })
                        }
                    }
                });
                var h = ["createOffer", "createAnswer"];
                h.forEach(function(e) {
                    var t = g.prototype[e];
                    g.prototype[e] = function() {
                        var e = arguments;
                        if ("function" == typeof e[0] || "function" == typeof e[1]) {
                            return t.apply(this, [arguments[2]]).then(function(t) {
                                if ("function" == typeof e[0]) {
                                    e[0].apply(null, [t])
                                }
                            }, function(t) {
                                if ("function" == typeof e[1]) {
                                    e[1].apply(null, [t])
                                }
                            })
                        }
                        return t.apply(this, arguments)
                    }
                });
                h = ["setLocalDescription", "setRemoteDescription", "addIceCandidate"];
                h.forEach(function(e) {
                    var t = g.prototype[e];
                    g.prototype[e] = function() {
                        var e = arguments;
                        if ("function" == typeof e[1] || "function" == typeof e[2]) {
                            return t.apply(this, arguments).then(function() {
                                if ("function" == typeof e[1]) {
                                    e[1].apply(null)
                                }
                            }, function(t) {
                                if ("function" == typeof e[2]) {
                                    e[2].apply(null, [t])
                                }
                            })
                        }
                        return t.apply(this, arguments)
                    }
                });
                ["getStats"].forEach(function(e) {
                    var t = g.prototype[e];
                    g.prototype[e] = function() {
                        var e = arguments;
                        if ("function" == typeof e[1]) {
                            return t.apply(this, arguments).then(function() {
                                if ("function" == typeof e[1]) {
                                    e[1].apply(null)
                                }
                            })
                        }
                        return t.apply(this, arguments)
                    }
                });
                return g
            }
        }, {
            sdp: 2
        }],
        2: [function(e, t) {
            'use strict';
            var r = {
                generateIdentifier: function() {
                    return Math.random().toString(36).substr(2, 10)
                }
            };
            r.localCName = r.generateIdentifier();
            r.splitLines = function(e) {
                return e.trim().split("\n").map(function(e) {
                    return e.trim()
                })
            };
            r.splitSections = function(e) {
                var t = e.split("\nm=");
                return t.map(function(e, t) {
                    return (0 < t ? "m=" + e : e).trim() + "\r\n"
                })
            };
            r.getDescription = function(e) {
                var t = r.splitSections(e);
                return t && t[0]
            };
            r.getMediaSections = function(e) {
                var t = r.splitSections(e);
                t.shift();
                return t
            };
            r.matchPrefix = function(e, t) {
                return r.splitLines(e).filter(function(e) {
                    return 0 === e.indexOf(t)
                })
            };
            r.parseCandidate = function(e) {
                var t;
                if (0 === e.indexOf("a=candidate:")) {
                    t = e.substring(12).split(" ")
                } else {
                    t = e.substring(10).split(" ")
                }
                for (var r = {
                        foundation: t[0],
                        component: parseInt(t[1], 10),
                        protocol: t[2].toLowerCase(),
                        priority: parseInt(t[3], 10),
                        ip: t[4],
                        address: t[4],
                        port: parseInt(t[5], 10),
                        type: t[7]
                    }, a = 8; a < t.length; a += 2) {
                    switch (t[a]) {
                        case "raddr":
                            r.relatedAddress = t[a + 1];
                            break;
                        case "rport":
                            r.relatedPort = parseInt(t[a + 1], 10);
                            break;
                        case "tcptype":
                            r.tcpType = t[a + 1];
                            break;
                        case "ufrag":
                            r.ufrag = t[a + 1];
                            r.usernameFragment = t[a + 1];
                            break;
                        default:
                            r[t[a]] = t[a + 1];
                            break;
                    }
                }
                return r
            };
            r.writeCandidate = function(e) {
                var t = [e.foundation, e.component, e.protocol.toUpperCase(), e.priority, e.address || e.ip, e.port],
                    r = e.type;
                t.push("typ");
                t.push(r);
                if ("host" !== r && e.relatedAddress && e.relatedPort) {
                    t.push("raddr");
                    t.push(e.relatedAddress);
                    t.push("rport");
                    t.push(e.relatedPort)
                }
                if (e.tcpType && "tcp" === e.protocol.toLowerCase()) {
                    t.push("tcptype");
                    t.push(e.tcpType)
                }
                if (e.usernameFragment || e.ufrag) {
                    t.push("ufrag");
                    t.push(e.usernameFragment || e.ufrag)
                }
                return "candidate:" + t.join(" ")
            };
            r.parseIceOptions = function(e) {
                return e.substr(14).split(" ")
            };
            r.parseRtpMap = function(e) {
                var t = e.substr(9).split(" "),
                    r = {
                        payloadType: parseInt(t.shift(), 10)
                    };
                t = t[0].split("/");
                r.name = t[0];
                r.clockRate = parseInt(t[1], 10);
                r.channels = 3 === t.length ? parseInt(t[2], 10) : 1;
                r.numChannels = r.channels;
                return r
            };
            r.writeRtpMap = function(e) {
                var t = e.payloadType;
                if (e.preferredPayloadType !== void 0) {
                    t = e.preferredPayloadType
                }
                var r = e.channels || e.numChannels || 1;
                return "a=rtpmap:" + t + " " + e.name + "/" + e.clockRate + (1 !== r ? "/" + r : "") + "\r\n"
            };
            r.parseExtmap = function(e) {
                var t = e.substr(9).split(" ");
                return {
                    id: parseInt(t[0], 10),
                    direction: 0 < t[0].indexOf("/") ? t[0].split("/")[1] : "sendrecv",
                    uri: t[1]
                }
            };
            r.writeExtmap = function(e) {
                return "a=extmap:" + (e.id || e.preferredId) + (e.direction && "sendrecv" !== e.direction ? "/" + e.direction : "") + " " + e.uri + "\r\n"
            };
            r.parseFmtp = function(e) {
                for (var t = {}, r, a = e.substr(e.indexOf(" ") + 1).split(";"), n = 0; n < a.length; n++) {
                    r = a[n].trim().split("=");
                    t[r[0].trim()] = r[1]
                }
                return t
            };
            r.writeFmtp = function(e) {
                var t = "",
                    r = e.payloadType;
                if (e.preferredPayloadType !== void 0) {
                    r = e.preferredPayloadType
                }
                if (e.parameters && Object.keys(e.parameters).length) {
                    var a = [];
                    Object.keys(e.parameters).forEach(function(t) {
                        if (e.parameters[t]) {
                            a.push(t + "=" + e.parameters[t])
                        } else {
                            a.push(t)
                        }
                    });
                    t += "a=fmtp:" + r + " " + a.join(";") + "\r\n"
                }
                return t
            };
            r.parseRtcpFb = function(e) {
                var t = e.substr(e.indexOf(" ") + 1).split(" ");
                return {
                    type: t.shift(),
                    parameter: t.join(" ")
                }
            };
            r.writeRtcpFb = function(e) {
                var t = "",
                    r = e.payloadType;
                if (e.preferredPayloadType !== void 0) {
                    r = e.preferredPayloadType
                }
                if (e.rtcpFeedback && e.rtcpFeedback.length) {
                    e.rtcpFeedback.forEach(function(e) {
                        t += "a=rtcp-fb:" + r + " " + e.type + (e.parameter && e.parameter.length ? " " + e.parameter : "") + "\r\n"
                    })
                }
                return t
            };
            r.parseSsrcMedia = function(e) {
                var t = e.indexOf(" "),
                    r = {
                        ssrc: parseInt(e.substr(7, t - 7), 10)
                    },
                    a = e.indexOf(":", t);
                if (-1 < a) {
                    r.attribute = e.substr(t + 1, a - t - 1);
                    r.value = e.substr(a + 1)
                } else {
                    r.attribute = e.substr(t + 1)
                }
                return r
            };
            r.parseSsrcGroup = function(e) {
                var t = e.substr(13).split(" ");
                return {
                    semantics: t.shift(),
                    ssrcs: t.map(function(e) {
                        return parseInt(e, 10)
                    })
                }
            };
            r.getMid = function(e) {
                var t = r.matchPrefix(e, "a=mid:")[0];
                if (t) {
                    return t.substr(6)
                }
            };
            r.parseFingerprint = function(e) {
                var t = e.substr(14).split(" ");
                return {
                    algorithm: t[0].toLowerCase(),
                    value: t[1]
                }
            };
            r.getDtlsParameters = function(e, t) {
                var a = r.matchPrefix(e + t, "a=fingerprint:");
                return {
                    role: "auto",
                    fingerprints: a.map(r.parseFingerprint)
                }
            };
            r.writeDtlsParameters = function(e, t) {
                var r = "a=setup:" + t + "\r\n";
                e.fingerprints.forEach(function(e) {
                    r += "a=fingerprint:" + e.algorithm + " " + e.value + "\r\n"
                });
                return r
            };
            r.getIceParameters = function(e, t) {
                var a = r.splitLines(e);
                a = a.concat(r.splitLines(t));
                var n = {
                    usernameFragment: a.filter(function(e) {
                        return 0 === e.indexOf("a=ice-ufrag:")
                    })[0].substr(12),
                    password: a.filter(function(e) {
                        return 0 === e.indexOf("a=ice-pwd:")
                    })[0].substr(10)
                };
                return n
            };
            r.writeIceParameters = function(e) {
                return "a=ice-ufrag:" + e.usernameFragment + "\r\na=ice-pwd:" + e.password + "\r\n"
            };
            r.parseRtpParameters = function(e) {
                for (var t = {
                        codecs: [],
                        headerExtensions: [],
                        fecMechanisms: [],
                        rtcp: []
                    }, a = r.splitLines(e), n = a[0].split(" "), o = 3; o < n.length; o++) {
                    var s = n[o],
                        c = r.matchPrefix(e, "a=rtpmap:" + s + " ")[0];
                    if (c) {
                        var d = r.parseRtpMap(c),
                            p = r.matchPrefix(e, "a=fmtp:" + s + " ");
                        d.parameters = p.length ? r.parseFmtp(p[0]) : {};
                        d.rtcpFeedback = r.matchPrefix(e, "a=rtcp-fb:" + s + " ").map(r.parseRtcpFb);
                        t.codecs.push(d);
                        switch (d.name.toUpperCase()) {
                            case "RED":
                            case "ULPFEC":
                                t.fecMechanisms.push(d.name.toUpperCase());
                                break;
                            default:
                                break;
                        }
                    }
                }
                r.matchPrefix(e, "a=extmap:").forEach(function(e) {
                    t.headerExtensions.push(r.parseExtmap(e))
                });
                return t
            };
            r.writeRtpDescription = function(e, t) {
                var a = "";
                a += "m=" + e + " ";
                a += 0 < t.codecs.length ? "9" : "0";
                a += " UDP/TLS/RTP/SAVPF ";
                a += t.codecs.map(function(e) {
                    if (e.preferredPayloadType !== void 0) {
                        return e.preferredPayloadType
                    }
                    return e.payloadType
                }).join(" ") + "\r\n";
                a += "c=IN IP4 0.0.0.0\r\n";
                a += "a=rtcp:9 IN IP4 0.0.0.0\r\n";
                t.codecs.forEach(function(e) {
                    a += r.writeRtpMap(e);
                    a += r.writeFmtp(e);
                    a += r.writeRtcpFb(e)
                });
                var n = 0;
                t.codecs.forEach(function(e) {
                    if (e.maxptime > n) {
                        n = e.maxptime
                    }
                });
                if (0 < n) {
                    a += "a=maxptime:" + n + "\r\n"
                }
                a += "a=rtcp-mux\r\n";
                if (t.headerExtensions) {
                    t.headerExtensions.forEach(function(e) {
                        a += r.writeExtmap(e)
                    })
                }
                return a
            };
            r.parseRtpEncodingParameters = function(e) {
                var t = [],
                    a = r.parseRtpParameters(e),
                    n = -1 !== a.fecMechanisms.indexOf("RED"),
                    i = -1 !== a.fecMechanisms.indexOf("ULPFEC"),
                    o = r.matchPrefix(e, "a=ssrc:").map(function(e) {
                        return r.parseSsrcMedia(e)
                    }).filter(function(e) {
                        return "cname" === e.attribute
                    }),
                    s = 0 < o.length && o[0].ssrc,
                    c, d = r.matchPrefix(e, "a=ssrc-group:FID").map(function(e) {
                        var t = e.substr(17).split(" ");
                        return t.map(function(e) {
                            return parseInt(e, 10)
                        })
                    });
                if (0 < d.length && 1 < d[0].length && d[0][0] === s) {
                    c = d[0][1]
                }
                a.codecs.forEach(function(e) {
                    if ("RTX" === e.name.toUpperCase() && e.parameters.apt) {
                        var r = {
                            ssrc: s,
                            codecPayloadType: parseInt(e.parameters.apt, 10)
                        };
                        if (s && c) {
                            r.rtx = {
                                ssrc: c
                            }
                        }
                        t.push(r);
                        if (n) {
                            r = JSON.parse(JSON.stringify(r));
                            r.fec = {
                                ssrc: s,
                                mechanism: i ? "red+ulpfec" : "red"
                            };
                            t.push(r)
                        }
                    }
                });
                if (0 === t.length && s) {
                    t.push({
                        ssrc: s
                    })
                }
                var p = r.matchPrefix(e, "b=");
                if (p.length) {
                    if (0 === p[0].indexOf("b=TIAS:")) {
                        p = parseInt(p[0].substr(7), 10)
                    } else if (0 === p[0].indexOf("b=AS:")) {
                        p = .95 * (1e3 * parseInt(p[0].substr(5), 10)) - 16000
                    } else {
                        p = void 0
                    }
                    t.forEach(function(e) {
                        e.maxBitrate = p
                    })
                }
                return t
            };
            r.parseRtcpParameters = function(e) {
                var t = {},
                    a = r.matchPrefix(e, "a=ssrc:").map(function(e) {
                        return r.parseSsrcMedia(e)
                    }).filter(function(e) {
                        return "cname" === e.attribute
                    })[0];
                if (a) {
                    t.cname = a.value;
                    t.ssrc = a.ssrc
                }
                var n = r.matchPrefix(e, "a=rtcp-rsize");
                t.reducedSize = 0 < n.length;
                t.compound = 0 === n.length;
                var i = r.matchPrefix(e, "a=rtcp-mux");
                t.mux = 0 < i.length;
                return t
            };
            r.parseMsid = function(e) {
                var t, a = r.matchPrefix(e, "a=msid:");
                if (1 === a.length) {
                    t = a[0].substr(7).split(" ");
                    return {
                        stream: t[0],
                        track: t[1]
                    }
                }
                var n = r.matchPrefix(e, "a=ssrc:").map(function(e) {
                    return r.parseSsrcMedia(e)
                }).filter(function(e) {
                    return "msid" === e.attribute
                });
                if (0 < n.length) {
                    t = n[0].value.split(" ");
                    return {
                        stream: t[0],
                        track: t[1]
                    }
                }
            };
            r.generateSessionId = function() {
                return Math.random().toString().substr(2, 21)
            };
            r.writeSessionBoilerplate = function(e, t, a) {
                var n, i = t !== void 0 ? t : 2;
                if (e) {
                    n = e
                } else {
                    n = r.generateSessionId()
                }
                return "v=0\r\no=" + (a || "thisisadapterortc") + " " + n + " " + i + " IN IP4 127.0.0.1\r\ns=-\r\nt=0 0\r\n"
            };
            r.writeMediaSection = function(e, t, a, n) {
                var i = r.writeRtpDescription(e.kind, t);
                i += r.writeIceParameters(e.iceGatherer.getLocalParameters());
                i += r.writeDtlsParameters(e.dtlsTransport.getLocalParameters(), "offer" === a ? "actpass" : "active");
                i += "a=mid:" + e.mid + "\r\n";
                if (e.direction) {
                    i += "a=" + e.direction + "\r\n"
                } else if (e.rtpSender && e.rtpReceiver) {
                    i += "a=sendrecv\r\n"
                } else if (e.rtpSender) {
                    i += "a=sendonly\r\n"
                } else if (e.rtpReceiver) {
                    i += "a=recvonly\r\n"
                } else {
                    i += "a=inactive\r\n"
                }
                if (e.rtpSender) {
                    var o = "msid:" + n.id + " " + e.rtpSender.track.id + "\r\n";
                    i += "a=" + o;
                    i += "a=ssrc:" + e.sendEncodingParameters[0].ssrc + " " + o;
                    if (e.sendEncodingParameters[0].rtx) {
                        i += "a=ssrc:" + e.sendEncodingParameters[0].rtx.ssrc + " " + o;
                        i += "a=ssrc-group:FID " + e.sendEncodingParameters[0].ssrc + " " + e.sendEncodingParameters[0].rtx.ssrc + "\r\n"
                    }
                }
                i += "a=ssrc:" + e.sendEncodingParameters[0].ssrc + " cname:" + r.localCName + "\r\n";
                if (e.rtpSender && e.sendEncodingParameters[0].rtx) {
                    i += "a=ssrc:" + e.sendEncodingParameters[0].rtx.ssrc + " cname:" + r.localCName + "\r\n"
                }
                return i
            };
            r.getDirection = function(e, t) {
                for (var a = r.splitLines(e), n = 0; n < a.length; n++) {
                    switch (a[n]) {
                        case "a=sendrecv":
                        case "a=sendonly":
                        case "a=recvonly":
                        case "a=inactive":
                            return a[n].substr(2);
                        default:
                    }
                }
                if (t) {
                    return r.getDirection(t)
                }
                return "sendrecv"
            };
            r.getKind = function(e) {
                var t = r.splitLines(e),
                    a = t[0].split(" ");
                return a[0].substr(2)
            };
            r.isRejected = function(e) {
                return "0" === e.split(" ", 2)[1]
            };
            r.parseMLine = function(e) {
                var t = r.splitLines(e),
                    a = t[0].substr(2).split(" ");
                return {
                    kind: a[0],
                    port: parseInt(a[1], 10),
                    protocol: a[2],
                    fmt: a.slice(3).join(" ")
                }
            };
            r.parseOLine = function(e) {
                var t = r.matchPrefix(e, "o=")[0],
                    a = t.substr(2).split(" ");
                return {
                    username: a[0],
                    sessionId: a[1],
                    sessionVersion: parseInt(a[2], 10),
                    netType: a[3],
                    addressType: a[4],
                    address: a[5]
                }
            };
            r.isValidSDP = function(e) {
                if ("string" != typeof e || 0 === e.length) {
                    return !1
                }
                for (var t = r.splitLines(e), a = 0; a < t.length; a++) {
                    if (2 > t[a].length || "=" !== t[a].charAt(1)) {
                        return !1
                    }
                }
                return !0
            };
            if ("object" === _typeof(t)) {
                t.exports = r
            }
        }, {}],
        3: [function(e, t) {
            (function(r) {
                'use strict';
                var a = e("./adapter_factory.js");
                t.exports = a({
                    window: r.window
                })
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {
            "./adapter_factory.js": 4
        }],
        4: [function(e, t) {
            'use strict';
            var r = e("./utils");
            t.exports = function(t, a) {
                var n = t && t.window,
                    i = {
                        shimChrome: !0,
                        shimFirefox: !0,
                        shimEdge: !0,
                        shimSafari: !0
                    };
                for (var o in a) {
                    if (hasOwnProperty.call(a, o)) {
                        i[o] = a[o]
                    }
                }
                var s = r.log,
                    c = r.detectBrowser(n),
                    d = e("./chrome/chrome_shim") || null,
                    p = e("./edge/edge_shim") || null,
                    m = e("./firefox/firefox_shim") || null,
                    l = e("./safari/safari_shim") || null,
                    g = e("./common_shim") || null,
                    h = {
                        browserDetails: c,
                        commonShim: g,
                        extractVersion: r.extractVersion,
                        disableLog: r.disableLog,
                        disableWarnings: r.disableWarnings
                    };
                switch (c.browser) {
                    case "chrome":
                        if (!d || !d.shimPeerConnection || !i.shimChrome) {
                            s("Chrome shim is not included in this adapter release.");
                            return h
                        }
                        s("adapter.js shimming chrome.");
                        h.browserShim = d;
                        g.shimCreateObjectURL(n);
                        d.shimGetUserMedia(n);
                        d.shimMediaStream(n);
                        d.shimSourceObject(n);
                        d.shimPeerConnection(n);
                        d.shimOnTrack(n);
                        d.shimAddTrackRemoveTrack(n);
                        d.shimGetSendersWithDtmf(n);
                        d.shimSenderReceiverGetStats(n);
                        d.fixNegotiationNeeded(n);
                        g.shimRTCIceCandidate(n);
                        g.shimMaxMessageSize(n);
                        g.shimSendThrowTypeError(n);
                        break;
                    case "firefox":
                        if (!m || !m.shimPeerConnection || !i.shimFirefox) {
                            s("Firefox shim is not included in this adapter release.");
                            return h
                        }
                        s("adapter.js shimming firefox.");
                        h.browserShim = m;
                        g.shimCreateObjectURL(n);
                        m.shimGetUserMedia(n);
                        m.shimSourceObject(n);
                        m.shimPeerConnection(n);
                        m.shimOnTrack(n);
                        m.shimRemoveStream(n);
                        m.shimSenderGetStats(n);
                        m.shimReceiverGetStats(n);
                        m.shimRTCDataChannel(n);
                        g.shimRTCIceCandidate(n);
                        g.shimMaxMessageSize(n);
                        g.shimSendThrowTypeError(n);
                        break;
                    case "edge":
                        if (!p || !p.shimPeerConnection || !i.shimEdge) {
                            s("MS edge shim is not included in this adapter release.");
                            return h
                        }
                        s("adapter.js shimming edge.");
                        h.browserShim = p;
                        g.shimCreateObjectURL(n);
                        p.shimGetUserMedia(n);
                        p.shimPeerConnection(n);
                        p.shimReplaceTrack(n);
                        g.shimMaxMessageSize(n);
                        g.shimSendThrowTypeError(n);
                        break;
                    case "safari":
                        if (!l || !i.shimSafari) {
                            s("Safari shim is not included in this adapter release.");
                            return h
                        }
                        s("adapter.js shimming safari.");
                        h.browserShim = l;
                        g.shimCreateObjectURL(n);
                        l.shimRTCIceServerUrls(n);
                        l.shimCreateOfferLegacy(n);
                        l.shimCallbacksAPI(n);
                        l.shimLocalStreamsAPI(n);
                        l.shimRemoteStreamsAPI(n);
                        l.shimTrackEventTransceiver(n);
                        l.shimGetUserMedia(n);
                        g.shimRTCIceCandidate(n);
                        g.shimMaxMessageSize(n);
                        g.shimSendThrowTypeError(n);
                        break;
                    default:
                        s("Unsupported browser!");
                        break;
                }
                return h
            }
        }, {
            "./chrome/chrome_shim": 5,
            "./common_shim": 7,
            "./edge/edge_shim": 8,
            "./firefox/firefox_shim": 11,
            "./safari/safari_shim": 13,
            "./utils": 14
        }],
        5: [function(e, t) {
            'use strict';
            var n = e("../utils.js"),
                i = n.log;

            function r(e, t, a) {
                if (!t || a.has(t.id)) {
                    return
                }
                a.set(t.id, t);
                Object.keys(t).forEach(function(n) {
                    if (n.endsWith("Id")) {
                        r(e, e.get(t[n]), a)
                    } else if (n.endsWith("Ids")) {
                        t[n].forEach(function(t) {
                            r(e, e.get(t), a)
                        })
                    }
                })
            }

            function a(e, t, a) {
                var n = a ? "outbound-rtp" : "inbound-rtp",
                    i = new Map;
                if (null === t) {
                    return i
                }
                var o = [];
                e.forEach(function(e) {
                    if ("track" === e.type && e.trackIdentifier === t.id) {
                        o.push(e)
                    }
                });
                o.forEach(function(t) {
                    e.forEach(function(a) {
                        if (a.type === n && a.trackId === t.id) {
                            r(e, a, i)
                        }
                    })
                });
                return i
            }
            t.exports = {
                shimGetUserMedia: e("./getusermedia"),
                shimMediaStream: function shimMediaStream(e) {
                    e.MediaStream = e.MediaStream || e.webkitMediaStream
                },
                shimOnTrack: function shimOnTrack(t) {
                    if ("object" === _typeof(t) && t.RTCPeerConnection && !("ontrack" in t.RTCPeerConnection.prototype)) {
                        Object.defineProperty(t.RTCPeerConnection.prototype, "ontrack", {
                            get: function get() {
                                return this._ontrack
                            },
                            set: function set(e) {
                                if (this._ontrack) {
                                    this.removeEventListener("track", this._ontrack)
                                }
                                this.addEventListener("track", this._ontrack = e)
                            },
                            enumerable: !0,
                            configurable: !0
                        });
                        var r = t.RTCPeerConnection.prototype.setRemoteDescription;
                        t.RTCPeerConnection.prototype.setRemoteDescription = function() {
                            var a = this;
                            if (!a._ontrackpoly) {
                                a._ontrackpoly = function(r) {
                                    r.stream.addEventListener("addtrack", function(e) {
                                        var n;
                                        if (t.RTCPeerConnection.prototype.getReceivers) {
                                            n = a.getReceivers().find(function(t) {
                                                return t.track && t.track.id === e.track.id
                                            })
                                        } else {
                                            n = {
                                                track: e.track
                                            }
                                        }
                                        var i = new Event("track");
                                        i.track = e.track;
                                        i.receiver = n;
                                        i.transceiver = {
                                            receiver: n
                                        };
                                        i.streams = [r.stream];
                                        a.dispatchEvent(i)
                                    });
                                    r.stream.getTracks().forEach(function(e) {
                                        var n;
                                        if (t.RTCPeerConnection.prototype.getReceivers) {
                                            n = a.getReceivers().find(function(t) {
                                                return t.track && t.track.id === e.id
                                            })
                                        } else {
                                            n = {
                                                track: e
                                            }
                                        }
                                        var i = new Event("track");
                                        i.track = e;
                                        i.receiver = n;
                                        i.transceiver = {
                                            receiver: n
                                        };
                                        i.streams = [r.stream];
                                        a.dispatchEvent(i)
                                    })
                                };
                                a.addEventListener("addstream", a._ontrackpoly)
                            }
                            return r.apply(a, arguments)
                        }
                    } else {
                        n.wrapPeerConnectionEvent(t, "track", function(t) {
                            if (!t.transceiver) {
                                Object.defineProperty(t, "transceiver", {
                                    value: {
                                        receiver: t.receiver
                                    }
                                })
                            }
                            return t
                        })
                    }
                },
                shimGetSendersWithDtmf: function shimGetSendersWithDtmf(e) {
                    if ("object" === _typeof(e) && e.RTCPeerConnection && !("getSenders" in e.RTCPeerConnection.prototype) && "createDTMFSender" in e.RTCPeerConnection.prototype) {
                        var t = function(e, t) {
                            return {
                                track: t,
                                get dtmf() {
                                    if (this._dtmf === void 0) {
                                        if ("audio" === t.kind) {
                                            this._dtmf = e.createDTMFSender(t)
                                        } else {
                                            this._dtmf = null
                                        }
                                    }
                                    return this._dtmf
                                },
                                _pc: e
                            }
                        };
                        if (!e.RTCPeerConnection.prototype.getSenders) {
                            e.RTCPeerConnection.prototype.getSenders = function() {
                                this._senders = this._senders || [];
                                return this._senders.slice()
                            };
                            var r = e.RTCPeerConnection.prototype.addTrack;
                            e.RTCPeerConnection.prototype.addTrack = function(e) {
                                var a = this,
                                    n = r.apply(a, arguments);
                                if (!n) {
                                    n = t(a, e);
                                    a._senders.push(n)
                                }
                                return n
                            };
                            var a = e.RTCPeerConnection.prototype.removeTrack;
                            e.RTCPeerConnection.prototype.removeTrack = function(e) {
                                var t = this;
                                a.apply(t, arguments);
                                var r = t._senders.indexOf(e);
                                if (-1 !== r) {
                                    t._senders.splice(r, 1)
                                }
                            }
                        }
                        var n = e.RTCPeerConnection.prototype.addStream;
                        e.RTCPeerConnection.prototype.addStream = function(e) {
                            var r = this;
                            r._senders = r._senders || [];
                            n.apply(r, [e]);
                            e.getTracks().forEach(function(e) {
                                r._senders.push(t(r, e))
                            })
                        };
                        var i = e.RTCPeerConnection.prototype.removeStream;
                        e.RTCPeerConnection.prototype.removeStream = function(e) {
                            var t = this;
                            t._senders = t._senders || [];
                            i.apply(t, [e]);
                            e.getTracks().forEach(function(e) {
                                var r = t._senders.find(function(t) {
                                    return t.track === e
                                });
                                if (r) {
                                    t._senders.splice(t._senders.indexOf(r), 1)
                                }
                            })
                        }
                    } else if ("object" === _typeof(e) && e.RTCPeerConnection && "getSenders" in e.RTCPeerConnection.prototype && "createDTMFSender" in e.RTCPeerConnection.prototype && e.RTCRtpSender && !("dtmf" in e.RTCRtpSender.prototype)) {
                        var o = e.RTCPeerConnection.prototype.getSenders;
                        e.RTCPeerConnection.prototype.getSenders = function() {
                            var e = this,
                                t = o.apply(e, []);
                            t.forEach(function(t) {
                                t._pc = e
                            });
                            return t
                        };
                        Object.defineProperty(e.RTCRtpSender.prototype, "dtmf", {
                            get: function get() {
                                if (this._dtmf === void 0) {
                                    if ("audio" === this.track.kind) {
                                        this._dtmf = this._pc.createDTMFSender(this.track)
                                    } else {
                                        this._dtmf = null
                                    }
                                }
                                return this._dtmf
                            }
                        })
                    }
                },
                shimSenderReceiverGetStats: function shimSenderReceiverGetStats(e) {
                    if (!("object" === _typeof(e) && e.RTCPeerConnection && e.RTCRtpSender && e.RTCRtpReceiver)) {
                        return
                    }
                    if (!("getStats" in e.RTCRtpSender.prototype)) {
                        var t = e.RTCPeerConnection.prototype.getSenders;
                        if (t) {
                            e.RTCPeerConnection.prototype.getSenders = function() {
                                var e = this,
                                    r = t.apply(e, []);
                                r.forEach(function(t) {
                                    t._pc = e
                                });
                                return r
                            }
                        }
                        var r = e.RTCPeerConnection.prototype.addTrack;
                        if (r) {
                            e.RTCPeerConnection.prototype.addTrack = function() {
                                var e = r.apply(this, arguments);
                                e._pc = this;
                                return e
                            }
                        }
                        e.RTCRtpSender.prototype.getStats = function() {
                            var e = this;
                            return this._pc.getStats().then(function(t) {
                                return a(t, e.track, !0)
                            })
                        }
                    }
                    if (!("getStats" in e.RTCRtpReceiver.prototype)) {
                        var i = e.RTCPeerConnection.prototype.getReceivers;
                        if (i) {
                            e.RTCPeerConnection.prototype.getReceivers = function() {
                                var e = this,
                                    t = i.apply(e, []);
                                t.forEach(function(t) {
                                    t._pc = e
                                });
                                return t
                            }
                        }
                        n.wrapPeerConnectionEvent(e, "track", function(t) {
                            t.receiver._pc = t.srcElement;
                            return t
                        });
                        e.RTCRtpReceiver.prototype.getStats = function() {
                            var e = this;
                            return this._pc.getStats().then(function(t) {
                                return a(t, e.track, !1)
                            })
                        }
                    }
                    if (!("getStats" in e.RTCRtpSender.prototype && "getStats" in e.RTCRtpReceiver.prototype)) {
                        return
                    }
                    var o = e.RTCPeerConnection.prototype.getStats;
                    e.RTCPeerConnection.prototype.getStats = function() {
                        var t = this;
                        if (0 < arguments.length && arguments[0] instanceof e.MediaStreamTrack) {
                            var a = arguments[0],
                                n, i, s;
                            t.getSenders().forEach(function(e) {
                                if (e.track === a) {
                                    if (n) {
                                        s = !0
                                    } else {
                                        n = e
                                    }
                                }
                            });
                            t.getReceivers().forEach(function(e) {
                                if (e.track === a) {
                                    if (i) {
                                        s = !0
                                    } else {
                                        i = e
                                    }
                                }
                                return e.track === a
                            });
                            if (s || n && i) {
                                return Promise.reject(new DOMException("There are more than one sender or receiver for the track.", "InvalidAccessError"))
                            } else if (n) {
                                return n.getStats()
                            } else if (i) {
                                return i.getStats()
                            }
                            return Promise.reject(new DOMException("There is no sender or receiver for the track.", "InvalidAccessError"))
                        }
                        return o.apply(t, arguments)
                    }
                },
                shimSourceObject: function shimSourceObject(e) {
                    var t = e && e.URL;
                    if ("object" === _typeof(e)) {
                        if (e.HTMLMediaElement && !("srcObject" in e.HTMLMediaElement.prototype)) {
                            Object.defineProperty(e.HTMLMediaElement.prototype, "srcObject", {
                                get: function get() {
                                    return this._srcObject
                                },
                                set: function set(e) {
                                    var r = this;
                                    this._srcObject = e;
                                    if (this.src) {
                                        t.revokeObjectURL(this.src)
                                    }
                                    if (!e) {
                                        this.src = "";
                                        return
                                    }
                                    this.src = t.createObjectURL(e);
                                    e.addEventListener("addtrack", function() {
                                        if (r.src) {
                                            t.revokeObjectURL(r.src)
                                        }
                                        r.src = t.createObjectURL(e)
                                    });
                                    e.addEventListener("removetrack", function() {
                                        if (r.src) {
                                            t.revokeObjectURL(r.src)
                                        }
                                        r.src = t.createObjectURL(e)
                                    })
                                }
                            })
                        }
                    }
                },
                shimAddTrackRemoveTrackWithNative: function shimAddTrackRemoveTrackWithNative(e) {
                    e.RTCPeerConnection.prototype.getLocalStreams = function() {
                        var e = this;
                        this._shimmedLocalStreams = this._shimmedLocalStreams || {};
                        return Object.keys(this._shimmedLocalStreams).map(function(t) {
                            return e._shimmedLocalStreams[t][0]
                        })
                    };
                    var t = e.RTCPeerConnection.prototype.addTrack;
                    e.RTCPeerConnection.prototype.addTrack = function(e, r) {
                        if (!r) {
                            return t.apply(this, arguments)
                        }
                        this._shimmedLocalStreams = this._shimmedLocalStreams || {};
                        var a = t.apply(this, arguments);
                        if (!this._shimmedLocalStreams[r.id]) {
                            this._shimmedLocalStreams[r.id] = [r, a]
                        } else if (-1 === this._shimmedLocalStreams[r.id].indexOf(a)) {
                            this._shimmedLocalStreams[r.id].push(a)
                        }
                        return a
                    };
                    var r = e.RTCPeerConnection.prototype.addStream;
                    e.RTCPeerConnection.prototype.addStream = function(e) {
                        var t = this;
                        this._shimmedLocalStreams = this._shimmedLocalStreams || {};
                        e.getTracks().forEach(function(e) {
                            var r = t.getSenders().find(function(t) {
                                return t.track === e
                            });
                            if (r) {
                                throw new DOMException("Track already exists.", "InvalidAccessError")
                            }
                        });
                        var a = t.getSenders();
                        r.apply(this, arguments);
                        var n = t.getSenders().filter(function(e) {
                            return -1 === a.indexOf(e)
                        });
                        this._shimmedLocalStreams[e.id] = [e].concat(n)
                    };
                    var a = e.RTCPeerConnection.prototype.removeStream;
                    e.RTCPeerConnection.prototype.removeStream = function(e) {
                        this._shimmedLocalStreams = this._shimmedLocalStreams || {};
                        delete this._shimmedLocalStreams[e.id];
                        return a.apply(this, arguments)
                    };
                    var n = e.RTCPeerConnection.prototype.removeTrack;
                    e.RTCPeerConnection.prototype.removeTrack = function(e) {
                        var t = this;
                        this._shimmedLocalStreams = this._shimmedLocalStreams || {};
                        if (e) {
                            Object.keys(this._shimmedLocalStreams).forEach(function(r) {
                                var a = t._shimmedLocalStreams[r].indexOf(e);
                                if (-1 !== a) {
                                    t._shimmedLocalStreams[r].splice(a, 1)
                                }
                                if (1 === t._shimmedLocalStreams[r].length) {
                                    delete t._shimmedLocalStreams[r]
                                }
                            })
                        }
                        return n.apply(this, arguments)
                    }
                },
                shimAddTrackRemoveTrack: function shimAddTrackRemoveTrack(e) {
                    var a = n.detectBrowser(e);
                    if (e.RTCPeerConnection.prototype.addTrack && 65 <= a.version) {
                        return this.shimAddTrackRemoveTrackWithNative(e)
                    }
                    var i = e.RTCPeerConnection.prototype.getLocalStreams;
                    e.RTCPeerConnection.prototype.getLocalStreams = function() {
                        var e = this,
                            t = i.apply(this);
                        e._reverseStreams = e._reverseStreams || {};
                        return t.map(function(t) {
                            return e._reverseStreams[t.id]
                        })
                    };
                    var o = e.RTCPeerConnection.prototype.addStream;
                    e.RTCPeerConnection.prototype.addStream = function(t) {
                        var r = this;
                        r._streams = r._streams || {};
                        r._reverseStreams = r._reverseStreams || {};
                        t.getTracks().forEach(function(e) {
                            var t = r.getSenders().find(function(t) {
                                return t.track === e
                            });
                            if (t) {
                                throw new DOMException("Track already exists.", "InvalidAccessError")
                            }
                        });
                        if (!r._reverseStreams[t.id]) {
                            var a = new e.MediaStream(t.getTracks());
                            r._streams[t.id] = a;
                            r._reverseStreams[a.id] = t;
                            t = a
                        }
                        o.apply(r, [t])
                    };
                    var s = e.RTCPeerConnection.prototype.removeStream;
                    e.RTCPeerConnection.prototype.removeStream = function(e) {
                        var t = this;
                        t._streams = t._streams || {};
                        t._reverseStreams = t._reverseStreams || {};
                        s.apply(t, [t._streams[e.id] || e]);
                        delete t._reverseStreams[t._streams[e.id] ? t._streams[e.id].id : e.id];
                        delete t._streams[e.id]
                    };
                    e.RTCPeerConnection.prototype.addTrack = function(r, a) {
                        var n = this;
                        if ("closed" === n.signalingState) {
                            throw new DOMException("The RTCPeerConnection's signalingState is 'closed'.", "InvalidStateError")
                        }
                        var t = [].slice.call(arguments, 1);
                        if (1 !== t.length || !t[0].getTracks().find(function(e) {
                                return e === r
                            })) {
                            throw new DOMException("The adapter.js addTrack polyfill only supports a single  stream which is associated with the specified track.", "NotSupportedError")
                        }
                        var i = n.getSenders().find(function(e) {
                            return e.track === r
                        });
                        if (i) {
                            throw new DOMException("Track already exists.", "InvalidAccessError")
                        }
                        n._streams = n._streams || {};
                        n._reverseStreams = n._reverseStreams || {};
                        var o = n._streams[a.id];
                        if (o) {
                            o.addTrack(r);
                            Promise.resolve().then(function() {
                                n.dispatchEvent(new Event("negotiationneeded"))
                            })
                        } else {
                            var s = new e.MediaStream([r]);
                            n._streams[a.id] = s;
                            n._reverseStreams[s.id] = a;
                            n.addStream(s)
                        }
                        return n.getSenders().find(function(e) {
                            return e.track === r
                        })
                    };

                    function t(e, t) {
                        var r = t.sdp;
                        Object.keys(e._reverseStreams || []).forEach(function(t) {
                            var a = e._reverseStreams[t],
                                n = e._streams[a.id];
                            r = r.replace(new RegExp(n.id, "g"), a.id)
                        });
                        return new RTCSessionDescription({
                            type: t.type,
                            sdp: r
                        })
                    }

                    function r(e, t) {
                        var r = t.sdp;
                        Object.keys(e._reverseStreams || []).forEach(function(t) {
                            var a = e._reverseStreams[t],
                                n = e._streams[a.id];
                            r = r.replace(new RegExp(a.id, "g"), n.id)
                        });
                        return new RTCSessionDescription({
                            type: t.type,
                            sdp: r
                        })
                    }["createOffer", "createAnswer"].forEach(function(r) {
                        var a = e.RTCPeerConnection.prototype[r];
                        e.RTCPeerConnection.prototype[r] = function() {
                            var e = this,
                                r = arguments,
                                n = arguments.length && "function" == typeof arguments[0];
                            if (n) {
                                return a.apply(e, [function(a) {
                                    var n = t(e, a);
                                    r[0].apply(null, [n])
                                }, function(e) {
                                    if (r[1]) {
                                        r[1].apply(null, e)
                                    }
                                }, arguments[2]])
                            }
                            return a.apply(e, arguments).then(function(r) {
                                return t(e, r)
                            })
                        }
                    });
                    var c = e.RTCPeerConnection.prototype.setLocalDescription;
                    e.RTCPeerConnection.prototype.setLocalDescription = function() {
                        var e = this;
                        if (!arguments.length || !arguments[0].type) {
                            return c.apply(e, arguments)
                        }
                        arguments[0] = r(e, arguments[0]);
                        return c.apply(e, arguments)
                    };
                    var d = Object.getOwnPropertyDescriptor(e.RTCPeerConnection.prototype, "localDescription");
                    Object.defineProperty(e.RTCPeerConnection.prototype, "localDescription", {
                        get: function get() {
                            var e = this,
                                r = d.get.apply(this);
                            if ("" === r.type) {
                                return r
                            }
                            return t(e, r)
                        }
                    });
                    e.RTCPeerConnection.prototype.removeTrack = function(e) {
                        var t = this;
                        if ("closed" === t.signalingState) {
                            throw new DOMException("The RTCPeerConnection's signalingState is 'closed'.", "InvalidStateError")
                        }
                        if (!e._pc) {
                            throw new DOMException("Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender.", "TypeError")
                        }
                        var r = e._pc === t;
                        if (!r) {
                            throw new DOMException("Sender was not created by this connection.", "InvalidAccessError")
                        }
                        t._streams = t._streams || {};
                        var a;
                        Object.keys(t._streams).forEach(function(r) {
                            var n = t._streams[r].getTracks().find(function(t) {
                                return e.track === t
                            });
                            if (n) {
                                a = t._streams[r]
                            }
                        });
                        if (a) {
                            if (1 === a.getTracks().length) {
                                t.removeStream(t._reverseStreams[a.id])
                            } else {
                                a.removeTrack(e.track)
                            }
                            t.dispatchEvent(new Event("negotiationneeded"))
                        }
                    }
                },
                shimPeerConnection: function shimPeerConnection(e) {
                    var t = n.detectBrowser(e);
                    if (!e.RTCPeerConnection && e.webkitRTCPeerConnection) {
                        e.RTCPeerConnection = function(t, r) {
                            i("PeerConnection");
                            if (t && t.iceTransportPolicy) {
                                t.iceTransports = t.iceTransportPolicy
                            }
                            return new e.webkitRTCPeerConnection(t, r)
                        };
                        e.RTCPeerConnection.prototype = e.webkitRTCPeerConnection.prototype;
                        if (e.webkitRTCPeerConnection.generateCertificate) {
                            Object.defineProperty(e.RTCPeerConnection, "generateCertificate", {
                                get: function get() {
                                    return e.webkitRTCPeerConnection.generateCertificate
                                }
                            })
                        }
                    }
                    var r = e.RTCPeerConnection.prototype.getStats;
                    e.RTCPeerConnection.prototype.getStats = function(e, t, a) {
                        var n = this,
                            i = arguments;
                        if (0 < arguments.length && "function" == typeof e) {
                            return r.apply(this, arguments)
                        }
                        if (0 === r.length && (0 === arguments.length || "function" != typeof arguments[0])) {
                            return r.apply(this, [])
                        }
                        var o = function(e) {
                                var t = {},
                                    r = e.result();
                                r.forEach(function(e) {
                                    var r = {
                                        id: e.id,
                                        timestamp: e.timestamp,
                                        type: {
                                            localcandidate: "local-candidate",
                                            remotecandidate: "remote-candidate"
                                        }[e.type] || e.type
                                    };
                                    e.names().forEach(function(t) {
                                        r[t] = e.stat(t)
                                    });
                                    t[r.id] = r
                                });
                                return t
                            },
                            s = function(e) {
                                return new Map(Object.keys(e).map(function(t) {
                                    return [t, e[t]]
                                }))
                            };
                        if (2 <= arguments.length) {
                            var c = function(e) {
                                i[1](s(o(e)))
                            };
                            return r.apply(this, [c, arguments[0]])
                        }
                        return new Promise(function(e, t) {
                            r.apply(n, [function(t) {
                                e(s(o(t)))
                            }, t])
                        }).then(t, a)
                    };
                    if (51 > t.version) {
                        ["setLocalDescription", "setRemoteDescription", "addIceCandidate"].forEach(function(t) {
                            var r = e.RTCPeerConnection.prototype[t];
                            e.RTCPeerConnection.prototype[t] = function() {
                                var e = arguments,
                                    t = this,
                                    a = new Promise(function(a, n) {
                                        r.apply(t, [e[0], a, n])
                                    });
                                if (2 > e.length) {
                                    return a
                                }
                                return a.then(function() {
                                    e[1].apply(null, [])
                                }, function(t) {
                                    if (3 <= e.length) {
                                        e[2].apply(null, [t])
                                    }
                                })
                            }
                        })
                    }
                    if (52 > t.version) {
                        ["createOffer", "createAnswer"].forEach(function(t) {
                            var r = e.RTCPeerConnection.prototype[t];
                            e.RTCPeerConnection.prototype[t] = function() {
                                var e = this;
                                if (1 > arguments.length || 1 === arguments.length && "object" === _typeof(arguments[0])) {
                                    var t = 1 === arguments.length ? arguments[0] : void 0;
                                    return new Promise(function(a, n) {
                                        r.apply(e, [a, n, t])
                                    })
                                }
                                return r.apply(this, arguments)
                            }
                        })
                    }["setLocalDescription", "setRemoteDescription", "addIceCandidate"].forEach(function(t) {
                        var r = e.RTCPeerConnection.prototype[t];
                        e.RTCPeerConnection.prototype[t] = function() {
                            arguments[0] = new("addIceCandidate" === t ? e.RTCIceCandidate : e.RTCSessionDescription)(arguments[0]);
                            return r.apply(this, arguments)
                        }
                    });
                    var a = e.RTCPeerConnection.prototype.addIceCandidate;
                    e.RTCPeerConnection.prototype.addIceCandidate = function() {
                        if (!arguments[0]) {
                            if (arguments[1]) {
                                arguments[1].apply(null)
                            }
                            return Promise.resolve()
                        }
                        return a.apply(this, arguments)
                    }
                },
                fixNegotiationNeeded: function fixNegotiationNeeded(e) {
                    n.wrapPeerConnectionEvent(e, "negotiationneeded", function(t) {
                        var e = t.target;
                        if ("stable" !== e.signalingState) {
                            return
                        }
                        return t
                    })
                },
                shimGetDisplayMedia: function shimGetDisplayMedia(e, t) {
                    if ("getDisplayMedia" in e.navigator) {
                        return
                    }
                    if ("function" != typeof t) {
                        console.error("shimGetDisplayMedia: getSourceId argument is not a function");
                        return
                    }
                    navigator.getDisplayMedia = function(e) {
                        return t(e).then(function(t) {
                            e.video = {
                                mandatory: {
                                    chromeMediaSource: "desktop",
                                    chromeMediaSourceId: t,
                                    maxFrameRate: e.video.frameRate || 3
                                }
                            };
                            return navigator.mediaDevices.getUserMedia(e)
                        })
                    }
                }
            }
        }, {
            "../utils.js": 14,
            "./getusermedia": 6
        }],
        6: [function(e, t) {
            'use strict';
            var r = e("../utils.js"),
                a = r.log;
            t.exports = function(e) {
                var t = r.detectBrowser(e),
                    n = e && e.navigator,
                    i = function(e) {
                        if ("object" !== _typeof(e) || e.mandatory || e.optional) {
                            return e
                        }
                        var t = {};
                        Object.keys(e).forEach(function(a) {
                            if ("require" === a || "advanced" === a || "mediaSource" === a) {
                                return
                            }
                            var n = "object" === _typeof(e[a]) ? e[a] : {
                                ideal: e[a]
                            };
                            if (n.exact !== void 0 && "number" == typeof n.exact) {
                                n.min = n.max = n.exact
                            }
                            var r = function(e, t) {
                                if (e) {
                                    return e + t.charAt(0).toUpperCase() + t.slice(1)
                                }
                                return "deviceId" === t ? "sourceId" : t
                            };
                            if (n.ideal !== void 0) {
                                t.optional = t.optional || [];
                                var i = {};
                                if ("number" == typeof n.ideal) {
                                    i[r("min", a)] = n.ideal;
                                    t.optional.push(i);
                                    i = {};
                                    i[r("max", a)] = n.ideal;
                                    t.optional.push(i)
                                } else {
                                    i[r("", a)] = n.ideal;
                                    t.optional.push(i)
                                }
                            }
                            if (n.exact !== void 0 && "number" != typeof n.exact) {
                                t.mandatory = t.mandatory || {};
                                t.mandatory[r("", a)] = n.exact
                            } else {
                                ["min", "max"].forEach(function(e) {
                                    if (n[e] !== void 0) {
                                        t.mandatory = t.mandatory || {};
                                        t.mandatory[r(e, a)] = n[e]
                                    }
                                })
                            }
                        });
                        if (e.advanced) {
                            t.optional = (t.optional || []).concat(e.advanced)
                        }
                        return t
                    },
                    o = function(e, r) {
                        if (61 <= t.version) {
                            return r(e)
                        }
                        e = JSON.parse(JSON.stringify(e));
                        if (e && "object" === _typeof(e.audio)) {
                            var o = function(e, t, r) {
                                if (t in e && !(r in e)) {
                                    e[r] = e[t];
                                    delete e[t]
                                }
                            };
                            e = JSON.parse(JSON.stringify(e));
                            o(e.audio, "autoGainControl", "googAutoGainControl");
                            o(e.audio, "noiseSuppression", "googNoiseSuppression");
                            e.audio = i(e.audio)
                        }
                        if (e && "object" === _typeof(e.video)) {
                            var s = e.video.facingMode;
                            s = s && ("object" === _typeof(s) ? s : {
                                ideal: s
                            });
                            var c = 66 > t.version;
                            if (s && ("user" === s.exact || "environment" === s.exact || "user" === s.ideal || "environment" === s.ideal) && !(n.mediaDevices.getSupportedConstraints && n.mediaDevices.getSupportedConstraints().facingMode && !c)) {
                                delete e.video.facingMode;
                                var p;
                                if ("environment" === s.exact || "environment" === s.ideal) {
                                    p = ["back", "rear"]
                                } else if ("user" === s.exact || "user" === s.ideal) {
                                    p = ["front"]
                                }
                                if (p) {
                                    return n.mediaDevices.enumerateDevices().then(function(t) {
                                        t = t.filter(function(e) {
                                            return "videoinput" === e.kind
                                        });
                                        var n = t.find(function(e) {
                                            return p.some(function(t) {
                                                return -1 !== e.label.toLowerCase().indexOf(t)
                                            })
                                        });
                                        if (!n && t.length && -1 !== p.indexOf("back")) {
                                            n = t[t.length - 1]
                                        }
                                        if (n) {
                                            e.video.deviceId = s.exact ? {
                                                exact: n.deviceId
                                            } : {
                                                ideal: n.deviceId
                                            }
                                        }
                                        e.video = i(e.video);
                                        a("chrome: " + JSON.stringify(e));
                                        return r(e)
                                    })
                                }
                            }
                            e.video = i(e.video)
                        }
                        a("chrome: " + JSON.stringify(e));
                        return r(e)
                    },
                    s = function(r) {
                        if (64 <= t.version) {
                            return r
                        }
                        return {
                            name: {
                                PermissionDeniedError: "NotAllowedError",
                                PermissionDismissedError: "NotAllowedError",
                                InvalidStateError: "NotAllowedError",
                                DevicesNotFoundError: "NotFoundError",
                                ConstraintNotSatisfiedError: "OverconstrainedError",
                                TrackStartError: "NotReadableError",
                                MediaDeviceFailedDueToShutdown: "NotAllowedError",
                                MediaDeviceKillSwitchOn: "NotAllowedError",
                                TabCaptureError: "AbortError",
                                ScreenCaptureError: "AbortError",
                                DeviceCaptureError: "AbortError"
                            }[r.name] || r.name,
                            message: r.message,
                            constraint: r.constraint || r.constraintName,
                            toString: function toString() {
                                return this.name + (this.message && ": ") + this.message
                            }
                        }
                    };
                n.getUserMedia = function getUserMedia_(e, t, r) {
                    o(e, function(e) {
                        n.webkitGetUserMedia(e, t, function(t) {
                            if (r) {
                                r(s(t))
                            }
                        })
                    })
                };
                var c = function(e) {
                    return new Promise(function(t, r) {
                        n.getUserMedia(e, t, r)
                    })
                };
                if (!n.mediaDevices) {
                    n.mediaDevices = {
                        getUserMedia: c,
                        enumerateDevices: function enumerateDevices() {
                            return new Promise(function(t) {
                                var r = {
                                    audio: "audioinput",
                                    video: "videoinput"
                                };
                                return e.MediaStreamTrack.getSources(function(e) {
                                    t(e.map(function(e) {
                                        return {
                                            label: e.label,
                                            kind: r[e.kind],
                                            deviceId: e.id,
                                            groupId: ""
                                        }
                                    }))
                                })
                            })
                        },
                        getSupportedConstraints: function getSupportedConstraints() {
                            return {
                                deviceId: !0,
                                echoCancellation: !0,
                                facingMode: !0,
                                frameRate: !0,
                                height: !0,
                                width: !0
                            }
                        }
                    }
                }
                if (!n.mediaDevices.getUserMedia) {
                    n.mediaDevices.getUserMedia = function(e) {
                        return c(e)
                    }
                } else {
                    var d = n.mediaDevices.getUserMedia.bind(n.mediaDevices);
                    n.mediaDevices.getUserMedia = function(e) {
                        return o(e, function(e) {
                            return d(e).then(function(t) {
                                if (e.audio && !t.getAudioTracks().length || e.video && !t.getVideoTracks().length) {
                                    t.getTracks().forEach(function(e) {
                                        e.stop()
                                    });
                                    throw new DOMException("", "NotFoundError")
                                }
                                return t
                            }, function(t) {
                                return Promise.reject(s(t))
                            })
                        })
                    }
                }
                if ("undefined" == typeof n.mediaDevices.addEventListener) {
                    n.mediaDevices.addEventListener = function() {
                        a("Dummy mediaDevices.addEventListener called.")
                    }
                }
                if ("undefined" == typeof n.mediaDevices.removeEventListener) {
                    n.mediaDevices.removeEventListener = function() {
                        a("Dummy mediaDevices.removeEventListener called.")
                    }
                }
            }
        }, {
            "../utils.js": 14
        }],
        7: [function(e, t) {
            'use strict';
            var r = e("sdp"),
                a = e("./utils");
            t.exports = {
                shimRTCIceCandidate: function shimRTCIceCandidate(t) {
                    if (!t.RTCIceCandidate || t.RTCIceCandidate && "foundation" in t.RTCIceCandidate.prototype) {
                        return
                    }
                    var n = t.RTCIceCandidate;
                    t.RTCIceCandidate = function(e) {
                        if ("object" === _typeof(e) && e.candidate && 0 === e.candidate.indexOf("a=")) {
                            e = JSON.parse(JSON.stringify(e));
                            e.candidate = e.candidate.substr(2)
                        }
                        if (e.candidate && e.candidate.length) {
                            var t = new n(e),
                                a = r.parseCandidate(e.candidate),
                                i = Object.assign(t, a);
                            i.toJSON = function() {
                                return {
                                    candidate: i.candidate,
                                    sdpMid: i.sdpMid,
                                    sdpMLineIndex: i.sdpMLineIndex,
                                    usernameFragment: i.usernameFragment
                                }
                            };
                            return i
                        }
                        return new n(e)
                    };
                    t.RTCIceCandidate.prototype = n.prototype;
                    a.wrapPeerConnectionEvent(t, "icecandidate", function(r) {
                        if (r.candidate) {
                            Object.defineProperty(r, "candidate", {
                                value: new t.RTCIceCandidate(r.candidate),
                                writable: "false"
                            })
                        }
                        return r
                    })
                },
                shimCreateObjectURL: function shimCreateObjectURL(e) {
                    var t = e && e.URL;
                    if (!("object" === _typeof(e) && e.HTMLMediaElement && "srcObject" in e.HTMLMediaElement.prototype && t.createObjectURL && t.revokeObjectURL)) {
                        return
                    }
                    var r = t.createObjectURL.bind(t),
                        n = t.revokeObjectURL.bind(t),
                        i = new Map,
                        o = 0;
                    t.createObjectURL = function(e) {
                        if ("getTracks" in e) {
                            var t = "polyblob:" + ++o;
                            i.set(t, e);
                            a.deprecated("URL.createObjectURL(stream)", "elem.srcObject = stream");
                            return t
                        }
                        return r(e)
                    };
                    t.revokeObjectURL = function(e) {
                        n(e);
                        i.delete(e)
                    };
                    var s = Object.getOwnPropertyDescriptor(e.HTMLMediaElement.prototype, "src");
                    Object.defineProperty(e.HTMLMediaElement.prototype, "src", {
                        get: function get() {
                            return s.get.apply(this)
                        },
                        set: function set(e) {
                            this.srcObject = i.get(e) || null;
                            return s.set.apply(this, [e])
                        }
                    });
                    var c = e.HTMLMediaElement.prototype.setAttribute;
                    e.HTMLMediaElement.prototype.setAttribute = function() {
                        if (2 === arguments.length && "src" === ("" + arguments[0]).toLowerCase()) {
                            this.srcObject = i.get(arguments[1]) || null
                        }
                        return c.apply(this, arguments)
                    }
                },
                shimMaxMessageSize: function shimMaxMessageSize(e) {
                    if (e.RTCSctpTransport || !e.RTCPeerConnection) {
                        return
                    }
                    var t = a.detectBrowser(e);
                    if (!("sctp" in e.RTCPeerConnection.prototype)) {
                        Object.defineProperty(e.RTCPeerConnection.prototype, "sctp", {
                            get: function get() {
                                return "undefined" == typeof this._sctp ? null : this._sctp
                            }
                        })
                    }
                    var n = function(e) {
                            var t = r.splitSections(e.sdp);
                            t.shift();
                            return t.some(function(e) {
                                var t = r.parseMLine(e);
                                return t && "application" === t.kind && -1 !== t.protocol.indexOf("SCTP")
                            })
                        },
                        i = function(e) {
                            var t = e.sdp.match(/mozilla...THIS_IS_SDPARTA-(\d+)/);
                            if (null === t || 2 > t.length) {
                                return -1
                            }
                            var r = parseInt(t[1], 10);
                            return r !== r ? -1 : r
                        },
                        o = function(e) {
                            var r = 65536;
                            if ("firefox" === t.browser) {
                                if (57 > t.version) {
                                    if (-1 === e) {
                                        r = 16384
                                    } else {
                                        r = 2147483637
                                    }
                                } else if (60 > t.version) {
                                    r = 57 === t.version ? 65535 : 65536
                                } else {
                                    r = 2147483637
                                }
                            }
                            return r
                        },
                        s = function(e, a) {
                            var n = 65536;
                            if ("firefox" === t.browser && 57 === t.version) {
                                n = 65535
                            }
                            var i = r.matchPrefix(e.sdp, "a=max-message-size:");
                            if (0 < i.length) {
                                n = parseInt(i[0].substr(19), 10)
                            } else if ("firefox" === t.browser && -1 !== a) {
                                n = 2147483637
                            }
                            return n
                        },
                        c = e.RTCPeerConnection.prototype.setRemoteDescription;
                    e.RTCPeerConnection.prototype.setRemoteDescription = function() {
                        var e = this;
                        e._sctp = null;
                        if (n(arguments[0])) {
                            var t = i(arguments[0]),
                                r = o(t),
                                a = s(arguments[0], t),
                                d;
                            if (0 === r && 0 === a) {
                                d = Number.POSITIVE_INFINITY
                            } else if (0 === r || 0 === a) {
                                d = Math.max(r, a)
                            } else {
                                d = Math.min(r, a)
                            }
                            var p = {};
                            Object.defineProperty(p, "maxMessageSize", {
                                get: function get() {
                                    return d
                                }
                            });
                            e._sctp = p
                        }
                        return c.apply(e, arguments)
                    }
                },
                shimSendThrowTypeError: function shimSendThrowTypeError(e) {
                    if (!(e.RTCPeerConnection && "createDataChannel" in e.RTCPeerConnection.prototype)) {
                        return
                    }

                    function t(e, t) {
                        var r = e.send;
                        e.send = function() {
                            var a = arguments[0],
                                n = a.length || a.size || a.byteLength;
                            if ("open" === e.readyState && t.sctp && n > t.sctp.maxMessageSize) {
                                throw new TypeError("Message too large (can send a maximum of " + t.sctp.maxMessageSize + " bytes)")
                            }
                            return r.apply(e, arguments)
                        }
                    }
                    var r = e.RTCPeerConnection.prototype.createDataChannel;
                    e.RTCPeerConnection.prototype.createDataChannel = function() {
                        var e = this,
                            a = r.apply(e, arguments);
                        t(a, e);
                        return a
                    };
                    a.wrapPeerConnectionEvent(e, "datachannel", function(r) {
                        t(r.channel, r.target);
                        return r
                    })
                }
            }
        }, {
            "./utils": 14,
            sdp: 2
        }],
        8: [function(e, t) {
            'use strict';
            var r = e("../utils"),
                a = e("./filtericeservers"),
                n = e("rtcpeerconnection-shim");
            t.exports = {
                shimGetUserMedia: e("./getusermedia"),
                shimPeerConnection: function shimPeerConnection(e) {
                    var t = r.detectBrowser(e);
                    if (e.RTCIceGatherer) {
                        if (!e.RTCIceCandidate) {
                            e.RTCIceCandidate = function(e) {
                                return e
                            }
                        }
                        if (!e.RTCSessionDescription) {
                            e.RTCSessionDescription = function(e) {
                                return e
                            }
                        }
                        if (15025 > t.version) {
                            var i = Object.getOwnPropertyDescriptor(e.MediaStreamTrack.prototype, "enabled");
                            Object.defineProperty(e.MediaStreamTrack.prototype, "enabled", {
                                set: function set(e) {
                                    i.set.call(this, e);
                                    var t = new Event("enabled");
                                    t.enabled = e;
                                    this.dispatchEvent(t)
                                }
                            })
                        }
                    }
                    if (e.RTCRtpSender && !("dtmf" in e.RTCRtpSender.prototype)) {
                        Object.defineProperty(e.RTCRtpSender.prototype, "dtmf", {
                            get: function get() {
                                if (this._dtmf === void 0) {
                                    if ("audio" === this.track.kind) {
                                        this._dtmf = new e.RTCDtmfSender(this)
                                    } else if ("video" === this.track.kind) {
                                        this._dtmf = null
                                    }
                                }
                                return this._dtmf
                            }
                        })
                    }
                    if (e.RTCDtmfSender && !e.RTCDTMFSender) {
                        e.RTCDTMFSender = e.RTCDtmfSender
                    }
                    var o = n(e, t.version);
                    e.RTCPeerConnection = function(e) {
                        if (e && e.iceServers) {
                            e.iceServers = a(e.iceServers)
                        }
                        return new o(e)
                    };
                    e.RTCPeerConnection.prototype = o.prototype
                },
                shimReplaceTrack: function shimReplaceTrack(e) {
                    if (e.RTCRtpSender && !("replaceTrack" in e.RTCRtpSender.prototype)) {
                        e.RTCRtpSender.prototype.replaceTrack = e.RTCRtpSender.prototype.setTrack
                    }
                }
            }
        }, {
            "../utils": 14,
            "./filtericeservers": 9,
            "./getusermedia": 10,
            "rtcpeerconnection-shim": 1
        }],
        9: [function(e, t) {
            'use strict';
            var r = e("../utils");
            t.exports = function(e, t) {
                var a = !1;
                e = JSON.parse(JSON.stringify(e));
                return e.filter(function(e) {
                    if (e && (e.urls || e.url)) {
                        var n = e.urls || e.url;
                        if (e.url && !e.urls) {
                            r.deprecated("RTCIceServer.url", "RTCIceServer.urls")
                        }
                        var i = "string" == typeof n;
                        if (i) {
                            n = [n]
                        }
                        n = n.filter(function(e) {
                            var r = 0 === e.indexOf("turn:") && -1 !== e.indexOf("transport=udp") && -1 === e.indexOf("turn:[") && !a;
                            if (r) {
                                a = !0;
                                return !0
                            }
                            return 0 === e.indexOf("stun:") && 14393 <= t && -1 === e.indexOf("?transport=udp")
                        });
                        delete e.url;
                        e.urls = i ? n[0] : n;
                        return !!n.length
                    }
                })
            }
        }, {
            "../utils": 14
        }],
        10: [function(e, t) {
            'use strict';
            t.exports = function(e) {
                var t = e && e.navigator,
                    r = function(t) {
                        return {
                            name: {
                                PermissionDeniedError: "NotAllowedError"
                            }[t.name] || t.name,
                            message: t.message,
                            constraint: t.constraint,
                            toString: function toString() {
                                return this.name
                            }
                        }
                    },
                    a = t.mediaDevices.getUserMedia.bind(t.mediaDevices);
                t.mediaDevices.getUserMedia = function(e) {
                    return a(e).catch(function(t) {
                        return Promise.reject(r(t))
                    })
                }
            }
        }, {}],
        11: [function(e, t) {
            'use strict';
            var r = e("../utils");
            t.exports = {
                shimGetUserMedia: e("./getusermedia"),
                shimOnTrack: function shimOnTrack(e) {
                    if ("object" === _typeof(e) && e.RTCPeerConnection && !("ontrack" in e.RTCPeerConnection.prototype)) {
                        Object.defineProperty(e.RTCPeerConnection.prototype, "ontrack", {
                            get: function get() {
                                return this._ontrack
                            },
                            set: function set(e) {
                                if (this._ontrack) {
                                    this.removeEventListener("track", this._ontrack);
                                    this.removeEventListener("addstream", this._ontrackpoly)
                                }
                                this.addEventListener("track", this._ontrack = e);
                                this.addEventListener("addstream", this._ontrackpoly = function(t) {
                                    t.stream.getTracks().forEach(function(e) {
                                        var r = new Event("track");
                                        r.track = e;
                                        r.receiver = {
                                            track: e
                                        };
                                        r.transceiver = {
                                            receiver: r.receiver
                                        };
                                        r.streams = [t.stream];
                                        this.dispatchEvent(r)
                                    }.bind(this))
                                }.bind(this))
                            },
                            enumerable: !0,
                            configurable: !0
                        })
                    }
                    if ("object" === _typeof(e) && e.RTCTrackEvent && "receiver" in e.RTCTrackEvent.prototype && !("transceiver" in e.RTCTrackEvent.prototype)) {
                        Object.defineProperty(e.RTCTrackEvent.prototype, "transceiver", {
                            get: function get() {
                                return {
                                    receiver: this.receiver
                                }
                            }
                        })
                    }
                },
                shimSourceObject: function shimSourceObject(e) {
                    if ("object" === _typeof(e)) {
                        if (e.HTMLMediaElement && !("srcObject" in e.HTMLMediaElement.prototype)) {
                            Object.defineProperty(e.HTMLMediaElement.prototype, "srcObject", {
                                get: function get() {
                                    return this.mozSrcObject
                                },
                                set: function set(e) {
                                    this.mozSrcObject = e
                                }
                            })
                        }
                    }
                },
                shimPeerConnection: function shimPeerConnection(e) {
                    var t = r.detectBrowser(e);
                    if ("object" !== _typeof(e) || !(e.RTCPeerConnection || e.mozRTCPeerConnection)) {
                        return
                    }
                    if (!e.RTCPeerConnection) {
                        e.RTCPeerConnection = function(r, a) {
                            if (38 > t.version) {
                                if (r && r.iceServers) {
                                    for (var n = [], o = 0, s; o < r.iceServers.length; o++) {
                                        s = r.iceServers[o];
                                        if (s.hasOwnProperty("urls")) {
                                            for (var c = 0, d; c < s.urls.length; c++) {
                                                d = {
                                                    url: s.urls[c]
                                                };
                                                if (0 === s.urls[c].indexOf("turn")) {
                                                    d.username = s.username;
                                                    d.credential = s.credential
                                                }
                                                n.push(d)
                                            }
                                        } else {
                                            n.push(r.iceServers[o])
                                        }
                                    }
                                    r.iceServers = n
                                }
                            }
                            return new e.mozRTCPeerConnection(r, a)
                        };
                        e.RTCPeerConnection.prototype = e.mozRTCPeerConnection.prototype;
                        if (e.mozRTCPeerConnection.generateCertificate) {
                            Object.defineProperty(e.RTCPeerConnection, "generateCertificate", {
                                get: function get() {
                                    return e.mozRTCPeerConnection.generateCertificate
                                }
                            })
                        }
                        e.RTCSessionDescription = e.mozRTCSessionDescription;
                        e.RTCIceCandidate = e.mozRTCIceCandidate
                    }["setLocalDescription", "setRemoteDescription", "addIceCandidate"].forEach(function(t) {
                        var r = e.RTCPeerConnection.prototype[t];
                        e.RTCPeerConnection.prototype[t] = function() {
                            arguments[0] = new("addIceCandidate" === t ? e.RTCIceCandidate : e.RTCSessionDescription)(arguments[0]);
                            return r.apply(this, arguments)
                        }
                    });
                    var a = e.RTCPeerConnection.prototype.addIceCandidate;
                    e.RTCPeerConnection.prototype.addIceCandidate = function() {
                        if (!arguments[0]) {
                            if (arguments[1]) {
                                arguments[1].apply(null)
                            }
                            return Promise.resolve()
                        }
                        return a.apply(this, arguments)
                    };
                    var n = function(e) {
                            var t = new Map;
                            Object.keys(e).forEach(function(r) {
                                t.set(r, e[r]);
                                t[r] = e[r]
                            });
                            return t
                        },
                        o = {
                            inboundrtp: "inbound-rtp",
                            outboundrtp: "outbound-rtp",
                            candidatepair: "candidate-pair",
                            localcandidate: "local-candidate",
                            remotecandidate: "remote-candidate"
                        },
                        s = e.RTCPeerConnection.prototype.getStats;
                    e.RTCPeerConnection.prototype.getStats = function(e, r, a) {
                        return s.apply(this, [e || null]).then(function(a) {
                            if (48 > t.version) {
                                a = n(a)
                            }
                            if (53 > t.version && !r) {
                                try {
                                    a.forEach(function(e) {
                                        e.type = o[e.type] || e.type
                                    })
                                } catch (t) {
                                    if ("TypeError" !== t.name) {
                                        throw t
                                    }
                                    a.forEach(function(e, t) {
                                        a.set(t, Object.assign({}, e, {
                                            type: o[e.type] || e.type
                                        }))
                                    })
                                }
                            }
                            return a
                        }).then(r, a)
                    }
                },
                shimSenderGetStats: function shimSenderGetStats(e) {
                    if (!("object" === _typeof(e) && e.RTCPeerConnection && e.RTCRtpSender)) {
                        return
                    }
                    if (e.RTCRtpSender && "getStats" in e.RTCRtpSender.prototype) {
                        return
                    }
                    var t = e.RTCPeerConnection.prototype.getSenders;
                    if (t) {
                        e.RTCPeerConnection.prototype.getSenders = function() {
                            var e = this,
                                r = t.apply(e, []);
                            r.forEach(function(t) {
                                t._pc = e
                            });
                            return r
                        }
                    }
                    var r = e.RTCPeerConnection.prototype.addTrack;
                    if (r) {
                        e.RTCPeerConnection.prototype.addTrack = function() {
                            var e = r.apply(this, arguments);
                            e._pc = this;
                            return e
                        }
                    }
                    e.RTCRtpSender.prototype.getStats = function() {
                        return this.track ? this._pc.getStats(this.track) : Promise.resolve(new Map)
                    }
                },
                shimReceiverGetStats: function shimReceiverGetStats(e) {
                    if (!("object" === _typeof(e) && e.RTCPeerConnection && e.RTCRtpSender)) {
                        return
                    }
                    if (e.RTCRtpSender && "getStats" in e.RTCRtpReceiver.prototype) {
                        return
                    }
                    var t = e.RTCPeerConnection.prototype.getReceivers;
                    if (t) {
                        e.RTCPeerConnection.prototype.getReceivers = function() {
                            var e = this,
                                r = t.apply(e, []);
                            r.forEach(function(t) {
                                t._pc = e
                            });
                            return r
                        }
                    }
                    r.wrapPeerConnectionEvent(e, "track", function(t) {
                        t.receiver._pc = t.srcElement;
                        return t
                    });
                    e.RTCRtpReceiver.prototype.getStats = function() {
                        return this._pc.getStats(this.track)
                    }
                },
                shimRemoveStream: function shimRemoveStream(e) {
                    if (!e.RTCPeerConnection || "removeStream" in e.RTCPeerConnection.prototype) {
                        return
                    }
                    e.RTCPeerConnection.prototype.removeStream = function(e) {
                        var t = this;
                        r.deprecated("removeStream", "removeTrack");
                        this.getSenders().forEach(function(r) {
                            if (r.track && -1 !== e.getTracks().indexOf(r.track)) {
                                t.removeTrack(r)
                            }
                        })
                    }
                },
                shimRTCDataChannel: function shimRTCDataChannel(e) {
                    if (e.DataChannel && !e.RTCDataChannel) {
                        e.RTCDataChannel = e.DataChannel
                    }
                },
                shimGetDisplayMedia: function shimGetDisplayMedia(e, t) {
                    if ("getDisplayMedia" in e.navigator) {
                        return
                    }
                    navigator.getDisplayMedia = function(e) {
                        if (!(e && e.video)) {
                            var r = new DOMException("getDisplayMedia without video constraints is undefined");
                            r.name = "NotFoundError";
                            r.code = 8;
                            return Promise.reject(r)
                        }
                        if (!0 === e.video) {
                            e.video = {
                                mediaSource: t
                            }
                        } else {
                            e.video.mediaSource = t
                        }
                        return navigator.mediaDevices.getUserMedia(e)
                    }
                }
            }
        }, {
            "../utils": 14,
            "./getusermedia": 12
        }],
        12: [function(e, t) {
            'use strict';
            var r = e("../utils"),
                a = r.log;
            t.exports = function(e) {
                var t = r.detectBrowser(e),
                    n = e && e.navigator,
                    i = e && e.MediaStreamTrack,
                    o = function(t) {
                        return {
                            name: {
                                InternalError: "NotReadableError",
                                NotSupportedError: "TypeError",
                                PermissionDeniedError: "NotAllowedError",
                                SecurityError: "NotAllowedError"
                            }[t.name] || t.name,
                            message: {
                                "The operation is insecure.": "The request is not allowed by the user agent or the platform in the current context."
                            }[t.message] || t.message,
                            constraint: t.constraint,
                            toString: function toString() {
                                return this.name + (this.message && ": ") + this.message
                            }
                        }
                    },
                    s = function(e, r, i) {
                        var s = function(e) {
                            if ("object" !== _typeof(e) || e.require) {
                                return e
                            }
                            var t = [];
                            Object.keys(e).forEach(function(a) {
                                if ("require" === a || "advanced" === a || "mediaSource" === a) {
                                    return
                                }
                                var n = e[a] = "object" === _typeof(e[a]) ? e[a] : {
                                    ideal: e[a]
                                };
                                if (n.min !== void 0 || n.max !== void 0 || n.exact !== void 0) {
                                    t.push(a)
                                }
                                if (n.exact !== void 0) {
                                    if ("number" == typeof n.exact) {
                                        n.min = n.max = n.exact
                                    } else {
                                        e[a] = n.exact
                                    }
                                    delete n.exact
                                }
                                if (n.ideal !== void 0) {
                                    e.advanced = e.advanced || [];
                                    var r = {};
                                    if ("number" == typeof n.ideal) {
                                        r[a] = {
                                            min: n.ideal,
                                            max: n.ideal
                                        }
                                    } else {
                                        r[a] = n.ideal
                                    }
                                    e.advanced.push(r);
                                    delete n.ideal;
                                    if (!Object.keys(n).length) {
                                        delete e[a]
                                    }
                                }
                            });
                            if (t.length) {
                                e.require = t
                            }
                            return e
                        };
                        e = JSON.parse(JSON.stringify(e));
                        if (38 > t.version) {
                            a("spec: " + JSON.stringify(e));
                            if (e.audio) {
                                e.audio = s(e.audio)
                            }
                            if (e.video) {
                                e.video = s(e.video)
                            }
                            a("ff37: " + JSON.stringify(e))
                        }
                        return n.mozGetUserMedia(e, r, function(t) {
                            i(o(t))
                        })
                    },
                    c = function(e) {
                        return new Promise(function(t, r) {
                            s(e, t, r)
                        })
                    };
                if (!n.mediaDevices) {
                    n.mediaDevices = {
                        getUserMedia: c,
                        addEventListener: function addEventListener() {},
                        removeEventListener: function removeEventListener() {}
                    }
                }
                n.mediaDevices.enumerateDevices = n.mediaDevices.enumerateDevices || function() {
                    return new Promise(function(e) {
                        e([{
                            kind: "audioinput",
                            deviceId: "default",
                            label: "",
                            groupId: ""
                        }, {
                            kind: "videoinput",
                            deviceId: "default",
                            label: "",
                            groupId: ""
                        }])
                    })
                };
                if (41 > t.version) {
                    var d = n.mediaDevices.enumerateDevices.bind(n.mediaDevices);
                    n.mediaDevices.enumerateDevices = function() {
                        return d().then(void 0, function(t) {
                            if ("NotFoundError" === t.name) {
                                return []
                            }
                            throw t
                        })
                    }
                }
                if (49 > t.version) {
                    var p = n.mediaDevices.getUserMedia.bind(n.mediaDevices);
                    n.mediaDevices.getUserMedia = function(e) {
                        return p(e).then(function(t) {
                            if (e.audio && !t.getAudioTracks().length || e.video && !t.getVideoTracks().length) {
                                t.getTracks().forEach(function(e) {
                                    e.stop()
                                });
                                throw new DOMException("The object can not be found here.", "NotFoundError")
                            }
                            return t
                        }, function(t) {
                            return Promise.reject(o(t))
                        })
                    }
                }
                if (!(55 < t.version && "autoGainControl" in n.mediaDevices.getSupportedConstraints())) {
                    var m = function(e, t, r) {
                            if (t in e && !(r in e)) {
                                e[r] = e[t];
                                delete e[t]
                            }
                        },
                        l = n.mediaDevices.getUserMedia.bind(n.mediaDevices);
                    n.mediaDevices.getUserMedia = function(e) {
                        if ("object" === _typeof(e) && "object" === _typeof(e.audio)) {
                            e = JSON.parse(JSON.stringify(e));
                            m(e.audio, "autoGainControl", "mozAutoGainControl");
                            m(e.audio, "noiseSuppression", "mozNoiseSuppression")
                        }
                        return l(e)
                    };
                    if (i && i.prototype.getSettings) {
                        var g = i.prototype.getSettings;
                        i.prototype.getSettings = function() {
                            var e = g.apply(this, arguments);
                            m(e, "mozAutoGainControl", "autoGainControl");
                            m(e, "mozNoiseSuppression", "noiseSuppression");
                            return e
                        }
                    }
                    if (i && i.prototype.applyConstraints) {
                        var h = i.prototype.applyConstraints;
                        i.prototype.applyConstraints = function(e) {
                            if ("audio" === this.kind && "object" === _typeof(e)) {
                                e = JSON.parse(JSON.stringify(e));
                                m(e, "autoGainControl", "mozAutoGainControl");
                                m(e, "noiseSuppression", "mozNoiseSuppression")
                            }
                            return h.apply(this, [e])
                        }
                    }
                }
                n.getUserMedia = function(e, a, i) {
                    if (44 > t.version) {
                        return s(e, a, i)
                    }
                    r.deprecated("navigator.getUserMedia", "navigator.mediaDevices.getUserMedia");
                    n.mediaDevices.getUserMedia(e).then(a, i)
                }
            }
        }, {
            "../utils": 14
        }],
        13: [function(e, t) {
            'use strict';
            var r = e("../utils");
            t.exports = {
                shimLocalStreamsAPI: function shimLocalStreamsAPI(e) {
                    if ("object" !== _typeof(e) || !e.RTCPeerConnection) {
                        return
                    }
                    if (!("getLocalStreams" in e.RTCPeerConnection.prototype)) {
                        e.RTCPeerConnection.prototype.getLocalStreams = function() {
                            if (!this._localStreams) {
                                this._localStreams = []
                            }
                            return this._localStreams
                        }
                    }
                    if (!("getStreamById" in e.RTCPeerConnection.prototype)) {
                        e.RTCPeerConnection.prototype.getStreamById = function(e) {
                            var t = null;
                            if (this._localStreams) {
                                this._localStreams.forEach(function(r) {
                                    if (r.id === e) {
                                        t = r
                                    }
                                })
                            }
                            if (this._remoteStreams) {
                                this._remoteStreams.forEach(function(r) {
                                    if (r.id === e) {
                                        t = r
                                    }
                                })
                            }
                            return t
                        }
                    }
                    if (!("addStream" in e.RTCPeerConnection.prototype)) {
                        var t = e.RTCPeerConnection.prototype.addTrack;
                        e.RTCPeerConnection.prototype.addStream = function(e) {
                            if (!this._localStreams) {
                                this._localStreams = []
                            }
                            if (-1 === this._localStreams.indexOf(e)) {
                                this._localStreams.push(e)
                            }
                            var r = this;
                            e.getTracks().forEach(function(a) {
                                t.call(r, a, e)
                            })
                        };
                        e.RTCPeerConnection.prototype.addTrack = function(e, r) {
                            if (r) {
                                if (!this._localStreams) {
                                    this._localStreams = [r]
                                } else if (-1 === this._localStreams.indexOf(r)) {
                                    this._localStreams.push(r)
                                }
                            }
                            return t.call(this, e, r)
                        }
                    }
                    if (!("removeStream" in e.RTCPeerConnection.prototype)) {
                        e.RTCPeerConnection.prototype.removeStream = function(e) {
                            if (!this._localStreams) {
                                this._localStreams = []
                            }
                            var t = this._localStreams.indexOf(e);
                            if (-1 === t) {
                                return
                            }
                            this._localStreams.splice(t, 1);
                            var r = this,
                                a = e.getTracks();
                            this.getSenders().forEach(function(e) {
                                if (-1 !== a.indexOf(e.track)) {
                                    r.removeTrack(e)
                                }
                            })
                        }
                    }
                },
                shimRemoteStreamsAPI: function shimRemoteStreamsAPI(e) {
                    if ("object" !== _typeof(e) || !e.RTCPeerConnection) {
                        return
                    }
                    if (!("getRemoteStreams" in e.RTCPeerConnection.prototype)) {
                        e.RTCPeerConnection.prototype.getRemoteStreams = function() {
                            return this._remoteStreams ? this._remoteStreams : []
                        }
                    }
                    if (!("onaddstream" in e.RTCPeerConnection.prototype)) {
                        Object.defineProperty(e.RTCPeerConnection.prototype, "onaddstream", {
                            get: function get() {
                                return this._onaddstream
                            },
                            set: function set(e) {
                                if (this._onaddstream) {
                                    this.removeEventListener("addstream", this._onaddstream)
                                }
                                this.addEventListener("addstream", this._onaddstream = e)
                            }
                        });
                        var t = e.RTCPeerConnection.prototype.setRemoteDescription;
                        e.RTCPeerConnection.prototype.setRemoteDescription = function() {
                            var e = this;
                            if (!this._onaddstreampoly) {
                                this.addEventListener("track", this._onaddstreampoly = function(t) {
                                    t.streams.forEach(function(t) {
                                        if (!e._remoteStreams) {
                                            e._remoteStreams = []
                                        }
                                        if (0 <= e._remoteStreams.indexOf(t)) {
                                            return
                                        }
                                        e._remoteStreams.push(t);
                                        var r = new Event("addstream");
                                        r.stream = t;
                                        e.dispatchEvent(r)
                                    })
                                })
                            }
                            return t.apply(e, arguments)
                        }
                    }
                },
                shimCallbacksAPI: function shimCallbacksAPI(e) {
                    if ("object" !== _typeof(e) || !e.RTCPeerConnection) {
                        return
                    }
                    var t = e.RTCPeerConnection.prototype,
                        r = t.createOffer,
                        a = t.createAnswer,
                        n = t.setLocalDescription,
                        i = t.setRemoteDescription,
                        o = t.addIceCandidate;
                    t.createOffer = function(e, t) {
                        var a = 2 <= arguments.length ? arguments[2] : arguments[0],
                            n = r.apply(this, [a]);
                        if (!t) {
                            return n
                        }
                        n.then(e, t);
                        return Promise.resolve()
                    };
                    t.createAnswer = function(e, t) {
                        var r = 2 <= arguments.length ? arguments[2] : arguments[0],
                            n = a.apply(this, [r]);
                        if (!t) {
                            return n
                        }
                        n.then(e, t);
                        return Promise.resolve()
                    };
                    var s = function(e, t, r) {
                        var a = n.apply(this, [e]);
                        if (!r) {
                            return a
                        }
                        a.then(t, r);
                        return Promise.resolve()
                    };
                    t.setLocalDescription = s;
                    s = function(e, t, r) {
                        var a = i.apply(this, [e]);
                        if (!r) {
                            return a
                        }
                        a.then(t, r);
                        return Promise.resolve()
                    };
                    t.setRemoteDescription = s;
                    s = function(e, t, r) {
                        var a = o.apply(this, [e]);
                        if (!r) {
                            return a
                        }
                        a.then(t, r);
                        return Promise.resolve()
                    };
                    t.addIceCandidate = s
                },
                shimGetUserMedia: function shimGetUserMedia(e) {
                    var t = e && e.navigator;
                    if (!t.getUserMedia) {
                        if (t.webkitGetUserMedia) {
                            t.getUserMedia = t.webkitGetUserMedia.bind(t)
                        } else if (t.mediaDevices && t.mediaDevices.getUserMedia) {
                            t.getUserMedia = function(e, r, a) {
                                t.mediaDevices.getUserMedia(e).then(r, a)
                            }.bind(t)
                        }
                    }
                },
                shimRTCIceServerUrls: function shimRTCIceServerUrls(e) {
                    var t = e.RTCPeerConnection;
                    e.RTCPeerConnection = function(e, a) {
                        if (e && e.iceServers) {
                            for (var n = [], o = 0, s; o < e.iceServers.length; o++) {
                                s = e.iceServers[o];
                                if (!s.hasOwnProperty("urls") && s.hasOwnProperty("url")) {
                                    r.deprecated("RTCIceServer.url", "RTCIceServer.urls");
                                    s = JSON.parse(JSON.stringify(s));
                                    s.urls = s.url;
                                    delete s.url;
                                    n.push(s)
                                } else {
                                    n.push(e.iceServers[o])
                                }
                            }
                            e.iceServers = n
                        }
                        return new t(e, a)
                    };
                    e.RTCPeerConnection.prototype = t.prototype;
                    if ("generateCertificate" in e.RTCPeerConnection) {
                        Object.defineProperty(e.RTCPeerConnection, "generateCertificate", {
                            get: function get() {
                                return t.generateCertificate
                            }
                        })
                    }
                },
                shimTrackEventTransceiver: function shimTrackEventTransceiver(e) {
                    if ("object" === _typeof(e) && e.RTCPeerConnection && "receiver" in e.RTCTrackEvent.prototype && !e.RTCTransceiver) {
                        Object.defineProperty(e.RTCTrackEvent.prototype, "transceiver", {
                            get: function get() {
                                return {
                                    receiver: this.receiver
                                }
                            }
                        })
                    }
                },
                shimCreateOfferLegacy: function shimCreateOfferLegacy(e) {
                    var t = e.RTCPeerConnection.prototype.createOffer;
                    e.RTCPeerConnection.prototype.createOffer = function(e) {
                        var r = this;
                        if (e) {
                            if ("undefined" != typeof e.offerToReceiveAudio) {
                                e.offerToReceiveAudio = !!e.offerToReceiveAudio
                            }
                            var a = r.getTransceivers().find(function(e) {
                                return e.sender.track && "audio" === e.sender.track.kind
                            });
                            if (!1 === e.offerToReceiveAudio && a) {
                                if ("sendrecv" === a.direction) {
                                    if (a.setDirection) {
                                        a.setDirection("sendonly")
                                    } else {
                                        a.direction = "sendonly"
                                    }
                                } else if ("recvonly" === a.direction) {
                                    if (a.setDirection) {
                                        a.setDirection("inactive")
                                    } else {
                                        a.direction = "inactive"
                                    }
                                }
                            } else if (!0 === e.offerToReceiveAudio && !a) {
                                r.addTransceiver("audio")
                            }
                            if ("undefined" != typeof e.offerToReceiveVideo) {
                                e.offerToReceiveVideo = !!e.offerToReceiveVideo
                            }
                            var n = r.getTransceivers().find(function(e) {
                                return e.sender.track && "video" === e.sender.track.kind
                            });
                            if (!1 === e.offerToReceiveVideo && n) {
                                if ("sendrecv" === n.direction) {
                                    n.setDirection("sendonly")
                                } else if ("recvonly" === n.direction) {
                                    n.setDirection("inactive")
                                }
                            } else if (!0 === e.offerToReceiveVideo && !n) {
                                r.addTransceiver("video")
                            }
                        }
                        return t.apply(r, arguments)
                    }
                }
            }
        }, {
            "../utils": 14
        }],
        14: [function(e, t) {
            'use strict';
            var a = !0,
                n = !0;

            function r(e, t, r) {
                var a = e.match(t);
                return a && a.length >= r && parseInt(a[r], 10)
            }
            t.exports = {
                extractVersion: r,
                wrapPeerConnectionEvent: function(e, t, r) {
                    if (!e.RTCPeerConnection) {
                        return
                    }
                    var a = e.RTCPeerConnection.prototype,
                        n = a.addEventListener;
                    a.addEventListener = function(e, a) {
                        if (e !== t) {
                            return n.apply(this, arguments)
                        }
                        var i = function(t) {
                            var e = r(t);
                            if (e) {
                                a(e)
                            }
                        };
                        this._eventMap = this._eventMap || {};
                        this._eventMap[a] = i;
                        return n.apply(this, [e, i])
                    };
                    var i = a.removeEventListener;
                    a.removeEventListener = function(e, r) {
                        if (e !== t || !this._eventMap || !this._eventMap[r]) {
                            return i.apply(this, arguments)
                        }
                        var a = this._eventMap[r];
                        delete this._eventMap[r];
                        return i.apply(this, [e, a])
                    };
                    Object.defineProperty(a, "on" + t, {
                        get: function get() {
                            return this["_on" + t]
                        },
                        set: function set(e) {
                            if (this["_on" + t]) {
                                this.removeEventListener(t, this["_on" + t]);
                                delete this["_on" + t]
                            }
                            if (e) {
                                this.addEventListener(t, this["_on" + t] = e)
                            }
                        },
                        enumerable: !0,
                        configurable: !0
                    })
                },
                disableLog: function disableLog(e) {
                    if ("boolean" != typeof e) {
                        return new Error("Argument type: " + _typeof(e) + ". Please use a boolean.")
                    }
                    a = e;
                    return e ? "adapter.js logging disabled" : "adapter.js logging enabled"
                },
                disableWarnings: function disableWarnings(e) {
                    if ("boolean" != typeof e) {
                        return new Error("Argument type: " + _typeof(e) + ". Please use a boolean.")
                    }
                    n = !e;
                    return "adapter.js deprecation warnings " + (e ? "disabled" : "enabled")
                },
                log: function log() {
                    if ("object" === ("undefined" == typeof window ? "undefined" : _typeof(window))) {
                        if (a) {
                            return
                        }
                        if ("undefined" != typeof console && "function" == typeof console.log) {
                            console.log.apply(console, arguments)
                        }
                    }
                },
                deprecated: function deprecated(e, t) {
                    if (!n) {
                        return
                    }
                    console.warn(e + " is deprecated, please use " + t + " instead.")
                },
                detectBrowser: function detectBrowser(e) {
                    var t = e && e.navigator,
                        a = {};
                    a.browser = null;
                    a.version = null;
                    if ("undefined" == typeof e || !e.navigator) {
                        a.browser = "Not a browser.";
                        return a
                    }
                    if (t.mozGetUserMedia) {
                        a.browser = "firefox";
                        a.version = r(t.userAgent, /Firefox\/(\d+)\./, 1)
                    } else if (t.webkitGetUserMedia) {
                        a.browser = "chrome";
                        a.version = r(t.userAgent, /Chrom(e|ium)\/(\d+)\./, 2)
                    } else if (t.mediaDevices && t.userAgent.match(/Edge\/(\d+).(\d+)$/)) {
                        a.browser = "edge";
                        a.version = r(t.userAgent, /Edge\/(\d+).(\d+)$/, 2)
                    } else if (e.RTCPeerConnection && t.userAgent.match(/AppleWebKit\/(\d+)\./)) {
                        a.browser = "safari";
                        a.version = r(t.userAgent, /AppleWebKit\/(\d+)\./, 1)
                    } else {
                        a.browser = "Not a supported browser.";
                        return a
                    }
                    return a
                }
            }
        }, {}]
    }, {}, [3])(3)
});
define("core/tree", ["jquery"], function(a) {
    var b = {
            ITEM: "[role=treeitem]",
            GROUP: "[role=treeitem]:has([role=group]), [role=treeitem][aria-owns], [role=treeitem][data-requires-ajax=true]",
            CLOSED_GROUP: "[role=treeitem]:has([role=group])[aria-expanded=false], [role=treeitem][aria-owns][aria-expanded=false], [role=treeitem][data-requires-ajax=true][aria-expanded=false]",
            FIRST_ITEM: "[role=treeitem]:first",
            VISIBLE_ITEM: "[role=treeitem]:visible",
            UNLOADED_AJAX_ITEM: "[role=treeitem][data-requires-ajax=true][data-loaded=false][aria-expanded=true]"
        },
        c = function(c, d) {
            this.treeRoot = a(c);
            this.treeRoot.data("activeItem", null);
            this.selectCallback = d;
            this.keys = {
                tab: 9,
                enter: 13,
                space: 32,
                pageup: 33,
                pagedown: 34,
                end: 35,
                home: 36,
                left: 37,
                up: 38,
                right: 39,
                down: 40,
                asterisk: 106
            };
            this.initialiseNodes(this.treeRoot);
            this.setActiveItem(this.treeRoot.find(b.FIRST_ITEM));
            this.refreshVisibleItemsCache();
            this.bindEventHandlers()
        };
    c.prototype.registerEnterCallback = function(a) {
        this.enterCallback = a
    };
    c.prototype.refreshVisibleItemsCache = function() {
        this.treeRoot.data("visibleItems", this.treeRoot.find(b.VISIBLE_ITEM))
    };
    c.prototype.getVisibleItems = function() {
        return this.treeRoot.data("visibleItems")
    };
    c.prototype.setActiveItem = function(a) {
        var b = this.treeRoot.data("activeItem");
        if (a === b) {
            return
        }
        if (b) {
            b.attr("tabindex", "-1");
            b.attr("aria-selected", "false")
        }
        a.attr("tabindex", "0");
        a.attr("aria-selected", "true");
        this.treeRoot.data("activeItem", a);
        if ("function" == typeof this.selectCallback) {
            this.selectCallback(a)
        }
    };
    c.prototype.isGroupItem = function(a) {
        return a.is(b.GROUP)
    };
    c.prototype.getGroupFromItem = function(a) {
        var b = this.treeRoot.find("#" + a.attr("aria-owns")),
            c = a.children("[role=group]");
        if (b.length > c.length) {
            return b
        } else {
            return c
        }
    };
    c.prototype.isGroupCollapsed = function(a) {
        return "false" === a.attr("aria-expanded")
    };
    c.prototype.isGroupCollapsible = function(a) {
        return "false" !== a.attr("data-collapsible")
    };
    c.prototype.initialiseNodes = function(c) {
        this.removeAllFromTabOrder(c);
        this.setAriaSelectedFalseOnItems(c);
        var d = this;
        c.find(b.UNLOADED_AJAX_ITEM).each(function() {
            var b = a(this);
            d.collapseGroup(b);
            d.expandGroup(b)
        })
    };
    c.prototype.removeAllFromTabOrder = function(b) {
        b.find("*").attr("tabindex", "-1");
        this.getGroupFromItem(a(b)).find("*").attr("tabindex", "-1")
    };
    c.prototype.setAriaSelectedFalseOnItems = function(a) {
        a.find(b.ITEM).attr("aria-selected", "false")
    };
    c.prototype.expandAllGroups = function() {
        var c = this;
        this.treeRoot.find(b.CLOSED_GROUP).each(function() {
            var b = a(this);
            c.expandGroup(a(this)).done(function() {
                c.expandAllChildGroups(b)
            })
        })
    };
    c.prototype.expandAllChildGroups = function(c) {
        var d = this;
        this.getGroupFromItem(c).find(b.CLOSED_GROUP).each(function() {
            var b = a(this);
            d.expandGroup(a(this)).done(function() {
                d.expandAllChildGroups(b)
            })
        })
    };
    c.prototype.expandGroup = function(b) {
        var c = a.Deferred();
        if ("false" !== b.attr("data-expandable") && this.isGroupCollapsed(b)) {
            if ("true" === b.attr("data-requires-ajax") && "true" !== b.attr("data-loaded")) {
                b.attr("data-loaded", !1);
                var d = b.closest("[data-ajax-loader]").attr("data-ajax-loader"),
                    e = this;
                b.addClass("loading");
                require([d], function(a) {
                    a.load(b).done(function() {
                        b.attr("data-loaded", !0);
                        e.initialiseNodes(b);
                        e.finishExpandingGroup(b);
                        b.removeClass("loading");
                        c.resolve()
                    })
                })
            } else {
                this.finishExpandingGroup(b);
                c.resolve()
            }
        } else {
            c.resolve()
        }
        return c
    };
    c.prototype.finishExpandingGroup = function(a) {
        var b = this.getGroupFromItem(a);
        b.attr("aria-hidden", "false");
        a.attr("aria-expanded", "true");
        this.refreshVisibleItemsCache()
    };
    c.prototype.collapseGroup = function(a) {
        if (!this.isGroupCollapsible(a) || this.isGroupCollapsed(a)) {
            return
        }
        var b = this.getGroupFromItem(a);
        b.attr("aria-hidden", "true");
        a.attr("aria-expanded", "false");
        this.refreshVisibleItemsCache()
    };
    c.prototype.toggleGroup = function(a) {
        if ("true" === a.attr("aria-expanded")) {
            this.collapseGroup(a)
        } else {
            this.expandGroup(a)
        }
    };
    c.prototype.handleKeyDown = function(c, d) {
        var e = this.getVisibleItems().index(c);
        if (d.altKey || d.ctrlKey || d.metaKey || d.shiftKey && d.keyCode != this.keys.tab) {
            return !0
        }
        switch (d.keyCode) {
            case this.keys.home:
                {
                    this.getVisibleItems().first().focus();d.stopPropagation();
                    return !1
                }
            case this.keys.end:
                {
                    this.getVisibleItems().last().focus();d.stopPropagation();
                    return !1
                }
            case this.keys.enter:
                {
                    var f = c.children("a").length ? c.children("a") : c.children().not(b.GROUP).find("a");
                    if (f.length) {
                        if ("function" == typeof this.enterCallback) {
                            this.enterCallback(c)
                        } else {
                            window.location.href = f.first().attr("href")
                        }
                    } else if (this.isGroupItem(c)) {
                        this.toggleGroup(c, !0)
                    }
                    d.stopPropagation();
                    return !1
                }
            case this.keys.space:
                {
                    if (this.isGroupItem(c)) {
                        this.toggleGroup(c, !0)
                    }
                    d.stopPropagation();
                    return !1
                }
            case this.keys.left:
                {
                    var g = function(b) {
                        b.getVisibleItems().filter(function() {
                            return b.getGroupFromItem(a(this)).has(c).length
                        }).focus()
                    };
                    if (this.isGroupItem(c)) {
                        if (this.isGroupCollapsed(c)) {
                            g(this)
                        } else {
                            this.collapseGroup(c)
                        }
                    } else {
                        g(this)
                    }
                    d.stopPropagation();
                    return !1
                }
            case this.keys.right:
                {
                    if (this.isGroupItem(c)) {
                        if (this.isGroupCollapsed(c)) {
                            this.expandGroup(c)
                        } else {
                            this.getGroupFromItem(c).find(b.ITEM).first().focus()
                        }
                    }
                    d.stopPropagation();
                    return !1
                }
            case this.keys.up:
                {
                    if (0 < e) {
                        var h = this.getVisibleItems().eq(e - 1);
                        h.focus()
                    }
                    d.stopPropagation();
                    return !1
                }
            case this.keys.down:
                {
                    if (e < this.getVisibleItems().length - 1) {
                        var i = this.getVisibleItems().eq(e + 1);
                        i.focus()
                    }
                    d.stopPropagation();
                    return !1
                }
            case this.keys.asterisk:
                {
                    this.expandAllGroups();d.stopPropagation();
                    return !1
                }
        }
        return !0
    };
    c.prototype.handleClick = function(a, b) {
        if (b.altKey || b.ctrlKey || b.shiftKey || b.metaKey) {
            return !0
        }
        a.focus();
        if (this.isGroupItem(a)) {
            this.toggleGroup(a)
        }
        b.stopPropagation();
        return !0
    };
    c.prototype.handleFocus = function(a, b) {
        this.setActiveItem(a);
        b.stopPropagation();
        return !0
    };
    c.prototype.bindEventHandlers = function() {
        var c = this;
        this.treeRoot.on({
            click: function click(b) {
                return c.handleClick(a(this), b)
            },
            keydown: function keydown(b) {
                return c.handleKeyDown(a(this), b)
            },
            focus: function focus(b) {
                return c.handleFocus(a(this), b)
            }
        }, b.ITEM)
    };
    return c
});
define("core/paged_content_factory", ["jquery", "core/templates", "core/notification", "core/paged_content", "core/paged_content_events", "core/pubsub", "core/ajax"], function(a, b, c, d, e, f, g) {
    var h = {
            PAGED_CONTENT: "core/paged_content"
        },
        j = {
            ITEMS_PER_PAGE_SINGLE: 25,
            ITEMS_PER_PAGE_ARRAY: [25, 50, 100, 0],
            MAX_PAGES: 3
        },
        k = function() {
            return {
                pagingbar: !1,
                pagingdropdown: !1,
                skipjs: !0,
                ignorecontrolwhileloading: !0,
                controlplacementbottom: !1
            }
        },
        l = function() {
            return {
                showitemsperpageselector: !1,
                itemsperpage: 35,
                previous: !0,
                next: !0,
                activepagenumber: 1,
                hidecontrolonsinglepage: !0,
                pages: []
            }
        },
        m = function(a, b) {
            var c = 1;
            if (0 < a) {
                var d = a % b;
                if (d) {
                    a -= d;
                    c = a / b + 1
                } else {
                    c = a / b
                }
            }
            return c
        },
        n = function(b, c) {
            if (null === c) {
                c = j.ITEMS_PER_PAGE_SINGLE
            }
            if (a.isArray(c)) {
                c = c[0]
            }
            var d = l();
            d.itemsperpage = c;
            for (var e = m(b, c), f = 1, g; f <= e; f++) {
                g = {
                    number: f,
                    page: "" + f
                };
                if (1 == f) {
                    g.active = !0
                }
                d.pages.push(g)
            }
            d.barsize = 10;
            return d
        },
        o = function(b) {
            if (a.isArray(b)) {
                var c = b.map(function(a) {
                        if ("number" == typeof a) {
                            return {
                                value: a,
                                active: !1
                            }
                        } else {
                            return a
                        }
                    }),
                    d = c.filter(function(a) {
                        return a.active
                    });
                if (!d.length) {
                    c[0].active = !0
                }
                return c
            } else {
                return b
            }
        },
        p = function(b) {
            if (null === b) {
                b = j.ITEMS_PER_PAGE_ARRAY
            }
            var c = l();
            c.itemsperpage = o(b);
            c.showitemsperpageselector = a.isArray(b) && 1 < b.length;
            return c
        },
        q = function(a, b) {
            if (a) {
                return n(a, b)
            } else {
                return p(b)
            }
        },
        r = function(b, c) {
            if (null === b) {
                b = j.ITEMS_PER_PAGE_SINGLE
            }
            if (a.isArray(b)) {
                return {
                    options: b
                }
            }
            var d = {
                    options: []
                },
                e = 0,
                f = 0,
                g = j.MAX_PAGES;
            if (c.hasOwnProperty("maxPages")) {
                g = c.maxPages
            }
            for (var h = 1, k; h <= g; h++) {
                k = 0;
                if (2 >= h) {
                    k = b;
                    f = b
                } else {
                    f = 2 * f;
                    k = f
                }
                e += k;
                var l = {
                    itemcount: k,
                    content: e
                };
                if (1 == h) {
                    l.active = !0
                }
                d.options.push(l)
            }
            return d
        },
        s = function(a, b, c) {
            var d = k();
            if (c.hasOwnProperty("ignoreControlWhileLoading")) {
                d.ignorecontrolwhileloading = c.ignoreControlWhileLoading
            }
            if (c.hasOwnProperty("controlPlacementBottom")) {
                d.controlplacementbottom = c.controlPlacementBottom
            }
            if (c.hasOwnProperty("hideControlOnSinglePage")) {
                d.hidecontrolonsinglepage = c.hideControlOnSinglePage
            }
            if (c.hasOwnProperty("ariaLabels")) {
                d.arialabels = c.ariaLabels
            }
            if (c.hasOwnProperty("dropdown") && c.dropdown) {
                d.pagingdropdown = r(b, c)
            } else {
                d.pagingbar = q(a, b)
            }
            return d
        },
        t = function(e, f, g, i) {
            i = i || {};
            var j = a.Deferred(),
                k = s(e, f, i);
            b.render(h.PAGED_CONTENT, k).then(function(b, c) {
                b = a(b);
                var e = b.attr("id");
                if (i.hasOwnProperty("eventNamespace")) {
                    e = i.eventNamespace
                }
                var f = b;
                d.init(f, g, e);
                v(e, i);
                j.resolve(b, c)
            }).fail(function(a) {
                j.reject(a)
            }).fail(c.exception);
            return j.promise()
        },
        u = function(a) {
            return function callback(b) {
                g.call([{
                    methodname: "core_user_update_user_preferences",
                    args: {
                        preferences: [{
                            type: a,
                            value: b
                        }]
                    }
                }])
            }
        },
        v = function(a, b) {
            if (b.hasOwnProperty("persistentLimitKey")) {
                f.subscribe(a + e.SET_ITEMS_PER_PAGE_LIMIT, u(b.persistentLimitKey))
            }
        };
    return {
        create: function create(a, b) {
            return t(null, null, a, b)
        },
        createWithLimit: function createWithLimit(a, b, c) {
            return t(null, a, b, c)
        },
        createWithTotalAndLimit: t,
        createFromStaticList: function createFromStaticList(a, b, c, d) {
            if ("undefined" == typeof d) {
                d = {}
            }
            var e = a.length;
            return t(e, b, function(b) {
                var d = [];
                b.forEach(function(b) {
                    var c = b.offset,
                        f = b.limit ? c + b.limit : e,
                        g = a.slice(c, f);
                    d.push(g)
                });
                return c(d)
            }, d)
        },
        createFromAjax: t,
        resetLastPageNumber: function resetLastPageNumber(a, b) {
            f.publish(a + e.ALL_ITEMS_LOADED, b)
        }
    }
});
define("core/backoff_timer", function() {
    var a = function(a, b) {
        this.callback = a;
        this.backOffFunction = b
    };
    a.prototype.callback = null;
    a.prototype.backOffFunction = null;
    a.prototype.time = null;
    a.prototype.timeout = null;
    a.prototype.generateNextTime = function() {
        var a = this.backOffFunction(this.time);
        this.time = a;
        return a
    };
    a.prototype.reset = function() {
        this.time = null;
        this.stop();
        return this
    };
    a.prototype.stop = function() {
        if (this.timeout) {
            window.clearTimeout(this.timeout);
            this.timeout = null
        }
        return this
    };
    a.prototype.start = function() {
        if (!this.timeout) {
            var a = this.generateNextTime();
            this.timeout = window.setTimeout(function() {
                this.callback();
                this.stop();
                this.start()
            }.bind(this), a)
        }
        return this
    };
    a.prototype.restart = function() {
        return this.reset().start()
    };
    a.getIncrementalCallback = function(a, b, c, d) {
        return function(e) {
            if (!e) {
                return a
            }
            if (e + b > c) {
                return d
            }
            return e + b
        }
    };
    return a
});
define("core/chart_pie", ["core/chart_base"], function(a) {
    function b() {
        a.prototype.constructor.apply(this, arguments)
    }
    b.prototype = Object.create(a.prototype);
    b.prototype.TYPE = "pie";
    b.prototype._doughnut = null;
    b.prototype.create = function(b, c) {
        var d = a.prototype.create.apply(this, arguments);
        d.setDoughnut(c.doughnut);
        return d
    };
    b.prototype.addSeries = function(b) {
        if (null === b.getColor()) {
            for (var c = [], d = this.getConfigColorSet() || a.prototype.COLORSET, e = 0; e < b.getCount(); e++) {
                c.push(d[e % d.length])
            }
            b.setColors(c)
        }
        return a.prototype.addSeries.apply(this, arguments)
    };
    b.prototype.getDoughnut = function() {
        return this._doughnut
    };
    b.prototype.setDoughnut = function(a) {
        this._doughnut = !!a
    };
    b.prototype._validateSeries = function() {
        if (1 <= this._series.length) {
            throw new Error("Pie charts only support one serie.")
        }
        return a.prototype._validateSeries.apply(this, arguments)
    };
    return b
});

function _typeof(a) {
    if ("function" == typeof Symbol && "symbol" == typeof Symbol.iterator) {
        _typeof = function(a) {
            return typeof a
        }
    } else {
        _typeof = function(a) {
            return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
        }
    }
    return _typeof(a)
}(function(a, b) {
    if ("object" === ("undefined" == typeof exports ? "undefined" : _typeof(exports)) && exports && "string" != typeof exports.nodeName) {
        b(exports)
    } else if ("function" == typeof define && define.amd) {
        define("core/mustache", ["exports"], b)
    } else {
        a.Mustache = {};
        b(a.Mustache)
    }
})(this, function(a) {
    var o = Object.prototype.toString,
        p = Array.isArray || function(a) {
            return "[object Array]" === o.call(a)
        };

    function b(a) {
        return "function" == typeof a
    }

    function c(a) {
        return p(a) ? "array" : _typeof(a)
    }

    function d(a) {
        return a.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&")
    }

    function e(a, b) {
        return null != a && "object" === _typeof(a) && b in a
    }

    function f(a, b) {
        return null != a && "object" !== _typeof(a) && a.hasOwnProperty && a.hasOwnProperty(b)
    }
    var q = RegExp.prototype.test;

    function g(a, b) {
        return q.call(a, b)
    }
    var r = /\S/;

    function h(a) {
        return !g(r, a)
    }
    var t = {
        "&": "&amp;",
        "<": "&lt;",
        ">": "&gt;",
        '"': "&quot;",
        "'": "&#39;",
        "/": "&#x2F;",
        "`": "&#x60;",
        "=": "&#x3D;"
    };
    var u = /\s*/,
        v = /\s+/,
        w = /\s*=/,
        x = /\s*\}/,
        y = /#|\^|\/|>|\{|&|=|!|\$|</;

    function i(b, c) {
        if (!b) return [];
        var g = [],
            m = [],
            n = [],
            o = !1,
            q = !1;

        function e() {
            if (o && !q) {
                while (n.length) {
                    delete m[n.pop()]
                }
            } else {
                n = []
            }
            o = !1;
            q = !1
        }
        var r, s, t;

        function f(a) {
            if ("string" == typeof a) a = a.split(v, 2);
            if (!p(a) || 2 !== a.length) throw new Error("Invalid tags: " + a);
            r = new RegExp(d(a[0]) + "\\s*");
            s = new RegExp("\\s*" + d(a[1]));
            t = new RegExp("\\s*" + d("}" + a[1]))
        }
        f(c || a.tags);
        var z = new l(b),
            A, B, C, D, E, F;
        while (!z.eos()) {
            A = z.pos;
            C = z.scanUntil(r);
            if (C) {
                for (var G = 0, H = C.length; G < H; ++G) {
                    D = C.charAt(G);
                    if (h(D)) {
                        n.push(m.length)
                    } else {
                        q = !0
                    }
                    m.push(["text", D, A, A + 1]);
                    A += 1;
                    if ("\n" === D) e()
                }
            }
            if (!z.scan(r)) break;
            o = !0;
            B = z.scan(y) || "name";
            z.scan(u);
            if ("=" === B) {
                C = z.scanUntil(w);
                z.scan(w);
                z.scanUntil(s)
            } else if ("{" === B) {
                C = z.scanUntil(t);
                z.scan(x);
                z.scanUntil(s);
                B = "&"
            } else {
                C = z.scanUntil(s)
            }
            if (!z.scan(s)) throw new Error("Unclosed tag at " + z.pos);
            E = [B, C, A, z.pos];
            m.push(E);
            if ("#" === B || "^" === B || "$" === B || "<" === B) {
                g.push(E)
            } else if ("/" === B) {
                F = g.pop();
                if (!F) throw new Error("Unopened section \"" + C + "\" at " + A);
                if (F[1] !== C) throw new Error("Unclosed section \"" + F[1] + "\" at " + A)
            } else if ("name" === B || "{" === B || "&" === B) {
                q = !0
            } else if ("=" === B) {
                f(C)
            }
        }
        F = g.pop();
        if (F) throw new Error("Unclosed section \"" + F[1] + "\" at " + z.pos);
        return k(j(m))
    }

    function j(a) {
        for (var b = [], c, d, e = 0, f = a.length; e < f; ++e) {
            c = a[e];
            if (c) {
                if ("text" === c[0] && d && "text" === d[0]) {
                    d[1] += c[1];
                    d[3] = c[3]
                } else {
                    b.push(c);
                    d = c
                }
            }
        }
        return b
    }

    function k(a) {
        for (var b = [], c = b, d = [], e, f, g = 0, h = a.length; g < h; ++g) {
            e = a[g];
            switch (e[0]) {
                case "$":
                case "<":
                case "#":
                case "^":
                    c.push(e);
                    d.push(e);
                    c = e[4] = [];
                    break;
                case "/":
                    f = d.pop();
                    f[5] = e[2];
                    c = 0 < d.length ? d[d.length - 1][4] : b;
                    break;
                default:
                    c.push(e);
            }
        }
        return b
    }

    function l(a) {
        this.string = a;
        this.tail = a;
        this.pos = 0
    }
    l.prototype.eos = function() {
        return "" === this.tail
    };
    l.prototype.scan = function(a) {
        var b = this.tail.match(a);
        if (!b || 0 !== b.index) return "";
        var c = b[0];
        this.tail = this.tail.substring(c.length);
        this.pos += c.length;
        return c
    };
    l.prototype.scanUntil = function(a) {
        var b = this.tail.search(a),
            c;
        switch (b) {
            case -1:
                c = this.tail;
                this.tail = "";
                break;
            case 0:
                c = "";
                break;
            default:
                c = this.tail.substring(0, b);
                this.tail = this.tail.substring(b);
        }
        this.pos += c.length;
        return c
    };

    function m(a, b) {
        this.view = a;
        this.blocks = {};
        this.cache = {
            ".": this.view
        };
        this.parent = b
    }
    m.prototype.push = function(a) {
        return new m(a, this)
    };
    m.prototype.setBlockVar = function(a, b) {
        var c = this.blocks;
        c[a] = b;
        return b
    };
    m.prototype.clearBlockVars = function() {
        this.blocks = {}
    };
    m.prototype.getBlockVar = function(a) {
        var b = this.blocks,
            c;
        if (b.hasOwnProperty(a)) {
            c = b[a]
        } else {
            if (this.parent) {
                c = this.parent.getBlockVar(a)
            }
        }
        return c
    };
    m.prototype.lookup = function(a) {
        var c = this.cache,
            d;
        if (c.hasOwnProperty(a)) {
            d = c[a]
        } else {
            var g = this,
                h, i, j, k = !1;
            while (g) {
                if (0 < a.indexOf(".")) {
                    h = g.view;
                    i = a.split(".");
                    j = 0;
                    while (null != h && j < i.length) {
                        if (j === i.length - 1) k = e(h, i[j]) || f(h, i[j]);
                        h = h[i[j++]]
                    }
                } else {
                    h = g.view[a];
                    k = e(g.view, a)
                }
                if (k) {
                    d = h;
                    break
                }
                g = g.parent
            }
            c[a] = d
        }
        if (b(d)) d = d.call(this.view);
        return d
    };

    function n() {
        this.cache = {}
    }
    n.prototype.clearCache = function() {
        this.cache = {}
    };
    n.prototype.parse = function(b, c) {
        var d = this.cache,
            e = b + ":" + (c || a.tags).join(":"),
            f = d[e];
        if (null == f) f = d[e] = i(b, c);
        return f
    };
    n.prototype.render = function(a, b, c, d) {
        var e = this.parse(a, d),
            f = b instanceof m ? b : new m(b);
        return this.renderTokens(e, f, c, a, d)
    };
    n.prototype.renderTokens = function(a, b, c, d, e) {
        for (var f = "", g, h, j, k = 0, l = a.length; k < l; ++k) {
            j = void 0;
            g = a[k];
            h = g[0];
            if ("#" === h) j = this.renderSection(g, b, c, d);
            else if ("^" === h) j = this.renderInverted(g, b, c, d);
            else if (">" === h) j = this.renderPartial(g, b, c, e);
            else if ("<" === h) j = this.renderBlock(g, b, c, d);
            else if ("$" === h) j = this.renderBlockVariable(g, b, c, d);
            else if ("&" === h) j = this.unescapedValue(g, b);
            else if ("name" === h) j = this.escapedValue(g, b);
            else if ("text" === h) j = this.rawValue(g);
            if (j !== void 0) f += j
        }
        return f
    };
    n.prototype.renderSection = function(a, c, d, e) {
        var g = this,
            h = "",
            i = c.lookup(a[1]);

        function f(a) {
            return g.render(a, c, d)
        }
        if (!i) return;
        if (p(i)) {
            for (var k = 0, l = i.length; k < l; ++k) {
                h += this.renderTokens(a[4], c.push(i[k]), d, e)
            }
        } else if ("object" === _typeof(i) || "string" == typeof i || "number" == typeof i) {
            h += this.renderTokens(a[4], c.push(i), d, e)
        } else if (b(i)) {
            if ("string" != typeof e) throw new Error("Cannot use higher-order sections without the original template");
            i = i.call(c.view, e.slice(a[3], a[5]), f);
            if (null != i) h += i
        } else {
            h += this.renderTokens(a[4], c, d, e)
        }
        return h
    };
    n.prototype.renderInverted = function(a, b, c, d) {
        var e = b.lookup(a[1]);
        if (!e || p(e) && 0 === e.length) return this.renderTokens(a[4], b, c, d)
    };
    n.prototype.renderPartial = function(a, c, d, e) {
        if (!d) return;
        var f = b(d) ? d(a[1]) : d[a[1]];
        if (null != f) return this.renderTokens(this.parse(f, e), c, d, f)
    };
    n.prototype.renderBlock = function(a, c, d, e) {
        if (!d) return;
        var f = b(d) ? d(a[1]) : d[a[1]];
        if (null != f) c.clearBlockVars();
        this.renderTokens(a[4], c, d, e);
        var g = this.renderTokens(this.parse(f), c, d, f);
        c.clearBlockVars();
        return g
    };
    n.prototype.renderBlockVariable = function(a, b, c, d) {
        var e = a[1],
            f = b.getBlockVar(e);
        if (!f) {
            b.setBlockVar(e, d.slice(a[3], a[5]));
            return this.renderTokens(a[4], b, c, d)
        } else {
            return this.renderTokens(this.parse(f), b, c, f)
        }
    };
    n.prototype.unescapedValue = function(a, b) {
        var c = b.lookup(a[1]);
        if (null != c) return c
    };
    n.prototype.escapedValue = function(b, c) {
        var d = c.lookup(b[1]);
        if (null != d) return a.escape(d)
    };
    n.prototype.rawValue = function(a) {
        return a[1]
    };
    a.name = "mustache.js";
    a.version = "3.0.1";
    a.tags = ["{{", "}}"];
    var z = new n;
    a.clearCache = function() {
        return z.clearCache()
    };
    a.parse = function(a, b) {
        return z.parse(a, b)
    };
    a.render = function(a, b, d, e) {
        if ("string" != typeof a) {
            throw new TypeError("Invalid template! Template should be a \"string\" but \"" + c(a) + "\" was given as the first argument for mustache#render(template, view, partials)")
        }
        return z.render(a, b, d, e)
    };
    a.to_html = function(c, d, e, f) {
        var g = a.render(c, d, e);
        if (b(f)) {
            f(g)
        } else {
            return g
        }
    };
    a.escape = function(a) {
        return (a + "").replace(/[&<>"'`=\/]/g, function(a) {
            return t[a]
        })
    };
    a.Scanner = l;
    a.Context = m;
    a.Writer = n;
    return a
});

function _typeof(a) {
    if ("function" == typeof Symbol && "symbol" == typeof Symbol.iterator) {
        _typeof = function(a) {
            return typeof a
        }
    } else {
        _typeof = function(a) {
            return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
        }
    }
    return _typeof(a)
}
define("core/sortable_list", ["jquery", "core/log", "core/autoscroll", "core/str", "core/modal_factory", "core/modal_events", "core/notification"], function(b, a, c, d, e, f, g) {
    var h = {
            targetListSelector: null,
            moveHandlerSelector: "[data-drag-type=move]",
            isHorizontal: !1,
            autoScroll: !0
        },
        j = {
            keyboardDragClass: "dragdrop-keyboard-drag",
            isDraggedClass: "sortable-list-is-dragged",
            currentPositionClass: "sortable-list-current-position",
            sourceListClass: "sortable-list-source",
            targetListClass: "sortable-list-target",
            overElementClass: "sortable-list-over-element"
        },
        k = function(a) {
            return {
                setup: function setup(b, c, d) {
                    if (c.includes("notPassive")) {
                        this.addEventListener(a, d, {
                            passive: !1
                        });
                        return !0
                    } else {
                        return !1
                    }
                }
            }
        };
    if (function eventListenerOptionsSupported() {
            var a = !1,
                b;
            try {
                b = Object.defineProperty({}, "passive", {
                    get: function get() {
                        a = !0
                    }
                });
                document.addEventListener("testpassiveeventoptions", b, b);
                document.removeEventListener("testpassiveeventoptions", b, b)
            } catch (b) {
                a = !1
            }
            return a
        }) {
        b.event.special.touchstart = k("touchstart");
        b.event.special.touchmove = k("touchmove");
        b.event.special.touchend = k("touchend")
    }
    var l = function(a, c) {
        this.info = null;
        this.proxy = null;
        this.proxyDelta = null;
        this.dragCounter = 0;
        this.lastEvent = null;
        this.config = b.extend({}, h, c || {});
        this.config.listSelector = a;
        if (!this.config.targetListSelector) {
            this.config.targetListSelector = a
        }
        if ("object" === _typeof(this.config.listSelector)) {
            b(this.config.listSelector).on("mousedown touchstart.notPassive", b.proxy(this.dragStartHandler, this))
        } else {
            b("body").on("mousedown touchstart.notPassive", this.config.listSelector, b.proxy(this.dragStartHandler, this))
        }
        if (null !== this.config.moveHandlerSelector) {
            b("body").on("click keypress", this.config.moveHandlerSelector, b.proxy(this.clickHandler, this))
        }
    };
    l.EVENTS = {
        DRAGSTART: "sortablelist-dragstart",
        DRAG: "sortablelist-drag",
        DROP: "sortablelist-drop",
        DRAGEND: "sortablelist-dragend"
    };
    l.prototype.resetDraggedClasses = function() {
        var a = [j.isDraggedClass, j.currentPositionClass, j.overElementClass, j.targetListClass];
        for (var c in a) {
            b("." + a[c]).removeClass(a[c])
        }
        if (this.proxy) {
            this.proxy.remove();
            this.proxy = b()
        }
    };
    l.prototype.calculatePositionOnPage = function(a) {
        if (a.originalEvent && a.originalEvent.touches && a.originalEvent.touches[0] !== void 0) {
            var c = a.originalEvent.touches[0];
            a.pageX = c.pageX;
            a.pageY = c.pageY
        }
        if (a.pageX === void 0) {
            a.pageX = this.lastEvent.pageX;
            a.pageY = this.lastEvent.pageY
        } else {
            this.lastEvent = a
        }
        if (a.clientX === void 0) {
            a.clientX = Math.round(a.pageX - b(window).scrollLeft());
            a.clientY = Math.round(a.pageY - b(window).scrollTop())
        }
    };
    l.prototype.dragStartHandler = function(a) {
        if (null !== this.info) {
            if ("click" === this.info.type || "touchend" === this.info.type) {
                return
            }
            this.moveElement(this.info.sourceList, this.info.sourceNextElement);
            this.finishDragging()
        }
        if ("mousedown" === a.type && 1 !== a.which) {
            return
        }
        this.calculatePositionOnPage(a);
        var d = b(a.target).closest(b(a.currentTarget).children());
        if (!d.length) {
            return
        }
        if (null !== this.config.moveHandlerSelector) {
            if (!b(a.target).closest(this.config.moveHandlerSelector, d).length) {
                return
            }
        }
        a.stopPropagation();
        a.preventDefault();
        this.dragCounter++;
        this.info = {
            element: d,
            sourceNextElement: d.next(),
            sourceList: d.parent(),
            targetNextElement: d.next(),
            targetList: d.parent(),
            type: a.type,
            dropped: !1,
            startX: a.pageX,
            startY: a.pageY,
            startTime: new Date().getTime()
        };
        b(this.config.targetListSelector).addClass(j.targetListClass);
        var e = d.offset();
        d.addClass(j.currentPositionClass);
        this.proxyDelta = {
            x: e.left - a.pageX,
            y: e.top - a.pageY
        };
        this.proxy = b();
        var f = this.dragCounter;
        setTimeout(b.proxy(function() {
            if (null === this.info || "click" === this.info.type || "keypress" === this.info.type || this.dragCounter !== f) {
                return
            }
            this.createProxy()
        }, this), 500);
        b(window).on("mousemove touchmove.notPassive mouseup touchend.notPassive", b.proxy(this.dragHandler, this));
        b(window).on("keypress", b.proxy(this.dragcancelHandler, this));
        if (this.config.autoScroll) {
            c.start(function() {
                b(window).trigger("mousemove")
            })
        }
        this.executeCallback(l.EVENTS.DRAGSTART)
    };
    l.prototype.createProxy = function() {
        this.proxy = this.info.element.clone();
        this.info.sourceList.append(this.proxy);
        this.proxy.removeAttr("id").removeClass(j.currentPositionClass).addClass(j.isDraggedClass).css({
            position: "fixed"
        });
        this.proxy.offset({
            top: this.proxyDelta.y + this.lastEvent.pageY,
            left: this.proxyDelta.x + this.lastEvent.pageX
        })
    };
    l.prototype.clickHandler = function(a) {
        if ("keypress" === a.type && 13 !== a.originalEvent.keyCode && 32 !== a.originalEvent.keyCode) {
            return
        }
        if (null !== this.info) {
            return
        }
        var c = b(a.target).closest(this.config.moveHandlerSelector),
            d = c.closest(this.config.listSelector),
            e = c.closest(d.children());
        if (!e.length) {
            return
        }
        a.preventDefault();
        a.stopPropagation();
        this.dragCounter++;
        this.info = {
            element: e,
            sourceNextElement: e.next(),
            sourceList: d,
            targetNextElement: e.next(),
            targetList: d,
            dropped: !1,
            type: a.type,
            startTime: new Date().getTime()
        };
        this.executeCallback(l.EVENTS.DRAGSTART);
        this.displayMoveDialogue(c)
    };
    l.prototype.getPositionInNode = function(a, b, c) {
        if (!c.length) {
            return null
        }
        var d = c[0],
            e = d.getBoundingClientRect(),
            f = b - (e.top + window.scrollY),
            g = a - (e.left + window.scrollX);
        if (g >= -0 && g <= e.width + 0 && f >= -0 && f <= e.height + 0) {
            return {
                x: g,
                y: f,
                xRatio: e.width ? g / e.width : 0,
                yRatio: e.height ? f / e.height : 0
            }
        }
        return null
    };
    l.prototype.isListHorizontal = function(a) {
        var b = this.config.isHorizontal;
        if (!0 === b || !1 === b) {
            return b
        }
        return b(a)
    };
    l.prototype.dragHandler = function(a) {
        a.preventDefault();
        a.stopPropagation();
        this.calculatePositionOnPage(a);
        this.proxy.offset({
            top: -1e3,
            left: -1e3
        });
        var c = b(document.elementFromPoint(a.clientX, a.clientY)),
            d = this.info.element[0],
            e = function() {
                return this !== d
            },
            f = c.closest("." + j.targetListClass + " > :not(." + j.isDraggedClass + ")").filter(e),
            g = c.closest("." + j.targetListClass),
            h = this.proxy,
            i = function() {
                return !h || !h.length || this !== h[0]
            };
        b("." + j.overElementClass).removeClass(j.overElementClass);
        f.addClass(j.overElementClass);
        this.proxy.offset({
            top: this.proxyDelta.y + a.pageY,
            left: this.proxyDelta.x + a.pageX
        });
        if (g.length && !g.children().filter(i).length) {
            this.moveElement(g, b())
        } else if (1 === f.length && !this.info.element.find(f[0]).length) {
            var k = this.getPositionInNode(a.pageX, a.pageY, f);
            if (k) {
                var m = f.parent(),
                    n = this.isListHorizontal(m) ? k.xRatio : k.yRatio,
                    o = f.find("." + j.targetListClass),
                    p = !o.children().filter(i).filter(e).length;
                if (o.length && p && .2 < n && .8 > n) {
                    this.moveElement(o, b())
                } else if (.5 < n) {
                    this.moveElement(m, f.next().filter(i))
                } else {
                    this.moveElement(m, f)
                }
            }
        }
        if ("mouseup" === a.type || "touchend" === a.type) {
            this.info.endX = a.pageX;
            this.info.endY = a.pageY;
            this.info.endTime = new Date().getTime();
            this.info.dropped = !0;
            this.info.positionChanged = this.hasPositionChanged(this.info);
            var q = this.info;
            this.executeCallback(l.EVENTS.DROP);
            this.finishDragging();
            if ("touchend" === a.type && null !== this.config.moveHandlerSelector && 500 > q.endTime - q.startTime && !q.positionChanged) {
                this.clickHandler(a)
            }
        }
    };
    l.prototype.hasPositionChanged = function(a) {
        return a.sourceList[0] !== a.targetList[0] || a.sourceNextElement.length !== a.targetNextElement.length || a.sourceNextElement.length && a.sourceNextElement[0] !== a.targetNextElement[0]
    };
    l.prototype.moveElement = function(a, b) {
        var c = this.info.element;
        if (b.length && b[0] === c[0]) {
            return
        }
        if (a[0] === this.info.targetList[0] && b.length === this.info.targetNextElement.length && b[0] === this.info.targetNextElement[0]) {
            return
        }
        if (b.length) {
            a[0].insertBefore(c[0], b[0])
        } else if (this.proxy && this.proxy.parent().length && this.proxy.parent()[0] === a[0]) {
            a[0].insertBefore(c[0], this.proxy[0])
        } else {
            a[0].appendChild(c[0])
        }
        this.info.targetList = a;
        this.info.targetNextElement = b;
        this.executeCallback(l.EVENTS.DRAG)
    };
    l.prototype.finishDragging = function() {
        this.resetDraggedClasses();
        if (this.config.autoScroll) {
            c.stop()
        }
        b(window).off("mousemove touchmove.notPassive mouseup touchend.notPassive", b.proxy(this.dragHandler, this));
        b(window).off("keypress", b.proxy(this.dragcancelHandler, this));
        this.executeCallback(l.EVENTS.DRAGEND);
        this.info = null
    };
    l.prototype.executeCallback = function(a) {
        this.info.element.trigger(a, this.info)
    };
    l.prototype.dragcancelHandler = function(a) {
        if ("keypress" !== a.type || 27 !== a.originalEvent.keyCode) {
            return
        }
        this.moveElement(this.info.sourceList, this.info.sourceNextElement);
        this.finishDragging()
    };
    l.prototype.getElementName = function(a) {
        return b.Deferred().resolve(a.text())
    };
    l.prototype.getDestinationName = function(a, b) {
        if (!b.length) {
            return d.get_string("movecontenttothetop", "moodle")
        } else {
            return this.getElementName(b).then(function(a) {
                return d.get_string("movecontentafter", "moodle", a)
            })
        }
    };
    l.prototype.getMoveDialogueTitle = function(a, c) {
        if (c.attr("title")) {
            return b.Deferred().resolve(c.attr("title"))
        }
        return this.getElementName(a).then(function(a) {
            return d.get_string("movecontent", "moodle", a)
        })
    };
    l.prototype.getDestinationsList = function() {
        var a = [],
            c = b(this.config.targetListSelector),
            d = b("<ul/>").addClass(j.keyboardDragClass),
            e = b.when().then(function() {
                return d
            }),
            f = b.proxy(function(c, f, g) {
                if (f.is(this.info.element) || g.is(this.info.element)) {
                    return
                }
                if (b.contains(this.info.element[0], c[0])) {
                    return
                }
                e = e.then(b.proxy(function() {
                    return this.getDestinationName(c, g)
                }, this)).then(function(e) {
                    var g = b("<li/>").appendTo(d),
                        h = b("<a href=\"#\"/>").attr("data-core_sortable_list-quickmove", 1).appendTo(g);
                    h.data("parent-element", c).data("before-element", f).text(e);
                    return d
                })
            }, this),
            g = function() {
                if (-1 !== b.inArray(this, a)) {
                    return
                }
                a.push(this);
                var d = b(this),
                    e = d.children();
                e.each(function() {
                    var a = b(this);
                    f(d, a, a.prev());
                    a.find(c).each(g)
                });
                f(d, b(), e.last())
            };
        c.each(g);
        return e
    };
    l.prototype.displayMoveDialogue = function(a) {
        e.create({
            type: e.types.CANCEL,
            title: this.getMoveDialogueTitle(this.info.element, a),
            body: this.getDestinationsList()
        }).then(b.proxy(function(c) {
            var d = b.proxy(function(d) {
                d.preventDefault();
                d.stopPropagation();
                this.moveElement(b(d.currentTarget).data("parent-element"), b(d.currentTarget).data("before-element"));
                this.info.endTime = new Date().getTime();
                this.info.positionChanged = this.hasPositionChanged(this.info);
                this.info.dropped = !0;
                a.focus();
                this.executeCallback(l.EVENTS.DROP);
                c.hide()
            }, this);
            c.getRoot().on("click", "[data-core_sortable_list-quickmove]", d);
            c.getRoot().on(f.hidden, b.proxy(function() {
                c.getRoot().off("click", "[data-core_sortable_list-quickmove]", d);
                c.destroy();
                this.finishDragging()
            }, this));
            c.setLarge();
            c.show();
            return c
        }, this)).catch(g.exception)
    };
    return l
});
define("core/modal_cancel", ["jquery", "core/notification", "core/custom_interaction_events", "core/modal", "core/modal_events"], function(a, b, c, d, f) {
    var g = {
            CANCEL_BUTTON: "[data-action=\"cancel\"]"
        },
        h = function(a) {
            d.call(this, a);
            if (!this.getFooter().find(g.CANCEL_BUTTON).length) {
                b.exception({
                    message: "No cancel button found"
                })
            }
        };
    h.prototype = Object.create(d.prototype);
    h.prototype.constructor = h;
    h.prototype.setFooter = function() {
        b.exception({
            message: "Can not change the footer of a cancel modal"
        })
    };
    h.prototype.registerEventListeners = function() {
        d.prototype.registerEventListeners.call(this);
        this.getModal().on(c.events.activate, g.CANCEL_BUTTON, function(b, c) {
            var d = a.Event(f.cancel);
            this.getRoot().trigger(d, this);
            if (!d.isDefaultPrevented()) {
                this.hide();
                c.originalEvent.preventDefault()
            }
        }.bind(this))
    };
    return h
});
define("core/chart_output_base", ["jquery"], function(a) {
    function b(b, c) {
        this._node = a(b);
        this._chart = c
    }
    b.prototype.update = function() {
        throw new Error("Not supported.")
    };
    return b
});
define("core/form-course-selector", ["core/ajax", "jquery"], function(a, b) {
    return {
        processResults: function processResults(a, c) {
            var d = [],
                e = 0,
                f = (b(a).data("exclude") + "").split(",");
            for (e = 0; e < c.courses.length; e++) {
                if (-1 === f.indexOf(c.courses[e].id + "")) {
                    d.push({
                        value: c.courses[e].id,
                        label: c.courses[e].displayname
                    })
                }
            }
            return d
        },
        transport: function transport(c, d, e, f) {
            var g = b(c),
                h = g.data("requiredcapabilities");
            if ("" !== h.trim()) {
                h = h.split(",")
            } else {
                h = []
            }
            var i = g.data("limittoenrolled"),
                j = g.data("includefrontpage"),
                k = g.data("onlywithcompletion"),
                l = null;
            if ("undefined" == typeof d) {
                d = ""
            }
            var m = {
                    criterianame: "search",
                    criteriavalue: d,
                    page: 0,
                    perpage: 100,
                    requiredcapabilities: h,
                    limittoenrolled: i,
                    onlywithcompletion: k
                },
                n = [{
                    methodname: "core_course_search_courses",
                    args: m
                }];
            if (j) {
                n.push({
                    methodname: "core_course_get_courses",
                    args: {
                        options: {
                            ids: [j]
                        }
                    }
                })
            }
            l = a.call(n);
            b.when.apply(b.when, l).done(function(a, b) {
                if (b && 1 == b.length) {
                    var c = b.pop(),
                        f = "" === d || -1 < c.fullname.toUpperCase().indexOf(d.toUpperCase()) || -1 < c.shortname.toUpperCase().indexOf(d.toUpperCase());
                    if (f) {
                        a.courses.splice(0, 0, c)
                    }
                }
                e(a)
            }).fail(f)
        }
    }
});
define("core/chart_output", ["core/chart_output_chartjs"], function(a) {
    return a
});
define("core/storagewrapper", ["core/config"], function(a) {
    var b = function(b) {
        this.storage = b;
        this.supported = this.detectSupport();
        this.hashSource = a.wwwroot + "/" + a.jsrev;
        this.hash = this.hashString(this.hashSource);
        this.prefix = this.hash + "/";
        this.jsrevPrefix = this.hashString(a.wwwroot) + "/jsrev";
        this.validateCache()
    };
    b.prototype.detectSupport = function() {
        if (-1 == a.jsrev) {
            return !1
        }
        if ("undefined" == typeof this.storage) {
            return !1
        }
        try {
            if (null === this.storage) {
                return !1
            }
            this.storage.setItem("test", "1");
            this.storage.removeItem("test");
            return !0
        } catch (a) {
            return !1
        }
    };
    b.prototype.prefixKey = function(a) {
        return this.prefix + a
    };
    b.prototype.validateCache = function() {
        var b = this.storage.getItem(this.jsrevPrefix);
        if (null === b) {
            this.storage.setItem(this.jsrevPrefix, a.jsrev);
            return
        }
        var c = a.jsrev;
        if (c != b) {
            this.storage.clear();
            this.storage.setItem(this.jsrevPrefix, a.jsrev)
        }
    };
    b.prototype.hashString = function(a) {
        var b = 0,
            c, d, e;
        if (0 === a.length) {
            return b
        }
        for (c = 0, e = a.length; c < e; c++) {
            d = a.charCodeAt(c);
            b = (b << 5) - b + d;
            b |= 0
        }
        return b
    };
    b.prototype.get = function(a) {
        if (!this.supported) {
            return !1
        }
        a = this.prefixKey(a);
        return this.storage.getItem(a)
    };
    b.prototype.set = function(a, b) {
        if (!this.supported) {
            return !1
        }
        a = this.prefixKey(a);
        try {
            this.storage.setItem(a, b)
        } catch (a) {
            return !1
        }
        return !0
    };
    return b
});
define("core/local/aria/focuslock", ["exports"], function(a) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    a.untrapFocus = a.trapFocus = void 0;
    var b = {
            focusable: "input:not([type=\"hidden\"]), a[href], button, textarea, select, [tabindex]"
        },
        c = [],
        d = [],
        e = [],
        f = null,
        g = !1,
        h = !1,
        i = function(a) {
            if (g) {
                return
            }
            var b = n();
            if (!b.parentNode) {
                s()
            }
            if (b.contains(a.target)) {
                f = a.target
            } else {
                j();
                if (f == document.activeElement) {
                    k()
                }
                f = document.activeElement
            }
        },
        j = function() {
            var a = n(),
                c = Array.from(a.querySelectorAll(b.focusable));
            c.unshift(a);
            return c.some(function(a) {
                return m(a)
            })
        },
        k = function() {
            var a = n(),
                c = Array.from(a.querySelectorAll(b.focusable)).reverse();
            c.push(a);
            return c.some(function(a) {
                return m(a)
            })
        },
        l = function(a) {
            if (0 < a.tabIndex || 0 === a.tabIndex && null !== a.getAttribute("tabIndex")) {
                return !0
            }
            if (a.disabled) {
                return !1
            }
            switch (a.nodeName) {
                case "A":
                    return !!a.href && "ignore" != a.rel;
                case "INPUT":
                    return "hidden" != a.type && "file" != a.type;
                case "BUTTON":
                case "SELECT":
                case "TEXTAREA":
                    return !0;
                default:
                    return !1;
            }
        },
        m = function(a) {
            if (!l(a)) {
                return !1
            }
            g = !0;
            try {
                a.focus()
            } catch (a) {}
            g = !1;
            return document.activeElement === a
        },
        n = function() {
            return c[c.length - 1]
        },
        o = function(a) {
            if (a === n()) {
                return
            }
            c.push(a);
            var b = n(),
                f = document.createElement("div");
            f.tabIndex = 0;
            f.style.position = "fixed";
            f.style.top = 0;
            f.style.left = 0;
            var g = f.cloneNode();
            b.parentNode.insertBefore(g, b);
            d.push(g);
            var h = f.cloneNode();
            b.parentNode.insertBefore(h, b.nextSibling);
            e.push(h)
        },
        p = function() {
            c.pop();
            var a = e.pop();
            if (a) {
                a.remove()
            }
            var b = d.pop();
            if (b) {
                b.remove()
            }
        },
        q = function() {
            return !!c.length
        },
        r = function(a) {
            o(a);
            if (!h) {
                document.addEventListener("focus", i, !0)
            }
            if (!j()) {
                var b = n(),
                    c = b.tabIndex;
                b.tabIndex = 0;
                m(b);
                b.tabIndex = c
            }
            f = document.activeElement;
            h = !0
        };
    a.trapFocus = r;
    var s = function() {
        p();
        if (q()) {
            return
        }
        document.removeEventListener("focus", i, !0);
        f = null;
        g = !1;
        h = !1
    };
    a.untrapFocus = s
});
define("core/paged_content_paging_bar", ["jquery", "core/custom_interaction_events", "core/paged_content_events", "core/str", "core/pubsub"], function(a, b, c, d, e) {
    var f = {
            ROOT: "[data-region=\"paging-bar\"]",
            PAGE: "[data-page]",
            PAGE_ITEM: "[data-region=\"page-item\"]",
            PAGE_LINK: "[data-region=\"page-link\"]",
            FIRST_BUTTON: "[data-control=\"first\"]",
            LAST_BUTTON: "[data-control=\"last\"]",
            NEXT_BUTTON: "[data-control=\"next\"]",
            PREVIOUS_BUTTON: "[data-control=\"previous\"]",
            DOTS_BUTTONS: "[data-dots]",
            BEGINNING_DOTS_BUTTON: "[data-dots=\"beginning\"]",
            ENDING_DOTS_BUTTON: "[data-dots=\"ending\"]"
        },
        g = function(a, b) {
            return a.find(f.PAGE_ITEM + "[data-page-number=\"" + b + "\"]")
        },
        h = function(a) {
            return a.find(f.NEXT_BUTTON)
        },
        i = function(a, b) {
            a.attr("data-last-page-number", b)
        },
        j = function(a) {
            return parseInt(a.attr("data-last-page-number"), 10)
        },
        k = function(a) {
            return parseInt(a.attr("data-active-page-number"), 10)
        },
        l = function(a, b) {
            a.attr("data-active-page-number", b)
        },
        m = function(a) {
            var b = k(a);
            return !isNaN(b) && 0 != b
        },
        n = function(a, b) {
            if (b.attr("data-page") != void 0) {
                return parseInt(b.attr("data-page-number"), 10)
            }
            var c = 1,
                d = null;
            switch (b.attr("data-control")) {
                case "first":
                    c = 1;
                    break;
                case "last":
                    c = j(a);
                    break;
                case "next":
                    d = k(a);
                    var e = j(a);
                    if (!e) {
                        c = d + 1
                    } else if (d && d < e) {
                        c = d + 1
                    } else {
                        c = e
                    }
                    break;
                case "previous":
                    d = k(a);
                    if (d && 1 < d) {
                        c = d - 1
                    } else {
                        c = 1
                    }
                    break;
                default:
                    c = 1;
                    break;
            }
            return parseInt(c, 10)
        },
        o = function(a) {
            return parseInt(a.attr("data-items-per-page"), 10)
        },
        p = function(a, b) {
            a.attr("data-items-per-page", b)
        },
        q = function(a) {
            a.removeClass("hidden")
        },
        r = function(a) {
            a.addClass("hidden")
        },
        s = function(a) {
            var b = a.find(f.NEXT_BUTTON),
                c = a.find(f.LAST_BUTTON);
            b.addClass("disabled");
            b.attr("aria-disabled", !0);
            c.addClass("disabled");
            c.attr("aria-disabled", !0)
        },
        t = function(a) {
            var b = a.find(f.NEXT_BUTTON),
                c = a.find(f.LAST_BUTTON);
            b.removeClass("disabled");
            b.removeAttr("aria-disabled");
            c.removeClass("disabled");
            c.removeAttr("aria-disabled")
        },
        u = function(a) {
            var b = a.find(f.PREVIOUS_BUTTON),
                c = a.find(f.FIRST_BUTTON);
            b.addClass("disabled");
            b.attr("aria-disabled", !0);
            c.addClass("disabled");
            c.attr("aria-disabled", !0)
        },
        v = function(b) {
            var c = k(b),
                d = j(b),
                e = b.find(f.DOTS_BUTTONS),
                g = b.find(f.BEGINNING_DOTS_BUTTON),
                h = b.find(f.ENDING_DOTS_BUTTON),
                i = b.find(f.PAGE),
                l = parseInt(b.attr("data-bar-size"), 10);
            if (l && d > l) {
                var m = Math.max(c - Math.round(l / 2), 1),
                    n = m + l - 1;
                if (n >= d) {
                    n = d;
                    m = n - l + 1
                }
                if (1 < m) {
                    q(g);
                    m++
                } else {
                    r(g)
                }
                if (n < d) {
                    q(h);
                    n--
                } else {
                    r(h)
                }
                e.addClass("disabled");
                e.attr("aria-disabled", !0);
                r(i);
                i.each(function(b, c) {
                    c = a(c);
                    if (b + 1 >= m && b + 1 <= n) {
                        q(c)
                    }
                })
            } else {
                r(e)
            }
        },
        w = function(a) {
            var b = a.find(f.PREVIOUS_BUTTON),
                c = a.find(f.FIRST_BUTTON);
            b.removeClass("disabled");
            b.removeAttr("aria-disabled");
            c.removeClass("disabled");
            c.removeAttr("aria-disabled")
        },
        x = function(a) {
            var b = a.attr("data-aria-label-components-pagination-item"),
                c = b.split(",").map(function(a) {
                    return a.trim()
                });
            return c
        },
        y = function(a) {
            var b = a.attr("data-aria-label-components-pagination-active-item"),
                c = b.split(",").map(function(a) {
                    return a.trim()
                });
            return c
        },
        z = function(b, c) {
            var d = 0;
            l(b, 0);
            c.each(function(c, e) {
                var f = c + 1;
                e = a(e);
                e.attr("data-page-number", f);
                d++;
                if (e.hasClass("active")) {
                    l(b, f)
                }
            });
            i(b, d)
        },
        A = function(b) {
            var c = x(b),
                e = y(b),
                g = k(b),
                h = b.find(f.PAGE_ITEM),
                i = h.map(function(d, f) {
                    f = a(f);
                    var h = n(b, f);
                    if (h === g) {
                        return {
                            key: e[0],
                            component: e[1],
                            param: h
                        }
                    } else {
                        return {
                            key: c[0],
                            component: c[1],
                            param: h
                        }
                    }
                });
            d.get_strings(i).then(function(b) {
                h.each(function(c, d) {
                    d = a(d);
                    var e = b[c];
                    d.attr("aria-label", e);
                    d.find(f.PAGE_LINK).attr("aria-label", e)
                });
                return b
            }).catch(function() {})
        },
        B = function(a, b, d) {
            var h = j(a),
                i = b == k(a),
                m = o(a);
            if (!i) {
                a.find(f.PAGE_ITEM).removeClass("active").removeAttr("aria-current");
                var n = g(a, b);
                n.addClass("active");
                n.attr("aria-current", !0);
                l(a, b);
                v(a)
            }
            if (h && b >= h) {
                s(a)
            } else {
                t(a)
            }
            if (1 < b) {
                w(a)
            } else {
                u(a)
            }
            A(a);
            e.publish(d + c.SHOW_PAGES, [{
                pageNumber: b,
                limit: m,
                offset: (b - 1) * m
            }])
        },
        C = function(d, g) {
            var h = d.attr("data-ignore-control-while-loading"),
                k = !1;
            if ("" == h) {
                h = !0
            }
            b.define(d, [b.events.activate]);
            d.on(b.events.activate, f.PAGE_ITEM, function(b, c) {
                c.originalEvent.preventDefault();
                c.originalEvent.stopPropagation();
                if (h && k) {
                    return
                }
                var e = a(b.target).closest(f.PAGE_ITEM);
                if (!e.hasClass("disabled")) {
                    var i = n(d, e);
                    B(d, i, g);
                    k = !0
                }
            });
            e.subscribe(g + c.ALL_ITEMS_LOADED, function(a) {
                k = !1;
                var b = j(d);
                if (!b || a < b) {
                    i(d, a)
                }
                if (1 === a && d.attr("data-hide-control-on-single-page")) {
                    r(d);
                    s(d);
                    u(d)
                } else {
                    q(d);
                    s(d)
                }
            });
            e.subscribe(g + c.PAGES_SHOWN, function() {
                k = !1
            });
            e.subscribe(g + c.SET_ITEMS_PER_PAGE_LIMIT, function(a) {
                p(d, a);
                i(d, 0);
                l(d, 0);
                q(d);
                B(d, 1, g)
            })
        };
    return {
        init: function init(b, c) {
            b = a(b);
            var d = b.find(f.PAGE);
            z(b, d);
            C(b, c);
            if (m(b)) {
                var e = k(b);
                g(b, e).click();
                if (1 == e) {
                    u(b)
                }
            } else {
                h(b).click()
            }
            v(b)
        },
        disableNextControlButtons: s,
        enableNextControlButtons: t,
        disablePreviousControlButtons: u,
        enablePreviousControlButtons: w,
        showPage: B,
        rootSelector: f.ROOT
    }
});
define("core/chartjs", ["core/chartjs-lazy"], function(a) {
    return a
});
define("core/permissionmanager", ["jquery", "core/config", "core/notification", "core/templates", "core/yui"], function(a, b, c, d, e) {
    var f = {
            ADDROLE: "a.allowlink, a.prohibitlink",
            REMOVEROLE: "a.preventlink, a.unprohibitlink",
            UNPROHIBIT: "a.unprohibitlink"
        },
        g = a.Event("rolesloaded"),
        h, j, k, l, m = null,
        n = function loadOverideableRoles() {
            var d = {
                contextid: h,
                getroles: 1,
                sesskey: b.sesskey
            };
            a.post(k + "roles/ajax.php", d, null, "json").done(function(b) {
                try {
                    l = b;
                    n = function loadOverideableRoles() {
                        a("body").trigger(g)
                    };
                    n()
                } catch (a) {
                    c.exception(a)
                }
            }).fail(function(a, b, d) {
                c.exception(d)
            })
        },
        o = function(b, e, f) {
            var g = {
                contextid: h,
                roleid: e,
                sesskey: M.cfg.sesskey,
                action: f,
                capability: b.data("name")
            };
            a.post(k + "roles/ajax.php", g, null, "json").done(function(f) {
                var g = f;
                try {
                    var h = {
                        rolename: l[e],
                        roleid: e,
                        adminurl: k,
                        imageurl: M.util.image_url("t/delete", "moodle")
                    };
                    switch (g) {
                        case "allow":
                            h.spanclass = "allowed";
                            h.linkclass = "preventlink";
                            h.action = "prevent";
                            h.icon = "t/delete";
                            h.iconalt = M.util.get_string("deletexrole", "core_role", l[e]);
                            break;
                        case "prohibit":
                            h.spanclass = "forbidden";
                            h.linkclass = "unprohibitlink";
                            h.action = "unprohibit";
                            h.icon = "t/delete";
                            h.iconalt = M.util.get_string("deletexrole", "core_role", l[e]);
                            break;
                        case "prevent":
                            b.find("a[data-role-id=\"" + e + "\"]").first().closest(".allowed").remove();
                            return;
                        case "unprohibit":
                            b.find("a[data-role-id=\"" + e + "\"]").first().closest(".forbidden").remove();
                            return;
                        default:
                            return;
                    }
                    d.render("core/permissionmanager_role", h).done(function(c) {
                        if ("allow" == g) {
                            a(c).insertBefore(b.find(".allowmore:first"))
                        } else if ("prohibit" == g) {
                            a(c).insertBefore(b.find(".prohibitmore:first"));
                            var d = b.find(".allowedroles").first().find("a[data-role-id=\"" + e + "\"]");
                            if (d) {
                                d.first().closest(".allowed").remove()
                            }
                        }
                        m.hide()
                    }).fail(c.exception)
                } catch (a) {
                    c.exception(a)
                }
            }).fail(function(a, b, d) {
                c.exception(d)
            })
        },
        p = function(b) {
            b.preventDefault();
            var g = a(b.currentTarget);
            a("body").one("rolesloaded", function() {
                e.use("moodle-core-notification-dialogue", function() {
                    var b = g.data("action"),
                        h = g.closest("tr.rolecap"),
                        k = {
                            cap: h.data("humanname"),
                            context: j
                        },
                        n = M.util.get_string("role" + b + "info", "core_role", k);
                    if (null === m) {
                        m = new M.core.dialogue({
                            draggable: !0,
                            modal: !0,
                            closeButton: !0,
                            width: "450px"
                        })
                    }
                    m.set("headerContent", M.util.get_string("role" + b + "header", "core_role"));
                    var p, e, q = [];
                    switch (b) {
                        case "allow":
                            e = h.find(f.REMOVEROLE);
                            break;
                        case "prohibit":
                            e = h.find(f.UNPROHIBIT);
                            break;
                    }
                    for (p in l) {
                        var r = "",
                            s = e.filter("[data-role-id='" + p + "']").length;
                        if (s) {
                            r = "disabled"
                        }
                        var t = {
                            roleid: p,
                            rolename: l[p],
                            disabled: r
                        };
                        q.push(t)
                    }
                    d.render("core/permissionmanager_panelcontent", {
                        message: n,
                        roles: q
                    }).done(function(c) {
                        m.set("bodyContent", c);
                        m.show();
                        a("div.role_buttons").on("click", "input", function(c) {
                            var d = a(c.currentTarget).data("role-id");
                            o(h, d, b)
                        })
                    }).fail(c.exception)
                })
            });
            n()
        },
        q = function(b) {
            b.preventDefault();
            var d = a(b.currentTarget);
            a("body").one("rolesloaded", function() {
                var a = d.data("action"),
                    b = d.data("role-id"),
                    e = d.closest("tr.rolecap"),
                    f = {
                        role: l[b],
                        cap: e.data("humanname"),
                        context: j
                    };
                c.confirm(M.util.get_string("confirmunassigntitle", "core_role"), M.util.get_string("confirmrole" + a, "core_role", f), M.util.get_string("confirmunassignyes", "core_role"), M.util.get_string("confirmunassignno", "core_role"), function() {
                    o(e, b, a)
                })
            });
            n()
        };
    return {
        initialize: function initialize(b) {
            h = b.contextid;
            j = b.contextname;
            k = b.adminurl;
            var c = a("body");
            c.on("click", f.ADDROLE, p);
            c.on("click", f.REMOVEROLE, q)
        }
    }
});
define("core/form-cohort-selector", ["core/ajax", "jquery"], function(a, b) {
    return {
        processResults: function processResults(a, c) {
            var d = [],
                e = 0,
                f = (b(a).data("exclude") + "").split(",");
            for (e = 0; e < c.cohorts.length; e++) {
                if (-1 === f.indexOf(c.cohorts[e].id + "")) {
                    d.push({
                        value: c.cohorts[e].id,
                        label: c.cohorts[e].name
                    })
                }
            }
            return d
        },
        transport: function transport(c, d, e, f) {
            var g = b(c),
                h = null;
            if ("undefined" == typeof d) {
                d = ""
            }
            var i = g.data("contextid"),
                j = {
                    query: d,
                    includes: "parents",
                    limitfrom: 0,
                    limitnum: 100,
                    context: {
                        contextid: i
                    }
                };
            h = a.call([{
                methodname: "core_cohort_search_cohorts",
                args: j
            }]);
            b.when.apply(b.when, h).done(function(a) {
                e(a)
            }).fail(f)
        }
    }
});

function _typeof(a) {
    if ("function" == typeof Symbol && "symbol" == typeof Symbol.iterator) {
        _typeof = function(a) {
            return typeof a
        }
    } else {
        _typeof = function(a) {
            return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
        }
    }
    return _typeof(a)
}(function(a, b) {
    "use strict";
    if ("function" == typeof define && define.amd) {
        define("core/loglevel", b)
    } else if ("object" === ("undefined" == typeof module ? "undefined" : _typeof(module)) && module.exports) {
        module.exports = b()
    } else {
        a.log = b()
    }
})(this, function() {
    "use strict";
    var g = function() {},
        h = "undefined",
        j = ["trace", "debug", "info", "warn", "error"];

    function a(a, b) {
        var c = a[b];
        if ("function" == typeof c.bind) {
            return c.bind(a)
        } else {
            try {
                return Function.prototype.bind.call(c, a)
            } catch (b) {
                return function() {
                    return Function.prototype.apply.apply(c, [a, arguments])
                }
            }
        }
    }

    function b(b) {
        if ("debug" === b) {
            b = "log"
        }
        if (("undefined" == typeof console ? "undefined" : _typeof(console)) === h) {
            return !1
        } else if (console[b] !== void 0) {
            return a(console, b)
        } else if (console.log !== void 0) {
            return a(console, "log")
        } else {
            return g
        }
    }

    function c(a, b) {
        for (var c = 0, d; c < j.length; c++) {
            d = j[c];
            this[d] = c < a ? g : this.methodFactory(d, a, b)
        }
        this.log = this.debug
    }

    function d(a, b, d) {
        return function() {
            if (("undefined" == typeof console ? "undefined" : _typeof(console)) !== h) {
                c.call(this, b, d);
                this[a].apply(this, arguments)
            }
        }
    }

    function e(a) {
        return b(a) || d.apply(this, arguments)
    }

    function f(a, b, d) {
        var i = this,
            k, l = "loglevel";
        if (a) {
            l += ":" + a
        }

        function f(a) {
            var b = (j[a] || "silent").toUpperCase();
            if (("undefined" == typeof window ? "undefined" : _typeof(window)) === h) return;
            try {
                window.localStorage[l] = b;
                return
            } catch (a) {}
            try {
				console.log(b)
                window.document.cookie = encodeURIComponent(l) + "=" + b + ";"
            } catch (a) {}
        }

        function g() {
            var a;
            if (("undefined" == typeof window ? "undefined" : _typeof(window)) === h) return;
            try {
                a = window.localStorage[l]
            } catch (a) {}
            if (_typeof(a) === h) {
                try {
                    var b = window.document.cookie,
                        c = b.indexOf(encodeURIComponent(l) + "=");
                    if (-1 !== c) {
                        a = /^([^;]+)/.exec(b.slice(c))[1]
                    }
                } catch (a) {}
            }
            if (i.levels[a] === void 0) {
                a = void 0
            }
            return a
        }
        i.name = a;
        i.levels = {
            TRACE: 0,
            DEBUG: 1,
            INFO: 2,
            WARN: 3,
            ERROR: 4,
            SILENT: 5
        };
        i.methodFactory = d || e;
        i.getLevel = function() {
            return k
        };
        i.setLevel = function(b, d) {
            if ("string" == typeof b && i.levels[b.toUpperCase()] !== void 0) {
                b = i.levels[b.toUpperCase()]
            }
            if ("number" == typeof b && 0 <= b && b <= i.levels.SILENT) {
                k = b;
                if (!1 !== d) {
                    f(b)
                }
                c.call(i, b, a);
                if (("undefined" == typeof console ? "undefined" : _typeof(console)) === h && b < i.levels.SILENT) {
                    return "No console available for logging"
                }
            } else {
                throw "log.setLevel() called with invalid level: " + b
            }
        };
        i.setDefaultLevel = function(a) {
            if (!g()) {
                i.setLevel(a, !1)
            }
        };
        i.enableAll = function(a) {
            i.setLevel(i.levels.TRACE, a)
        };
        i.disableAll = function(a) {
            i.setLevel(i.levels.SILENT, a)
        };
        var m = g();
        if (null == m) {
            m = null == b ? "WARN" : b
        }
        i.setLevel(m, !1)
    }
    var k = new f,
        l = {};
    k.getLogger = function(a) {
        if ("string" != typeof a || "" === a) {
            throw new TypeError("You must supply a name when creating a logger.")
        }
        var b = l[a];
        if (!b) {
            b = l[a] = new f(a, k.getLevel(), k.methodFactory)
        }
        return b
    };
    var m = ("undefined" == typeof window ? "undefined" : _typeof(window)) !== h ? window.log : void 0;
    k.noConflict = function() {
        if (("undefined" == typeof window ? "undefined" : _typeof(window)) !== h && window.log === k) {
            window.log = m
        }
        return k
    };
    k.getLoggers = function() {
        return l
    };
    return k
});

function _typeof(a) {
    if ("function" == typeof Symbol && "symbol" == typeof Symbol.iterator) {
        _typeof = function(a) {
            return typeof a
        }
    } else {
        _typeof = function(a) {
            return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
        }
    }
    return _typeof(a)
}
define("core/modal", ["jquery", "core/templates", "core/notification", "core/key_codes", "core/custom_interaction_events", "core/modal_backdrop", "core/event", "core/modal_events", "core/local/aria/focuslock", "core/pending"], function(a, b, c, d, e, f, g, h, i, j) {
    var k = {
            CONTAINER: "[data-region=\"modal-container\"]",
            MODAL: "[data-region=\"modal\"]",
            HEADER: "[data-region=\"header\"]",
            TITLE: "[data-region=\"title\"]",
            BODY: "[data-region=\"body\"]",
            FOOTER: "[data-region=\"footer\"]",
            HIDE: "[data-action=\"hide\"]",
            DIALOG: "[role=dialog]",
            FORM: "form",
            MENU_BAR: "[role=menubar]",
            HAS_Z_INDEX: ".moodle-has-zindex",
            CAN_RECEIVE_FOCUS: "input:not([type=\"hidden\"]), a[href], button, textarea, select, [tabindex]"
        },
        l = {
            LOADING: "core/loading",
            BACKDROP: "core/modal_backdrop"
        },
        m, n = 0,
        o = function(b) {
            this.root = a(b);
            this.modal = this.root.find(k.MODAL);
            this.header = this.modal.find(k.HEADER);
            this.title = this.header.find(k.TITLE);
            this.body = this.modal.find(k.BODY);
            this.footer = this.modal.find(k.FOOTER);
            this.hiddenSiblings = [];
            this.isAttached = !1;
            this.bodyJS = null;
            this.footerJS = null;
            this.modalCount = n++;
            if (!this.root.is(k.CONTAINER)) {
                c.exception({
                    message: "Element is not a modal container"
                })
            }
            if (!this.modal.length) {
                c.exception({
                    message: "Container does not contain a modal"
                })
            }
            if (!this.header.length) {
                c.exception({
                    message: "Modal is missing a header region"
                })
            }
            if (!this.title.length) {
                c.exception({
                    message: "Modal header is missing a title region"
                })
            }
            if (!this.body.length) {
                c.exception({
                    message: "Modal is missing a body region"
                })
            }
            if (!this.footer.length) {
                c.exception({
                    message: "Modal is missing a footer region"
                })
            }
            this.registerEventListeners()
        };
    o.prototype.attachToDOM = function() {
        if (this.isAttached) {
            return
        }
        a("body").append(this.root);
        i.trapFocus(this.root[0]);
        if (this.bodyJS) {
            b.runTemplateJS(this.bodyJS);
            this.bodyJS = null
        }
        if (this.footerJS) {
            b.runTemplateJS(this.footerJS);
            this.footerJS = null
        }
        this.isAttached = !0
    };
    o.prototype.countOtherVisibleModals = function() {
        var b = 0;
        a("body").find(k.CONTAINER).each(function(c, d) {
            d = a(d);
            if (!this.root.is(d) && d.hasClass("show")) {
                b++
            }
        }.bind(this));
        return b
    };
    o.prototype.getBackdrop = function() {
        if (!m) {
            m = b.render(l.BACKDROP, {}).then(function(b) {
                var c = a(b);
                return new f(c)
            }).fail(c.exception)
        }
        return m
    };
    o.prototype.getRoot = function() {
        return this.root
    };
    o.prototype.getModal = function() {
        return this.modal
    };
    o.prototype.getTitle = function() {
        return this.title
    };
    o.prototype.getBody = function() {
        return this.body
    };
    o.prototype.getFooter = function() {
        return this.footer
    };
    o.prototype.getModalCount = function() {
        return this.modalCount
    };
    o.prototype.setTitle = function(a) {
        var b = this.getTitle();
        this.asyncSet(a, b.html.bind(b))
    };
    o.prototype.setBody = function(d) {
        var e = this.getBody();
        if ("string" == typeof d) {
            e.html(d);
            g.notifyFilterContentUpdated(e);
            this.getRoot().trigger(h.bodyRendered, this)
        } else {
            var f = "amd-modal-js-pending-id-" + this.getModalCount();
            M.util.js_pending(f);
            var i = null;
            e.css("overflow", "hidden");
            if ("pending" == d.state()) {
                var j = e.innerHeight();
                if (100 > j) {
                    j = 100
                }
                e.animate({
                    height: j + "px"
                }, 150);
                e.html("");
                i = b.render(l.LOADING, {}).then(function(b) {
                    var c = a(b).hide();
                    e.html(c);
                    c.fadeIn(150);
                    return a.when(c.promise(), d)
                }).then(function(a) {
                    return a.fadeOut(100).promise()
                }).then(function() {
                    return d
                })
            } else {
                i = d
            }
            i.then(function(a, c) {
                var d = null;
                if (this.isVisible()) {
                    e.css("opacity", 0);
                    var f = e.innerHeight();
                    e.html(a);
                    e.css("height", "");
                    var g = e.innerHeight();
                    e.css("height", f + "px");
                    d = e.animate({
                        height: g + "px",
                        opacity: 1
                    }, {
                        duration: 150,
                        queue: !1
                    }).promise()
                } else {
                    e.html(a)
                }
                if (c) {
                    if (this.isAttached) {
                        b.runTemplateJS(c)
                    } else {
                        this.bodyJS = c
                    }
                }
                return d
            }.bind(this)).then(function(a) {
                g.notifyFilterContentUpdated(e);
                this.getRoot().trigger(h.bodyRendered, this);
                return a
            }.bind(this)).fail(c.exception).always(function() {
                e.css("height", "");
                e.css("overflow", "");
                e.css("opacity", "");
                M.util.js_complete(f)
            }).fail(c.exception)
        }
    };
    o.prototype.setFooter = function(a) {
        this.showFooter();
        var c = this.getFooter();
        if ("string" == typeof a) {
            c.html(a)
        } else {
            b.render(l.LOADING, {}).done(function(d) {
                c.html(d);
                a.done(function(a, d) {
                    c.html(a);
                    if (d) {
                        if (this.isAttached) {
                            b.runTemplateJS(d)
                        } else {
                            this.footerJS = d
                        }
                    }
                }.bind(this))
            }.bind(this))
        }
    };
    o.prototype.hasFooterContent = function() {
        return this.getFooter().children().length ? !0 : !1
    };
    o.prototype.hideFooter = function() {
        this.getFooter().addClass("hidden")
    };
    o.prototype.showFooter = function() {
        this.getFooter().removeClass("hidden")
    };
    o.prototype.setLarge = function() {
        if (this.isLarge()) {
            return
        }
        this.getModal().addClass("modal-lg")
    };
    o.prototype.isLarge = function() {
        return this.getModal().hasClass("modal-lg")
    };
    o.prototype.setSmall = function() {
        if (this.isSmall()) {
            return
        }
        this.getModal().removeClass("modal-lg")
    };
    o.prototype.isSmall = function() {
        return !this.getModal().hasClass("modal-lg")
    };
    o.prototype.calculateZIndex = function() {
        var b = a(k.DIALOG + ", " + k.MENU_BAR + ", " + k.HAS_Z_INDEX),
            c = parseInt(this.root.css("z-index"));
        b.each(function(b, d) {
            d = a(d);
            var e = d.css("z-index") ? parseInt(d.css("z-index")) : 0;
            if (e > c) {
                c = e
            }
        });
        return c
    };
    o.prototype.isVisible = function() {
        return this.root.hasClass("show")
    };
    o.prototype.hasFocus = function() {
        var b = a(document.activeElement);
        return this.root.is(b) || this.root.has(b).length
    };
    o.prototype.hasTransitions = function() {
        return this.getRoot().hasClass("fade")
    };
    o.prototype.show = function() {
        if (this.isVisible()) {
            return
        }
        var b = new j("core/modal:show");
        if (this.hasFooterContent()) {
            this.showFooter()
        } else {
            this.hideFooter()
        }
        if (!this.isAttached) {
            this.attachToDOM()
        }
        this.getBackdrop().then(function(b) {
            var c = this.calculateZIndex(),
                d = c + 2;
            this.root.css("z-index", d);
            b.setZIndex(d - 1);
            b.show();
            this.root.removeClass("hide").addClass("show");
            this.accessibilityShow();
            this.getModal().focus();
            a("body").addClass("modal-open");
            this.root.trigger(h.shown, this)
        }.bind(this)).then(b.resolve)
    };
    o.prototype.hideIfNotForm = function() {
        var a = this.modal.find(k.FORM);
        if (0 == a.length) {
            this.hide()
        }
    };
    o.prototype.hide = function() {
        this.getBackdrop().done(function(b) {
            i.untrapFocus();
            if (!this.countOtherVisibleModals()) {
                b.hide();
                a("body").removeClass("modal-open")
            }
            var c = parseInt(this.root.css("z-index"));
            this.root.css("z-index", "");
            b.setZIndex(c - 3);
            this.accessibilityHide();
            if (this.hasTransitions()) {
                this.getRoot().one("transitionend webkitTransitionEnd oTransitionEnd", function() {
                    this.getRoot().removeClass("show").addClass("hide")
                }.bind(this))
            } else {
                this.getRoot().removeClass("show").addClass("hide")
            }
            this.root.trigger(h.hidden, this)
        }.bind(this))
    };
    o.prototype.destroy = function() {
        this.root.remove();
        this.root.trigger(h.destroyed, this)
    };
    o.prototype.accessibilityShow = function() {
        a("body").children().each(function(b, c) {
            if (!this.root.is(c)) {
                c = a(c);
                var d = c.attr("aria-hidden");
                if ("true" !== d) {
                    c.data("previous-aria-hidden", d);
                    this.hiddenSiblings.push(c);
                    c.attr("aria-hidden", "true")
                }
            }
        }.bind(this));
        this.root.attr("aria-hidden", "false")
    };
    o.prototype.accessibilityHide = function() {
        this.root.attr("aria-hidden", "true");
        a.each(this.hiddenSiblings, function(b, c) {
            c = a(c);
            var d = c.data("previous-aria-hidden");
            if ("undefined" == typeof d) {
                c.removeAttr("aria-hidden")
            } else {
                c.attr("aria-hidden", d)
            }
        });
        this.hiddenSiblings = []
    };
    o.prototype.registerEventListeners = function() {
        this.getRoot().on("keydown", function(a) {
            if (!this.isVisible()) {
                return
            }
            if (a.keyCode == d.escape) {
                this.hide()
            }
        }.bind(this));
        this.getRoot().click(function(b) {
            if (!a(b.target).closest(k.MODAL).length) {
                if (a(b.target).closest(k.CONTAINER).length) {
                    this.hideIfNotForm()
                }
            }
        }.bind(this));
        e.define(this.getModal(), [e.events.activate]);
        this.getModal().on(e.events.activate, k.HIDE, function(a, b) {
            this.hide();
            b.originalEvent.preventDefault()
        }.bind(this))
    };
    o.prototype.asyncSet = function(b, d) {
        var e = b;
        if ("object" !== _typeof(b) || !b.hasOwnProperty("then")) {
            e = a.Deferred();
            e.resolve(b)
        }
        e.then(function(a) {
            d(a)
        }).fail(c.exception);
        return e
    };
    return o
});

function _typeof(a) {
    if ("function" == typeof Symbol && "symbol" == typeof Symbol.iterator) {
        _typeof = function(a) {
            return typeof a
        }
    } else {
        _typeof = function(a) {
            return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
        }
    }
    return _typeof(a)
}
define("core/chart_series", [], function() {
    function a(a, b) {
        if ("string" != typeof a) {
            throw new Error("Invalid label for series.")
        } else if ("object" !== _typeof(b)) {
            throw new Error("Values for a series must be an array.")
        } else if (1 > b.length) {
            throw new Error("Invalid values received for series.")
        }
        this._colors = [];
        this._label = a;
        this._values = b
    }
    a.prototype.TYPE_DEFAULT = null;
    a.prototype.TYPE_LINE = "line";
    a.prototype._colors = null;
    a.prototype._label = null;
    a.prototype._labels = null;
    a.prototype._smooth = !1;
    a.prototype._type = a.prototype.TYPE_DEFAULT;
    a.prototype._values = null;
    a.prototype._xaxis = null;
    a.prototype._yaxis = null;
    a.prototype.create = function(b) {
        var c = new a(b.label, b.values);
        c.setType(b.type);
        c.setXAxis(b.axes.x);
        c.setYAxis(b.axes.y);
        c.setLabels(b.labels);
        if (b.colors && 1 < b.colors.length) {
            c.setColors(b.colors)
        } else {
            c.setColor(b.colors[0])
        }
        c.setSmooth(b.smooth);
        return c
    };
    a.prototype.getColor = function() {
        return this._colors[0] || null
    };
    a.prototype.getColors = function() {
        return this._colors
    };
    a.prototype.getCount = function() {
        return this._values.length
    };
    a.prototype.getLabel = function() {
        return this._label
    };
    a.prototype.getLabels = function() {
        return this._labels
    };
    a.prototype.getSmooth = function() {
        return this._smooth
    };
    a.prototype.getType = function() {
        return this._type
    };
    a.prototype.getValues = function() {
        return this._values
    };
    a.prototype.getXAxis = function() {
        return this._xaxis
    };
    a.prototype.getYAxis = function() {
        return this._yaxis
    };
    a.prototype.hasColoredValues = function() {
        return this._colors.length == this.getCount()
    };
    a.prototype.setColor = function(a) {
        this._colors = [a]
    };
    a.prototype.setColors = function(a) {
        if (a && a.length != this.getCount()) {
            throw new Error("When setting multiple colors there must be one per value.")
        }
        this._colors = a || []
    };
    a.prototype.setLabels = function(a) {
        this._validateLabels(a);
        a = "undefined" == typeof a ? null : a;
        this._labels = a
    };
    a.prototype.setSmooth = function(a) {
        a = "undefined" == typeof a ? null : a;
        this._smooth = a
    };
    a.prototype.setType = function(a) {
        if (a != this.TYPE_DEFAULT && a != this.TYPE_LINE) {
            throw new Error("Invalid serie type.")
        }
        this._type = a || null
    };
    a.prototype.setXAxis = function(a) {
        this._xaxis = a || null
    };
    a.prototype.setYAxis = function(a) {
        this._yaxis = a || null
    };
    a.prototype._validateLabels = function(a) {
        if (a && 0 < a.length && a.length != this.getCount()) {
            throw new Error("Series labels must match series values.")
        }
    };
    return a
});
define("core/user_date", ["jquery", "core/ajax", "core/sessionstorage", "core/config"], function(a, b, c, d) {
    var e = {},
        f = function(b) {
            var c = a("html").attr("lang").replace(/-/g, "_");
            return "core_user_date/" + c + "/" + d.usertimezone + "/" + b.timestamp + "/" + b.format
        },
        g = function(a) {
            return c.get(a)
        },
        h = function(a, b) {
            c.set(a, b)
        },
        i = function(a) {
            return "undefined" != typeof e[a]
        },
        j = function(a) {
            return e[a]
        },
        k = function(a, b) {
            e[a] = b
        },
        l = function(a) {
            var c = a.map(function(a) {
                    return {
                        timestamp: a.timestamp,
                        format: a.format
                    }
                }),
                e = {
                    methodname: "core_get_user_dates",
                    args: {
                        contextid: d.contextid,
                        timestamps: c
                    }
                };
            return b.call([e], !0, !0)[0].then(function(b) {
                b.dates.forEach(function(b, c) {
                    var d = a[c],
                        e = f(d);
                    h(e, b);
                    d.deferred.resolve(b)
                })
            }).catch(function(b) {
                a.forEach(function(a) {
                    a.deferred.reject(b)
                })
            })
        };
    return {
        get: function get(b) {
            var c = [],
                d = [];
            b.forEach(function(b) {
                var e = f(b);
                if (i(e)) {
                    d.push(j(e))
                } else {
                    var h = a.Deferred(),
                        l = g(e);
                    if (l) {
                        h.resolve(l)
                    } else {
                        b.deferred = h;
                        c.push(b)
                    }
                    k(e, h.promise());
                    d.push(h.promise())
                }
            });
            if (c.length) {
                l(c)
            }
            return a.when.apply(a, d).then(function() {
                return 1 === arguments.length ? [arguments[0]] : Array.apply(null, arguments)
            })
        },
        getUserMidnightForTimestamp: function getUserMidnightForTimestamp(a, b) {
            var c = a > b,
                d = Math.abs(a - b),
                e = c ? Math.floor(d / 86400) : Math.ceil(d / 86400),
                f = e * 86400,
                g = c ? b + f : b - f;
            return g
        }
    }
});
define("core/paged_content_events", [], function() {
    return {
        SHOW_PAGES: "core-paged-content-show-pages",
        PAGES_SHOWN: "core-paged-content-pages-shown",
        ALL_ITEMS_LOADED: "core-paged-content-all-items-loaded",
        SET_ITEMS_PER_PAGE_LIMIT: "core-paged-content-set-items-per-page-limit"
    }
});
define("core/tooltip", ["jquery"], function(a) {
    var b = function(b) {
        this._regionSelector = b;
        a(this._regionSelector).each(function(b, c) {
            var d = a(c).attr("aria-describedby");
            if (d) {
                var e = document.getElementById(d);
                if (e) {
                    var f = "tooltip" == a(e).attr("role");
                    if (f) {
                        a(e).hide();
                        a(c).attr("tabindex", "0")
                    }
                    a(c).on("focus", this._handleFocus.bind(this));
                    a(c).on("mouseover", this._handleMouseOver.bind(this));
                    a(c).on("mouseout", this._handleMouseOut.bind(this));
                    a(c).on("blur", this._handleBlur.bind(this));
                    a(c).on("keydown", this._handleKeyDown.bind(this))
                }
            }
        }.bind(this))
    };
    b.prototype._regionSelector = null;
    b.prototype._showTooltip = function(b) {
        var c = a(b.target),
            d = c.attr("aria-describedby");
        if (d) {
            var e = a(document.getElementById(d));
            e.show();
            e.attr("aria-hidden", "false");
            if (!e.is(".tooltip")) {
                var f = a("<div class=\"tooltip-inner\"></div>");
                f.append(e.contents());
                e.append(f);
                e.addClass("tooltip");
                e.addClass("bottom");
                e.append("<div class=\"tooltip-arrow\"></div>")
            }
            var g = c.offset();
            g.top += c.height() + 10;
            a(e).offset(g)
        }
    };
    b.prototype._hideTooltip = function(b) {
        var c = a(b.target),
            d = c.attr("aria-describedby");
        if (d) {
            var e = document.getElementById(d);
            a(e).hide();
            a(e).attr("aria-hidden", "true")
        }
    };
    b.prototype._handleFocus = function(a) {
        this._showTooltip(a)
    };
    b.prototype._handleKeyDown = function(a) {
        if (27 == a.which) {
            this._hideTooltip(a)
        }
    };
    b.prototype._handleMouseOver = function(a) {
        this._showTooltip(a)
    };
    b.prototype._handleMouseOut = function(b) {
        var c = a(b.target);
        if (!c.is(":focus")) {
            this._hideTooltip(b)
        }
    };
    b.prototype._handleBlur = function(a) {
        this._hideTooltip(a)
    };
    return b
});
define("core/templates", ["core/mustache", "jquery", "core/ajax", "core/str", "core/notification", "core/url", "core/config", "core/localstorage", "core/icon_system", "core/event", "core/yui", "core/log", "core/truncate", "core/user_date", "core/pending"], function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var p = 0,
        q = {},
        r = {},
        s = {},
        t = {},
        u = [],
        v = !1,
        w = ["js"],
        x = function(a) {
            if (0 >= M.cfg.templaterev) {
                return null
            }
            if (a in r) {
                return r[a]
            }
            if (a in q) {
                r[a] = b.Deferred().resolve(q[a]).promise();
                return r[a]
            }
            var c = h.get("core_template/" + M.cfg.templaterev + ":" + a);
            if (c) {
                q[a] = c;
                r[a] = b.Deferred().resolve(c).promise();
                return r[a]
            }
            return null
        },
        y = function() {
            if (!u.length) {
                return
            }
            if (v) {
                return
            }
            v = !0;
            var a = u.slice(),
                e = b.Deferred(),
                f = [],
                g = a.map(function(a) {
                    var c = a.component,
                        i = a.name,
                        j = a.searchKey,
                        k = a.theme,
                        l = a.deferred,
                        m = null,
                        n = x(j);
                    if (n) {
                        m = n
                    } else {
                        f.push({
                            methodname: "core_output_load_template_with_dependencies",
                            args: {
                                component: c,
                                template: i,
                                themename: k,
                                lang: b("html").attr("lang").replace(/-/g, "_")
                            }
                        });
                        var o = f.length - 1;
                        m = e.promise().then(function(a) {
                            g[j] = a[o].then(function(a) {
                                var b = null;
                                a.templates.forEach(function(a) {
                                    var d = [k, a.component, a.name].join("/");
                                    q[d] = a.value;
                                    h.set("core_template/" + M.cfg.templaterev + ":" + d, a.value);
                                    if (a.component == c && a.name == i) {
                                        b = a.value
                                    }
                                });
                                if (a.strings.length) {
                                    d.cache_strings(a.strings.map(function(a) {
                                        return {
                                            component: a.component,
                                            key: a.name,
                                            value: a.value
                                        }
                                    }))
                                }
                                return b
                            });
                            return g[j]
                        })
                    }
                    return m.then(function(a) {
                        return l.resolve(a)
                    }).catch(function(a) {
                        l.reject(a);
                        throw a
                    })
                });
            if (f.length) {
                e.resolve(c.call(f, !0, !1, !1, 0, M.cfg.templaterev))
            } else {
                e.resolve()
            }
            b.when.apply(null, g).then(function() {
                u.splice(0, a.length);
                v = !1;
                y()
            }).catch(function() {
                u.splice(0, a.length);
                v = !1;
                y()
            })
        },
        z = function() {
            this.requiredStrings = [];
            this.requiredJS = [];
            this.requiredDates = [];
            this.currentThemeName = ""
        };
    z.prototype.requiredStrings = null;
    z.prototype.requiredDates = [];
    z.prototype.requiredJS = null;
    z.prototype.currentThemeName = "";
    z.prototype.getTemplate = function(a) {
        var c = this.currentThemeName,
            d = c + "/" + a,
            e = x(d);
        if (e) {
            return e
        }
        var f = u.filter(function(a) {
            return a.searchKey == d
        });
        if (f.length) {
            return f[0].deferred.promise()
        }
        var g = a.split("/"),
            h = g.shift(),
            i = g.join("/"),
            j = b.Deferred();
        u.push({
            component: h,
            name: i,
            theme: c,
            searchKey: d,
            deferred: j
        });
        y();
        return j.promise()
    };
    z.prototype.partialHelper = function(a) {
        var b = this.currentThemeName + "/" + a;
        if (!(b in q)) {
            e.exception(new Error("Failed to pre-fetch the template: " + a))
        }
        return q[b]
    };
    z.prototype.renderIcon = function(a, c, d) {
        var f = g.iconsystemmodule,
            h = b.Deferred();
        require([f], function(a) {
            var b = new a;
            if (!(b instanceof i)) {
                h.reject("Invalid icon system specified" + g.iconsystemmodule)
            } else {
                t = b;
                b.init().then(h.resolve).catch(e.exception)
            }
        });
        return h.then(function(a) {
            return this.getTemplate(a.getTemplateName())
        }.bind(this)).then(function(b) {
            return t.renderIcon(a, c, d, b)
        })
    };
    z.prototype.pixHelper = function(a, b, c) {
        var d = b.split(","),
            e = "",
            f = "",
            g = "";
        if (0 < d.length) {
            e = c(d.shift().trim(), a)
        }
        if (0 < d.length) {
            f = c(d.shift().trim(), a)
        }
        if (0 < d.length) {
            g = c(d.join(",").trim(), a)
        }
        var h = t.getTemplateName(),
            i = this.currentThemeName + "/" + h,
            j = q[i];
        e = e.replace(/&#x2F;/gi, "/");
        return t.renderIcon(e, f, g, j)
    };
    z.prototype.jsHelper = function(a, b, c) {
        this.requiredJS.push(c(b, a));
        return ""
    };
    z.prototype.stringHelper = function(a, b, c) {
        var d = b.split(","),
            e = "",
            f = "",
            g = "";
        if (0 < d.length) {
            e = d.shift().trim()
        }
        if (0 < d.length) {
            f = d.shift().trim()
        }
        if (0 < d.length) {
            g = d.join(",").trim()
        }
        if ("" !== g) {
            g = c(g, a)
        }
        if (0 === g.indexOf("{") && 0 !== g.indexOf("{{")) {
            g = JSON.parse(g)
        }
        var h = this.requiredStrings.length;
        this.requiredStrings.push({
            key: e,
            component: f,
            param: g
        });
        return "[[_s" + h + "]]"
    };
    z.prototype.quoteHelper = function(a, b, c) {
        var d = c(b.trim(), a);
        d = d.replace(/"/g, "\\\"").replace(/([\{\}]{2,3})/g, "{{=<% %>=}}$1<%={{ }}=%>").replace(/(\r\n|\r|\n)/g, "&#x0a;");
        return "\"" + d + "\""
    };
    z.prototype.shortenTextHelper = function(a, b, c) {
        var d = /(.*?),(.*)/,
            e = b.match(d),
            f = e[1].trim(),
            g = e[2].trim(),
            h = c(g, a);
        return m.truncate(h, {
            length: f,
            words: !0,
            ellipsis: "..."
        })
    };
    z.prototype.userDateHelper = function(a, b, c) {
        var d = /(.*?),(.*)/,
            e = b.match(d),
            f = c(e[1].trim(), a),
            g = c(e[2].trim(), a),
            h = this.requiredDates.length;
        this.requiredDates.push({
            timestamp: f,
            format: g
        });
        return "[[_t_" + h + "]]"
    };
    z.prototype.addHelperFunction = function(a, b) {
        return function() {
            return function(c, d) {
                var e = w.reduce(function(a, c) {
                    if (b.hasOwnProperty(c)) {
                        a[c] = b[c]
                    }
                    return a
                }, {});
                w.forEach(function(a) {
                    b[a] = function() {
                        return ""
                    }
                });
                var f = a.apply(this, [b, c, d]);
                for (var g in e) {
                    b[g] = e[g]
                }
                return f
            }.bind(this)
        }.bind(this)
    };
    z.prototype.addHelpers = function(a, b) {
        this.currentThemeName = b;
        this.requiredStrings = [];
        this.requiredJS = [];
        a.uniqid = p++;
        a.str = this.addHelperFunction(this.stringHelper, a);
        a.pix = this.addHelperFunction(this.pixHelper, a);
        a.js = this.addHelperFunction(this.jsHelper, a);
        a.quote = this.addHelperFunction(this.quoteHelper, a);
        a.shortentext = this.addHelperFunction(this.shortenTextHelper, a);
        a.userdate = this.addHelperFunction(this.userDateHelper, a);
        a.globals = {
            config: g
        };
        a.currentTheme = b
    };
    z.prototype.getJS = function() {
        var a = "";
        if (0 < this.requiredJS.length) {
            a = this.requiredJS.join(";\n")
        }
        return a
    };
    z.prototype.treatStringsInContent = function(a, b) {
        var c = /\[\[_s\d+\]\]/,
            d, e, f, g, h, i;
        do {
            d = "";
            e = a.search(c);
            while (-1 < e) {
                d += a.substring(0, e);
                a = a.substr(e);
                f = "";
                g = 4;
                h = a.substr(g, 1);
                do {
                    f += h;
                    g++;
                    h = a.substr(g, 1)
                } while ("]" != h);
                i = b[parseInt(f, 10)];
                if ("undefined" == typeof i) {
                    l.debug("Could not find string for pattern [[_s" + f + "]].");
                    i = ""
                }
                d += i;
                a = a.substr(6 + f.length);
                e = a.search(c)
            }
            a = d + a;
            e = a.search(c)
        } while (-1 < e);
        return a
    };
    z.prototype.treatDatesInContent = function(a, b) {
        b.forEach(function(b, c) {
            var d = new RegExp("\\[\\[_t_" + c + "\\]\\]", "g");
            a = a.replace(d, b)
        });
        return a
    };
    z.prototype.doRender = function(c, e, f) {
        this.currentThemeName = f;
        var g = t.getTemplateName(),
            h = new o("core/templates:doRender");
        return this.getTemplate(g).then(function() {
            this.addHelpers(e, f);
            var d = a.render(c, e, this.partialHelper.bind(this));
            return b.Deferred().resolve(d.trim(), this.getJS()).promise()
        }.bind(this)).then(function(a, c) {
            if (0 < this.requiredStrings.length) {
                return d.get_strings(this.requiredStrings).then(function(d) {
                    this.requiredDates = this.requiredDates.map(function(a) {
                        return {
                            timestamp: this.treatStringsInContent(a.timestamp, d),
                            format: this.treatStringsInContent(a.format, d)
                        }
                    }.bind(this));
                    a = this.treatStringsInContent(a, d);
                    c = this.treatStringsInContent(c, d);
                    return b.Deferred().resolve(a, c).promise()
                }.bind(this))
            }
            return b.Deferred().resolve(a, c).promise()
        }.bind(this)).then(function(a, c) {
            if (0 < this.requiredDates.length) {
                return n.get(this.requiredDates).then(function(d) {
                    a = this.treatDatesInContent(a, d);
                    c = this.treatDatesInContent(c, d);
                    return b.Deferred().resolve(a, c).promise()
                }.bind(this))
            }
            return b.Deferred().resolve(a, c).promise()
        }.bind(this)).then(function(a, c) {
            h.resolve();
            return b.Deferred().resolve(a, c).promise()
        })
    };
    var A = function(a) {
            if ("" !== a.trim()) {
                var c = b("<script>").attr("type", "text/javascript").html(a);
                b("head").append(c)
            }
        },
        B = function(a, c, d, e) {
            var f = b(a);
            if (f.length) {
                var g = b(c),
                    h = null;
                if (e) {
                    h = new k.NodeList(f.children().get());
                    h.destroy(!0);
                    f.empty();
                    f.append(g)
                } else {
                    h = new k.NodeList(f.get());
                    h.destroy(!0);
                    f.replaceWith(g)
                }
                A(d);
                j.notifyFilterContentUpdated(g)
            }
        };
    z.prototype.scanForPartials = function(b) {
        var c = a.parse(b),
            d = [],
            e = function(a, b) {
                var c, d;
                for (c = 0; c < a.length; c++) {
                    d = a[c];
                    if (">" == d[0] || "<" == d[0]) {
                        b.push(d[1])
                    }
                    if (4 < d.length) {
                        e(d[4], b)
                    }
                }
            };
        e(c, d);
        return d
    };
    z.prototype.cachePartials = function(a, c) {
        var d = this.currentThemeName + "/" + a;
        if (d in s) {
            return s[d]
        }
        c = c || [d];
        s[d] = b.Deferred();
        this.getTemplate(a).then(function(e) {
            var f = this.scanForPartials(e),
                g = f.filter(function(b) {
                    if (0 <= c.indexOf(this.currentThemeName + "/" + b)) {
                        return !1
                    }
                    return b != a
                }.bind(this)),
                h = g.map(function(a) {
                    c.push(this.currentThemeName + "/" + a);
                    return this.cachePartials(a, c)
                }.bind(this));
            return b.when.apply(b, h).then(function() {
                return s[d].resolve(e)
            })
        }.bind(this)).catch(s[d].reject);
        return s[d]
    };
    z.prototype.render = function(a, c, d) {
        if ("undefined" == typeof d) {
            d = g.theme
        }
        this.currentThemeName = d;
        var f = g.iconsystemmodule,
            h = b.Deferred();
        require([f], function(a) {
            var b = new a;
            if (!(b instanceof i)) {
                h.reject("Invalid icon system specified" + g.iconsystem)
            } else {
                t = b;
                b.init().then(h.resolve).catch(e.exception)
            }
        });
        return h.then(function() {
            return this.cachePartials(a)
        }.bind(this)).then(function(a) {
            return this.doRender(a, c, d)
        }.bind(this))
    };
    var C = function(a, c, d) {
            var e = b(a);
            if (e.length) {
                e.prepend(c);
                A(d);
                j.notifyFilterContentUpdated(e)
            }
        },
        D = function(a, c, d) {
            var e = b(a);
            if (e.length) {
                e.append(c);
                A(d);
                j.notifyFilterContentUpdated(e)
            }
        };
    return {
        render: function render(a, b, c) {
            var d = new z;
            return d.render(a, b, c)
        },
        renderForPromise: function renderForPromise(a, b, c) {
            var d = new z;
            return d.render(a, b, c).then(function(a, b) {
                return {
                    html: a,
                    js: b
                }
            })
        },
        renderPix: function renderPix(a, b, c) {
            var d = new z;
            return d.renderIcon(a, b, c)
        },
        runTemplateJS: A,
        replaceNodeContents: function replaceNodeContents(a, b, c) {
            B(a, b, c, !0)
        },
        replaceNode: function replaceNode(a, b, c) {
            B(a, b, c, !1)
        },
        prependNodeContents: function prependNodeContents(a, b, c) {
            C(a, b, c)
        },
        appendNodeContents: function appendNodeContents(a, b, c) {
            D(a, b, c)
        }
    }
});
define("core/modal_factory", ["jquery", "core/modal_events", "core/modal_registry", "core/modal", "core/modal_save_cancel", "core/modal_cancel", "core/templates", "core/notification", "core/custom_interaction_events", "core/pending"], function(a, b, c, d, e, f, g, h, i, j) {
    var k = {
            DEFAULT: "core/modal",
            SAVE_CANCEL: "core/modal_save_cancel",
            CANCEL: "core/modal_cancel"
        },
        l = {
            DEFAULT: "DEFAULT",
            SAVE_CANCEL: "SAVE_CANCEL",
            CANCEL: "CANCEL"
        };
    c.register(l.DEFAULT, d, k.DEFAULT);
    c.register(l.SAVE_CANCEL, e, k.SAVE_CANCEL);
    c.register(l.CANCEL, f, k.CANCEL);
    var m = function(c, d, e) {
            var f = null,
                g = "function" == typeof e.preShowCallback,
                h = function(b, d) {
                    var h = new j("core/modal_factory:setUpTrigger:triggeredCallback");
                    f = a(b.currentTarget);
                    c.then(function(a) {
                        if (g) {
                            e.preShowCallback(f, a)
                        }
                        a.show();
                        return a
                    }).then(h.resolve);
                    d.originalEvent.preventDefault()
                };
            if (Array.isArray(d)) {
                var k = d[1];
                d = d[0];
                i.define(d, [i.events.activate]);
                d.on(i.events.activate, k, h)
            } else {
                i.define(d, [i.events.activate]);
                d.on(i.events.activate, h)
            }
            c.then(function(a) {
                a.getRoot().on(b.hidden, function() {
                    if (null !== f) {
                        f.focus()
                    }
                });
                return a
            })
        },
        n = function(b, c) {
            c = a(c);
            var d = b.module,
                e = new d(c);
            return e
        },
        o = function(b, c) {
            var d = b.template,
                e = g.render(d, c).then(function(c) {
                    var d = a(c);
                    return n(b, d)
                }).fail(h.exception);
            return e
        };
    return {
        create: function create(a, b) {
            var d = a.type || l.DEFAULT,
                e = a.large ? !0 : !1,
                f = null,
                g = {};
            f = c.get(d);
            if (!f) {
                h.exception({
                    message: "Unable to find modal of type: " + d
                })
            }
            if ("undefined" != typeof a.templateContext) {
                g = a.templateContext
            }
            var i = o(f, g).then(function(b) {
                if ("undefined" != typeof a.title) {
                    b.setTitle(a.title)
                }
                if ("undefined" != typeof a.body) {
                    b.setBody(a.body)
                }
                if ("undefined" != typeof a.footer) {
                    b.setFooter(a.footer)
                }
                if (e) {
                    b.setLarge()
                }
                return b
            });
            if ("undefined" != typeof b) {
                m(i, b, a)
            }
            return i
        },
        types: l
    }
});
define("core/page_global", ["jquery", "core/custom_interaction_events", "core/str", "core/network"], function(a, b, c, d) {
    var e = function() {
        var d = a("body");
        b.define(d, [b.events.activate]);
        d.on(b.events.activate, "[data-show-active-item]", function(b) {
            var d = a(b.target).closest(".dropdown-item"),
                e = d.closest("[data-show-active-item]");
            if (!d.hasClass("dropdown-item")) {
                return
            }
            if (d.hasClass("active")) {
                return
            }
            var f = e.find(".dropdown-item");
            f.removeClass("active");
            f.removeAttr("aria-current");
            if (!e.attr("data-skip-active-class")) {
                d.addClass("active")
            }
            d.attr("aria-current", !0);
            var g = d.text(),
                h = e.parent().find("[data-toggle=\"dropdown\"]"),
                i = h.find("[data-active-item-text]");
            if (i.length) {
                i.html(g)
            } else {
                h.html(g)
            }
            var j = e.attr("data-active-item-button-aria-label-components");
            if (j) {
                var k = j.split(",");
                k.push(g);
                c.get_string(k[0].trim(), k[1].trim(), k[2].trim()).then(function(a) {
                    h.attr("aria-label", a);
                    return a
                }).catch(function() {
                    return !1
                })
            }
        })
    };
    return {
        init: function init() {
            e();
            d.init()
        }
    }
});
define("core/icon_system_standard", ["core/icon_system", "core/url", "core/mustache"], function(a, b, c) {
    var d = function() {
        a.apply(this, arguments)
    };
    d.prototype = Object.create(a.prototype);
    d.prototype.renderIcon = function(a, d, e, f) {
        var g = b.imageUrl(a, d),
            h = {
                attributes: [{
                    name: "src",
                    value: g
                }, {
                    name: "alt",
                    value: e
                }, {
                    name: "title",
                    value: e
                }]
            };
        if ("undefined" == typeof e || "" == e) {
            h.attributes.push({
                name: "aria-hidden",
                value: "true"
            })
        }
        var i = c.render(f, h);
        return i.trim()
    };
    d.prototype.getTemplateName = function() {
        return "core/pix_icon"
    };
    return d
});
define("core/event", ["jquery", "core/yui"], function(a, b) {
    return {
        Events: {
            FORM_FIELD_VALIDATION: "core_form-field-validation"
        },
        getLegacyEvents: function getLegacyEvents() {
            var c = a.Deferred();
            b.use("event", "moodle-core-event", function() {
                c.resolve(window.M.core.event)
            });
            return c.promise()
        },
        notifyFilterContentUpdated: function notifyFilterContentUpdated(c) {
            c = a(c);
            b.use("event", "moodle-core-event", function(b) {
                a(document).trigger(M.core.event.FILTER_CONTENT_UPDATED, [c]);
                var d = new b.NodeList(c.get());
                b.fire(M.core.event.FILTER_CONTENT_UPDATED, {
                    nodes: d
                })
            })
        },
        notifyFormSubmitAjax: function notifyFormSubmitAjax(c, d) {
            d = d || !1;
            b.use("event", "moodle-core-event", function(b) {
                if (d) {
                    window.skipClientValidation = !0
                }
                a(c).trigger(M.core.event.FORM_SUBMIT_AJAX);
                b.one(c).fire(M.core.event.FORM_SUBMIT_AJAX, {
                    currentTarget: b.one(c)
                });
                if (d) {
                    window.skipClientValidation = !1
                }
            })
        },
        notifyEditorContentRestored: function notifyEditorContentRestored() {
            b.use("event", "moodle-core-event", function(b) {
                a(document).trigger(M.core.event.EDITOR_CONTENT_RESTORED);
                b.fire(M.core.event.EDITOR_CONTENT_RESTORED)
            })
        }
    }
});
define("core/modal_save_cancel", ["jquery", "core/notification", "core/custom_interaction_events", "core/modal", "core/modal_events"], function(a, b, c, d, f) {
    var g = {
            SAVE_BUTTON: "[data-action=\"save\"]",
            CANCEL_BUTTON: "[data-action=\"cancel\"]"
        },
        h = function(a) {
            d.call(this, a);
            if (!this.getFooter().find(g.SAVE_BUTTON).length) {
                b.exception({
                    message: "No save button found"
                })
            }
            if (!this.getFooter().find(g.CANCEL_BUTTON).length) {
                b.exception({
                    message: "No cancel button found"
                })
            }
        };
    h.prototype = Object.create(d.prototype);
    h.prototype.constructor = h;
    h.prototype.setFooter = function() {
        b.exception({
            message: "Can not change the footer of a save cancel modal"
        })
    };
    h.prototype.registerEventListeners = function() {
        d.prototype.registerEventListeners.call(this);
        this.getModal().on(c.events.activate, g.SAVE_BUTTON, function(b, c) {
            var d = a.Event(f.save);
            this.getRoot().trigger(d, this);
            if (!d.isDefaultPrevented()) {
                this.hide();
                c.originalEvent.preventDefault()
            }
        }.bind(this));
        this.getModal().on(c.events.activate, g.CANCEL_BUTTON, function(b, c) {
            var d = a.Event(f.cancel);
            this.getRoot().trigger(d, this);
            if (!d.isDefaultPrevented()) {
                this.hide();
                c.originalEvent.preventDefault()
            }
        }.bind(this))
    };
    h.prototype.setSaveButtonText = function(a) {
        var b = this.getFooter().find(g.SAVE_BUTTON);
        this.asyncSet(a, b.text.bind(b))
    };
    return h
});
define("core/chart_builder", ["jquery"], function(a) {
    return {
        make: function make(b) {
            var c = a.Deferred();
            require(["core/chart_" + b.type], function(a) {
                var d = a.prototype.create(a, b);
                c.resolve(d)
            });
            return c.promise()
        }
    }
});
define("core/custom_interaction_events", ["jquery", "core/key_codes"], function(a, b) {
    var c = {
            activate: "cie:activate",
            keyboardActivate: "cie:keyboardactivate",
            escape: "cie:escape",
            down: "cie:down",
            up: "cie:up",
            home: "cie:home",
            end: "cie:end",
            next: "cie:next",
            previous: "cie:previous",
            asterix: "cie:asterix",
            scrollLock: "cie:scrollLock",
            scrollTop: "cie:scrollTop",
            scrollBottom: "cie:scrollBottom",
            ctrlPageUp: "cie:ctrlPageUp",
            ctrlPageDown: "cie:ctrlPageDown",
            enter: "cie:enter"
        },
        d = {},
        e = function(a, b) {
            b = b || [];
            if (b.length && -1 !== b.indexOf(a)) {
                return !0
            }
            return !1
        },
        f = function(a) {
            return a.shiftKey || a.metaKey || a.altKey || a.ctrlKey
        },
        g = function(b, c) {
            var e = "";
            if (!c.hasOwnProperty("originalEvent")) {
                e = "" + b + c.type + c.timeStamp;
                if (!d.hasOwnProperty(e)) {
                    d[e] = !0;
                    a(c.target).trigger(b, [{
                        originalEvent: c
                    }])
                }
                return
            }
            e = "triggeredCustom_" + b;
            if (!c.originalEvent.hasOwnProperty(e)) {
                c.originalEvent[e] = !0;
                a(c.target).trigger(b, [{
                    originalEvent: c
                }])
            }
        },
        h = function(a, b, c) {
            a.off("keydown." + b).on("keydown." + b, function(a) {
                if (!f(a)) {
                    if (a.keyCode == c) {
                        g(b, a)
                    }
                }
            })
        },
        i = function(a) {
            a.off("click.cie.activate").on("click.cie.activate", function(a) {
                g(c.activate, a)
            });
            a.off("keydown.cie.activate").on("keydown.cie.activate", function(a) {
                if (!f(a)) {
                    if (a.keyCode == b.enter || a.keyCode == b.space) {
                        g(c.activate, a)
                    }
                }
            })
        },
        j = function(a) {
            a.off("keydown.cie.keyboardactivate").on("keydown.cie.keyboardactivate", function(a) {
                if (!f(a)) {
                    if (a.keyCode == b.enter || a.keyCode == b.space) {
                        g(c.keyboardActivate, a)
                    }
                }
            })
        },
        k = function(a) {
            h(a, c.escape, b.escape)
        },
        l = function(a) {
            h(a, c.down, b.arrowDown)
        },
        m = function(a) {
            h(a, c.up, b.arrowUp)
        },
        n = function(a) {
            h(a, c.home, b.home)
        },
        o = function(a) {
            h(a, c.end, b.end)
        },
        p = function(d) {
            var e = "rtl" == a("html").attr("dir") ? b.arrowLeft : b.arrowRight;
            h(d, c.next, e)
        },
        q = function(d) {
            var e = "rtl" == a("html").attr("dir") ? b.arrowRight : b.arrowLeft;
            h(d, c.previous, e)
        },
        r = function(a) {
            h(a, c.asterix, b.asterix)
        },
        s = function(a) {
            a.off("scroll.cie.scrollTop").on("scroll.cie.scrollTop", function(b) {
                var d = a.scrollTop();
                if (0 === d) {
                    g(c.scrollTop, b)
                }
            })
        },
        t = function(a) {
            a.off("scroll.cie.scrollBottom").on("scroll.cie.scrollBottom", function(b) {
                var d = a.scrollTop(),
                    e = a.innerHeight(),
                    f = a[0].scrollHeight;
                if (d + e >= f) {
                    g(c.scrollBottom, b)
                }
            })
        },
        u = function(a) {
            a.off("DOMMouseScroll.cie.DOMMouseScrollLock mousewheel.cie.mousewheelLock").on("DOMMouseScroll.cie.DOMMouseScrollLock mousewheel.cie.mousewheelLock", function(b) {
                var d = a.scrollTop(),
                    e = a[0].scrollHeight,
                    f = a.height(),
                    h = "DOMMouseScroll" == b.type ? -40 * b.originalEvent.detail : b.originalEvent.wheelDelta,
                    i = 0 < h;
                if (!i && -h > e - f - d) {
                    a.scrollTop(e);
                    b.stopPropagation();
                    b.preventDefault();
                    b.returnValue = !1;
                    g(c.scrollLock, b);
                    return !1
                } else if (i && h > d) {
                    a.scrollTop(0);
                    b.stopPropagation();
                    b.preventDefault();
                    b.returnValue = !1;
                    g(c.scrollLock, b);
                    return !1
                }
                return !0
            })
        },
        v = function(a) {
            a.off("keydown.cie.ctrlpageup").on("keydown.cie.ctrlpageup", function(a) {
                if (a.ctrlKey) {
                    if (a.keyCode == b.pageUp) {
                        g(c.ctrlPageUp, a)
                    }
                }
            })
        },
        w = function(a) {
            a.off("keydown.cie.ctrlpagedown").on("keydown.cie.ctrlpagedown", function(a) {
                if (a.ctrlKey) {
                    if (a.keyCode == b.pageDown) {
                        g(c.ctrlPageDown, a)
                    }
                }
            })
        },
        x = function(a) {
            h(a, c.enter, b.enter)
        },
        y = function() {
            var a = {};
            a[c.activate] = i;
            a[c.keyboardActivate] = j;
            a[c.escape] = k;
            a[c.down] = l;
            a[c.up] = m;
            a[c.home] = n;
            a[c.end] = o;
            a[c.next] = p;
            a[c.previous] = q;
            a[c.asterix] = r;
            a[c.scrollLock] = u;
            a[c.scrollTop] = s;
            a[c.scrollBottom] = t;
            a[c.ctrlPageUp] = v;
            a[c.ctrlPageDown] = w;
            a[c.enter] = x;
            return a
        };
    return {
        define: function define(b, c) {
            b = a(b);
            c = c || [];
            if (!b.length || !c.length) {
                return
            }
            a.each(y(), function(a, d) {
                if (e(a, c)) {
                    d(b)
                }
            })
        },
        events: c
    }
});
define("core/loadingicon", ["jquery", "core/templates"], function(a, b) {
    var c = {
            LOADING: "core/loading"
        },
        d = function() {
            return b.render(c.LOADING, {})
        },
        e = function(b, c) {
            return d().then(function(d) {
                var e = a(d).hide();
                a(b).append(e);
                e.fadeIn(150);
                return a.when(e.promise(), c)
            }).then(function(a) {
                return a.fadeOut(100).promise()
            }).then(function(a) {
                a.remove()
            })
        };
    return {
        getIcon: d,
        addIconToContainer: function addIconToContainer(b) {
            return d().then(function(c) {
                var d = a(c).hide();
                a(b).append(d);
                d.fadeIn(150);
                return d
            })
        },
        addIconToContainerWithPromise: function addIconToContainerWithPromise(b) {
            var c = a.Deferred();
            e(b, c);
            return c
        },
        addIconToContainerRemoveOnCompletion: e
    }
});
define("core/localstorage", ["core/config", "core/storagewrapper"], function(a, b) {
    var c = new b(window.localStorage);
    return {
        get: function get(a) {
            return c.get(a)
        },
        set: function set(a, b) {
            return c.set(a, b)
        }
    }
});
define("core/popover_region_controller", ["jquery", "core/str", "core/custom_interaction_events"], function(a, b, c) {
    var d = {
            CONTENT: ".popover-region-content",
            CONTENT_CONTAINER: ".popover-region-content-container",
            MENU_CONTAINER: ".popover-region-container",
            MENU_TOGGLE: ".popover-region-toggle",
            CAN_RECEIVE_FOCUS: "input:not([type=\"hidden\"]), a[href], button, textarea, select, [tabindex]"
        },
        e = function(b) {
            this.root = a(b);
            this.content = this.root.find(d.CONTENT);
            this.contentContainer = this.root.find(d.CONTENT_CONTAINER);
            this.menuContainer = this.root.find(d.MENU_CONTAINER);
            this.menuToggle = this.root.find(d.MENU_TOGGLE);
            this.isLoading = !1;
            this.promises = {
                closeHandlers: a.Deferred(),
                navigationHandlers: a.Deferred()
            };
            this.registerBaseEventListeners()
        };
    e.prototype.events = function() {
        return {
            menuOpened: "popoverregion:menuopened",
            menuClosed: "popoverregion:menuclosed",
            startLoading: "popoverregion:startLoading",
            stopLoading: "popoverregion:stopLoading"
        }
    };
    e.prototype.getContentContainer = function() {
        return this.contentContainer
    };
    e.prototype.getContent = function() {
        return this.content
    };
    e.prototype.isMenuOpen = function() {
        return !this.root.hasClass("collapsed")
    };
    e.prototype.toggleMenu = function() {
        if (this.isMenuOpen()) {
            this.closeMenu()
        } else {
            this.openMenu()
        }
    };
    e.prototype.closeMenu = function() {
        if (!this.isMenuOpen()) {
            return
        }
        this.root.addClass("collapsed");
        this.menuContainer.attr("aria-expanded", "false");
        this.menuContainer.attr("aria-hidden", "true");
        this.updateButtonAriaLabel();
        this.root.trigger(this.events().menuClosed)
    };
    e.prototype.openMenu = function() {
        if (this.isMenuOpen()) {
            return
        }
        this.root.removeClass("collapsed");
        this.menuContainer.attr("aria-expanded", "true");
        this.menuContainer.attr("aria-hidden", "false");
        this.updateButtonAriaLabel();
        this.promises.closeHandlers.resolve();
        this.promises.navigationHandlers.resolve();
        this.root.trigger(this.events().menuOpened)
    };
    e.prototype.updateButtonAriaLabel = function() {
        if (this.isMenuOpen()) {
            b.get_string("hidepopoverwindow").done(function(a) {
                this.menuToggle.attr("aria-label", a)
            }.bind(this))
        } else {
            b.get_string("showpopoverwindow").done(function(a) {
                this.menuToggle.attr("aria-label", a)
            }.bind(this))
        }
    };
    e.prototype.startLoading = function() {
        this.isLoading = !0;
        this.getContentContainer().addClass("loading");
        this.getContentContainer().attr("aria-busy", "true");
        this.root.trigger(this.events().startLoading)
    };
    e.prototype.stopLoading = function() {
        this.isLoading = !1;
        this.getContentContainer().removeClass("loading");
        this.getContentContainer().attr("aria-busy", "false");
        this.root.trigger(this.events().stopLoading)
    };
    e.prototype.focusMenuToggle = function() {
        this.menuToggle.focus()
    };
    e.prototype.contentItemHasFocus = function() {
        return 0 < this.getContentItemWithFocus().length
    };
    e.prototype.getContentItemWithFocus = function() {
        var b = a(document.activeElement),
            c = this.getContent().children(),
            d = c.filter(b);
        if (!d.length) {
            d = c.has(b)
        }
        return d
    };
    e.prototype.focusContentItem = function(a) {
        if (a.is(d.CAN_RECEIVE_FOCUS)) {
            a.focus()
        } else {
            a.find(d.CAN_RECEIVE_FOCUS).first().focus()
        }
    };
    e.prototype.focusFirstContentItem = function() {
        this.focusContentItem(this.getContent().children().first())
    };
    e.prototype.focusLastContentItem = function() {
        this.focusContentItem(this.getContent().children().last())
    };
    e.prototype.focusNextContentItem = function() {
        var a = this.getContentItemWithFocus();
        if (a.length && a.next()) {
            this.focusContentItem(a.next())
        }
    };
    e.prototype.focusPreviousContentItem = function() {
        var a = this.getContentItemWithFocus();
        if (a.length && a.prev()) {
            this.focusContentItem(a.prev())
        }
    };
    e.prototype.registerBaseEventListeners = function() {
        c.define(this.root, [c.events.activate, c.events.escape]);
        this.root.on(c.events.activate, d.MENU_TOGGLE, function() {
            this.toggleMenu()
        }.bind(this));
        this.promises.closeHandlers.done(function() {
            this.root.on(c.events.escape, function() {
                this.closeMenu();
                this.focusMenuToggle()
            }.bind(this));
            a("html").click(function(b) {
                var c = a(b.target);
                if (!this.root.is(c) && !this.root.has(c).length) {
                    this.closeMenu()
                }
            }.bind(this));
            c.define(this.getContentContainer(), [c.events.scrollBottom])
        }.bind(this))
    };
    e.prototype.registerListNavigationEventListeners = function() {
        c.define(this.root, [c.events.down]);
        this.root.on(c.events.down, function(a, b) {
            if (!this.isMenuOpen()) {
                this.openMenu();
                this.focusFirstContentItem()
            } else {
                if (this.contentItemHasFocus()) {
                    this.focusNextContentItem()
                } else {
                    this.focusFirstContentItem()
                }
            }
            b.originalEvent.preventDefault()
        }.bind(this));
        this.promises.navigationHandlers.done(function() {
            c.define(this.root, [c.events.up, c.events.home, c.events.end]);
            this.root.on(c.events.up, function(a, b) {
                this.focusPreviousContentItem();
                b.originalEvent.preventDefault()
            }.bind(this));
            this.root.on(c.events.home, function(a, b) {
                this.focusFirstContentItem();
                b.originalEvent.preventDefault()
            }.bind(this));
            this.root.on(c.events.end, function(a, b) {
                this.focusLastContentItem();
                b.originalEvent.preventDefault()
            }.bind(this))
        }.bind(this))
    };
    return e
});
define("core/sessionstorage", ["core/config", "core/storagewrapper"], function(a, b) {
    var c = new b(window.sessionStorage);
    return {
        get: function get(a) {
            return c.get(a)
        },
        set: function set(a, b) {
            return c.set(a, b)
        }
    }
});
define("core/checkbox-toggleall", ["jquery", "core/pubsub"], function(a, b) {
    var c = !1,
        d = {
            checkboxToggled: "core/checkbox-toggleall:checkboxToggled"
        },
        e = function(a, b, c) {
            if (c) {
                return a.find("[data-action=\"toggle\"][data-togglegroup=\"" + b + "\"]")
            } else {
                return a.find("[data-action=\"toggle\"][data-togglegroup^=\"" + b + "\"]")
            }
        },
        f = function(a, b) {
            return e(a, b, !1).filter("[data-toggle=\"slave\"]")
        },
        g = function(a, b, c) {
            return e(a, b, c).filter("[data-toggle=\"master\"]")
        },
        h = function(a, b) {
            return e(a, b, !0).filter("[data-toggle=\"action\"]")
        },
        i = function(c) {
            var e = c.data.root,
                g = a(c.target),
                h = g.data("togglegroup"),
                i;
            if (g.is(":checkbox")) {
                i = g.is(":checked")
            } else {
                i = 1 === g.data("checkall")
            }
            var j = f(e, h),
                k = j.filter(":checked");
            l(e, h, i, !1);
            j.prop("checked", i);
            j.trigger("change");
            b.publish(d.checkboxToggled, {
                root: e,
                toggleGroupName: h,
                slaves: j,
                checkedSlaves: k,
                anyChecked: i
            })
        },
        j = function(c) {
            var e = c.data.root,
                g = a(c.target),
                h = g.data("togglegroup").split(" "),
                i = [],
                j = "";
            h.forEach(function(a) {
                j += " " + a;
                i.push(j.trim())
            });
            i.forEach(function(a) {
                var c = f(e, a),
                    g = c.filter(":checked"),
                    h = c.length === g.length;
                l(e, a, h, !0);
                k(e, a, !g.length);
                b.publish(d.checkboxToggled, {
                    root: e,
                    toggleGroupName: a,
                    slaves: c,
                    checkedSlaves: g,
                    anyChecked: !!g.length
                })
            })
        },
        k = function(a, b, c) {
            h(a, b).prop("disabled", c)
        },
        l = function(b, c, d, e) {
            var f = g(b, c, e);
            f.prop("checked", d);
            f.each(function(c, e) {
                e = a(e);
                var f;
                if (d) {
                    f = e.data("toggle-deselectall")
                } else {
                    f = e.data("toggle-selectall")
                }
                if (e.is(":checkbox")) {
                    var g = b.find("[for=\"" + e.attr("id") + "\"]");
                    if (g.length) {
                        if (g.html() !== f) {
                            g.html(f)
                        }
                    }
                } else {
                    e.text(f);
                    e.data("checkall", d ? 0 : 1)
                }
            })
        },
        m = function() {
            if (!c) {
                c = !0;
                var b = a(document.body);
                b.on("click", "[data-action=\"toggle\"][data-toggle=\"master\"]", {
                    root: b
                }, i);
                b.on("change", "[data-action=\"toggle\"][data-toggle=\"slave\"]", {
                    root: b
                }, j)
            }
        };
    return {
        init: function init() {
            m()
        },
        events: d
    }
});
define("core/network", ["jquery", "core/ajax", "core/config", "core/notification", "core/str"], function(a, b, c, d, e) {
    var f = !1,
        g = !1,
        h = 0,
        i = 0,
        j = !1,
        k = !1,
        l = 1e3 * Math.min(c.sessiontimeout / 10, 600),
        m = function() {
            k = !0
        },
        n = function() {
            if (k) {
                return e.get_strings([{
                    key: "sessionexpired",
                    component: "error"
                }, {
                    key: "sessionerroruser",
                    component: "error"
                }]).then(function(a) {
                    d.alert(a[0], a[1]);
                    return !0
                }).fail(d.exception)
            } else {
                return b.call([{
                    methodname: "core_session_touch",
                    args: {}
                }], !0, !0, !1, i)[0].then(function() {
                    if (0 < h) {
                        setTimeout(n, h)
                    }
                    return !0
                }).fail(function() {
                    d.alert("", j)
                })
            }
        },
        o = function() {
            k = !1;
            return b.call([{
                methodname: "core_session_time_remaining",
                args: {}
            }], !0, !0, !0)[0].then(function(a) {
                if (0 >= a.userid) {
                    return !1
                }
                if (0 > a.timeremaining) {
                    e.get_strings([{
                        key: "sessionexpired",
                        component: "error"
                    }, {
                        key: "sessionerroruser",
                        component: "error"
                    }]).then(function(a) {
                        d.alert(a[0], a[1]);
                        return !0
                    }).fail(d.exception)
                } else if (1e3 * a.timeremaining < 2 * l && !g) {
                    setTimeout(m, 1e3 * a.timeremaining);
                    g = !0;
                    e.get_strings([{
                        key: "norecentactivity",
                        component: "moodle"
                    }, {
                        key: "sessiontimeoutsoon",
                        component: "moodle"
                    }, {
                        key: "extendsession",
                        component: "moodle"
                    }, {
                        key: "cancel",
                        component: "moodle"
                    }]).then(function(a) {
                        d.confirm(a[0], a[1], a[2], a[3], function() {
                            n();
                            g = !1;
                            setTimeout(o, 5 * l);
                            return !0
                        }, function() {
                            g = !1;
                            setTimeout(o, l)
                        });
                        return !0
                    }).fail(d.exception)
                } else {
                    setTimeout(o, l)
                }
                return !0
            })
        },
        p = function() {
            if (0 < h) {
                setTimeout(n, h)
            } else {
                setTimeout(o, 5 * l)
            }
        },
        q = function() {
            if (f) {
                return
            }
            f = !0;
            p()
        },
        r = function(a, b, c) {
            if (f) {
                return
            }
            f = !0;
            h = 1e3 * a;
            j = c;
            i = 1e3 * b;
            p()
        };
    return {
        keepalive: r,
        init: q
    }
});
define("core/dragdrop", ["jquery", "core/autoscroll"], function(a, b) {
    var c = {
        eventCaptureOptions: {
            passive: !1,
            capture: !0
        },
        dragProxy: null,
        onMove: null,
        onDrop: null,
        initialPosition: null,
        initialX: null,
        initialY: null,
        touching: null,
        prepare: function prepare(a) {
            a.preventDefault();
            var b;
            if ("touchstart" === a.type) {
                b = null === c.touching && 0 < a.changedTouches.length
            } else {
                b = 1 === a.which
            }
            if (b) {
                var d = c.getEventXY(a);
                d.start = !0;
                return d
            } else {
                return {
                    start: !1
                }
            }
        },
        start: function start(a, d, e, f) {
            var g = c.getEventXY(a);
            c.initialX = g.x;
            c.initialY = g.y;
            c.initialPosition = d.offset();
            c.dragProxy = d;
            c.onMove = e;
            c.onDrop = f;
            switch (a.type) {
                case "mousedown":
                    c.addEventSpecial("mousemove", c.mouseMove);
                    c.addEventSpecial("mouseup", c.mouseUp);
                    break;
                case "touchstart":
                    c.addEventSpecial("touchend", c.touchEnd);
                    c.addEventSpecial("touchcancel", c.touchEnd);
                    c.addEventSpecial("touchmove", c.touchMove);
                    c.touching = a.changedTouches[0].identifier;
                    break;
                default:
                    throw new Error("Unexpected event type: " + a.type);
            }
            b.start(c.scroll)
        },
        addEventSpecial: function addEventSpecial(a, b) {
            try {
                window.addEventListener(a, b, c.eventCaptureOptions)
            } catch (d) {
                c.eventCaptureOptions = !0;
                window.addEventListener(a, b, c.eventCaptureOptions)
            }
        },
        getEventXY: function getEventXY(a) {
            switch (a.type) {
                case "touchstart":
                    return {
                        x: a.changedTouches[0].pageX,
                        y: a.changedTouches[0].pageY
                    };
                case "mousedown":
                    return {
                        x: a.pageX,
                        y: a.pageY
                    };
                default:
                    throw new Error("Unexpected event type: " + a.type);
            }
        },
        touchMove: function touchMove(a) {
            a.preventDefault();
            for (var b = 0; b < a.changedTouches.length; b++) {
                if (a.changedTouches[b].identifier === c.touching) {
                    c.handleMove(a.changedTouches[b].pageX, a.changedTouches[b].pageY)
                }
            }
        },
        mouseMove: function mouseMove(a) {
            c.handleMove(a.pageX, a.pageY)
        },
        handleMove: function handleMove(b, d) {
            var e = c.dragProxy.offset(),
                f = e.top - parseInt(c.dragProxy.css("top")),
                g = e.left - parseInt(c.dragProxy.css("left")),
                h = a(document).height() - c.dragProxy.outerHeight() - f,
                i = a(document).width() - c.dragProxy.outerWidth() - g,
                j = c.initialPosition,
                k = {
                    top: Math.max(-f, Math.min(h, j.top + (d - c.initialY) - f)),
                    left: Math.max(-g, Math.min(i, j.left + (b - c.initialX) - g))
                };
            c.dragProxy.css(k);
            c.onMove(b, d, c.dragProxy)
        },
        touchEnd: function touchEnd(a) {
            a.preventDefault();
            for (var b = 0; b < a.changedTouches.length; b++) {
                if (a.changedTouches[b].identifier === c.touching) {
                    c.handleEnd(a.changedTouches[b].pageX, a.changedTouches[b].pageY)
                }
            }
        },
        mouseUp: function mouseUp(a) {
            c.handleEnd(a.pageX, a.pageY)
        },
        handleEnd: function handleEnd(a, d) {
            if (null !== c.touching) {
                window.removeEventListener("touchend", c.touchEnd, c.eventCaptureOptions);
                window.removeEventListener("touchcancel", c.touchEnd, c.eventCaptureOptions);
                window.removeEventListener("touchmove", c.touchMove, c.eventCaptureOptions);
                c.touching = null
            } else {
                window.removeEventListener("mousemove", c.mouseMove, c.eventCaptureOptions);
                window.removeEventListener("mouseup", c.mouseUp, c.eventCaptureOptions)
            }
            b.stop();
            c.onDrop(a, d, c.dragProxy)
        },
        scroll: function scroll(b) {
            var d = a(document).height() - c.dragProxy.outerHeight(),
                e = c.dragProxy.offset();
            e.top = Math.min(d, e.top + b);
            c.dragProxy.css(e)
        }
    };
    return {
        prepare: c.prepare,
        start: c.start
    }
});
define("core/modal_backdrop", ["jquery", "core/templates", "core/notification"], function(a, b, c) {
    var d = {
            ROOT: "[data-region=\"modal-backdrop\"]"
        },
        e = function(b) {
            this.root = a(b);
            this.isAttached = !1;
            if (!this.root.is(d.ROOT)) {
                c.exception({
                    message: "Element is not a modal backdrop"
                })
            }
        };
    e.prototype.getRoot = function() {
        return this.root
    };
    e.prototype.attachToDOM = function() {
        if (this.isAttached) {
            return
        }
        a("body").append(this.root);
        this.isAttached = !0
    };
    e.prototype.setZIndex = function(a) {
        this.root.css("z-index", a)
    };
    e.prototype.isVisible = function() {
        return this.root.hasClass("show")
    };
    e.prototype.hasTransitions = function() {
        return this.getRoot().hasClass("fade")
    };
    e.prototype.show = function() {
        if (this.isVisible()) {
            return
        }
        if (!this.isAttached) {
            this.attachToDOM()
        }
        this.root.removeClass("hide").addClass("show")
    };
    e.prototype.hide = function() {
        if (!this.isVisible()) {
            return
        }
        if (this.hasTransitions()) {
            this.getRoot().one("transitionend webkitTransitionEnd oTransitionEnd", function() {
                this.getRoot().removeClass("show").addClass("hide")
            }.bind(this))
        } else {
            this.getRoot().removeClass("show").addClass("hide")
        }
    };
    e.prototype.destroy = function() {
        this.root.remove()
    };
    return e
});
define("core/url", ["jquery", "core/config"], function(a, b) {
    return {
        fileUrl: function fileUrl(a, c) {
            var d = b.wwwroot + a;
            if ("/" != c.charAt(0)) {
                c = "/" + c
            }
            if (b.slasharguments) {
                d += c
            } else {
                d += "?file=" + encodeURIComponent(c)
            }
            return d
        },
        relativeUrl: function relativeUrl(c, d, e) {
            if (0 === c.indexOf("http:") || 0 === c.indexOf("https:") || 0 <= c.indexOf("://")) {
                throw new Error("relativeUrl function does not accept absolute urls")
            }
            if ("/" != c.charAt(0)) {
                c = "/" + c
            }
            if ("admin" !== b.admin) {
                c = c.replace(/^\/admin\//, "/" + b.admin + "/")
            }
            d = d || {};
            if (e) {
                d.sesskey = b.sesskey
            }
            var f = "";
            if (Object.keys(d).length) {
                f = a.map(d, function(a, b) {
                    return b + "=" + a
                }).join("&")
            }
            if ("" !== f) {
                return b.wwwroot + c + "?" + f
            } else {
                return b.wwwroot + c
            }
        },
        imageUrl: function imageUrl(a, b) {
            return M.util.image_url(a, b)
        }
    }
});
define("core/modal_events", [], function() {
    return {
        shown: "modal:shown",
        hidden: "modal:hidden",
        destroyed: "modal:destroyed",
        bodyRendered: "modal:bodyRendered",
        save: "modal-save-cancel:save",
        cancel: "modal-save-cancel:cancel"
    }
});
define("core/chart_output_htmltable", ["jquery", "core/chart_output_base"], function(a, b) {
    function c() {
        b.prototype.constructor.apply(this, arguments);
        this._build()
    }
    c.prototype = Object.create(b.prototype);
    c.prototype._build = function() {
        this._node.empty();
        this._node.append(this._makeTable())
    };
    c.prototype._makeTable = function() {
        var b = a("<table>"),
            d = this._chart,
            c, e, f = d.getLabels(),
            g = 0 < f.length,
            h = d.getSeries(),
            i, j = h[0].getCount();
        b.addClass("chart-output-htmltable generaltable");
        if (null !== d.getTitle()) {
            b.append(a("<caption>").text(d.getTitle()))
        }
        c = a("<tr>");
        if (g) {
            c.append(a("<td>"))
        }
        h.forEach(function(b) {
            c.append(a("<th>").text(b.getLabel()).attr("scope", "col"))
        });
        b.append(c);
        for (var k = 0; k < j; k++) {
            c = a("<tr>");
            if (0 < f.length) {
                c.append(a("<th>").text(f[k]).attr("scope", "row"))
            }
            for (var l = 0; l < h.length; l++) {
                e = h[l].getValues()[k];
                i = h[l].getLabels();
                if (null !== i) {
                    e = h[l].getLabels()[k]
                }
                c.append(a("<td>").text(e))
            }
            b.append(c)
        }
        return b
    };
    c.prototype.update = function() {
        this._build()
    };
    return c
});
define("core/icon_system_fontawesome", ["core/icon_system", "jquery", "core/ajax", "core/mustache", "core/localstorage", "core/url"], function(a, b, c, d, e, f) {
    var g = null,
        h = null,
        i = function() {
            a.apply(this, arguments)
        };
    i.prototype = Object.create(a.prototype);
    i.prototype.init = function() {
        if (g) {
            return b.when(this)
        }
        var a = e.get("core/iconmap-fontawesome");
        if (a) {
            a = JSON.parse(a)
        }
        if (a) {
            g = a;
            return b.when(this)
        }
        if (null === h) {
            h = c.call([{
                methodname: "core_output_load_fontawesome_icon_map",
                args: []
            }], !0, !1, !1, 0, M.cfg.themerev)[0]
        }
        return h.then(function(a) {
            g = {};
            b.each(a, function(a, b) {
                g[b.component + "/" + b.pix] = b.to
            });
            e.set("core/iconmap-fontawesome", JSON.stringify(g));
            return this
        }.bind(this))
    };
    i.prototype.renderIcon = function(a, b, c, e) {
        var h = g[b + "/" + a],
            i = !1;
        if ("undefined" == typeof h) {
            var j = f.imageUrl(a, b);
            i = {
                attributes: [{
                    name: "src",
                    value: j
                }, {
                    name: "alt",
                    value: c
                }, {
                    name: "title",
                    value: c
                }]
            }
        }
        var k = {
            key: h,
            title: c,
            alt: c,
            unmappedIcon: i
        };
        if ("undefined" == typeof c || "" === c) {
            k["aria-hidden"] = !0
        }
        var l = d.render(e, k);
        return l.trim()
    };
    i.prototype.getTemplateName = function() {
        return "core/pix_icon_fontawesome"
    };
    return i
});
define("core/addblockmodal", ["jquery", "core/modal_factory", "core/templates", "core/str", "core/notification"], function(a, b, c, d, e) {
    return {
        init: function init(f) {
            var g = a("[data-key=addblock]"),
                h = f.blocks.map(function(a) {
                    return {
                        key: "pluginname",
                        component: "block_" + a
                    }
                }),
                i = d.get_strings(h).then(function(a) {
                    return a.map(function(a, b) {
                        return {
                            name: f.blocks[b],
                            title: a
                        }
                    })
                }).then(function(a) {
                    f.blocks = a;
                    return c.render("core/add_block_body", f)
                }).fail(e.exception),
                j = d.get_string("addblock").fail(e.exception);
            b.create({
                title: j,
                body: i,
                type: "CANCEL"
            }, g)
        }
    }
});
define("core/pending", ["jquery"], function(a) {
    var b = function(b) {
        var c = a.Deferred();
        b = b || {};
        M.util.js_pending(b);
        c.then(function() {
            return M.util.js_complete(b)
        }).catch();
        return c
    };
    b.prototype.constructor = b;
    return b
});
define("core/fragment", ["jquery", "core/ajax"], function(a, b) {
    var c = function loadFragment(a, c, d, e) {
        var f = [];
        for (var g in e) {
            f.push({
                name: g,
                value: e[g]
            })
        }
        return b.call([{
            methodname: "core_get_fragment",
            args: {
                component: a,
                callback: c,
                contextid: d,
                args: f
            }
        }])[0]
    };
    return {
        loadFragment: function loadFragment(b, d, e, f) {
            var g = a.Deferred();
            c(b, d, e, f).then(function(b) {
                var c = a(b.javascript),
                    d = "";
                c.each(function(b, c) {
                    c = a(c);
                    var e = c.prop("tagName");
                    if (e && "script" == e.toLowerCase()) {
                        if (c.attr("src")) {
                            var f = !1;
                            a("script").each(function(b, d) {
                                if (a(d).attr("src") == c.attr("src")) {
                                    f = !0
                                }
                                return !f
                            });
                            if (!f) {
                                d += " { ";
                                d += " node = document.createElement(\"script\"); ";
                                d += " node.type = \"text/javascript\"; ";
                                d += " node.src = decodeURI(\"" + encodeURI(c.attr("src")) + "\"); ";
                                d += " document.getElementsByTagName(\"head\")[0].appendChild(node); ";
                                d += " } "
                            }
                        } else {
                            d += " " + c.text()
                        }
                    }
                });
                g.resolve(b.html, d)
            }).fail(function(a) {
                g.reject(a)
            });
            return g.promise()
        }
    }
});
define("core/truncate", ["jquery"], function(a) {
    var b = /(\s*\S+|\s)$/,
        c = /^(\S*)/,
        d = /\s/,
        e = function(a, b) {
            var c = a + "",
                d = c.length,
                e = b ? +b : 0;
            if (e != e) {
                e = 0
            }
            if (-1 >= e || e >= d) {
                return ""
            }
            e = 0 | e;
            var f = c.charCodeAt(e),
                g, h = e + 1,
                i = 1;
            if (55296 <= f && 56319 >= f && d > h) {
                g = c.charCodeAt(h);
                if (56320 <= g && 57343 >= g) {
                    i = 2
                }
            }
            return i
        },
        f = function(a) {
            for (var b = 0, c = 0; c < a.length; c += e(a, c)) {
                b++
            }
            return b
        },
        g = function(a, b) {
            if (!a.length) {
                return 0
            }
            var c = 0,
                d = 0;
            do {
                c += e(a, c);
                d++
            } while (c < a.length && d < b);
            return c
        };
    a.truncate = function(b, c) {
        return a("<div></div>").append(b).truncate(c).html()
    };
    a.fn.truncate = function(e) {
        if (!isNaN(parseFloat(e))) e = {
            length: e
        };
        var h = a.extend({}, a.truncate.defaults, e);
        return this.each(function() {
            var e = a(this);
            if (h.noBreaks) e.find("br").replaceWith(" ");
            var j = h.ellipsis.length,
                k = e.text(),
                l = f(k),
                m = l - h.length + j;
            if (l < h.length) return;
            if (h.stripTags) e.text(k);
            if (h.words && 0 < m) {
                var n = k.slice(0, g(k, h.length - j) + 1),
                    o = n.replace(b, ""),
                    p = f(o),
                    q = n.match(d) ? !1 : !0;
                if (h.keepFirstWord && 0 === p) {
                    m = l - f(c.exec(k)[0]) - j
                } else if (q && 0 === p) {
                    m = l - h.length + j
                } else {
                    m = l - p - 1
                }
            }
            if (m > l) {
                m = l - h.length
            }
            if (0 > m || !m && !h.truncated) return;
            a.each(e.contents().get().reverse(), function(b, c) {
                var d = a(c),
                    e = d.text(),
                    i = f(e);
                if (i <= m) {
                    h.truncated = !0;
                    m -= i;
                    d.remove();
                    return
                }
                if (3 === c.nodeType) {
                    var k = i - m;
                    k = 0 <= k ? g(e, k) : 0;
                    a(c.splitText(k)).replaceWith(h.ellipsis);
                    return !1
                }
                d.truncate(a.extend(h, {
                    length: i - m + j
                }));
                return !1
            })
        })
    };
    a.truncate.defaults = {
        stripTags: !1,
        words: !1,
        keepFirstWord: !1,
        noBreaks: !1,
        length: 1 / 0,
        ellipsis: "\u2026"
    };
    return {
        truncate: a.truncate
    }
});
define("core/modal_registry", ["core/notification"], function(a) {
    var b = {},
        c = function(a) {
            return b[a]
        };
    return {
        register: function register(d, e, f) {
            if (c(d)) {
                a.exception({
                    message: "Modal of  type '" + d + "' is already registered"
                })
            }
            if (!e || "function" != typeof e) {
                a.exception({
                    message: "You must provide a modal module"
                })
            }
            if (!f) {
                a.exception({
                    message: "You must provide a modal template"
                })
            }
            b[d] = {
                module: e,
                template: f
            }
        },
        get: c
    }
});
define("core/first", ["jquery"], function(a) {
    a(document).bind("ajaxStart", function() {
        M.util.js_pending("jq")
    }).bind("ajaxStop", function() {
        M.util.js_complete("jq")
    })
});
define("core/paged_content_paging_bar_limit_selector", ["jquery", "core/custom_interaction_events", "core/paged_content_events", "core/pubsub"], function(a, b, c, d) {
    var f = {
        ROOT: "[data-region=\"paging-control-limit-container\"]",
        LIMIT_OPTION: "[data-limit]",
        LIMIT_TOGGLE: "[data-action=\"limit-toggle\"]"
    };
    return {
        init: function init(e, g) {
            e = a(e);
            b.define(e, [b.events.activate]);
            e.on(b.events.activate, f.LIMIT_OPTION, function(b, e) {
                var h = a(b.target).closest(f.LIMIT_OPTION);
                if (h.hasClass("active")) {
                    return
                }
                var i = parseInt(h.attr("data-limit"), 10);
                d.publish(g + c.SET_ITEMS_PER_PAGE_LIMIT, i);
                e.originalEvent.preventDefault()
            })
        },
        rootSelector: f.ROOT
    }
});
define("core/paged_content_pages", ["jquery", "core/templates", "core/notification", "core/pubsub", "core/paged_content_events"], function(a, b, c, d, e) {
    var f = {
            ROOT: "[data-region=\"page-container\"]",
            PAGE_REGION: "[data-region=\"paged-content-page\"]",
            ACTIVE_PAGE_REGION: "[data-region=\"paged-content-page\"].active"
        },
        g = {
            PAGING_CONTENT_ITEM: "core/paged_content_page",
            LOADING: "core/overlay_loading"
        },
        h = function(a, b) {
            return a.find("[data-page=\"" + b + "\"]")
        },
        i = function(d) {
            var e = a.Deferred();
            d.attr("aria-busy", !0);
            b.render(g.LOADING, {
                visible: !0
            }).then(function(b) {
                var c = a(b),
                    f = setTimeout(function() {
                        d.css("position", "relative");
                        c.appendTo(d)
                    }, 300);
                e.always(function() {
                    clearTimeout(f);
                    c.remove();
                    d.css("position", "");
                    d.removeAttr("aria-busy")
                })
            }).fail(c.exception);
            return e
        },
        j = function(d, e, f) {
            var i = a.Deferred();
            e.then(function(a, e) {
                e = e || "";
                b.render(g.PAGING_CONTENT_ITEM, {
                    page: f,
                    content: a
                }).then(function(a) {
                    b.appendNodeContents(d, a, e);
                    var c = h(d, f);
                    i.resolve(c)
                }).fail(function(a) {
                    i.reject(a)
                }).fail(c.exception)
            }).fail(function(a) {
                i.reject(a)
            }).fail(c.exception);
            return i.promise()
        },
        k = function(b, g, k, l) {
            var m = [],
                n = [],
                o = a.Deferred();
            g.forEach(function(a) {
                var c = a.pageNumber,
                    d = h(b, c);
                if (d.length) {
                    m.push(d)
                } else {
                    n.push(a)
                }
            });
            if (n.length && "function" == typeof l) {
                var p = l(n, {
                        allItemsLoaded: function allItemsLoaded(a) {
                            d.publish(k + e.ALL_ITEMS_LOADED, a)
                        }
                    }),
                    q = p.map(function(a, c) {
                        return j(b, a, n[c].pageNumber)
                    });
                a.when.apply(a, q).then(function() {
                    var a = Array.prototype.slice.call(arguments);
                    o.resolve(a)
                }).fail(function(a) {
                    o.reject(a)
                }).fail(c.exception)
            } else {
                o.resolve([])
            }
            var r = i(b);
            o.then(function(a) {
                var c = m.concat(a);
                b.find(f.PAGE_REGION).addClass("hidden");
                c.forEach(function(a) {
                    if (!0) {
                        a.removeClass("hidden")
                    }
                })
            }).then(function() {
                d.publish(k + e.PAGES_SHOWN, g)
            }).fail(c.exception).always(function() {
                r.resolve()
            })
        };
    return {
        init: function init(b, c, f) {
            b = a(b);
            d.subscribe(c + e.SHOW_PAGES, function(a) {
                k(b, a, c, f)
            });
            d.subscribe(c + e.SET_ITEMS_PER_PAGE_LIMIT, function() {
                b.empty()
            })
        },
        rootSelector: f.ROOT
    }
});
define("core/chart_axis", [], function() {
    function a() {}
    a.prototype.POS_DEFAULT = null;
    a.prototype.POS_BOTTOM = "bottom";
    a.prototype.POS_LEFT = "left";
    a.prototype.POS_RIGHT = "right";
    a.prototype.POS_TOP = "top";
    a.prototype._label = null;
    a.prototype._labels = null;
    a.prototype._max = null;
    a.prototype._min = null;
    a.prototype._position = null;
    a.prototype._stepSize = null;
    a.prototype.create = function(b) {
        var c = new a;
        c.setPosition(b.position);
        c.setLabel(b.label);
        c.setStepSize(b.stepSize);
        c.setMax(b.max);
        c.setMin(b.min);
        c.setLabels(b.labels);
        return c
    };
    a.prototype.getLabel = function() {
        return this._label
    };
    a.prototype.getLabels = function() {
        return this._labels
    };
    a.prototype.getMax = function() {
        return this._max
    };
    a.prototype.getMin = function() {
        return this._min
    };
    a.prototype.getPosition = function() {
        return this._position
    };
    a.prototype.getStepSize = function() {
        return this._stepSize
    };
    a.prototype.setLabel = function(a) {
        this._label = a || null
    };
    a.prototype.setLabels = function(a) {
        this._labels = a || null;
        if (null !== this._labels && null === this._stepSize && (null === this._min || 0 === this._min) && null === this._max) {
            this.setStepSize(1);
            this.setMin(0);
            this.setMax(a.length - 1)
        }
    };
    a.prototype.setMax = function(a) {
        this._max = "undefined" != typeof a ? a : null
    };
    a.prototype.setMin = function(a) {
        this._min = "undefined" != typeof a ? a : null
    };
    a.prototype.setPosition = function(a) {
        if (a != this.POS_DEFAULT && a != this.POS_BOTTOM && a != this.POS_LEFT && a != this.POS_RIGHT && a != this.POS_TOP) {
            throw new Error("Invalid axis position.")
        }
        this._position = a
    };
    a.prototype.setStepSize = function(a) {
        if ("undefined" == typeof a || null === a) {
            a = null
        } else if (isNaN(+a)) {
            throw new Error("Value for stepSize is not a number.")
        } else {
            a = +a
        }
        this._stepSize = a
    };
    return a
});
define("core/search-input", ["jquery"], function(a) {
    var b = null,
        c = function(a) {
            if (b.hasClass("expanded")) {
                e()
            } else {
                d(a)
            }
        },
        d = function(c) {
            var d = a(document).width();
            if ("keydown" === c.type && 13 !== c.keyCode && 32 !== c.keyCode) {
                return
            }
            if (767 >= d && ("click" === c.type || "keydown" === c.type)) {
                f();
                return
            } else if (767 >= d) {
                return
            }
            if ("keydown" === c.type) {
                c.preventDefault()
            }
            b.addClass("expanded");
            b.find("form").addClass("expanded");
            b.find("input").focus()
        },
        e = function() {
            b.removeClass("expanded");
            b.find("form").removeClass("expanded")
        },
        f = function() {
            b.find("form").submit()
        };
    return {
        init: function init(d) {
            b = a("#" + d);
            b.on("click mouseover keydown", "div", c)
        }
    }
});
define("core/form-autocomplete", ["jquery", "core/log", "core/str", "core/templates", "core/notification", "core/loadingicon"], function(a, b, c, d, f, g) {
    var h = {
            DOWN: 40,
            ENTER: 13,
            SPACE: 32,
            ESCAPE: 27,
            COMMA: 44,
            UP: 38
        },
        i = Date.now(),
        j = function(b, c) {
            var d = a(document.getElementById(c.selectionId)),
                e = d.children("[aria-selected=true]").length;
            b = b % e;
            while (0 > b) {
                b += e
            }
            var f = a(d.children("[aria-selected=true]").get(b)),
                g = c.selectionId + "-" + b;
            d.children().attr("data-active-selection", !1).attr("id", "");
            f.attr("data-active-selection", !0).attr("id", g);
            d.attr("aria-activedescendant", g);
            return a.Deferred().resolve()
        },
        k = function(b, c, e) {
            var g = "form-autocomplete-updateSelectionList-" + c.inputId;
            M.util.js_pending(g);
            var h = [],
                i = a(document.getElementById(c.selectionId)),
                k = i.attr("aria-activedescendant"),
                l = !1;
            if (k) {
                l = a(document.getElementById(k)).attr("data-value")
            }
            e.children("option").each(function(b, c) {
                if (a(c).prop("selected")) {
                    var d;
                    if (a(c).data("html")) {
                        d = a(c).data("html")
                    } else {
                        d = a(c).html()
                    }
                    if ("" !== d) {
                        h.push({
                            label: d,
                            value: a(c).attr("value")
                        })
                    }
                }
            });
            var m = a.extend({
                items: h
            }, b, c);
            return d.render("core/form_autocomplete_selection_items", m).then(function(b, e) {
                d.replaceNodeContents(i, b, e);
                if (!1 !== l) {
                    i.children("[aria-selected=true]").each(function(b, d) {
                        if (a(d).attr("data-value") === l) {
                            j(b, c)
                        }
                    })
                }
                return l
            }).then(function() {
                return M.util.js_complete(g)
            }).catch(f.exception)
        },
        l = function(a) {
            if ("undefined" != typeof M.core_formchangechecker) {
                M.core_formchangechecker.set_form_changed()
            }
            a.change()
        },
        m = function(b, c, d, e) {
            var f = a(d).attr("data-value");
            e.children("option").each(function(b, c) {
                if (a(c).attr("value") == f) {
                    a(c).prop("selected", !1);
                    if (a(c).attr("data-iscustom")) {
                        a(c).remove()
                    }
                }
            });
            return k(b, c, e).then(function() {
                l(e)
            })
        },
        n = function(b, c) {
            var d = a(document.getElementById(c.inputId)),
                e = a(document.getElementById(c.suggestionsId)),
                f = e.children("[aria-hidden=false]").length;
            b = b % f;
            while (0 > b) {
                b += f
            }
            var g = a(e.children("[aria-hidden=false]").get(b)),
                h = a(e.children("[role=option]")).index(g),
                i = c.suggestionsId + "-" + h;
            e.children().attr("aria-selected", !1).attr("id", "");
            g.attr("aria-selected", !0).attr("id", i);
            d.attr("aria-activedescendant", i);
            var j = g.offset().top - e.offset().top + e.scrollTop() - e.height() / 2;
            return e.animate({
                scrollTop: j
            }, 100).promise()
        },
        o = function(b) {
            var c = a(document.getElementById(b.suggestionsId)),
                d = c.children("[aria-selected=true]"),
                e = c.children("[aria-hidden=false]").index(d);
            return n(e + 1, b)
        },
        p = function(b) {
            var c = a(document.getElementById(b.selectionId)),
                d = c.children("[data-active-selection=true]");
            if (!d) {
                return j(0, b)
            }
            var e = c.children("[aria-selected=true]").index(d);
            return j(e - 1, b)
        },
        q = function(b) {
            var c = a(document.getElementById(b.selectionId)),
                d = c.children("[data-active-selection=true]"),
                e = 0;
            if (d) {
                e = c.children("[aria-selected=true]").index(d);
                e = e + 1
            } else {
                e = 0
            }
            return j(e, b)
        },
        r = function(b) {
            var c = a(document.getElementById(b.suggestionsId)),
                d = c.children("[aria-selected=true]"),
                e = c.children("[aria-hidden=false]").index(d);
            return n(e - 1, b)
        },
        s = function(b) {
            var c = a(document.getElementById(b.inputId)),
                d = a(document.getElementById(b.suggestionsId));
            c.attr("aria-expanded", !1).attr("aria-activedescendant", b.selectionId);
            d.hide().attr("aria-hidden", !0);
            return a.Deferred().resolve()
        },
        t = function(b, e, g, h) {
            var i = "form-autocomplete-updateSuggestions-" + e.inputId;
            M.util.js_pending(i);
            var j = a(document.getElementById(e.inputId)),
                k = a(document.getElementById(e.suggestionsId)),
                l = !1,
                m = [];
            h.children("option").each(function(b, c) {
                if (!0 !== a(c).prop("selected")) {
                    m[m.length] = {
                        label: c.innerHTML,
                        value: a(c).attr("value")
                    }
                }
            });
            var o = e.caseSensitive ? g : g.toLocaleLowerCase(),
                p = a.extend({
                    options: m
                }, b, e),
                q = d.render("core/form_autocomplete_suggestions", p).then(function(f, g) {
                    d.replaceNode(k, f, g);
                    k = a(document.getElementById(e.suggestionsId));
                    k.show().attr("aria-hidden", !1);
                    k.children().each(function(c, d) {
                        d = a(d);
                        if (b.caseSensitive && -1 < d.text().indexOf(o) || !b.caseSensitive && -1 < d.text().toLocaleLowerCase().indexOf(o)) {
                            d.show().attr("aria-hidden", !1);
                            l = !0
                        } else {
                            d.hide().attr("aria-hidden", !0)
                        }
                    });
                    j.attr("aria-expanded", !0);
                    if (h.attr("data-notice")) {
                        k.html(h.attr("data-notice"))
                    } else if (l) {
                        if (!b.tags) {
                            n(0, e)
                        }
                    } else {
                        c.get_string("nosuggestions", "form").done(function(a) {
                            k.html(a)
                        })
                    }
                    return k
                }).then(function() {
                    return M.util.js_complete(i)
                }).catch(f.exception);
            return q
        },
        u = function(b, c, d) {
            var e = a(document.getElementById(c.inputId)),
                f = e.val(),
                g = f.split(","),
                h = !1;
            a.each(g, function(c, e) {
                e = e.trim();
                if ("" !== e) {
                    if (!b.multiple) {
                        d.children("option").prop("selected", !1)
                    }
                    d.children("option").each(function(b, c) {
                        if (a(c).attr("value") == e) {
                            h = !0;
                            a(c).prop("selected", !0)
                        }
                    });
                    if (!h) {
                        var f = a("<option>");
                        f.append(document.createTextNode(e));
                        f.attr("value", e);
                        d.append(f);
                        f.prop("selected", !0);
                        f.attr("data-iscustom", !0)
                    }
                }
            });
            return k(b, c, d).then(function() {
                l(d)
            }).then(function() {
                e.val("")
            }).then(function() {
                return s(c)
            })
        },
        v = function(b, c, d) {
            var e = a(document.getElementById(c.inputId)),
                f = a(document.getElementById(c.suggestionsId)),
                g = f.children("[aria-selected=true]").attr("data-value");
            if (!b.multiple) {
                d.children("option").prop("selected", !1)
            }
            d.children("option").each(function(b, c) {
                if (a(c).attr("value") == g) {
                    a(c).prop("selected", !0)
                }
            });
            return k(b, c, d).then(function() {
                l(d)
            }).then(function() {
                if (b.closeSuggestionsOnSelect) {
                    e.val("");
                    return s(c)
                } else {
                    e.focus();
                    return t(b, c, e.val(), d)
                }
            })
        },
        w = function(b, c, d, e, f) {
            var h = y("updateAjax"),
                i = a(document.getElementById(d.selectId)).parent();
            g.addIconToContainerRemoveOnCompletion(i, h);
            var j = a(b.currentTarget).val();
            f.transport(c.selector, j, function(b) {
                var g = f.processResults(c.selector, b),
                    i = [];
                if (!c.multiple) {
                    e.children("option").remove()
                }
                e.children("option").each(function(b, c) {
                    c = a(c);
                    if (!c.prop("selected")) {
                        c.remove()
                    } else {
                        i.push(c.attr("value") + "")
                    }
                });
                if (!c.multiple && 0 === e.children("option").length) {
                    var j = a("<option>");
                    e.append(j)
                }
                if (a.isArray(g)) {
                    a.each(g, function(b, c) {
                        if (-1 === i.indexOf(c.value + "")) {
                            var d = a("<option>");
                            d.append(c.label);
                            d.attr("value", c.value);
                            e.append(d)
                        }
                    });
                    e.attr("data-notice", "")
                } else {
                    e.attr("data-notice", g)
                }
                h.resolve(t(c, d, "", e))
            }, function(a) {
                h.reject(a)
            });
            return h
        },
        x = function(b, c, d) {
            var g = a(document.getElementById(c.inputId));
            g.on("keydown", function(f) {
                var e = y("addNavigation-" + c.inputId + "-" + f.keyCode);
                switch (f.keyCode) {
                    case h.DOWN:
                        if (!b.showSuggestions) {
                            e.resolve();
                            return !0
                        } else if ("true" === g.attr("aria-expanded")) {
                            e.resolve(o(c))
                        } else {
                            if (!g.val() && b.ajax) {
                                require([b.ajax], function(a) {
                                    e.resolve(w(f, b, c, d, a))
                                })
                            } else {
                                e.resolve(t(b, c, g.val(), d))
                            }
                        }
                        f.preventDefault();
                        return !1;
                    case h.UP:
                        e.resolve(r(c));
                        f.preventDefault();
                        return !1;
                    case h.ENTER:
                        var i = a(document.getElementById(c.suggestionsId));
                        if ("true" === g.attr("aria-expanded") && 0 < i.children("[aria-selected=true]").length) {
                            e.resolve(v(b, c, d))
                        } else if (b.tags) {
                            e.resolve(u(b, c, d))
                        } else {
                            e.resolve()
                        }
                        f.preventDefault();
                        return !1;
                    case h.ESCAPE:
                        if ("true" === g.attr("aria-expanded")) {
                            e.resolve(s(c))
                        } else {
                            e.resolve()
                        }
                        f.preventDefault();
                        return !1;
                }
                e.resolve();
                return !0
            });
            g.on("keypress", function(a) {
                if (a.keyCode === h.COMMA) {
                    if (b.tags) {
                        y("keypress-" + a.keyCode).resolve(u(b, c, d))
                    }
                    a.preventDefault();
                    return !1
                }
                return !0
            });
            g.closest("form").on("submit", function() {
                if (b.tags) {
                    y("form-autocomplete-submit").resolve(u(b, c, d))
                }
                return !0
            });
            g.on("blur", function() {
                var e = y("form-autocomplete-blur");
                window.setTimeout(function() {
                    var f = a(document.activeElement),
                        h = a.Deferred();
                    if (f.is(document.getElementById(c.suggestionsId))) {
                        g.focus()
                    } else if (!f.is(g) && a(document.getElementById(c.inputId)).length) {
                        if (b.tags) {
                            h.then(function() {
                                return u(b, c, d)
                            }).catch()
                        }
                        h.then(function() {
                            return s(c)
                        }).catch()
                    }
                    h.then(function() {
                        return e.resolve()
                    }).catch();
                    h.resolve()
                }, 500)
            });
            if (b.showSuggestions) {
                var i = a(document.getElementById(c.downArrowId));
                i.on("click", function(a) {
                    var e = y("form-autocomplete-show-suggestions");
                    g.focus();
                    if (!g.val() && b.ajax) {
                        require([b.ajax], function(f) {
                            e.resolve(w(a, b, c, d, f))
                        })
                    } else {
                        e.resolve(t(b, c, g.val(), d))
                    }
                })
            }
            var j = a(document.getElementById(c.suggestionsId));
            j.parent().prop("onclick", null).off("click");
            j.parent().on("click", "[role=option]", function(f) {
                var e = y("form-autocomplete-parent"),
                    g = a(f.currentTarget).closest("[role=option]"),
                    h = a(document.getElementById(c.suggestionsId)),
                    i = h.children("[aria-hidden=false]").index(g);
                n(i, c).then(function() {
                    return v(b, c, d)
                }).then(function() {
                    return e.resolve()
                }).catch()
            });
            var k = a(document.getElementById(c.selectionId));
            k.on("click", "[role=listitem]", function(f) {
                var e = y("form-autocomplete-clicks");
                e.resolve(m(b, c, a(f.currentTarget), d))
            });
            k.on("keydown", function(f) {
                var e = y("form-autocomplete-keydown-" + f.keyCode);
                switch (f.keyCode) {
                    case h.DOWN:
                        f.preventDefault();
                        e.resolve(q(c));
                        return !1;
                    case h.UP:
                        f.preventDefault();
                        e.resolve(p(c));
                        return !1;
                    case h.SPACE:
                    case h.ENTER:
                        var g = a(document.getElementById(c.selectionId)).children("[data-active-selection=true]");
                        if (g) {
                            f.preventDefault();
                            e.resolve(m(b, c, g, d))
                        }
                        return !1;
                }
                e.resolve();
                return !0
            });
            if (b.showSuggestions) {
                g.on("focus", function(b) {
                    var c = a(b.currentTarget).val();
                    a(b.currentTarget).data("last-value", c)
                });
                if (b.ajax) {
                    require([b.ajax], function(h) {
                        var i = null,
                            j = !1,
                            k = "autocomplete-throttledhandler",
                            l = function(a) {
                                i = null;
                                j = !0;
                                w(a, b, c, d, h).then(function() {
                                    if (null === i) {
                                        M.util.js_complete(k)
                                    }
                                    j = !1;
                                    return arguments[0]
                                }).catch(f.exception)
                            },
                            m = function(a) {
                                window.clearTimeout(i);
                                if (j) {
                                    i = window.setTimeout(m.bind(this, a), 100);
                                    return
                                }
                                if (null === i) {
                                    M.util.js_pending(k)
                                }
                                i = window.setTimeout(l.bind(this, a), 300)
                            };
                        g.on("input", function(b) {
                            var c = a(b.currentTarget).val(),
                                d = a(b.currentTarget).data("last-value");
                            if (d !== c) {
                                m(b)
                            }
                            a(b.currentTarget).data("last-value", c)
                        })
                    })
                } else {
                    g.on("input", function(f) {
                        var e = a(f.currentTarget).val(),
                            g = a(f.currentTarget).data("last-value");
                        if (g !== e) {
                            t(b, c, e, d)
                        }
                        a(f.currentTarget).data("last-value", e)
                    })
                }
            }
        },
        y = function(b) {
            var c = "form-autocomplete:" + b;
            M.util.js_pending(c);
            var d = a.Deferred();
            d.then(function() {
                M.util.js_complete(c);
                return arguments[0]
            }).catch(f.exception);
            return d
        };
    return {
        enhance: function enhance(e, g, h, j, l, m, n, o) {
            var p = {
                    selector: e,
                    tags: !1,
                    ajax: !1,
                    placeholder: j,
                    caseSensitive: !1,
                    showSuggestions: !0,
                    noSelectionString: n
                },
                q = "autocomplete-setup-" + e;
            M.util.js_pending(q);
            if ("undefined" != typeof g) {
                p.tags = g
            }
            if ("undefined" != typeof h) {
                p.ajax = h
            }
            if ("undefined" != typeof l) {
                p.caseSensitive = l
            }
            if ("undefined" != typeof m) {
                p.showSuggestions = m
            }
            if ("undefined" == typeof n) {
                c.get_string("noselection", "form").done(function(a) {
                    p.noSelectionString = a
                }).fail(f.exception)
            }
            var r = a(e);
            if (!r) {
                b.debug("Selector not found: " + e);
                M.util.js_complete(q);
                return !1
            }
            r.css("visibility", "hidden").attr("aria-hidden", !0);
            var s = {
                selectId: r.attr("id"),
                inputId: "form_autocomplete_input-" + i,
                suggestionsId: "form_autocomplete_suggestions-" + i,
                selectionId: "form_autocomplete_selection-" + i,
                downArrowId: "form_autocomplete_downarrow-" + i
            };
            i++;
            p.multiple = r.attr("multiple");
            if ("undefined" != typeof o) {
                p.closeSuggestionsOnSelect = o
            } else {
                p.closeSuggestionsOnSelect = !p.multiple
            }
            var t = a("[for=" + s.selectId + "]"),
                u = [];
            r.children("option").each(function(b, c) {
                u[b] = {
                    label: c.innerHTML,
                    value: a(c).attr("value")
                }
            });
            var v = a.extend({}, p, s);
            v.options = u;
            v.items = [];
            var w = "",
                y = d.render("core/form_autocomplete_input", v).then(function(a, b) {
                    w += b;
                    return a
                }),
                z = d.render("core/form_autocomplete_suggestions", v).then(function(a, b) {
                    w += b;
                    return a
                }),
                A = d.render("core/form_autocomplete_selection", v).then(function(a, b) {
                    w += b;
                    return a
                });
            return a.when(y, z, A).then(function(b, c, e) {
                r.hide();
                r.after(c);
                r.after(b);
                r.after(e);
                d.runTemplateJS(w);
                t.attr("for", s.inputId);
                x(p, s, r);
                var f = a(document.getElementById(s.suggestionsId));
                f.hide().attr("aria-hidden", !0)
            }).then(function() {
                return k(p, s, r)
            }).then(function() {
                return M.util.js_complete(q)
            }).catch(function(a) {
                M.util.js_complete(q);
                f.exception(a)
            })
        }
    }
});
define("core/chart_line", ["core/chart_base"], function(a) {
    function b() {
        a.prototype.constructor.apply(this, arguments)
    }
    b.prototype = Object.create(a.prototype);
    b.prototype.TYPE = "line";
    b.prototype._smooth = !1;
    b.prototype.create = function(b, c) {
        var d = a.prototype.create.apply(this, arguments);
        d.setSmooth(c.smooth);
        return d
    };
    b.prototype.getSmooth = function() {
        return this._smooth
    };
    b.prototype.setSmooth = function(a) {
        this._smooth = !!a
    };
    return b
});
define("core/icon_system", ["jquery"], function(a) {
    var b = function() {};
    b.prototype.init = function() {
        return a.when(this)
    };
    b.prototype.renderIcon = function() {
        throw new Error("Abstract function not implemented.")
    };
    b.prototype.getTemplateName = function() {
        throw new Error("Abstract function not implemented.")
    };
    return b
});
define("core/drawer_events", ["exports"], function(a) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    a.default = void 0;
    a.default = {
        DRAWER_SHOWN: "drawer-shown",
        DRAWER_HIDDEN: "drawer-hidden"
    };
    return a.default
});
define("core/str", ["exports", "jquery", "core/ajax", "core/localstorage"], function(a, b, c, d) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    a.cache_strings = a.get_strings = a.get_string = void 0;
    b = e(b);
    c = e(c);
    d = e(d);

    function e(a) {
        return a && a.__esModule ? a : {
            default: a
        }
    }

    function f(a) {
        for (var b = 1; b < arguments.length; b++) {
            var c = null != arguments[b] ? arguments[b] : {},
                d = Object.keys(c);
            if ("function" == typeof Object.getOwnPropertySymbols) {
                d = d.concat(Object.getOwnPropertySymbols(c).filter(function(a) {
                    return Object.getOwnPropertyDescriptor(c, a).enumerable
                }))
            }
            d.forEach(function(b) {
                g(a, b, c[b])
            })
        }
        return a
    }

    function g(a, b, c) {
        if (b in a) {
            Object.defineProperty(a, b, {
                value: c,
                enumerable: !0,
                configurable: !0,
                writable: !0
            })
        } else {
            a[b] = c
        }
        return a
    }
    var h = [];
    a.get_string = function get_string(a, b, c, d) {
        return i([{
            key: a,
            component: b,
            param: c,
            lang: d
        }]).then(function(a) {
            return a[0]
        })
    };
    var i = function(a) {
        var e = [],
            i = (0, b.default)("html").attr("lang").replace(/-/g, "_"),
            j = function(a) {
                var b = a.key,
                    c = a.component,
                    d = a.lang,
                    e = void 0 === d ? i : d;
                return "core_str/".concat(b, "/").concat(c, "/").concat(e)
            },
            k = a.map(function(a) {
                var b = j(a),
                    c = a.component,
                    k = a.key,
                    l = a.param,
                    m = a.lang,
                    n = void 0 === m ? i : m,
                    o = function(a) {
                        h[b] = a;
                        return a
                    };
                if (c in M.str && k in M.str[c]) {
                    return o(new Promise(function(a) {
                        a(M.util.get_string(k, c, l, n))
                    }))
                }
                var p = d.default.get(b);
                if (p) {
                    M.str[c] = f({}, M.str[c], g({}, k, p));
                    return o(new Promise(function(a) {
                        a(M.util.get_string(k, c, l, n))
                    }))
                }
                if (b in h) {
                    return o(h[b]).then(function() {
                        return M.util.get_string(k, c, l, n)
                    })
                } else {
                    return o(new Promise(function(a, h) {
                        e.push({
                            methodname: "core_get_string",
                            args: {
                                stringid: k,
                                stringparams: [],
                                component: c,
                                lang: n
                            },
                            done: function done(e) {
                                M.str[c] = f({}, M.str[c], g({}, k, e));
                                d.default.set(b, e);
                                a(M.util.get_string(k, c, l, n))
                            },
                            fail: h
                        })
                    }))
                }
            });
        if (e.length) {
            c.default.call(e, !0, !1, !1, 0, M.cfg.langrev)
        }
        return b.default.when.apply(b.default, k).then(function() {
            for (var a = arguments.length, b = Array(a), c = 0; c < a; c++) {
                b[c] = arguments[c]
            }
            return b
        })
    };
    a.get_strings = i;
    var j = function(a) {
        var c = (0, b.default)("html").attr("lang").replace(/-/g, "_");
        a.forEach(function(a) {
            var e = a.key,
                f = a.component,
                g = a.value,
                i = a.lang,
                j = void 0 === i ? c : i,
                k = ["core_str", e, f, j].join("/");
            if (!(f in M.str) || !(e in M.str[f])) {
                if (!(f in M.str)) {
                    M.str[f] = {}
                }
                M.str[f][e] = g
            }
            if (!d.default.get(k)) {
                d.default.set(k, g)
            }
            if (!(k in h)) {
                h[k] = b.default.Deferred().resolve(g).promise()
            }
        })
    };
    a.cache_strings = j
});
define("core/ajax", ["jquery", "core/config", "core/log", "core/url"], function(a, b, c, d) {
    var e = !1,
        f = function(a) {
            var b = this,
                c = null,
                e = 0,
                f, g, h;
            if (a.error) {
                for (; e < b.length; e++) {
                    f = b[e];
                    f.deferred.reject(a)
                }
                return
            }
            for (e = 0; e < b.length; e++) {
                f = b[e];
                g = a[e];
                if ("undefined" != typeof g) {
                    if (!1 === g.error) {
                        f.deferred.resolve(g.data)
                    } else {
                        c = g.exception;
                        h = b[e].nosessionupdate;
                        break
                    }
                } else {
                    c = new Error("missing response");
                    break
                }
            }
            if (null !== c) {
                if ("servicerequireslogin" === c.errorcode && !h) {
                    window.location = d.relativeUrl("/login/index.php")
                } else {
                    b.forEach(function(a) {
                        a.deferred.reject(c)
                    })
                }
            }
        },
        g = function(a, b, d) {
            var f = this,
                g = 0;
            for (g = 0; g < f.length; g++) {
                var h = f[g];
                if (e) {
                    c.error("Page unloaded.");
                    c.error(d)
                } else {
                    h.deferred.reject(d)
                }
            }
        };
    return {
        call: function call(c, d, h, j, k, l) {
            a(window).bind("beforeunload", function() {
                e = !0
            });
            var m = [],
                n, o = [],
                p = [],
                q = "";
            if ("undefined" == typeof h) {
                h = !0
            }
            if ("undefined" == typeof d) {
                d = !0
            }
            if ("undefined" == typeof k) {
                k = 0
            }
            if ("undefined" == typeof l) {
                l = null
            } else {
                l = parseInt(l);
                if (0 >= l) {
                    l = null
                } else if (!l) {
                    l = null
                }
            }
            if ("undefined" == typeof j) {
                j = !1
            }
            for (n = 0; n < c.length; n++) {
                var r = c[n];
                m.push({
                    index: n,
                    methodname: r.methodname,
                    args: r.args
                });
                r.nosessionupdate = j;
                r.deferred = a.Deferred();
                o.push(r.deferred.promise());
                if ("undefined" != typeof r.done) {
                    r.deferred.done(r.done)
                }
                if ("undefined" != typeof r.fail) {
                    r.deferred.fail(r.fail)
                }
                r.index = n;
                p.push(r.methodname)
            }
            if (5 >= p.length) {
                q = p.sort().join()
            } else {
                q = p.length + "-method-calls"
            }
            m = JSON.stringify(m);
            var s = {
                    type: "POST",
                    context: c,
                    dataType: "json",
                    processData: !1,
                    async: d,
                    contentType: "application/json",
                    timeout: k
                },
                t = "service.php",
                u = b.wwwroot + "/lib/ajax/";
            if (!h) {
                t = "service-nologin.php";
                u += t + "?info=" + q;
                if (l) {
                    u += "&cachekey=" + l;
                    s.type = "GET"
                }
            } else {
                u += t + "?sesskey=" + b.sesskey + "&info=" + q
            }
            if (j) {
                u += "&nosessionupdate=true"
            }
            if ("POST" === s.type) {
                s.data = m
            } else {
                var v = u + "&args=" + encodeURIComponent(m);
                if (v.length > 2e3) {
                    s.type = "POST";
                    s.data = m
                } else {
                    u = v
                }
            }
            if (d) {
                a.ajax(u, s).done(f).fail(g)
            } else {
                s.success = f;
                s.error = g;
                a.ajax(u, s)
            }
            return o
        }
    }
});
define("core/key_codes", function() {
    return {
        tab: 9,
        enter: 13,
        shift: 16,
        ctrl: 17,
        alt: 18,
        escape: 27,
        space: 32,
        end: 35,
        home: 36,
        arrowLeft: 37,
        arrowUp: 38,
        arrowRight: 39,
        arrowDown: 40,
        8: 56,
        asterix: 106,
        pageUp: 33,
        pageDown: 34
    }
});
define("core_backup/async_backup", ["jquery", "core/ajax", "core/str", "core/notification", "core/templates"], function(a, b, c, d, e) {
    var n = 900,
        o = 1e3,
        p = {},
        q = 15e3,
        r = 15e3,
        s = 1.5,
        t, u, v, w, x, y, z = 2e3;

    function f(b, c) {
        var d = Math.round(c) + "%",
            e = a("#" + b + "_bar"),
            f = c.toFixed(2) + "%";
        e.attr("aria-valuenow", d);
        e.css("width", d);
        e.text(f)
    }

    function g(a, b, c) {
        clearInterval(a);
        return setInterval(b, c)
    }

    function h(c) {
        var f = a("#" + c + "_bar").parent().parent(),
            g = f.parent(),
            h = f.siblings(),
            i = h[1],
            j = a(i).text(),
            k = h[0],
            l = a(k).text();
        b.call([{
            methodname: "core_backup_get_async_backup_links_backup",
            args: {
                filename: l,
                contextid: u
            }
        }])[0].done(function(a) {
            var b = {
                filename: l,
                time: j,
                size: a.filesize,
                fileurl: a.fileurl,
                restoreurl: a.restoreurl
            };
            e.render("core/async_backup_progress_row", b).then(function(a, b) {
                e.replaceNodeContents(g, a, b)
            }).fail(function() {
                d.exception(new Error("Failed to load table row"))
            })
        })
    }

    function i(c) {
        var f = a("#" + c + "_bar").parent().parent(),
            g = f.parent(),
            h = f.siblings(),
            i = h[0],
            j = h[1],
            k = a(j).text();
        b.call([{
            methodname: "core_backup_get_async_backup_links_restore",
            args: {
                backupid: c,
                contextid: u
            }
        }])[0].done(function(b) {
            var c = a(i).text(),
                f = {
                    resourcename: c,
                    restoreurl: b.restoreurl,
                    time: k
                };
            e.render("core/async_restore_progress_row", f).then(function(a, b) {
                e.replaceNodeContents(g, a, b)
            }).fail(function() {
                d.exception(new Error("Failed to load table row"))
            })
        })
    }

    function j(e) {
        var g = 100 * e.progress,
            h = a("#" + t + "_bar"),
            i = a("#" + t + "_status"),
            j = a("#" + t + "_detail"),
            k = a("#" + t + "_button"),
            l;
        if (e.status == 800) {
            h.addClass("bg-success");
            f(t, g);
            var m = "async" + w + "processing";
            c.get_string(m, "backup").then(function(a) {
                i.text(a);
                return a
            }).catch(function() {
                d.exception(new Error("Failed to load string: backup " + m))
            })
        } else if (e.status == n) {
            h.addClass("bg-danger");
            h.removeClass("bg-success");
            f(t, 100);
            var p = "async" + w + "error",
                q = "async" + w + "errordetail";
            l = [{
                key: p,
                component: "backup"
            }, {
                key: q,
                component: "backup"
            }];
            c.get_strings(l).then(function(a) {
                i.text(a[0]);
                j.text(a[1]);
                return a
            }).catch(function() {
                d.exception(new Error("Failed to load string"))
            });
            a(".backup_progress").children("span").removeClass("backup_stage_current");
            a(".backup_progress").children("span").last().addClass("backup_stage_current");
            clearInterval(x)
        } else if (e.status == o) {
            h.addClass("bg-success");
            f(t, 100);
            var r = "async" + w + "complete";
            c.get_string(r, "backup").then(function(a) {
                i.text(a);
                return a
            }).catch(function() {
                d.exception(new Error("Failed to load string: backup " + r))
            });
            if ("restore" == w) {
                b.call([{
                    methodname: "core_backup_get_async_backup_links_restore",
                    args: {
                        backupid: t,
                        contextid: u
                    }
                }])[0].done(function(a) {
                    var b = "async" + w + "completedetail",
                        e = "async" + w + "completebutton",
                        f = [{
                            key: b,
                            component: "backup",
                            param: a.restoreurl
                        }, {
                            key: e,
                            component: "backup"
                        }];
                    c.get_strings(f).then(function(b) {
                        j.html(b[0]);
                        k.text(b[1]);
                        k.attr("href", a.restoreurl);
                        return b
                    }).catch(function() {
                        d.exception(new Error("Failed to load string"))
                    })
                })
            } else {
                var s = "async" + w + "completedetail",
                    y = "async" + w + "completebutton";
                l = [{
                    key: s,
                    component: "backup",
                    param: v
                }, {
                    key: y,
                    component: "backup"
                }];
                c.get_strings(l).then(function(a) {
                    j.html(a[0]);
                    k.text(a[1]);
                    k.attr("href", v);
                    return a
                }).catch(function() {
                    d.exception(new Error("Failed to load string"))
                })
            }
            a(".backup_progress").children("span").removeClass("backup_stage_current");
            a(".backup_progress").children("span").last().addClass("backup_stage_current");
            clearInterval(x)
        }
    }

    function k(b) {
        b.forEach(function(b) {
            var c = 100 * b.progress,
                d = b.backupid,
                e = a("#" + d + "_bar"),
                g = b.operation;
            if (b.status == 800) {
                e.addClass("bg-success");
                f(d, c)
            } else if (b.status == n) {
                e.addClass("bg-danger");
                e.addClass("complete");
                a("#" + d + "_bar").removeClass("bg-success");
                f(d, 100)
            } else if (b.status == o) {
                e.addClass("bg-success");
                e.addClass("complete");
                f(d, 100);
                if ("backup" == g) {
                    h(d)
                } else {
                    i(d)
                }
            }
        })
    }

    function l() {
        b.call([{
            methodname: "core_backup_get_async_backup_progress",
            args: {
                backupids: [t],
                contextid: u
            }
        }], !0, !0, !1, z)[0].done(function(a) {
            j(a[0]);
            r = q;
            x = g(x, l, q)
        }).fail(function() {
            r = r * s;
            x = g(x, l, r)
        })
    }

    function m() {
        var c = [],
            d = a(".progress").find(".progress-bar").not(".complete");
        d.each(function() {
            c.push(this.id.substring(0, 32))
        });
        if (0 < c.length) {
            b.call([{
                methodname: "core_backup_get_async_backup_progress",
                args: {
                    backupids: c,
                    contextid: u
                }
            }], !0, !0, !1, z)[0].done(function(a) {
                k(a);
                r = q;
                y = g(y, m, q)
            }).fail(function() {
                r = r * s;
                y = g(y, m, r)
            })
        } else {
            clearInterval(y)
        }
    }
    p.asyncBackupAllStatus = function(a) {
        u = a;
        y = setInterval(m, r)
    };
    p.asyncBackupStatus = function(b, c, d, e) {
        t = b;
        u = c;
        v = d;
        if ("backup" == e) {
            w = "backup"
        } else {
            w = "restore"
        }
        a(".backup_progress").children("a").removeAttr("href");
        x = setInterval(l, r)
    };
    return p
});
define("core_calendar/calendar", ["jquery", "core/ajax", "core/str", "core/templates", "core/notification", "core/custom_interaction_events", "core/modal_events", "core/modal_factory", "core_calendar/modal_event_form", "core_calendar/summary_modal", "core_calendar/repository", "core_calendar/events", "core_calendar/view_manager", "core_calendar/crud", "core_calendar/selectors"], function(a, b, c, d, f, g, h, i, j, k, l, m, n, o, p) {
    var q = {
            ROOT: "[data-region='calendar']",
            DAY: "[data-region='day']",
            NEW_EVENT_BUTTON: "[data-action='new-event-button']",
            DAY_CONTENT: "[data-region='day-content']",
            LOADING_ICON: ".loading-icon",
            VIEW_DAY_LINK: "[data-action='view-day-link']",
            CALENDAR_MONTH_WRAPPER: ".calendarwrapper",
            TODAY: ".today"
        },
        r = function(b, c, e, g) {
            var h = null,
                i = g.attr("data-day-timestamp");
            if (e) {
                h = e.attr("data-day-timestamp")
            }
            if (!e || h != i) {
                d.render("core/loading", {}).then(function(a, b) {
                    g.find(q.DAY_CONTENT).addClass("hidden");
                    d.appendNodeContents(g, a, b);
                    if (e) {
                        e.find(q.DAY_CONTENT).addClass("hidden");
                        d.appendNodeContents(e, a, b)
                    }
                }).then(function() {
                    return l.updateEventStartDay(c, i)
                }).then(function() {
                    a("body").trigger(m.eventMoved, [c, e, g])
                }).always(function() {
                    var a = g.find(q.LOADING_ICON);
                    g.find(q.DAY_CONTENT).removeClass("hidden");
                    d.replaceNode(a, "", "");
                    if (e) {
                        var b = e.find(q.LOADING_ICON);
                        e.find(q.DAY_CONTENT).removeClass("hidden");
                        d.replaceNode(b, "", "")
                    }
                }).fail(f.exception)
            }
        },
        s = function(b, c) {
            var d = a("body");
            d.on(m.created, function() {
                n.reloadCurrentMonth(b)
            });
            d.on(m.deleted, function() {
                n.reloadCurrentMonth(b)
            });
            d.on(m.updated, function() {
                n.reloadCurrentMonth(b)
            });
            d.on(m.editActionEvent, function(a, b) {
                window.location.assign(b)
            });
            d.on(m.moveEvent, r);
            d.on(m.eventMoved, function() {
                n.reloadCurrentMonth(b)
            });
            o.registerEditListeners(b, c)
        },
        t = function(b) {
            b.on("click", q.VIEW_DAY_LINK, function(c) {
                var d = a(c.target),
                    e = d.data("year"),
                    g = d.data("month"),
                    h = d.data("day"),
                    i = d.data("courseid"),
                    j = d.data("categoryid");
                n.refreshDayContent(b, e, g, h, i, j, b, "core_calendar/calendar_day").then(function() {
                    c.preventDefault();
                    var a = "?view=day&time=" + d.data("timestamp");
                    return window.history.pushState({}, "", a)
                }).fail(f.exception)
            });
            b.on("change", p.elements.courseSelector, function() {
                var c = a(this),
                    d = c.val();
                n.reloadCurrentMonth(b, d, null).then(function() {
                    return b.find(p.elements.courseSelector).val(d)
                }).fail(f.exception)
            });
            var c = o.registerEventFormModal(b),
                d = a(q.CALENDAR_MONTH_WRAPPER).data("context-id");
            s(b, c);
            if (d) {
                b.on("click", q.DAY, function(b) {
                    var d = a(b.target);
                    if (!d.is(q.VIEW_DAY_LINK)) {
                        var e = a(this).attr("data-new-event-timestamp");
                        c.then(function(a) {
                            var b = d.closest(p.wrapper);
                            a.setCourseId(b.data("courseid"));
                            var c = b.data("categoryid");
                            if ("undefined" != typeof c) {
                                a.setCategoryId(c)
                            }
                            a.setContextId(b.data("contextId"));
                            a.setStartTime(e);
                            a.show()
                        }).fail(f.exception);
                        b.preventDefault()
                    }
                })
            }
        };
    return {
        init: function init(b) {
            b = a(b);
            n.init(b);
            t(b)
        }
    }
});
define("core_calendar/events", [], function() {
    return {
        created: "calendar-events:created",
        deleted: "calendar-events:deleted",
        deleteAll: "calendar-events:delete_all",
        updated: "calendar-events:updated",
        editEvent: "calendar-events:edit_event",
        editActionEvent: "calendar-events:edit_action_event",
        eventMoved: "calendar-events:event_moved",
        dayChanged: "calendar-events:day_changed",
        monthChanged: "calendar-events:month_changed",
        moveEvent: "calendar-events:move_event",
        filterChanged: "calendar-events:filter_changed",
        viewUpdated: "calendar-events:view_updated"
    }
});
define("core_calendar/drag_drop_data_store", [], function() {
    var a = null,
        b = null,
        c = null,
        d = null,
        e = null,
        f = null,
        g = function(b) {
            a = b
        },
        h = function() {
            return a
        },
        i = function() {
            return null !== a
        },
        j = function(a) {
            b = a
        },
        k = function() {
            return b
        },
        l = function(a) {
            c = a
        },
        m = function() {
            return c
        },
        n = function() {
            return null !== c
        },
        o = function(a) {
            d = a
        },
        p = function() {
            return d
        },
        q = function() {
            return null !== d
        },
        r = function(a) {
            e = a
        },
        s = function() {
            return e
        },
        t = function(a) {
            f = a
        },
        u = function() {
            return f
        };
    return {
        setEventId: g,
        getEventId: h,
        hasEventId: i,
        setDurationDays: j,
        getDurationDays: k,
        setMinTimestart: l,
        getMinTimestart: m,
        hasMinTimestart: n,
        setMaxTimestart: o,
        getMaxTimestart: p,
        hasMaxTimestart: q,
        setMinError: r,
        getMinError: s,
        setMaxError: t,
        getMaxError: u,
        clearAll: function clearAll() {
            g(null);
            j(null);
            l(null);
            o(null);
            r(null);
            t(null)
        }
    }
});
define("core_calendar/modal_event_form", ["jquery", "core/event", "core/str", "core/notification", "core/templates", "core/custom_interaction_events", "core/modal", "core/modal_registry", "core/fragment", "core_calendar/events", "core_calendar/repository"], function(a, b, c, d, e, f, g, h, i, j, k) {
    var l = !1,
        m = {
            SAVE_BUTTON: "[data-action=\"save\"]",
            LOADING_ICON_CONTAINER: "[data-region=\"loading-icon-container\"]"
        },
        n = function(a) {
            g.call(this, a);
            this.eventId = null;
            this.startTime = null;
            this.courseId = null;
            this.categoryId = null;
            this.contextId = null;
            this.reloadingBody = !1;
            this.reloadingTitle = !1;
            this.saveButton = this.getFooter().find(m.SAVE_BUTTON)
        };
    n.TYPE = "core_calendar-modal_event_form";
    n.prototype = Object.create(g.prototype);
    n.prototype.constructor = n;
    n.prototype.setContextId = function(a) {
        this.contextId = a
    };
    n.prototype.getContextId = function() {
        return this.contextId
    };
    n.prototype.setCourseId = function(a) {
        this.courseId = a
    };
    n.prototype.getCourseId = function() {
        return this.courseId
    };
    n.prototype.setCategoryId = function(a) {
        this.categoryId = a
    };
    n.prototype.getCategoryId = function() {
        return this.categoryId
    };
    n.prototype.hasCourseId = function() {
        return null !== this.courseId
    };
    n.prototype.hasCategoryId = function() {
        return null !== this.categoryId
    };
    n.prototype.setEventId = function(a) {
        this.eventId = a
    };
    n.prototype.getEventId = function() {
        return this.eventId
    };
    n.prototype.hasEventId = function() {
        return null !== this.eventId
    };
    n.prototype.setStartTime = function(a) {
        this.startTime = a
    };
    n.prototype.getStartTime = function() {
        return this.startTime
    };
    n.prototype.hasStartTime = function() {
        return null !== this.startTime
    };
    n.prototype.getForm = function() {
        return this.getBody().find("form")
    };
    n.prototype.disableButtons = function() {
        this.saveButton.prop("disabled", !0)
    };
    n.prototype.enableButtons = function() {
        this.saveButton.prop("disabled", !1)
    };
    n.prototype.reloadTitleContent = function() {
        if (this.reloadingTitle) {
            return this.titlePromise
        }
        this.reloadingTitle = !0;
        if (this.hasEventId()) {
            this.titlePromise = c.get_string("editevent", "calendar")
        } else {
            this.titlePromise = c.get_string("newevent", "calendar")
        }
        this.titlePromise.then(function(a) {
            this.setTitle(a);
            return a
        }.bind(this)).always(function() {
            this.reloadingTitle = !1
        }.bind(this)).fail(d.exception);
        return this.titlePromise
    };
    n.prototype.reloadBodyContent = function(a) {
        if (this.reloadingBody) {
            return this.bodyPromise
        }
        this.reloadingBody = !0;
        this.disableButtons();
        var b = {};
        if (this.hasEventId()) {
            b.eventid = this.getEventId()
        }
        if (this.hasStartTime()) {
            b.starttime = this.getStartTime()
        }
        if (this.hasCourseId()) {
            b.courseid = this.getCourseId()
        }
        if (this.hasCategoryId()) {
            b.categoryid = this.getCategoryId()
        }
        if ("undefined" != typeof a) {
            b.formdata = a
        }
        this.bodyPromise = i.loadFragment("calendar", "event_form", this.getContextId(), b);
        this.setBody(this.bodyPromise);
        this.bodyPromise.then(function() {
            this.enableButtons()
        }.bind(this)).fail(d.exception).always(function() {
            this.reloadingBody = !1
        }.bind(this)).fail(d.exception);
        return this.bodyPromise
    };
    n.prototype.reloadAllContent = function() {
        return a.when(this.reloadTitleContent(), this.reloadBodyContent())
    };
    n.prototype.show = function() {
        this.reloadAllContent();
        g.prototype.show.call(this)
    };
    n.prototype.hide = function() {
        g.prototype.hide.call(this);
        this.setEventId(null);
        this.setStartTime(null);
        this.setCourseId(null);
        this.setCategoryId(null)
    };
    n.prototype.getFormData = function() {
        return this.getForm().serialize()
    };
    n.prototype.save = function() {
        var b, c = this.saveButton.find(m.LOADING_ICON_CONTAINER);
        b = this.getForm().find("[aria-invalid=\"true\"]");
        if (b.length) {
            b.first().focus();
            return
        }
        c.removeClass("hidden");
        this.disableButtons();
        var e = this.getFormData();
        return k.submitCreateUpdateForm(e).then(function(b) {
            if (b.validationerror) {
                this.reloadBodyContent(e)
            } else {
                var c = this.hasEventId();
                this.hide();
                if (c) {
                    a("body").trigger(j.updated, [b.event])
                } else {
                    a("body").trigger(j.created, [b.event])
                }
            }
        }.bind(this)).always(function() {
            c.addClass("hidden");
            this.enableButtons()
        }.bind(this)).fail(d.exception)
    };
    n.prototype.registerEventListeners = function() {
        g.prototype.registerEventListeners.call(this);
        this.getModal().on(f.events.activate, m.SAVE_BUTTON, function(a, b) {
            this.getForm().submit();
            b.originalEvent.preventDefault();
            a.stopPropagation()
        }.bind(this));
        this.getModal().on("submit", function(a) {
            b.notifyFormSubmitAjax(this.getForm()[0]);
            this.save();
            a.preventDefault();
            a.stopPropagation()
        }.bind(this))
    };
    if (!l) {
        h.register(n.TYPE, n, "calendar/modal_event_form");
        l = !0
    }
    return n
});
define("core_calendar/crud", ["jquery", "core/str", "core/notification", "core/custom_interaction_events", "core/modal", "core/modal_registry", "core/modal_factory", "core/modal_events", "core_calendar/modal_event_form", "core_calendar/repository", "core_calendar/events", "core_calendar/modal_delete", "core_calendar/selectors", "core/pending"], function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    function o(d, e, f) {
        var i = [{
            key: "deleteevent",
            component: "calendar"
        }];
        f = parseInt(f, 10);
        var m, o = 1 < f;
        if (o) {
            i.push({
                key: "confirmeventseriesdelete",
                component: "calendar",
                param: {
                    name: e,
                    count: f
                }
            });
            m = g.create({
                type: l.TYPE
            })
        } else {
            i.push({
                key: "confirmeventdelete",
                component: "calendar",
                param: e
            });
            m = g.create({
                type: g.types.SAVE_CANCEL
            })
        }
        var p = b.get_strings(i),
            q = a.when(p, m).then(function(b, e) {
                e.setTitle(b[0]);
                e.setBody(b[1]);
                if (!o) {
                    e.setSaveButtonText(b[0])
                }
                e.show();
                e.getRoot().on(h.save, function() {
                    var b = new n("calendar/crud:initModal:deletedevent");
                    j.deleteEvent(d, !1).then(function() {
                        a("body").trigger(k.deleted, [d, !1])
                    }).then(b.resolve).catch(c.exception)
                });
                e.getRoot().on(k.deleteAll, function() {
                    var b = new n("calendar/crud:initModal:deletedallevent");
                    j.deleteEvent(d, !0).then(function() {
                        a("body").trigger(k.deleted, [d, !0])
                    }).then(b.resolve).catch(c.exception)
                });
                return e
            }).catch(c.exception);
        return q
    }
    return {
        registerRemove: function(b) {
            b.on("click", m.actions.remove, function(b) {
                var c = a(this).closest(m.eventItem),
                    d = c.data("eventId"),
                    e = c.data("eventTitle"),
                    f = c.data("eventCount");
                o(d, e, f);
                b.preventDefault()
            })
        },
        registerEditListeners: function(b, d) {
            d.then(function(c) {
                a("body").on(k.editEvent, function(a, d) {
                    var e = b.find(m.wrapper);
                    c.setEventId(d);
                    c.setContextId(e.data("contextId"));
                    c.show();
                    a.stopImmediatePropagation()
                })
            }).fail(c.exception);
            return d
        },
        registerEventFormModal: function registerEventFormModal(b) {
            var d = g.create({
                type: i.TYPE,
                large: !0
            });
            b.on("click", m.actions.create, function(a) {
                d.then(function(a) {
                    var c = b.find(m.wrapper),
                        d = c.data("categoryid");
                    if ("undefined" != typeof d) {
                        a.setCategoryId(d)
                    }
                    var e = b.find(m.today),
                        f = b.find(m.day);
                    if (!e.length && f.length) {
                        a.setStartTime(f.data("newEventTimestamp"))
                    }
                    a.setContextId(c.data("contextId"));
                    a.setCourseId(c.data("courseid"));
                    a.show()
                }).fail(c.exception);
                a.preventDefault()
            });
            b.on("click", m.actions.edit, function(b) {
                b.preventDefault();
                var e = a(b.currentTarget),
                    f = e.closest(m.wrapper),
                    g = e.closest(m.eventItem);
                d.then(function(a) {
                    a.setEventId(g.data("eventId"));
                    a.setContextId(f.data("contextId"));
                    a.show();
                    b.stopImmediatePropagation()
                }).fail(c.exception)
            });
            return d
        }
    }
});
define("core_calendar/modal_delete", ["jquery", "core/notification", "core/custom_interaction_events", "core/modal", "core/modal_events", "core/modal_registry", "core_calendar/events"], function(a, b, c, d, f, g, h) {
    var i = !1,
        j = {
            DELETE_ONE_BUTTON: "[data-action=\"deleteone\"]",
            DELETE_ALL_BUTTON: "[data-action=\"deleteall\"]",
            CANCEL_BUTTON: "[data-action=\"cancel\"]"
        },
        k = function(a) {
            d.call(this, a)
        };
    k.TYPE = "core_calendar-modal_delete";
    k.prototype = Object.create(d.prototype);
    k.prototype.constructor = k;
    k.prototype.registerEventListeners = function() {
        d.prototype.registerEventListeners.call(this);
        this.getModal().on(c.events.activate, j.DELETE_ONE_BUTTON, function(b, c) {
            var d = a.Event(f.save);
            this.getRoot().trigger(d, this);
            if (!d.isDefaultPrevented()) {
                this.hide();
                c.originalEvent.preventDefault()
            }
        }.bind(this));
        this.getModal().on(c.events.activate, j.DELETE_ALL_BUTTON, function(b, c) {
            var d = a.Event(h.deleteAll);
            this.getRoot().trigger(d, this);
            if (!d.isDefaultPrevented()) {
                this.hide();
                c.originalEvent.preventDefault()
            }
        }.bind(this));
        this.getModal().on(c.events.activate, j.CANCEL_BUTTON, function(b, c) {
            var d = a.Event(f.cancel);
            this.getRoot().trigger(d, this);
            if (!d.isDefaultPrevented()) {
                this.hide();
                c.originalEvent.preventDefault()
            }
        }.bind(this))
    };
    if (!i) {
        g.register(k.TYPE, k, "calendar/event_delete_modal");
        i = !0
    }
    return k
});
define("core_calendar/summary_modal", ["jquery", "core/str", "core/notification", "core/custom_interaction_events", "core/modal", "core/modal_registry", "core/modal_factory", "core/modal_events", "core_calendar/repository", "core_calendar/events", "core_calendar/crud"], function(a, b, c, d, e, f, g, h, i, j, k) {
    var l = !1,
        m = {
            ROOT: "[data-region='summary-modal-container']",
            EDIT_BUTTON: "[data-action=\"edit\"]",
            DELETE_BUTTON: "[data-action=\"delete\"]"
        },
        n = function(a) {
            e.call(this, a)
        };
    n.TYPE = "core_calendar-event_summary";
    n.prototype = Object.create(e.prototype);
    n.prototype.constructor = n;
    n.prototype.getEditButton = function() {
        if ("undefined" == typeof this.editButton) {
            this.editButton = this.getFooter().find(m.EDIT_BUTTON)
        }
        return this.editButton
    };
    n.prototype.getDeleteButton = function() {
        if ("undefined" == typeof this.deleteButton) {
            this.deleteButton = this.getFooter().find(m.DELETE_BUTTON)
        }
        return this.deleteButton
    };
    n.prototype.getEventId = function() {
        return this.getBody().find(m.ROOT).attr("data-event-id")
    };
    n.prototype.getEventTitle = function() {
        return this.getBody().find(m.ROOT).attr("data-event-title")
    };
    n.prototype.getEventCount = function() {
        return this.getBody().find(m.ROOT).attr("data-event-count")
    };
    n.prototype.getEditUrl = function() {
        return this.getBody().find(m.ROOT).attr("data-edit-url")
    };
    n.prototype.isActionEvent = function() {
        return "true" == this.getBody().find(m.ROOT).attr("data-action-event")
    };
    n.prototype.registerEventListeners = function() {
        e.prototype.registerEventListeners.call(this);
        this.getRoot().on(h.bodyRendered, function() {
            this.getModal().data({
                eventTitle: this.getEventTitle(),
                eventId: this.getEventId(),
                eventCount: this.getEventCount()
            }).attr("data-type", "event");
            k.registerRemove(this.getModal())
        }.bind(this));
        a("body").on(j.deleted, function() {
            this.hide()
        }.bind(this));
        d.define(this.getEditButton(), [d.events.activate]);
        this.getEditButton().on(d.events.activate, function(b, c) {
            if (this.isActionEvent()) {
                a("body").trigger(j.editActionEvent, [this.getEditUrl()])
            } else {
                a("body").trigger(j.editEvent, [this.getEventId()])
            }
            this.hide();
            b.preventDefault();
            b.stopPropagation();
            c.originalEvent.preventDefault();
            c.originalEvent.stopPropagation()
        }.bind(this))
    };
    if (!l) {
        f.register(n.TYPE, n, "core_calendar/event_summary_modal");
        l = !0
    }
    return n
});
define("core_calendar/calendar_filter", ["jquery", "core_calendar/selectors", "core_calendar/events", "core/str", "core/templates"], function(a, b, c, d, e) {
    var f = function(d) {
            d.on("click", b.eventFilterItem, function(b) {
                var c = a(b.currentTarget);
                g(c);
                b.preventDefault()
            });
            a("body").on(c.viewUpdated, function() {
                var c = d.find(b.eventFilterItem);
                c.each(function(b, c) {
                    c = a(c);
                    if (c.data("eventtype-hidden")) {
                        var d = i(c);
                        h(d)
                    }
                })
            })
        },
        g = function(a) {
            var b = i(a);
            b.hidden = !b.hidden;
            return d.get_string("eventtype" + b.eventtype, "calendar").then(function(a) {
                b.name = a;
                b.icon = !0;
                b.key = "i/" + b.eventtype + "event";
                b.component = "core";
                return b
            }).then(function(a) {
                return e.render("core_calendar/event_filter_key", a)
            }).then(function(b, c) {
                return e.replaceNode(a, b, c)
            }).then(function() {
                h(b)
            })
        },
        h = function(b) {
            M.util.js_pending("month-mini-filterChanged");
            a("body").trigger(c.filterChanged, {
                type: b.eventtype,
                hidden: b.hidden
            });
            M.util.js_complete("month-mini-filterChanged")
        },
        i = function(a) {
            return {
                eventtype: a.data("eventtype"),
                hidden: a.data("eventtype-hidden")
            }
        };
    return {
        init: function init(b) {
            b = a(b);
            f(b)
        }
    }
});
define("core_calendar/month_navigation_drag_drop", ["jquery", "core_calendar/drag_drop_data_store"], function(a, b) {
    var c = {
            DRAGGABLE: "[draggable=\"true\"][data-region=\"event-item\"]",
            DROP_ZONE: "[data-drop-zone=\"nav-link\"]"
        },
        d = "bg-primary text-white",
        e = "drop-target",
        f = !1,
        g = null,
        h = null,
        i = function(a, b) {
            if (b) {
                a.addClass(d)
            } else {
                a.removeClass(d)
            }
        },
        j = function() {
            h.find(c.DROP_ZONE).addClass(e)
        },
        k = function() {
            h.find(c.DROP_ZONE).removeClass(e)
        },
        l = function(b) {
            var d = a(b.target).closest(c.DROP_ZONE);
            return d.length ? d : null
        },
        m = function(b) {
            var d = a(b.target).closest(c.DRAGGABLE);
            if (d.length) {
                j()
            }
        },
        n = function(a) {
            if (!b.hasEventId()) {
                return
            }
            a.preventDefault();
            var c = l(a);
            if (!c) {
                return
            }
            if (!b.hasEventId()) {
                return
            }
            if (!g) {
                g = setTimeout(function() {
                    c.click();
                    g = null
                }, 1e3)
            }
            i(c, !0);
            k()
        },
        o = function(a) {
            if (!b.hasEventId()) {
                return
            }
            var c = l(a);
            if (!c) {
                return
            }
            if (g) {
                clearTimeout(g);
                g = null
            }
            i(c, !1);
            j();
            a.preventDefault()
        },
        p = function(a) {
            if (!b.hasEventId()) {
                return
            }
            k();
            var c = l(a);
            if (!c) {
                return
            }
            i(c, !1);
            a.preventDefault()
        };
    return {
        init: function init(c) {
            if (!f) {
                document.addEventListener("dragstart", m, !1);
                document.addEventListener("dragover", n, !1);
                document.addEventListener("dragleave", o, !1);
                document.addEventListener("drop", p, !1);
                document.addEventListener("dragend", k, !1);
                f = !0
            }
            h = a(c);
            if (b.hasEventId()) {
                j()
            }
        }
    }
});
define("core_calendar/view_manager", ["jquery", "core/templates", "core/str", "core/notification", "core_calendar/repository", "core_calendar/events", "core_calendar/selectors", "core/modal_factory", "core/modal_events", "core_calendar/summary_modal", "core/custom_interaction_events"], function(a, b, c, d, e, f, g, h, i, j, k) {
    var l = function(b) {
            b = a(b);
            b.on("click", g.links.eventLink, function(b) {
                var c = a(b.target),
                    d = null,
                    e;
                if (c.is(g.actions.viewEvent)) {
                    e = c
                } else {
                    e = c.closest(g.actions.viewEvent)
                }
                if (e.length) {
                    d = e.data("eventId")
                } else {
                    d = c.find(g.actions.viewEvent).data("eventId")
                }
                if (d) {
                    b.preventDefault();
                    b.stopPropagation();
                    u(d)
                }
            });
            b.on("click", g.links.navLink, function(c) {
                var d = b.find(g.wrapper),
                    e = d.data("view"),
                    f = d.data("courseid"),
                    h = d.data("categoryid"),
                    i = a(c.currentTarget);
                if ("month" === e) {
                    n(b, i.attr("href"), i.data("year"), i.data("month"), f, h, i.data("day"));
                    c.preventDefault()
                } else if ("day" === e) {
                    p(b, i.attr("href"), i.data("year"), i.data("month"), i.data("day"), f, h);
                    c.preventDefault()
                }
            });
            var c = b.find(g.viewSelector);
            k.define(c, [k.events.activate]);
            c.on(k.events.activate, function(c) {
                c.preventDefault();
                var e = a(c.target);
                if (e.hasClass("active")) {
                    return
                }
                var f = e.data("view"),
                    g = e.data("year"),
                    h = e.data("month"),
                    i = e.data("day"),
                    j = e.data("courseid"),
                    k = e.data("categoryid");
                if ("month" == f) {
                    m(b, g, h, j, k, b, "core_calendar/calendar_month", i).then(function() {
                        return window.history.pushState({}, "", "?view=month")
                    }).fail(d.exception)
                } else if ("day" == f) {
                    o(b, g, h, i, j, k, b, "core_calendar/calendar_day").then(function() {
                        return window.history.pushState({}, "", "?view=day")
                    }).fail(d.exception)
                } else if ("upcoming" == f) {
                    s(b, j, k, b, "core_calendar/calendar_upcoming").then(function() {
                        return window.history.pushState({}, "", "?view=upcoming")
                    }).fail(d.exception)
                }
            })
        },
        m = function(c, h, i, j, k, l, m, n) {
            q(c);
            l = l || c.find(g.wrapper);
            m = m || c.attr("data-template");
            n = n || 1;
            M.util.js_pending([c.get("id"), h, i, j].join("-"));
            var o = c.data("includenavigation"),
                p = c.data("mini");
            return e.getCalendarMonthData(h, i, j, k, o, p, n).then(function(a) {
                a.viewingmonth = !0;
                return b.render(m, a)
            }).then(function(a, c) {
                return b.replaceNode(l, a, c)
            }).then(function() {
                a("body").trigger(f.viewUpdated)
            }).always(function() {
                M.util.js_complete([c.get("id"), h, i, j].join("-"));
                return r(c)
            }).fail(d.exception)
        },
        n = function(b, c, d, e, g, h, i) {
            i = i || 1;
            return m(b, d, e, g, h, null, null, i).then(function() {
                if (c.length && "#" !== c) {
                    window.history.pushState({}, "", c)
                }
                return arguments
            }).then(function() {
                a("body").trigger(f.monthChanged, [d, e, g, h]);
                return arguments
            })
        },
        o = function(c, h, i, j, k, l, m, n) {
            q(c);
            m = m || c.find(g.wrapper);
            n = n || c.attr("data-template");
            M.util.js_pending([c.get("id"), h, i, j, k, l].join("-"));
            var o = c.data("includenavigation");
            return e.getCalendarDayData(h, i, j, k, l, o).then(function(a) {
                a.viewingday = !0;
                return b.render(n, a)
            }).then(function(a, c) {
                return b.replaceNode(m, a, c)
            }).then(function() {
                a("body").trigger(f.viewUpdated)
            }).always(function() {
                M.util.js_complete([c.get("id"), h, i, j, k, l].join("-"));
                return r(c)
            }).fail(d.exception)
        },
        p = function(b, c, d, e, g, h, i) {
            return o(b, d, e, g, h, i).then(function() {
                if (c.length && "#" !== c) {
                    window.history.pushState({}, "", c)
                }
                return arguments
            }).then(function() {
                a("body").trigger(f.dayChanged, [d, e, h, i]);
                return arguments
            })
        },
        q = function(a) {
            var b = a.find(g.containers.loadingIcon);
            b.removeClass("hidden")
        },
        r = function(a) {
            var b = a.find(g.containers.loadingIcon);
            b.addClass("hidden")
        },
        s = function(c, h, i, j, k) {
            q(c);
            j = j || c.find(g.wrapper);
            k = k || c.attr("data-template");
            if ("undefined" == typeof h) {
                h = c.find(g.wrapper).data("courseid")
            }
            if ("undefined" == typeof i) {
                i = c.find(g.wrapper).data("categoryid")
            }
            return e.getCalendarUpcomingData(h, i).then(function(a) {
                a.viewingupcoming = !0;
                return b.render(k, a)
            }).then(function(a, c) {
                return b.replaceNode(j, a, c)
            }).then(function() {
                a("body").trigger(f.viewUpdated)
            }).always(function() {
                return r(c)
            }).fail(d.exception)
        },
        t = function(a) {
            return "calendar_event_" + a
        },
        u = function(a) {
            var c = "";
            e.getEventById(a).then(function(b) {
                if (!b.event) {
                    throw new Error("Error encountered while trying to fetch calendar event with ID: " + a)
                }
                var d = b.event;
                c = t(d.normalisedeventtype);
                return d
            }).then(function(a) {
                var d = {
                    title: a.name,
                    type: j.TYPE,
                    body: b.render("core_calendar/event_summary_body", a),
                    templateContext: {
                        canedit: a.canedit,
                        candelete: a.candelete,
                        headerclasses: c,
                        isactionevent: a.isactionevent,
                        url: a.url
                    }
                };
                return h.create(d)
            }).done(function(a) {
                a.getRoot().on(i.hidden, function() {
                    a.destroy()
                });
                a.show()
            }).fail(d.exception)
        };
    return {
        init: function init(a, b) {
            l(a, b)
        },
        reloadCurrentMonth: function reloadCurrentMonth(a, b, c) {
            var d = a.find(g.wrapper).data("year"),
                e = a.find(g.wrapper).data("month"),
                f = a.find(g.wrapper).data("day");
            if ("undefined" == typeof b) {
                b = a.find(g.wrapper).data("courseid")
            }
            if ("undefined" == typeof c) {
                c = a.find(g.wrapper).data("categoryid")
            }
            return m(a, d, e, b, c, null, null, f)
        },
        changeMonth: n,
        refreshMonthContent: m,
        reloadCurrentDay: function reloadCurrentDay(a, b, c) {
            var d = a.find(g.wrapper),
                e = d.data("year"),
                f = d.data("month"),
                h = d.data("day");
            if (!b) {
                b = a.find(g.wrapper).data("courseid")
            }
            if ("undefined" == typeof c) {
                c = a.find(g.wrapper).data("categoryid")
            }
            return o(a, e, f, h, b, c)
        },
        changeDay: p,
        refreshDayContent: o,
        reloadCurrentUpcoming: s
    }
});
define("core_calendar/month_view_drag_drop", ["jquery", "core/notification", "core/str", "core_calendar/events", "core_calendar/drag_drop_data_store"], function(a, b, c, d, f) {
    var g = {
            ROOT: "[data-region='calendar']",
            DRAGGABLE: "[draggable=\"true\"][data-region=\"event-item\"]",
            DROP_ZONE: "[data-drop-zone=\"month-view-day\"]",
            WEEK: "[data-region=\"month-view-week\"]"
        },
        h = "bg-faded",
        i = "bg-danger text-white",
        j = "bg-primary text-white",
        k = h + " " + i + " " + j,
        l = !1,
        m = function(b) {
            var c = a(b.target).closest(g.DROP_ZONE);
            return c.length ? c : null
        },
        n = function(a) {
            var b = a.attr("data-day-timestamp"),
                c = f.getMinTimestart(),
                d = f.getMaxTimestart();
            if (c && c > b) {
                return !1
            }
            if (d && d < b) {
                return !1
            }
            return !0
        },
        o = function(a) {
            var b = a.attr("data-day-timestamp"),
                c = f.getMinTimestart(),
                d = f.getMaxTimestart();
            if (c && c > b) {
                return f.getMinError()
            }
            if (d && d < b) {
                return f.getMaxError()
            }
            return null
        },
        p = function() {
            a(g.ROOT).find(g.DROP_ZONE).each(function(b, c) {
                c = a(c);
                c.removeClass(k)
            })
        },
        q = function(a, b, c) {
            if ("undefined" == typeof c) {
                c = f.getDurationDays()
            }
            var d = n(a);
            a.removeClass(k);
            if (b) {
                if (d) {
                    a.addClass(j)
                } else {
                    a.addClass(i)
                }
            } else {
                a.removeClass(j + " " + i);
                if (!d) {
                    a.addClass(h)
                }
            }
            c--;
            if (0 < c) {
                var e = a.next();
                if (!e.length) {
                    var l = a.closest(g.WEEK).next();
                    if (l.length) {
                        e = l.children(g.DROP_ZONE).first()
                    }
                }
                if (e.length) {
                    q(e, b, c)
                }
            }
        },
        r = function() {
            a(g.ROOT).find(g.DROP_ZONE).each(function(b, c) {
                c = a(c);
                if (!n(c)) {
                    q(c, !1)
                }
            })
        },
        s = function(b) {
            var c = a(b.target),
                d = c.closest(g.DRAGGABLE);
            if (!d.length) {
                return
            }
            var e = d.find("[data-event-id]"),
                h = e.attr("data-event-id"),
                i = d.attr("data-min-day-timestamp"),
                j = d.attr("data-max-day-timestamp"),
                k = d.attr("data-min-day-error"),
                l = d.attr("data-max-day-error"),
                m = g.ROOT + " [data-event-id=\"" + h + "\"]",
                n = a(m).length;
            f.setEventId(h);
            f.setDurationDays(n);
            if (i) {
                f.setMinTimestart(i)
            }
            if (j) {
                f.setMaxTimestart(j)
            }
            if (k) {
                f.setMinError(k)
            }
            if (l) {
                f.setMaxError(l)
            }
            b.dataTransfer.effectAllowed = "move";
            b.dataTransfer.dropEffect = "move";
            b.dataTransfer.setData("text/plain", h);
            b.dropEffect = "move";
            r()
        },
        t = function(a) {
            if (!f.hasEventId()) {
                return
            }
            a.preventDefault();
            var b = m(a);
            if (!b) {
                return
            }
            q(b, !0)
        },
        u = function(a) {
            if (!f.hasEventId()) {
                return
            }
            var b = m(a);
            if (!b) {
                return
            }
            q(b, !1);
            a.preventDefault()
        },
        v = function(h) {
            if (!f.hasEventId()) {
                return
            }
            var e = m(h);
            if (!e) {
                f.clearAll();
                p();
                return
            }
            if (n(e)) {
                var i = f.getEventId(),
                    j = g.ROOT + " [data-event-id=\"" + i + "\"]",
                    k = a(j),
                    l = null;
                if (k.length) {
                    l = k.closest(g.DROP_ZONE)
                }
                a("body").trigger(d.moveEvent, [i, l, e])
            } else {
                var q = o(e);
                c.get_string("errorinvaliddate", "calendar").then(function(a) {
                    b.exception({
                        name: a,
                        message: q || a
                    })
                })
            }
            f.clearAll();
            p();
            h.preventDefault()
        },
        w = function() {
            f.clearAll();
            p()
        },
        x = function() {
            r()
        };
    return {
        init: function init() {
            if (!l) {
                document.addEventListener("dragstart", s, !1);
                document.addEventListener("dragover", t, !1);
                document.addEventListener("dragleave", u, !1);
                document.addEventListener("drop", v, !1);
                document.addEventListener("dragend", w, !1);
                a("body").on(d.monthChanged, x);
                l = !0
            }
        }
    }
});
define("core_calendar/event_form", ["jquery", "core_calendar/repository"], function(a, b) {
    var c = {
            EVENT_GROUP_COURSE_ID: "[name=\"groupcourseid\"]",
            EVENT_GROUP_ID: "[name=\"groupid\"]",
            SELECT_OPTION: "option"
        },
        d = function(d) {
            var e = d.find(c.EVENT_GROUP_COURSE_ID),
                f = function(b) {
                    var e = d.find(c.EVENT_GROUP_ID),
                        f = e.find(c.SELECT_OPTION),
                        g = a(b);
                    f.remove();
                    e.prop("disabled", !1);
                    g.each(function(b, c) {
                        a(e).append(a("<option></option>").attr("value", c.id).text(c.name))
                    })
                };
            e.on("change", function() {
                var a = d.find(c.EVENT_GROUP_COURSE_ID).val();
                b.getCourseGroupsData(a).then(function(a) {
                    return f(a)
                }).catch(Notification.exception)
            })
        };
    return {
        init: function init(b) {
            var c = a("#" + b);
            d(c)
        }
    }
});
define("core_calendar/calendar_threemonth", ["jquery", "core/notification", "core_calendar/selectors", "core_calendar/events", "core/templates", "core_calendar/view_manager"], function(a, b, c, d, e, f) {
    var g = function(g) {
        var h = a("body");
        h.on([d.monthChanged, d.dayChanged].join(" "), function(a, c, d, e, f) {
            g.queue(function(g) {
                return i(a, c, d, e, f).then(function() {
                    return g()
                }).fail(b.exception)
            })
        });
        var i = function(b, d, e, h, i) {
            var j = g.find("[data-year=\"" + d + "\"][data-month=\"" + e + "\"]"),
                k = j.closest(c.calendarPeriods.month),
                l = g.find(c.calendarPeriods.month),
                m = a(l[0]),
                n = a(l[2]),
                o = a("<span>");
            o.attr("data-template", "core_calendar/threemonth_month");
            o.attr("data-includenavigation", !1);
            o.attr("data-mini", !0);
            var p = a("<div>");
            p.hide();
            p.append(o);
            var q, r, s;
            if (k.is(m)) {
                p.insertBefore(m);
                q = m.data("previousYear");
                r = m.data("previousMonth");
                s = n
            } else if (k.is(n)) {
                p.insertAfter(n);
                q = n.data("nextYear");
                r = n.data("nextMonth");
                s = m
            } else {
                return a.Deferred().resolve()
            }
            return f.refreshMonthContent(o, q, r, h, i, o).then(function() {
                var b = a.Deferred(),
                    c = a.Deferred();
                s.slideUp("fast", function() {
                    a(this).remove();
                    b.resolve()
                });
                p.slideDown("fast", function() {
                    c.resolve()
                });
                return a.when(b, c)
            })
        };
        g.on("click", c.links.miniDayLink, function(b) {
            var d = a(b.target),
                e = d.data("year"),
                g = d.data("month"),
                h = d.text(),
                i = d.data("courseid"),
                j = d.data("categoryid"),
                k = a("body").find(c.calendarMain);
            f.refreshDayContent(k, e, g, h, i, j, k, "core_calendar/calendar_day");
            b.preventDefault();
            window.history.pushState({}, "", "?view=day")
        })
    };
    return {
        init: function init(b) {
            b = a(b);
            g(b)
        }
    }
});
define("core_calendar/calendar_view", ["jquery", "core/str", "core/notification", "core_calendar/selectors", "core_calendar/events", "core_calendar/view_manager", "core_calendar/repository", "core/modal_factory", "core_calendar/modal_event_form", "core/modal_events", "core_calendar/crud"], function(a, b, c, d, e, f, g, h, i, j, k) {
    var l = function(b, g) {
        var h = a("body");
        k.registerRemove(b);
        var i = "reloadCurrent" + g.charAt(0).toUpperCase() + g.slice(1);
        h.on(e.created, function() {
            f[i](b)
        });
        h.on(e.deleted, function() {
            f[i](b)
        });
        h.on(e.updated, function() {
            f[i](b)
        });
        b.on("change", d.courseSelector, function() {
            var e = a(this),
                g = e.val();
            f[i](b, g, null).then(function() {
                return b.find(d.courseSelector).val(g)
            }).then(function() {
                window.history.pushState({}, "", "?view=upcoming&course=" + g)
            }).fail(c.exception)
        });
        h.on(e.filterChanged, function(a, c) {
            var e = b.find(d.eventType[c.type]);
            if (!0 == c.hidden) {
                e.addClass("hidden")
            } else {
                e.removeClass("hidden")
            }
        });
        var j = k.registerEventFormModal(b);
        k.registerEditListeners(b, j)
    };
    return {
        init: function init(b, c) {
            b = a(b);
            f.init(b, c);
            l(b, c)
        }
    }
});
define("core_calendar/selectors", [], function() {
    return {
        eventFilterItem: "[data-action='filter-event-type']",
        eventType: {
            site: "[data-eventtype-site]",
            category: "[data-eventtype-category]",
            course: "[data-eventtype-course]",
            group: "[data-eventtype-group]",
            user: "[data-eventtype-user]"
        },
        popoverType: {
            site: "[data-popover-eventtype-site]",
            category: "[data-popover-eventtype-category]",
            course: "[data-popover-eventtype-course]",
            group: "[data-popover-eventtype-group]",
            user: "[data-popover-eventtype-user]"
        },
        calendarPeriods: {
            month: "[data-period='month']"
        },
        courseSelector: "select[name=\"course\"]",
        viewSelector: "div[data-region=\"view-selector\"]",
        actions: {
            create: "[data-action=\"new-event-button\"]",
            edit: "[data-action=\"edit\"]",
            remove: "[data-action=\"delete\"]",
            viewEvent: "[data-action=\"view-event\"]"
        },
        elements: {
            courseSelector: "select[name=\"course\"]"
        },
        today: ".today",
        day: "[data-region=\"day\"]",
        calendarMain: "[data-region=\"calendar\"]",
        wrapper: ".calendarwrapper",
        eventItem: "[data-type=\"event\"]",
        links: {
            navLink: ".calendarwrapper .arrow_link",
            eventLink: "[data-region='event-item']",
            miniDayLink: "[data-region='mini-day-link']"
        },
        containers: {
            loadingIcon: "[data-region=\"overlay-icon-container\"]"
        }
    }
});
define("core_calendar/calendar_mini", ["jquery", "core_calendar/selectors", "core_calendar/events", "core_calendar/view_manager"], function(a, b, c, d) {
    var e = function(b) {
            var d = a("body"),
                e = "." + b.attr("id");
            d.on(c.created + e, b, f);
            d.on(c.deleted + e, b, f);
            d.on(c.updated + e, b, f);
            d.on(c.eventMoved + e, b, f)
        },
        f = function(b) {
            var e = b.data,
                f = a("body"),
                g = "." + e.attr("id");
            if (e.is(":visible")) {
                d.reloadCurrentMonth(e)
            } else {
                f.off(c.created + g);
                f.off(c.deleted + g);
                f.off(c.updated + g);
                f.off(c.eventMoved + g)
            }
        },
        g = function(f) {
            a("body").on(c.filterChanged, function(a, c) {
                var d = f.find(b.eventType[c.type]);
                d.toggleClass("calendar_event_" + c.type, !c.hidden)
            });
            var g = "." + f.attr("id");
            a("body").on("change" + g, b.elements.courseSelector, function() {
                if (f.is(":visible")) {
                    var b = a(this),
                        c = b.val();
                    d.reloadCurrentMonth(f, c, null)
                } else {
                    a("body").off("change" + g)
                }
            })
        };
    return {
        init: function init(b, c) {
            b = a(b);
            d.init(b);
            g(b);
            e(b);
            if (c) {
                d.reloadCurrentMonth(b)
            }
        }
    }
});
define("core_calendar/repository", ["jquery", "core/ajax"], function(a, b) {
    return {
        getEventById: function getEventById(a) {
            return b.call([{
                methodname: "core_calendar_get_calendar_event_by_id",
                args: {
                    eventid: a
                }
            }])[0]
        },
        deleteEvent: function deleteEvent(a, c) {
            if ("undefined" == typeof c) {
                c = !1
            }
            var d = {
                methodname: "core_calendar_delete_calendar_events",
                args: {
                    events: [{
                        eventid: a,
                        repeat: c
                    }]
                }
            };
            return b.call([d])[0]
        },
        updateEventStartDay: function updateEventStartDay(a, c) {
            return b.call([{
                methodname: "core_calendar_update_event_start_day",
                args: {
                    eventid: a,
                    daytimestamp: c
                }
            }])[0]
        },
        submitCreateUpdateForm: function submitCreateUpdateForm(a) {
            return b.call([{
                methodname: "core_calendar_submit_create_update_form",
                args: {
                    formdata: a
                }
            }])[0]
        },
        getCalendarMonthData: function getCalendarMonthData(a, c, d, e, f, g, h) {
            h = h || 1;
            var i = {
                methodname: "core_calendar_get_calendar_monthly_view",
                args: {
                    year: a,
                    month: c,
                    courseid: d,
                    categoryid: e,
                    includenavigation: f,
                    mini: g,
                    day: h
                }
            };
            return b.call([i])[0]
        },
        getCalendarDayData: function getCalendarDayData(a, c, d, e, f) {
            return b.call([{
                methodname: "core_calendar_get_calendar_day_view",
                args: {
                    year: a,
                    month: c,
                    day: d,
                    courseid: e,
                    categoryid: f
                }
            }])[0]
        },
        getCalendarUpcomingData: function getCalendarUpcomingData(a, c) {
            return b.call([{
                methodname: "core_calendar_get_calendar_upcoming_view",
                args: {
                    courseid: a,
                    categoryid: c
                }
            }])[0]
        },
        getCourseGroupsData: function getCourseGroupsData(a) {
            return b.call([{
                methodname: "core_group_get_course_groups",
                args: {
                    courseid: a
                }
            }])[0]
        }
    }
});
define("core_course/sectionlistener", ["jquery"], function(a) {
    var b = function(a, b) {
        a.attr("aria-label", b);
        a.find(".hidden.sectionname").text(b)
    };
    a("body").on("updated", ".inplaceeditable", function processUpdatedEvent(c) {
        var d = a(this);
        if ("sectionname" === d.data("itemtype")) {
            var e = M.course.format.get_config(),
                f = d.closest("." + e.section_class);
            b(f, c.ajaxreturn.value)
        }
    })
});
define("core_course/events", [], function() {
    return {
        favourited: "core_course:favourited",
        unfavorited: "core_course:unfavorited"
    }
});
define("core_course/actions", ["jquery", "core/ajax", "core/templates", "core/notification", "core/str", "core/url", "core/yui", "core/modal_factory", "core/modal_events", "core/key_codes"], function(a, b, c, d, e, f, g, h, i, j) {
    var k = {
            EDITINPROGRESS: "editinprogress",
            SECTIONDRAGGABLE: "sectiondraggable",
            EDITINGMOVE: "editing_move"
        },
        l = {
            ACTIVITYLI: "li.activity",
            ACTIONAREA: ".actions",
            ACTIVITYACTION: "a.cm-edit-action",
            MENU: ".moodle-actionmenu[data-enhance=moodle-core-actionmenu]",
            TOGGLE: ".toggle-display,.dropdown-toggle",
            SECTIONLI: "li.section",
            SECTIONACTIONMENU: ".section_action_menu",
            ADDSECTIONS: "#changenumsections [data-add-sections]"
        };
    g.use("moodle-course-coursebase", function() {
        var a = M.course.format.get_section_selector();
        if (a) {
            l.SECTIONLI = a
        }
    });
    var m = function(a) {
            var b;
            g.use("moodle-course-util", function(c) {
                b = c.Moodle.core_course.util.cm.getId(c.Node(a.get(0)))
            });
            return b
        },
        n = function(a) {
            var b;
            g.use("moodle-course-util", function(c) {
                b = c.Moodle.core_course.util.cm.getName(c.Node(a.get(0)))
            });
            return b
        },
        o = function(a) {
            a.addClass(k.EDITINPROGRESS);
            var b = a.find(l.ACTIONAREA).get(0);
            if (b) {
                var c = M.util.add_spinner(g, g.Node(b));
                c.show();
                return c
            }
            return null
        },
        p = function(a) {
            a.addClass(k.EDITINPROGRESS);
            var b = a.find(l.SECTIONACTIONMENU).get(0);
            if (b) {
                var c = M.util.add_spinner(g, g.Node(b));
                c.show();
                return c
            }
            return null
        },
        q = function(a) {
            var b = M.util.add_lightbox(g, g.Node(a.get(0)));
            b.show();
            return b
        },
        r = function(a, b, c) {
            window.setTimeout(function() {
                a.removeClass(k.EDITINPROGRESS);
                if (b) {
                    b.hide()
                }
            }, c)
        },
        s = function(a, b) {
            if (a) {
                window.setTimeout(function() {
                    a.hide()
                }, b)
            }
        },
        t = function(a) {
            g.use("moodle-course-coursebase", function() {
                M.course.coursebase.invoke_function("setup_for_resource", "#" + a)
            });
            if (M.core.actionmenu && M.core.actionmenu.newDOMNode) {
                M.core.actionmenu.newDOMNode(g.one("#" + a))
            }
        },
        u = function(b, c) {
            var d = a("#" + b),
                e = "[data-action=" + c + "]";
            if ("groupsseparate" === c || "groupsvisible" === c || "groupsnone" === c) {
                e = "[data-action=groupsseparate],[data-action=groupsvisible],[data-action=groupsnone]"
            }
            if (d.find(e).is(":visible")) {
                d.find(e).focus()
            } else {
                d.find(l.MENU).find(l.TOGGLE).focus()
            }
        },
        v = function(b) {
            var c = a("a:visible"),
                d = !1,
                e = null;
            c.each(function() {
                if (a.contains(b[0], this)) {
                    d = !0
                } else if (d) {
                    e = this;
                    return !1
                }
            });
            return e
        },
        w = function(c, e, f) {
            var g = f.attr("data-action"),
                h = o(c),
                i = b.call([{
                    methodname: "core_course_edit_module",
                    args: {
                        id: e,
                        action: g,
                        sectionreturn: f.attr("data-sectionreturn") ? f.attr("data-sectionreturn") : 0
                    }
                }], !0),
                j;
            if ("duplicate" === g) {
                j = q(f.closest(l.SECTIONLI))
            }
            a.when.apply(a, i).done(function(b) {
                var d = v(c);
                c.replaceWith(b);
                a("<div>" + b + "</div>").find(l.ACTIVITYLI).each(function(b) {
                    t(a(this).attr("id"));
                    if (0 === b) {
                        u(a(this).attr("id"), g);
                        d = null
                    }
                });
                if (d) {
                    d.focus()
                }
                r(c, h, 400);
                s(j, 400);
                c.trigger(a.Event("coursemoduleedited", {
                    ajaxreturn: b,
                    action: g
                }))
            }).fail(function(b) {
                r(c, h);
                s(j);
                var f = a.Event("coursemoduleeditfailed", {
                    exception: b,
                    action: g
                });
                c.trigger(f);
                if (!f.isDefaultPrevented()) {
                    d.exception(b)
                }
            })
        },
        x = function(c, d, e) {
            var f = o(c),
                g = b.call([{
                    methodname: "core_course_get_module",
                    args: {
                        id: d,
                        sectionreturn: e
                    }
                }], !0);
            a.when.apply(a, g).done(function(a) {
                r(c, f, 400);
                C(a)
            }).fail(function() {
                r(c, f)
            })
        },
        y = function(a, b) {
            var c = a.attr("class").match(/modtype_([^\s]*)/)[1],
                f = n(a);
            e.get_string("pluginname", c).done(function(a) {
                e.get_strings([{
                    key: "confirm"
                }, {
                    key: null === f ? "deletechecktype" : "deletechecktypename",
                    param: {
                        type: a,
                        name: f
                    }
                }, {
                    key: "yes"
                }, {
                    key: "no"
                }]).done(function(a) {
                    d.confirm(a[0], a[1], a[2], a[3], b)
                })
            })
        },
        z = function(a, b) {
            e.get_strings([{
                key: "confirm"
            }, {
                key: "yes"
            }, {
                key: "no"
            }]).done(function(c) {
                d.confirm(c[0], a, c[1], c[2], b)
            })
        },
        A = function(a, b, f, g, h, i, j) {
            return e.get_strings([{
                key: f,
                component: g
            }]).then(function(d) {
                a.find("span.menu-action-text").html(d[0]);
                return c.renderPix(b, "core")
            }).then(function(b) {
                a.find(".icon").replaceWith(b);
                a.attr("data-action", j)
            }).catch(d.exception)
        },
        B = function(b, c, d, e) {
            var f = c.attr("data-action");
            if ("hide" === f || "show" === f) {
                if ("hide" === f) {
                    b.addClass("hidden");
                    A(c, "i/show", "showfromothers", "format_" + e, null, null, "show")
                } else {
                    b.removeClass("hidden");
                    A(c, "i/hide", "hidefromothers", "format_" + e, null, null, "hide")
                }
                if (d.modules !== void 0) {
                    for (var g in d.modules) {
                        C(d.modules[g])
                    }
                }
                if (d.section_availability !== void 0) {
                    b.find(".section_availability").first().replaceWith(d.section_availability)
                }
            } else if ("setmarker" === f) {
                var h = a(l.SECTIONLI + ".current"),
                    i = h.find(l.SECTIONACTIONMENU + " a[data-action=removemarker]");
                h.removeClass("current");
                A(i, "i/marker", "highlight", "core", "markthistopic", "core", "setmarker");
                b.addClass("current");
                A(c, "i/marked", "highlightoff", "core", "markedthistopic", "core", "removemarker")
            } else if ("removemarker" === f) {
                b.removeClass("current");
                A(c, "i/marker", "highlight", "core", "markthistopic", "core", "setmarker")
            }
        },
        C = function(b) {
            a("<div>" + b + "</div>").find(l.ACTIVITYLI).each(function() {
                var c = a(this).attr("id");
                a(l.ACTIVITYLI + "#" + c).replaceWith(b);
                t(c)
            })
        },
        D = function(c, e, f, g) {
            var h = f.attr("data-action"),
                i = f.attr("data-sectionreturn") ? f.attr("data-sectionreturn") : 0,
                j = p(c),
                k = b.call([{
                    methodname: "core_course_edit_section",
                    args: {
                        id: e,
                        action: h,
                        sectionreturn: i
                    }
                }], !0),
                m = q(c);
            a.when.apply(a, k).done(function(b) {
                var d = a.parseJSON(b);
                r(c, j);
                s(m);
                c.find(l.SECTIONACTIONMENU).find(l.TOGGLE).focus();
                var i = a.Event("coursesectionedited", {
                    ajaxreturn: d,
                    action: h
                });
                c.trigger(i);
                if (!i.isDefaultPrevented()) {
                    B(c, f, d, g)
                }
            }).fail(function(b) {
                r(c, j);
                s(m);
                var f = a.Event("coursesectioneditfailed", {
                    exception: b,
                    action: h
                });
                c.trigger(f);
                if (!f.isDefaultPrevented()) {
                    d.exception(b)
                }
            })
        };
    g.use("moodle-course-coursebase", function() {
        M.course.coursebase.register_module({
            set_visibility_resource_ui: function set_visibility_resource_ui(b) {
                var c = a(b.element.getDOMNode()),
                    d = m(c);
                if (d) {
                    var e = c.find("." + k.EDITINGMOVE).attr("data-sectionreturn");
                    x(c, d, e)
                }
            }
        })
    });
    return {
        initCoursePage: function initCoursePage(b) {
            a("body").on("click keypress", l.ACTIVITYLI + " " + l.ACTIVITYACTION + "[data-action]", function(b) {
                if ("keypress" === b.type && 13 !== b.keyCode) {
                    return
                }
                var c = a(this),
                    d = c.closest(l.ACTIVITYLI),
                    e = c.attr("data-action"),
                    f = m(d);
                switch (e) {
                    case "moveleft":
                    case "moveright":
                    case "delete":
                    case "duplicate":
                    case "hide":
                    case "stealth":
                    case "show":
                    case "groupsseparate":
                    case "groupsvisible":
                    case "groupsnone":
                        break;
                    default:
                        return;
                }
                if (!f) {
                    return
                }
                b.preventDefault();
                if ("delete" === e) {
                    y(d, function() {
                        w(d, f, c)
                    })
                } else {
                    w(d, f, c)
                }
            });
            a("body").on("click keypress", l.SECTIONLI + " " + l.SECTIONACTIONMENU + "[data-sectionid] a[data-action]", function(c) {
                if ("keypress" === c.type && 13 !== c.keyCode) {
                    return
                }
                var d = a(this),
                    e = d.closest(l.SECTIONLI),
                    f = d.closest(l.SECTIONACTIONMENU).attr("data-sectionid");
                c.preventDefault();
                if (d.attr("data-confirm")) {
                    z(d.attr("data-confirm"), function() {
                        D(e, f, d, b)
                    })
                } else {
                    D(e, f, d, b)
                }
            });
            e.get_string("numberweeks").done(function(b) {
                var c = a(l.ADDSECTIONS),
                    d = c.attr("data-add-sections"),
                    e = c.attr("data-new-sections"),
                    f = a("<div><label for=\"add_section_numsections\"></label> <input id=\"add_section_numsections\" type=\"number\" min=\"1\" max=\"" + e + "\" value=\"1\"></div>");
                f.find("label").html(b);
                h.create({
                    title: d,
                    type: h.types.SAVE_CANCEL,
                    body: f.html()
                }, c).done(function(b) {
                    var e = a(b.getBody()).find("#add_section_numsections"),
                        f = function() {
                            if ("" + parseInt(e.val()) === e.val() && 1 <= parseInt(e.val())) {
                                document.location = c.attr("href") + "&numsections=" + parseInt(e.val())
                            }
                        };
                    b.setSaveButtonText(d);
                    b.getRoot().on(i.shown, function() {
                        e.focus().select().on("keydown", function(a) {
                            if (a.keyCode === j.enter) {
                                f()
                            }
                        })
                    });
                    b.getRoot().on(i.save, function(a) {
                        a.preventDefault();
                        f()
                    })
                })
            })
        },
        replaceSectionActionItem: function replaceSectionActionItem(a, b, c, d, e, f, g, h) {
            var i = a.find(l.SECTIONACTIONMENU + " " + b);
            A(i, c, d, e, f, g, h)
        }
    }
});
define("core_course/repository", ["jquery", "core/ajax"], function(a, b) {
    return {
        getEnrolledCoursesByTimelineClassification: function getEnrolledCoursesByTimelineClassification(a, c, d, e) {
            var f = {
                classification: a
            };
            if ("undefined" != typeof c) {
                f.limit = c
            }
            if ("undefined" != typeof d) {
                f.offset = d
            }
            if ("undefined" != typeof e) {
                f.sort = e
            }
            return b.call([{
                methodname: "core_course_get_enrolled_courses_by_timeline_classification",
                args: f
            }])[0]
        },
        getLastAccessedCourses: function getLastAccessedCourses(a, c, d, e) {
            var f = {};
            if ("undefined" != typeof a) {
                f.userid = a
            }
            if ("undefined" != typeof c) {
                f.limit = c
            }
            if ("undefined" != typeof d) {
                f.offset = d
            }
            if ("undefined" != typeof e) {
                f.sort = e
            }
            return b.call([{
                methodname: "core_course_get_recent_courses",
                args: f
            }])[0]
        },
        getUsersFromCourseModuleID: function getEnrolledUsersFromCourseModuleID(a, c) {
            return b.call([{
                methodname: "core_course_get_enrolled_users_by_cmid",
                args: {
                    cmid: a,
                    groupid: c
                }
            }])[0]
        }
    }
});
define("core_customfield/form", ["jquery", "core/str", "core/notification", "core/ajax", "core/templates", "core/sortable_list", "core/inplace_editable"], function(a, b, c, d, e, f) {
    var g = function(f, g, h, i, j) {
            b.get_strings([{
                key: "confirm"
            }, {
                key: "confirmdelete" + g,
                component: "core_customfield"
            }, {
                key: "yes"
            }, {
                key: "no"
            }]).done(function(b) {
                c.confirm(b[0], b[1], b[2], b[3], function() {
                    var b = "field" === g ? "core_customfield_delete_field" : "core_customfield_delete_category";
                    d.call([{
                        methodname: b,
                        args: {
                            id: f
                        }
                    }, {
                        methodname: "core_customfield_reload_template",
                        args: {
                            component: h,
                            area: i,
                            itemid: j
                        }
                    }])[1].then(function(a) {
                        return e.render("core_customfield/list", a)
                    }).then(function(b, c) {
                        e.replaceNode(a("[data-region=\"list-page\"]"), b, c);
                        return null
                    }).fail(c.exception)
                })
            }).fail(c.exception)
        },
        h = function(b, f, g) {
            var h = d.call([{
                    methodname: "core_customfield_create_category",
                    args: {
                        component: b,
                        area: f,
                        itemid: g
                    }
                }, {
                    methodname: "core_customfield_reload_template",
                    args: {
                        component: b,
                        area: f,
                        itemid: g
                    }
                }]),
                i;
            h[0].then(function(a) {
                i = a;
                return null
            }).fail(c.exception);
            h[1].then(function(a) {
                return e.render("core_customfield/list", a)
            }).then(function(b, c) {
                e.replaceNode(a("[data-region=\"list-page\"]"), b, c);
                window.location.href = "#category-" + i;
                return null
            }).fail(c.exception)
        };
    return {
        init: function init() {
            var e = a("#customfield_catlist"),
                i = e.attr("data-component"),
                j = e.attr("data-area"),
                k = e.attr("data-itemid");
            a("[data-role=deletefield]").on("click", function(b) {
                g(a(this).attr("data-id"), "field", i, j, k);
                b.preventDefault()
            });
            a("[data-role=deletecategory]").on("click", function(b) {
                g(a(this).attr("data-id"), "category", i, j, k);
                b.preventDefault()
            });
            a("[data-role=addnewcategory]").on("click", function() {
                h(i, j, k)
            });
            var l = function(a) {
                    return a.closest("[data-category-id]").find("[data-inplaceeditable][data-itemtype=category][data-component=core_customfield]").attr("data-value")
                },
                m = new f(a("#customfield_catlist .categorieslist"), {
                    moveHandlerSelector: ".movecategory [data-drag-type=move]"
                });
            m.getElementName = function(b) {
                return a.Deferred().resolve(l(b))
            };
            a("[data-category-id]").on("sortablelist-drop", function(a, b) {
                if (b.positionChanged) {
                    var e = d.call([{
                        methodname: "core_customfield_move_category",
                        args: {
                            id: b.element.data("category-id"),
                            beforeid: b.targetNextElement.data("category-id")
                        }
                    }]);
                    e[0].fail(c.exception)
                }
                a.stopPropagation()
            });
            var n = new f(a("#customfield_catlist .fieldslist tbody"), {
                moveHandlerSelector: ".movefield [data-drag-type=move]"
            });
            n.getDestinationName = function(c, d) {
                if (!d.length) {
                    return b.get_string("totopofcategory", "customfield", l(c))
                } else if (d.attr("data-field-name")) {
                    return b.get_string("afterfield", "customfield", d.attr("data-field-name"))
                } else {
                    return a.Deferred().resolve("")
                }
            };
            a("[data-field-name]").on("sortablelist-drop", function(a, b) {
                a.stopPropagation();
                if (b.positionChanged) {
                    var e = d.call([{
                        methodname: "core_customfield_move_field",
                        args: {
                            id: b.element.data("field-id"),
                            beforeid: b.targetNextElement.data("field-id"),
                            categoryid: +b.targetList.closest("[data-category-id]").attr("data-category-id")
                        }
                    }]);
                    e[0].fail(c.exception)
                }
            }).on("sortablelist-drag", function(d) {
                d.stopPropagation();
                b.get_string("therearenofields", "core_customfield").then(function(b) {
                    a("#customfield_catlist .categorieslist").children().each(function() {
                        var c = a(this).find(a(".field")),
                            d = a(this).find(a(".nofields"));
                        if (!c.length && !d.length) {
                            a(this).find("tbody").append("<tr class=\"nofields\"><td colspan=\"5\">" + b + "</td></tr>")
                        }
                        if (c.length && d.length) {
                            d.remove()
                        }
                    });
                    return null
                }).fail(c.exception)
            });
            a("[data-category-id], [data-field-name]").on("sortablelist-dragstart", function(b, c) {
                setTimeout(function() {
                    a(".sortable-list-is-dragged").width(c.element.width())
                }, 501)
            })
        }
    }
});
define("core_form/defaultcustom", ["jquery"], function(a) {
    a("body").on("change", "input[data-defaultcustom=true]", function onChangeSelect(b) {
        var c = a(b.target),
            d = JSON.parse(c.attr("data-defaultvalue")),
            e = JSON.parse(c.attr("data-customvalue")),
            f = c.attr("data-type"),
            g = c.closest("form"),
            h = c.attr("name").replace(/\[customize\]$/, "[value]"),
            i = c.prop("checked") ? e : d;
        if ("text" === f) {
            g.find("[name=\"" + h + "\"]").val(i)
        } else if ("date_selector" === f) {
            g.find("[name=\"" + h + "[day]\"]").val(i.day);
            g.find("[name=\"" + h + "[month]\"]").val(i.month);
            g.find("[name=\"" + h + "[year]\"]").val(i.year)
        } else if ("date_time_selector" === f) {
            g.find("[name=\"" + h + "[day]\"]").val(i.day);
            g.find("[name=\"" + h + "[month]\"]").val(i.month);
            g.find("[name=\"" + h + "[year]\"]").val(i.year);
            g.find("[name=\"" + h + "[hour]\"]").val(i.hour);
            g.find("[name=\"" + h + "[minute]\"]").val(i.minute)
        }
    })
});
define("core_form/passwordunmask", ["jquery", "core/templates"], function(a, b) {
    var c = function(b) {
        this.wrapperSelector = "[data-passwordunmask=\"wrapper\"][data-passwordunmaskid=\"" + b + "\"]";
        this.wrapper = a(this.wrapperSelector);
        this.editorSpace = this.wrapper.find("[data-passwordunmask=\"editor\"]");
        this.editLink = this.wrapper.find("a[data-passwordunmask=\"edit\"]");
        this.editInstructions = this.wrapper.find("[data-passwordunmask=\"instructions\"]");
        this.displayValue = this.wrapper.find("[data-passwordunmask=\"displayvalue\"]");
        this.inputFieldLabel = a("label[for=\"" + b + "\"]");
        this.inputField = this.editorSpace.find(document.getElementById(b));
        this.inputField.attr("type", "hidden");
        this.inputField.removeClass("hiddenifjs");
        if (!this.editInstructions.attr("id")) {
            this.editInstructions.attr("id", b + "_instructions")
        }
        this.editInstructions.hide();
        this.setDisplayValue();
        this.addListeners()
    };
    c.prototype.addListeners = function() {
        this.wrapper.on("click keypress", "[data-passwordunmask=\"edit\"]", a.proxy(function(b) {
            if ("keypress" === b.type && 13 !== b.keyCode) {
                return
            }
            b.stopImmediatePropagation();
            b.preventDefault();
            if ("hidden" !== this.inputField.attr("type")) {
                if ("click" !== b.type && !a(b.relatedTarget).is(":input")) {
                    this.turnEditingOff(!0)
                } else {
                    this.turnEditingOff(!1)
                }
            } else {
                this.turnEditingOn()
            }
        }, this));
        this.wrapper.on("click keypress", "[data-passwordunmask=\"unmask\"]", a.proxy(function(a) {
            if ("keypress" === a.type && 13 !== a.keyCode) {
                return
            }
            a.stopImmediatePropagation();
            a.preventDefault();
            this.wrapper.data("unmasked", !this.wrapper.data("unmasked"));
            this.setDisplayValue()
        }, this));
        this.wrapper.on("keydown", "input", a.proxy(function(a) {
            if ("keydown" === a.type && 13 !== a.keyCode) {
                return
            }
            a.stopImmediatePropagation();
            a.preventDefault();
            this.turnEditingOff(!0)
        }, this));
        this.inputFieldLabel.on("click", a.proxy(function(a) {
            a.preventDefault();
            this.turnEditingOn()
        }, this));
        return this
    };
    c.prototype.checkFocusOut = function(b) {
        if (!this.isEditing()) {
            return
        }
        window.setTimeout(a.proxy(function() {
            var c = b.relatedTarget || document.activeElement;
            if (this.wrapper.has(a(c)).length) {
                return
            }
            this.turnEditingOff(!a(c).is(":input,a"))
        }, this), 100)
    };
    c.prototype.passwordVisible = function() {
        return !!this.wrapper.data("unmasked")
    };
    c.prototype.isEditing = function() {
        return "hidden" !== this.inputField.attr("type")
    };
    c.prototype.turnEditingOn = function() {
        var b = this.getDisplayValue();
        if (this.passwordVisible()) {
            this.inputField.attr("type", "text")
        } else {
            this.inputField.attr("type", "password")
        }
        this.inputField.val(b);
        this.inputField.attr("size", this.inputField.attr("data-size"));
        if (this.editInstructions.length) {
            this.inputField.attr("aria-describedby", this.editInstructions.attr("id"));
            this.editInstructions.show()
        }
        this.wrapper.attr("data-passwordunmask-visible", 1);
        this.editLink.hide();
        this.inputField.focus().select();
        a("body").on("focusout", this.wrapperSelector, a.proxy(this.checkFocusOut, this));
        return this
    };
    c.prototype.turnEditingOff = function(b) {
        a("body").off("focusout", this.wrapperSelector, this.checkFocusOut);
        var c = this.getDisplayValue();
        this.inputField.attr("type", "hidden").attr("aria-describedby", null);
        this.inputField.val(c);
        this.editInstructions.hide();
        this.wrapper.removeAttr("data-passwordunmask-visible");
        this.inputField.removeAttr("size");
        this.editLink.show();
        this.setDisplayValue();
        if (b) {
            this.editLink.focus()
        }
        return this
    };
    c.prototype.getDisplayValue = function() {
        return this.inputField.val()
    };
    c.prototype.setDisplayValue = function() {
        var c = this.getDisplayValue();
        if (this.isEditing()) {
            if (this.wrapper.data("unmasked")) {
                this.inputField.attr("type", "text")
            } else {
                this.inputField.attr("type", "password")
            }
            this.inputField.val(c)
        }
        if (c && this.wrapper.data("unmasked")) {
            this.displayValue.text(c)
        } else {
            if (!c) {
                c = ""
            }
            b.render("core_form/element-passwordunmask-fill", {
                element: {
                    frozen: this.inputField.is("[readonly]"),
                    value: c,
                    valuechars: c.split("")
                }
            }).done(a.proxy(function(a, c) {
                this.displayValue.html(a);
                b.runTemplateJS(c)
            }, this))
        }
        return this
    };
    return c
});
define("core_form/submit", ["exports"], function(a) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    a.init = void 0;
    var b = 0,
        c = [],
        d = function(a) {
            c.push(a);
            if (!b) {
                b = setInterval(function() {
                    var a = document.cookie.split(e() + "=");
                    if (2 == a.length) {
                        f();
                        clearInterval(b);
                        b = 0;
                        c.forEach(function(a) {
                            a.disabled = !1
                        })
                    }
                }, 500)
            }
        },
        e = function() {
            return "moodledownload_" + M.cfg.sesskey
        },
        f = function() {
            document.cookie = encodeURIComponent(e()) + "=deleted; expires=" + new Date(0).toUTCString()
        };
    a.init = function init(a) {
        var b = document.getElementById(a);
        if ("off" === b.form.dataset.doubleSubmitProtection) {
            return
        }
        b.form.addEventListener("submit", function(a) {
            var c = function() {
                if (a.defaultPrevented || b.disabled) {
                    return
                }
                b.disabled = !0;
                f();
                d(b)
            };
            window.addEventListener("beforeunload", c);
            setTimeout(function() {
                window.removeEventListener("beforeunload", c)
            }, 0)
        }, !1)
    }
});
define("core_form/showadvanced", ["jquery", "core/log", "core/str", "core/notification"], function(a, b, c, d) {
    var f = {
            FIELDSETCONTAINSADVANCED: "fieldset.containsadvancedelements",
            DIVFITEMADVANCED: "div.fitem.advanced",
            DIVFCONTAINER: "div.fcontainer",
            MORELESSLINK: "fieldset.containsadvancedelements .moreless-toggler"
        },
        g = {
            SHOW: "show",
            MORELESSACTIONS: "moreless-actions",
            MORELESSTOGGLER: "moreless-toggler",
            SHOWLESS: "moreless-less"
        },
        h = {
            FITEM: "<div class=\"fitem\"></div>",
            FELEMENT: "<div class=\"felement\"></div>"
        },
        i = 0,
        j = function(b) {
            this.id = b;
            var c = a(document.getElementById(b));
            this.enhanceForm(c)
        };
    j.prototype.id = "";
    j.prototype.enhanceForm = function(b) {
        var c = b.find(f.FIELDSETCONTAINSADVANCED);
        c.each(function(b, c) {
            this.enhanceFieldset(a(c))
        }.bind(this));
        b.on("click", f.MORELESSLINK, this.switchState);
        b.on("keydown", f.MORELESSLINK, function(a) {
            if (13 == a.which || 32 == a.which) {
                return this.switchState(a)
            }
            return !0
        }.bind(this));
        return this
    };
    j.prototype.generateId = function(a) {
        var b = a.prop("id");
        if ("undefined" == typeof b) {
            b = "showadvancedid-" + i++;
            a.prop("id", b)
        }
        return b
    };
    j.prototype.enhanceFieldset = function(e) {
        var i = a("input[name=mform_showmore_" + e.prop("id") + "]");
        if (!i.length) {
            b.debug("M.form.showadvanced::processFieldset was called on an fieldset without a status field: '" + e.prop("id") + "'");
            return this
        }
        c.get_strings([{
            key: "showmore",
            component: "core_form"
        }, {
            key: "showless",
            component: "core_form"
        }]).then(function(b) {
            var c = b[0],
                d = b[1],
                j = a("<a href=\"#\"></a>");
            j.addClass(g.MORELESSTOGGLER);
            if ("0" === i.val()) {
                j.html(c)
            } else {
                j.html(d);
                j.addClass(g.SHOWLESS);
                e.find(f.DIVFITEMADVANCED).addClass(g.SHOW)
            }
            var k = [];
            e.find(f.DIVFITEMADVANCED).each(function(b, c) {
                k[k.length] = this.generateId(a(c))
            }.bind(this));
            j.attr("role", "button");
            j.attr("aria-controls", k.join(" "));
            var l = a(h.FITEM);
            l.addClass(g.MORELESSACTIONS);
            var m = a(h.FELEMENT);
            m.append(j);
            l.append(m);
            e.find(f.DIVFCONTAINER).append(l);
            return !0
        }.bind(this)).fail(d.exception);
        return this
    };
    j.prototype.switchState = function(b) {
        b.preventDefault();
        c.get_strings([{
            key: "showmore",
            component: "core_form"
        }, {
            key: "showless",
            component: "core_form"
        }]).then(function(c) {
            var d = c[0],
                e = c[1],
                h = a(b.target).closest(f.FIELDSETCONTAINSADVANCED);
            h.find(f.DIVFITEMADVANCED).toggleClass(g.SHOW);
            var i = a("input[name=mform_showmore_" + h.prop("id") + "]");
            if ("0" === i.val()) {
                i.val(1);
                a(b.target).addClass(g.SHOWLESS);
                a(b.target).html(e)
            } else {
                i.val(0);
                a(b.target).removeClass(g.SHOWLESS);
                a(b.target).html(d)
            }
            return !0
        }).fail(d.exception);
        return this
    };
    return {
        init: function init(a) {
            return new j(a)
        }
    }
});
define("core_form/filetypes", ["jquery", "core/log", "core/str", "core/modal_factory", "core/modal_events", "core/ajax", "core/templates", "core/tree"], function(a, b, c, d, e, f, g, h) {
    "use strict";
    var i = function(c, d, e, f) {
        this.elementId = c;
        this.elementLabel = d;
        this.onlyTypes = e;
        this.allowAll = f;
        this.inputField = a("#" + c);
        this.wrapperBrowserTrigger = a("[data-filetypesbrowser=\"" + c + "\"]");
        this.wrapperDescriptions = a("[data-filetypesdescriptions=\"" + c + "\"]");
        if (!this.wrapperBrowserTrigger.length) {
            return
        }
        if (!this.inputField.length || !this.wrapperDescriptions.length) {
            b.error("core_form/filetypes: Unexpected DOM structure, unable to enhance filetypes field " + c);
            return
        }
        this.prepareBrowserTrigger().then(function() {
            return this.prepareBrowserModal()
        }.bind(this)).then(function() {
            return this.prepareBrowserTree()
        }.bind(this))
    };
    i.prototype.prepareBrowserTrigger = function() {
        return g.render("core_form/filetypes-trigger", {}).then(function(a) {
            this.wrapperBrowserTrigger.html(a);
            this.browserTrigger = this.wrapperBrowserTrigger.find("[data-filetypeswidget=\"browsertrigger\"]")
        }.bind(this))
    };
    i.prototype.prepareBrowserModal = function() {
        return d.create({
            type: d.types.SAVE_CANCEL,
            title: this.elementLabel
        }).then(function(a) {
            this.browserModal = a
        }.bind(this)).then(function() {
            this.browserModal.getRoot().on(e.hidden, function() {
                this.browserTrigger.focus()
            }.bind(this));
            this.browserModal.getRoot().on(e.save, function() {
                this.saveBrowserModal()
            }.bind(this))
        }.bind(this))
    };
    i.prototype.prepareBrowserTree = function() {
        this.browserTrigger.on("click", function(b) {
            b.preventDefault();
            if (this.inputField.is("[disabled]")) {
                return
            }
            var c = this.loadBrowserModalBody();
            c.then(function() {
                this.browserTree = new h(this.browserModal.getBody());
                this.browserTree.handleKeyDown = function(a, b) {
                    if (b.keyCode == this.browserTree.keys.enter || b.keyCode == this.browserTree.keys.space) {
                        b.preventDefault();
                        b.stopPropagation();
                        this.toggleCheckbox(a.attr("data-filetypesbrowserkey"))
                    } else {
                        h.prototype.handleKeyDown.call(this.browserTree, a, b)
                    }
                }.bind(this);
                if (this.allowAll) {
                    this.hideOrShowItemsDependingOnAllowAll(this.browserModal.getRoot().find("input[type=\"checkbox\"][data-filetypesbrowserkey=\"*\"]:first"));
                    this.browserModal.getRoot().on("change", "input[type=\"checkbox\"][data-filetypesbrowserkey=\"*\"]", function(b) {
                        this.hideOrShowItemsDependingOnAllowAll(a(b.currentTarget))
                    }.bind(this))
                }
                this.browserModal.getRoot().on("change", "input[type=\"checkbox\"][data-filetypesbrowserkey]", function(b) {
                    var c = a(b.currentTarget),
                        d = c.attr("data-filetypesbrowserkey");
                    this.browserModal.getRoot().find("input[type=\"checkbox\"][data-filetypesbrowserkey=\"" + d + "\"]").prop("checked", c.prop("checked"))
                }.bind(this))
            }.bind(this)).then(function() {
                this.browserModal.show()
            }.bind(this));
            this.browserModal.setBody(c)
        }.bind(this));
        return a.when()
    };
    i.prototype.loadBrowserModalBody = function() {
        var a = {
            onlytypes: this.onlyTypes.join(),
            allowall: this.allowAll,
            current: this.inputField.val()
        };
        return f.call([{
            methodname: "core_form_get_filetypes_browser_data",
            args: a
        }])[0].then(function(a) {
            return g.render("core_form/filetypes-browser", {
                elementid: this.elementId,
                groups: a.groups
            })
        }.bind(this))
    };
    i.prototype.toggleCheckbox = function(a) {
        var b = this.browserModal.getRoot().find("input[type=\"checkbox\"][data-filetypesbrowserkey=\"" + a + "\"]:first");
        b.prop("checked", !b.prop("checked"))
    };
    i.prototype.saveBrowserModal = function() {
        if (this.allowAll) {
            var b = this.browserModal.getRoot().find("input[type=\"checkbox\"][data-filetypesbrowserkey=\"*\"]");
            if (b.length && b.prop("checked")) {
                this.inputField.val("*");
                this.updateDescriptions(["*"]);
                return
            }
        }
        var c = [];
        this.browserModal.getRoot().find("input[type=\"checkbox\"]").each(function() {
            var b = a(this),
                d = b.attr("data-filetypesbrowserkey");
            if (b.prop("checked")) {
                c.push(d)
            }
        });
        c = c.filter(function(b, c, d) {
            return d.indexOf(b) == c
        });
        this.inputField.val(c.join(" "));
        this.updateDescriptions(c)
    };
    i.prototype.updateDescriptions = function(a) {
        var b = [];
        a.forEach(function(a) {
            b.push({
                description: this.browserModal.getRoot().find("[data-filetypesname=\"" + a + "\"]:first").text().trim(),
                extensions: this.browserModal.getRoot().find("[data-filetypesextensions=\"" + a + "\"]:first").text().trim()
            })
        }.bind(this));
        var c = {
            hasdescriptions: 0 < b.length,
            descriptions: b
        };
        return g.render("core_form/filetypes-descriptions", c).then(function(a) {
            this.wrapperDescriptions.html(a)
        }.bind(this))
    };
    i.prototype.hideOrShowItemsDependingOnAllowAll = function(a) {
        var b = this.browserModal.getRoot().find("[role=\"treeitem\"][data-filetypesbrowserkey!=\"*\"]");
        if (a.prop("checked")) {
            b.hide()
        } else {
            b.show()
        }
    };
    return {
        init: function init(a, b, c, d) {
            new i(a, b, c, d)
        }
    }
});
define("core_grades/grades/grader/gradingpanel/point", ["exports", "./repository", "core_grades/grades/grader/gradingpanel/comparison", "jquery", "./normalise"], function(a, b, c, d, e) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    a.storeCurrentGrade = a.fetchCurrentGrade = void 0;
    d = function(a) {
        return a && a.__esModule ? a : {
            default: a
        }
    }(d);

    function f(a, b, c, d, e, f, g) {
        try {
            var h = a[f](g),
                i = h.value
        } catch (a) {
            c(a);
            return
        }
        if (h.done) {
            b(i)
        } else {
            Promise.resolve(i).then(d, e)
        }
    }

    function g(a) {
        return function() {
            var b = this,
                c = arguments;
            return new Promise(function(d, e) {
                var i = a.apply(b, c);

                function g(a) {
                    f(i, d, e, g, h, "next", a)
                }

                function h(a) {
                    f(i, d, e, g, h, "throw", a)
                }
                g(void 0)
            })
        }
    }
    a.fetchCurrentGrade = function fetchCurrentGrade() {
        return (0, b.fetchGrade)("point").apply(void 0, arguments)
    };
    var h = function() {
        var a = g(regeneratorRuntime.mark(function a(f, g, h, i, j, k) {
            var l, m;
            return regeneratorRuntime.wrap(function(a) {
                while (1) {
                    switch (a.prev = a.next) {
                        case 0:
                            l = k.querySelector("form");
                            m = l.querySelector("input[name=\"grade\"]");
                            if (!(!m.checkValidity() || !m.value.trim())) {
                                a.next = 4;
                                break
                            }
                            return a.abrupt("return", e.invalidResult);
                        case 4:
                            if (!(!0 === (0, c.compareData)(l))) {
                                a.next = 10;
                                break
                            }
                            a.next = 7;
                            return (0, b.saveGrade)("point")(f, g, h, i, j, (0, d.default)(l).serialize());
                        case 7:
                            return a.abrupt("return", a.sent);
                        case 10:
                            return a.abrupt("return", "");
                        case 11:
                        case "end":
                            return a.stop();
                    }
                }
            }, a)
        }));
        return function() {
            return a.apply(this, arguments)
        }
    }();
    a.storeCurrentGrade = h
});
define("core_grades/grades/grader/gradingpanel/scale", ["exports", "./repository", "core_grades/grades/grader/gradingpanel/comparison", "jquery", "./normalise"], function(a, b, c, d, e) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    a.storeCurrentGrade = a.fetchCurrentGrade = void 0;
    d = function(a) {
        return a && a.__esModule ? a : {
            default: a
        }
    }(d);
    a.fetchCurrentGrade = function fetchCurrentGrade() {
        return (0, b.fetchGrade)("scale").apply(void 0, arguments)
    };
    var f = function(a, f, g, h, i, j) {
        var k = j.querySelector("form"),
            l = k.querySelector("select[name=\"grade\"]");
        if (!l.checkValidity() || !l.value.trim()) {
            return e.invalidResult
        }
        if (!0 === (0, c.compareData)(k)) {
            return (0, b.saveGrade)("scale")(a, f, g, h, i, (0, d.default)(k).serialize())
        } else {
            return ""
        }
    };
    a.storeCurrentGrade = f
});
define("core_grades/grades/grader/gradingpanel/comparison", ["exports"], function(a) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    a.compareData = a.fillInitialValues = void 0;
    var b = function(a) {
        Array.prototype.forEach.call(a.elements, function(a) {
            if ("submit" === a.type || "button" === a.type) {} else if ("radio" === a.type || "checkbox" === a.type) {
                a.dataset.initialValue = JSON.stringify(a.checked)
            } else if ("undefined" != typeof a.value) {
                a.dataset.initialValue = JSON.stringify(a.value)
            } else if ("select-one" === a.type) {
                Array.prototype.forEach.call(a.options, function(a) {
                    a.dataset.initialValue = JSON.stringify(a.selected)
                })
            }
        })
    };
    a.fillInitialValues = b;
    a.compareData = function compareData(a) {
        var c = Array.prototype.some.call(a.elements, function(a) {
            if ("submit" === a.type || "button" === a.type) {
                return !1
            } else if ("radio" === a.type || "checkbox" === a.type) {
                if ("undefined" != typeof a.dataset.initialValue) {
                    return a.dataset.initialValue !== JSON.stringify(a.checked)
                }
            } else if ("undefined" != typeof a.value) {
                if ("undefined" != typeof a.dataset.initialValue) {
                    return a.dataset.initialValue !== JSON.stringify(a.value)
                }
            } else if ("select-one" === a.type) {
                return Array.prototype.some.call(a.options, function(a) {
                    if ("undefined" != typeof a.dataset.initialValue) {
                        return a.dataset.initialValue !== JSON.stringify(a.selected)
                    }
                    return !1
                })
            }
            return !0
        });
        b(a);
        return c
    }
});
define("core_grades/grades/grader/gradingpanel/normalise", ["exports"], function(a) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    a.failedUpdate = a.invalidResult = a.normaliseResult = void 0;
    a.normaliseResult = function normaliseResult(a) {
        return {
            result: a,
            failed: !!a.warnings.length,
            success: !a.warnings.length,
            error: null
        }
    };
    a.invalidResult = function invalidResult() {
        return {
            success: !1,
            failed: !1,
            result: {},
            error: null
        }
    };
    a.failedUpdate = function failedUpdate(a) {
        return {
            success: !1,
            failed: !0,
            result: {},
            error: a
        }
    }
});
define("core_grades/grades/grader/gradingpanel/repository", ["exports", "core/ajax", "./normalise"], function(a, b, c) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    a.saveGrade = a.fetchGrade = void 0;

    function d(a, b, c, d, e, f, g) {
        try {
            var h = a[f](g),
                i = h.value
        } catch (a) {
            c(a);
            return
        }
        if (h.done) {
            b(i)
        } else {
            Promise.resolve(i).then(d, e)
        }
    }

    function e(a) {
        return function() {
            var b = this,
                c = arguments;
            return new Promise(function(e, f) {
                var i = a.apply(b, c);

                function g(a) {
                    d(i, e, f, g, h, "next", a)
                }

                function h(a) {
                    d(i, e, f, g, h, "throw", a)
                }
                g(void 0)
            })
        }
    }
    a.fetchGrade = function fetchGrade(a) {
        return function(c, d, e, f) {
            return (0, b.call)([{
                methodname: "core_grades_grader_gradingpanel_".concat(a, "_fetch"),
                args: {
                    component: c,
                    contextid: d,
                    itemname: e,
                    gradeduserid: f
                }
            }])[0]
        }
    };
    a.saveGrade = function saveGrade(a) {
        return function() {
            var d = e(regeneratorRuntime.mark(function d(e, f, g, h, i, j) {
                return regeneratorRuntime.wrap(function(d) {
                    while (1) {
                        switch (d.prev = d.next) {
                            case 0:
                                d.t0 = c.normaliseResult;
                                d.next = 3;
                                return (0, b.call)([{
                                    methodname: "core_grades_grader_gradingpanel_".concat(a, "_store"),
                                    args: {
                                        component: e,
                                        contextid: f,
                                        itemname: g,
                                        gradeduserid: h,
                                        notifyuser: i,
                                        formdata: j
                                    }
                                }])[0];
                            case 3:
                                d.t1 = d.sent;
                                return d.abrupt("return", (0, d.t0)(d.t1));
                            case 5:
                            case "end":
                                return d.stop();
                        }
                    }
                }, d)
            }));
            return function() {
                return d.apply(this, arguments)
            }
        }()
    }
});
define("core_grades/edittree_index", ["jquery"], function(a) {
    var b = function() {
        a("body").on("change", ".itemselect.ignoredirty", b.checkMoveMenuState);
        a("body").on("click", "[data-action=\"grade_edittree-index-bulkselect\"]", b.toggleAllSelectItems);
        a("body").on("change", ".weightoverride", b.toggleWeightInput);
        a("#menumoveafter").on("change", function() {
            var b = a(this).closest("form"),
                c = b.find("#bulkmoveinput");
            c.val(1);
            b.submit()
        });
        b.checkMoveMenuState()
    };
    b.toggleWeightInput = function(b) {
        b.preventDefault();
        var c = a(this),
            d = c.closest("tr");
        a("input[name=\"weight_" + d.data("itemid") + "\"]").prop("disabled", !c.prop("checked"))
    };
    b.toggleAllSelectItems = function(c) {
        c.preventDefault();
        var d = a(this),
            e = d.closest("tr");
        a("." + e.data("category") + " .itemselect").prop("checked", d.data("checked"));
        b.checkMoveMenuState()
    };
    b.getMoveMenu = function() {
        return a("#menumoveafter")
    };
    b.checkMoveMenuState = function() {
        var c = b.getMoveMenu();
        if (!c.length) {
            return !1
        }
        var d;
        a(".itemselect").each(function() {
            d = a(this).prop("checked");
            return !d
        });
        c.prop("disabled", !d);
        return d
    };
    return {
        enhance: b
    }
});
define("core_message/message_drawer", ["jquery", "core/custom_interaction_events", "core/pubsub", "core_message/message_drawer_view_contact", "core_message/message_drawer_view_contacts", "core_message/message_drawer_view_conversation", "core_message/message_drawer_view_group_info", "core_message/message_drawer_view_overview", "core_message/message_drawer_view_search", "core_message/message_drawer_view_settings", "core_message/message_drawer_router", "core_message/message_drawer_routes", "core_message/message_drawer_events", "core/pending", "core/drawer"], function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var p = {
            PANEL_BODY_CONTAINER: "[data-region=\"panel-body-container\"]",
            PANEL_HEADER_CONTAINER: "[data-region=\"panel-header-container\"]",
            VIEW_CONTACT: "[data-region=\"view-contact\"]",
            VIEW_CONTACTS: "[data-region=\"view-contacts\"]",
            VIEW_CONVERSATION: "[data-region=\"view-conversation\"]",
            VIEW_GROUP_INFO: "[data-region=\"view-group-info\"]",
            VIEW_OVERVIEW: "[data-region=\"view-overview\"]",
            VIEW_SEARCH: "[data-region=\"view-search\"]",
            VIEW_SETTINGS: "[data-region=\"view-settings\"]",
            ROUTES: "[data-route]",
            ROUTES_BACK: "[data-route-back]",
            HEADER_CONTAINER: "[data-region=\"header-container\"]",
            BODY_CONTAINER: "[data-region=\"body-container\"]",
            FOOTER_CONTAINER: "[data-region=\"footer-container\"]"
        },
        q = function(a, b, c) {
            var d = b.find(p.HEADER_CONTAINER).find(c);
            if (!d.length) {
                d = b.find(p.PANEL_HEADER_CONTAINER).find(c)
            }
            var e = b.find(p.BODY_CONTAINER).find(c);
            if (!e.length) {
                e = b.find(p.PANEL_BODY_CONTAINER).find(c)
            }
            var f = b.find(p.FOOTER_CONTAINER).find(c);
            return [a, d.length ? d : null, e.length ? e : null, f.length ? f : null]
        },
        r = [
            [l.VIEW_CONTACT, p.VIEW_CONTACT, d.show, d.description],
            [l.VIEW_CONTACTS, p.VIEW_CONTACTS, e.show, e.description],
            [l.VIEW_CONVERSATION, p.VIEW_CONVERSATION, f.show, f.description],
            [l.VIEW_GROUP_INFO, p.VIEW_GROUP_INFO, g.show, g.description],
            [l.VIEW_OVERVIEW, p.VIEW_OVERVIEW, h.show, h.description],
            [l.VIEW_SEARCH, p.VIEW_SEARCH, i.show, i.description],
            [l.VIEW_SETTINGS, p.VIEW_SETTINGS, j.show, j.description]
        ],
        s = function(a, b) {
            r.forEach(function(c) {
                k.add(a, c[0], q(a, b, c[1]), c[2], c[3])
            })
        },
        t = function(a, b) {
            if (!b.attr("data-shown")) {
                k.go(a, l.VIEW_OVERVIEW);
                b.attr("data-shown", !0)
            }
            var c = o.getDrawerRoot(b);
            if (c.length) {
                o.show(c)
            }
        },
        u = function(a) {
            var b = o.getDrawerRoot(a);
            if (b.length) {
                o.hide(b)
            }
        },
        v = function(a) {
            var b = o.getDrawerRoot(a);
            if (b.length) {
                return o.isVisible(b)
            }
            return !0
        },
        w = function(d, e, f) {
            b.define(e, [b.events.activate]);
            var g = /^data-route-param-?(\d*)$/;
            e.on(b.events.activate, p.ROUTES, function(b, c) {
                for (var e = a(b.target).closest(p.ROUTES), f = e.attr("data-route"), h = [], j = 0; j < e[0].attributes.length; j++) {
                    h.push(e[0].attributes[j])
                }
                var l = h.filter(function(a) {
                    var b = a.nodeName,
                        c = g.test(b);
                    return c
                });
                l.sort(function(c, a) {
                    var b = g.exec(c.nodeName),
                        d = g.exec(a.nodeName),
                        e = 1 < b.length ? b[1] : 0,
                        f = 1 < d.length ? d[1] : 0;
                    if (e < f) {
                        return -1
                    } else if (f < e) {
                        return 1
                    } else {
                        return 0
                    }
                });
                var m = l.map(function(a) {
                        return a.nodeValue
                    }),
                    n = [d, f].concat(m);
                k.go.apply(null, n);
                c.originalEvent.preventDefault()
            });
            e.on(b.events.activate, p.ROUTES_BACK, function(a, b) {
                k.back(d);
                b.originalEvent.preventDefault()
            });
            e.on("hide.bs.collapse", ".collapse", function(b) {
                var c = new n;
                a(b.target).one("hidden.bs.collapse", function() {
                    c.resolve()
                })
            });
            e.on("show.bs.collapse", ".collapse", function(b) {
                var c = new n;
                a(b.target).one("shown.bs.collapse", function() {
                    c.resolve()
                })
            });
            if (!f) {
                c.subscribe(m.SHOW, function() {
                    t(d, e)
                });
                c.subscribe(m.HIDE, function() {
                    u(e)
                });
                c.subscribe(m.TOGGLE_VISIBILITY, function() {
                    if (v(e)) {
                        u(e)
                    } else {
                        t(d, e)
                    }
                })
            }
            c.subscribe(m.SHOW_CONVERSATION, function(a) {
                t(d, e);
                k.go(d, l.VIEW_CONVERSATION, a)
            });
            c.subscribe(m.CREATE_CONVERSATION_WITH_USER, function(a) {
                t(d, e);
                k.go(d, l.VIEW_CONVERSATION, null, "create", a)
            });
            c.subscribe(m.SHOW_SETTINGS, function() {
                t(d, e);
                k.go(d, l.VIEW_SETTINGS)
            });
            c.subscribe(m.PREFERENCES_UPDATED, function(a) {
                var b = a.filter(function(a) {
                        return "message_entertosend" == a.type
                    }),
                    c = b.length ? b[0] : null;
                if (c) {
                    var d = e.find(p.FOOTER_CONTAINER).find(p.VIEW_CONVERSATION);
                    d.attr("data-enter-to-send", c.value)
                }
            })
        };
    return {
        init: function init(b, c, d, e) {
            b = a(b);
            s(c, b);
            w(c, b, d);
            if (d) {
                t(c, b);
                if (e) {
                    var f = e.params || [];
                    f = [c, e.path].concat(f);
                    k.go.apply(null, f)
                }
            }
        }
    }
});
define("core_message/message_repository", ["jquery", "core/ajax", "core/notification", "core_message/message_drawer_view_conversation_constants"], function(a, b, c, d) {
    var e = d.CONVERSATION_TYPES,
        f = function(a, c) {
            var d = c.map(function(b) {
                return {
                    touserid: a,
                    text: b
                }
            });
            return b.call([{
                methodname: "core_message_send_instant_messages",
                args: {
                    messages: d
                }
            }])[0].then(function(a) {
                var b = a.reduce(function(a, b) {
                    if (b.errormessage) {
                        a.push(b.errormessage)
                    }
                    return a
                }, []);
                if (b.length) {
                    throw new Error(b.join("\n"))
                }
                return a
            }).then(function(a) {
                return a.map(function(a) {
                    return {
                        id: a.msgid,
                        text: a.text,
                        timecreated: a.timecreated,
                        useridfrom: a.useridfrom,
                        conversationid: a.conversationid,
                        candeletemessagesforallusers: a.candeletemessagesforallusers
                    }
                })
            })
        },
        g = function(a, c) {
            var d = c.map(function(a) {
                return {
                    text: a
                }
            });
            return b.call([{
                methodname: "core_message_send_messages_to_conversation",
                args: {
                    conversationid: a,
                    messages: d
                }
            }])[0]
        };
    return {
        query: function query(a) {
            if ("undefined" == typeof a.limit) {
                a.limit = 0
            }
            if ("undefined" == typeof a.offset) {
                a.offset = 0
            }
            if ("undefined" == typeof a.type) {
                a.type = null
            }
            if ("undefined" == typeof a.favouritesonly) {
                a.favouritesonly = !1
            }
            a.limitfrom = a.offset;
            a.limitnum = a.limit;
            delete a.limit;
            delete a.offset;
            var d = b.call([{
                methodname: "core_message_data_for_messagearea_conversations",
                args: a
            }])[0];
            d.fail(c.exception);
            return d
        },
        countUnreadConversations: function countUnreadConversations(a) {
            var d = b.call([{
                methodname: "core_message_get_unread_conversations_count",
                args: a
            }])[0];
            d.fail(c.exception);
            return d
        },
        markAllAsRead: function markAllAsRead(a) {
            var d = b.call([{
                methodname: "core_message_mark_all_messages_as_read",
                args: a
            }])[0];
            d.fail(c.exception);
            return d
        },
        getContacts: function getContacts(a, c, d) {
            var e = {
                userid: a
            };
            if ("undefined" != typeof c) {
                e.limitnum = c
            }
            if ("undefined" != typeof d) {
                e.limitfrom = d
            }
            return b.call([{
                methodname: "core_message_get_user_contacts",
                args: e
            }])[0]
        },
        getProfile: function getProfile(a, c) {
            return b.call([{
                methodname: "core_message_data_for_messagearea_get_profile",
                args: {
                    currentuserid: a,
                    otheruserid: c
                }
            }])[0]
        },
        blockUser: function blockUser(c, d) {
            return a.when.apply(null, b.call([{
                methodname: "core_message_block_user",
                args: {
                    userid: c,
                    blockeduserid: d
                }
            }, {
                methodname: "core_message_get_member_info",
                args: {
                    referenceuserid: c,
                    userids: [d],
                    includecontactrequests: !0,
                    includeprivacyinfo: !0
                }
            }])).then(function(a, b) {
                return b.length ? b[0] : {}
            })
        },
        unblockUser: function unblockUser(c, d) {
            return a.when.apply(null, b.call([{
                methodname: "core_message_unblock_user",
                args: {
                    userid: c,
                    unblockeduserid: d
                }
            }, {
                methodname: "core_message_get_member_info",
                args: {
                    referenceuserid: c,
                    userids: [d],
                    includecontactrequests: !0,
                    includeprivacyinfo: !0
                }
            }])).then(function(a, b) {
                return b.length ? b[0] : {}
            })
        },
        createContactRequest: function createContactRequest(a, c) {
            return b.call([{
                methodname: "core_message_create_contact_request",
                args: {
                    userid: a,
                    requesteduserid: c
                }
            }])[0]
        },
        deleteContacts: function deleteContacts(c, d) {
            return a.when.apply(null, b.call([{
                methodname: "core_message_delete_contacts",
                args: {
                    userid: c,
                    userids: d
                }
            }, {
                methodname: "core_message_get_member_info",
                args: {
                    referenceuserid: c,
                    userids: d,
                    includecontactrequests: !0,
                    includeprivacyinfo: !0
                }
            }])).then(function(a, b) {
                return b
            })
        },
        getMessages: function getMessages(a, c, d, e, f, g) {
            var h = {
                currentuserid: a,
                convid: c,
                newest: f ? !0 : !1
            };
            if ("undefined" != typeof d) {
                h.limitnum = d
            }
            if ("undefined" != typeof e) {
                h.limitfrom = e
            }
            if ("undefined" != typeof g) {
                h.timefrom = g
            }
            return b.call([{
                methodname: "core_message_get_conversation_messages",
                args: h
            }])[0]
        },
        searchUsers: function searchUsers(a, c, d, e) {
            var f = {
                userid: a,
                search: c
            };
            if ("undefined" != typeof d) {
                f.limitnum = d
            }
            if ("undefined" != typeof e) {
                f.limitfrom = e
            }
            return b.call([{
                methodname: "core_message_message_search_users",
                args: f
            }])[0]
        },
        searchMessages: function searchMessages(a, c, d, e) {
            var f = {
                userid: a,
                search: c
            };
            if ("undefined" != typeof d) {
                f.limitnum = d
            }
            if ("undefined" != typeof e) {
                f.limitfrom = e
            }
            return b.call([{
                methodname: "core_message_data_for_messagearea_search_messages",
                args: f
            }])[0]
        },
        sendMessagesToUser: f,
        sendMessageToUser: function sendMessageToUser(a, b) {
            return f(a, [b]).then(function(a) {
                return a[0]
            })
        },
        sendMessagesToConversation: g,
        sendMessageToConversation: function sendMessageToConversation(a, b) {
            return g(a, [b]).then(function(a) {
                return a[0]
            })
        },
        savePreferences: function savePreferences(a, c) {
            return b.call([{
                methodname: "core_user_update_user_preferences",
                args: {
                    userid: a,
                    preferences: c
                }
            }])[0]
        },
        getPreferences: function getPreferences(a) {
            return b.call([{
                methodname: "core_user_get_user_preferences",
                args: {
                    userid: a
                }
            }])[0]
        },
        deleteMessages: function deleteMessages(c, d) {
            return a.when.apply(null, b.call(d.map(function(a) {
                return {
                    methodname: "core_message_delete_message",
                    args: {
                        messageid: a,
                        userid: c
                    }
                }
            })))
        },
        deleteMessagesForAllUsers: function deleteMessagesForAllUsers(c, d) {
            return a.when.apply(null, b.call(d.map(function(a) {
                return {
                    methodname: "core_message_delete_message_for_all_users",
                    args: {
                        messageid: a,
                        userid: c
                    }
                }
            })))
        },
        deleteConversation: function deleteConversation(a, c) {
            return b.call([{
                methodname: "core_message_delete_conversations_by_id",
                args: {
                    userid: a,
                    conversationids: [c]
                }
            }])[0]
        },
        getContactRequests: function getContactRequests(a) {
            return b.call([{
                methodname: "core_message_get_contact_requests",
                args: {
                    userid: a
                }
            }])[0]
        },
        acceptContactRequest: function acceptContactRequest(c, d) {
            return a.when.apply(null, b.call([{
                methodname: "core_message_confirm_contact_request",
                args: {
                    userid: c,
                    requesteduserid: d
                }
            }, {
                methodname: "core_message_get_member_info",
                args: {
                    referenceuserid: d,
                    userids: [c],
                    includecontactrequests: !0,
                    includeprivacyinfo: !0
                }
            }])).then(function(a, b) {
                return b.length ? b[0] : {}
            })
        },
        declineContactRequest: function declineContactRequest(c, d) {
            return a.when.apply(null, b.call([{
                methodname: "core_message_decline_contact_request",
                args: {
                    userid: c,
                    requesteduserid: d
                }
            }, {
                methodname: "core_message_get_member_info",
                args: {
                    referenceuserid: d,
                    userids: [c],
                    includecontactrequests: !0,
                    includeprivacyinfo: !0
                }
            }])).then(function(a, b) {
                return b.length ? b[0] : {}
            })
        },
        getConversation: function getConversation(a, c, d, e, f, g, h, i, j) {
            var k = {
                userid: a,
                conversationid: c
            };
            if ("undefined" != typeof d && null !== d) {
                k.includecontactrequests = d
            }
            if ("undefined" != typeof e && null !== e) {
                k.includeprivacyinfo = e
            }
            if ("undefined" != typeof f && null !== f) {
                k.memberlimit = f
            }
            if ("undefined" != typeof g && null !== g) {
                k.memberoffset = g
            }
            if ("undefined" != typeof h && null !== h) {
                k.messagelimit = h
            }
            if ("undefined" != typeof i && null !== i) {
                k.messageoffset = i
            }
            if ("undefined" != typeof j && null !== j) {
                k.newestmessagesfirst = j
            }
            return b.call([{
                methodname: "core_message_get_conversation",
                args: k
            }])[0]
        },
        getConversationBetweenUsers: function getConversationBetweenUsers(a, c, d, e, f, g, h, i, j) {
            var k = {
                userid: a,
                otheruserid: c
            };
            if ("undefined" != typeof d && null !== d) {
                k.includecontactrequests = d
            }
            if ("undefined" != typeof e && null !== e) {
                k.includeprivacyinfo = e
            }
            if ("undefined" != typeof f && null !== f) {
                k.memberlimit = f
            }
            if ("undefined" != typeof g && null !== g) {
                k.memberoffset = g
            }
            if ("undefined" != typeof h && null !== h) {
                k.messagelimit = h
            }
            if ("undefined" != typeof i && null !== i) {
                k.messageoffset = i
            }
            if ("undefined" != typeof j && null !== j) {
                k.newestmessagesfirst = j
            }
            return b.call([{
                methodname: "core_message_get_conversation_between_users",
                args: k
            }])[0]
        },
        getSelfConversation: function getSelfConversation(a, c, d, e) {
            var f = {
                userid: a
            };
            if ("undefined" != typeof c && null !== c) {
                f.messagelimit = c
            }
            if ("undefined" != typeof d && null !== d) {
                f.messageoffset = d
            }
            if ("undefined" != typeof e && null !== e) {
                f.newestmessagesfirst = e
            }
            return b.call([{
                methodname: "core_message_get_self_conversation",
                args: f
            }])[0]
        },
        getConversations: function getConversations(a, c, d, f, g, h) {
            var i = {
                userid: a,
                type: c
            };
            if ("undefined" != typeof d && null !== d) {
                i.limitnum = d
            }
            if ("undefined" != typeof f && null !== f) {
                i.limitfrom = f
            }
            if ("undefined" != typeof g && null !== g) {
                i.favourites = g
            }
            if ("undefined" != typeof h && null !== h) {
                i.mergeself = h
            }
            return b.call([{
                methodname: "core_message_get_conversations",
                args: i
            }])[0].then(function(a) {
                if (a.conversations.length) {
                    a.conversations = a.conversations.map(function(a) {
                        if (a.type == e.PRIVATE || a.type == e.SELF) {
                            var b = a.members.length ? a.members[0] : null;
                            if (b) {
                                a.name = a.name ? a.name : b.fullname;
                                a.imageurl = a.imageurl ? a.imageurl : b.profileimageurl
                            }
                        }
                        return a
                    })
                }
                return a
            })
        },
        getConversationMembers: function getConversationMembers(a, c, d, e, f) {
            var g = {
                userid: c,
                conversationid: a
            };
            if ("undefined" != typeof d && null !== d) {
                g.limitnum = d
            }
            if ("undefined" != typeof e && null !== e) {
                g.limitfrom = e
            }
            if ("undefined" != typeof f && null !== f) {
                g.includecontactrequests = f
            }
            return b.call([{
                methodname: "core_message_get_conversation_members",
                args: g
            }])[0]
        },
        setFavouriteConversations: function setFavouriteConversations(a, c) {
            return b.call([{
                methodname: "core_message_set_favourite_conversations",
                args: {
                    userid: a,
                    conversations: c
                }
            }])[0]
        },
        setMutedConversations: function setMutedConversations(a, c) {
            return b.call([{
                methodname: "core_message_mute_conversations",
                args: {
                    userid: a,
                    conversationids: c
                }
            }])[0]
        },
        unsetFavouriteConversations: function unsetFavouriteConversations(a, c) {
            return b.call([{
                methodname: "core_message_unset_favourite_conversations",
                args: {
                    userid: a,
                    conversations: c
                }
            }])[0]
        },
        unsetMutedConversations: function unsetMutedConversations(a, c) {
            return b.call([{
                methodname: "core_message_unmute_conversations",
                args: {
                    userid: a,
                    conversationids: c
                }
            }])[0]
        },
        getMemberInfo: function getMemberInfo(a, c, d, e) {
            var f = {
                referenceuserid: a,
                userids: c
            };
            if ("undefined" != typeof d) {
                f.includecontactrequests = d
            }
            if ("undefined" != typeof e) {
                f.includeprivacyinfo = e
            }
            return b.call([{
                methodname: "core_message_get_member_info",
                args: f
            }])[0]
        },
        markAllConversationMessagesAsRead: function markAllConversationMessagesAsRead(a, c) {
            return b.call([{
                methodname: "core_message_mark_all_conversation_messages_as_read",
                args: {
                    userid: a,
                    conversationid: c
                }
            }])[0]
        },
        getUserMessagePreferences: function getUserMessagePreferences(a) {
            return b.call([{
                methodname: "core_message_get_user_message_preferences",
                args: {
                    userid: a
                }
            }])[0]
        },
        getTotalConversationCounts: function getTotalConversationCounts(a) {
            return b.call([{
                methodname: "core_message_get_conversation_counts",
                args: {
                    userid: a
                }
            }])[0]
        },
        getUnreadConversationCounts: function getUnreadConversationCounts(a) {
            return b.call([{
                methodname: "core_message_get_unread_conversation_counts",
                args: {
                    userid: a
                }
            }])[0]
        },
        getAllConversationCounts: function getAllConversationCounts(c) {
            return a.when.apply(null, b.call([{
                methodname: "core_message_get_conversation_counts",
                args: {
                    userid: c
                }
            }, {
                methodname: "core_message_get_unread_conversation_counts",
                args: {
                    userid: c
                }
            }])).then(function(a, b) {
                return {
                    total: a,
                    unread: b
                }
            })
        }
    }
});
define("core_message/toggle_contact_button", ["jquery", "core/ajax", "core/templates", "core/notification", "core/custom_interaction_events"], function(a, b, c, d, e) {
    var f = function(a) {
            return "1" == a.attr("data-is-contact")
        },
        g = function(a) {
            a.attr("data-is-contact", "1")
        },
        h = function(a) {
            a.attr("data-is-contact", "0")
        },
        i = function(a) {
            return a.attr("data-userid")
        },
        j = function(a) {
            return a.hasClass("loading") || a.attr("disabled")
        },
        k = function(c, e) {
            if (j(c)) {
                return a.Deferred()
            }
            c.addClass("loading");
            c.attr("disabled", "disabled");
            return b.call([e])[0].fail(d.exception).always(function() {
                c.removeClass("loading");
                c.removeAttr("disabled")
            })
        },
        l = function(a) {
            if (j(a)) {
                return
            }
            var b = {
                methodname: "core_message_create_contacts",
                args: {
                    userids: [i(a)]
                }
            };
            k(a, b).done(function() {
                g(a);
                c.render("message/remove_contact_button", {}).done(function(b, d) {
                    c.replaceNodeContents(a, b, d)
                })
            })
        },
        m = function(a) {
            if (j(a)) {
                return
            }
            var b = {
                methodname: "core_message_delete_contacts",
                args: {
                    userids: [i(a)]
                }
            };
            k(a, b).done(function() {
                h(a);
                c.render("message/add_contact_button", {}).done(function(b, d) {
                    c.replaceNodeContents(a, b, d)
                })
            })
        };
    return {
        enhance: function enhance(b) {
            b = a(b);
            if (!b.children(".loading-icon").length) {
                c.render("core/loading", {}).done(function(a, c) {
                    b.append(a, c)
                })
            }
            e.define(b, [e.events.activate]);
            b.on(e.events.activate, function(a, c) {
                if (f(b)) {
                    m(b)
                } else {
                    l(b)
                }
                a.preventDefault();
                c.originalEvent.preventDefault()
            })
        }
    }
});
define("core_message/message_drawer_view_settings", ["jquery", "core/notification", "core/str", "core/pubsub", "core/templates", "core_message/message_repository", "core/custom_interaction_events", "core_message/message_drawer_events"], function(a, b, c, d, e, f, g, h) {
    var i = {
            CHECKBOX: "input[type=\"checkbox\"]",
            SETTINGS: "[data-region=\"settings\"]",
            PRIVACY_PREFERENCE: "[data-preference=\"blocknoncontacts\"] input[type=\"radio\"]",
            NOTIFICATIONS_PREFERENCE: "[data-preference=\"notifications\"] input[type=\"checkbox\"]",
            ENTER_TO_SEND_PREFERENCE: "[data-preference=\"entertosend\"] input[type=\"checkbox\"]",
            NOTIFICATION_PREFERENCES_CONTAINER: "[data-region=\"notification-preference-container\"]",
            CONTENT_CONTAINER: "[data-region=\"content-container\"]",
            PLACEHOLDER_CONTAINER: "[data-region=\"placeholder-container\"]"
        },
        j = {
            NOTIFICATION_PREFERENCES: "core_message/message_drawer_view_settings_body_content_notification_preferences"
        },
        k = function(b, c) {
            var d = b.find(i.PRIVACY_PREFERENCE);
            d.each(function(b, d) {
                d = a(d);
                if (d.val() == c) {
                    d.prop("checked", !0)
                } else {
                    d.prop("checked", !1)
                }
            })
        },
        l = function(a, b) {
            var c = a.find(i.ENTER_TO_SEND_PREFERENCE);
            if (b) {
                c.prop("checked", !0)
            } else {
                c.prop("checked", !1)
            }
        },
        m = function(a, c) {
            return f.savePreferences(a, c).then(function() {
                d.publish(h.PREFERENCES_UPDATED, c)
            }).catch(b.exception)
        },
        n = function(b, c) {
            var d = b.find(i.SETTINGS);
            g.define(d, [g.events.activate]);
            d.on(g.events.activate, i.NOTIFICATIONS_PREFERENCE, function(b) {
                var d = a(b.target).closest(i.NOTIFICATION_PREFERENCES_CONTAINER),
                    e = d.find(i.CHECKBOX);
                if (!e.length) {
                    return
                }
                var f = e.toArray().reduce(function(b, c) {
                        c = a(c);
                        if (c.prop("checked")) {
                            b.push(c.attr("data-name"))
                        }
                        return b
                    }, []),
                    g = f.length ? f.join(",") : "none";
                m(c, [{
                    type: "message_provider_moodle_instantmessage_loggedoff",
                    value: g
                }, {
                    type: "message_provider_moodle_instantmessage_loggedin",
                    value: g
                }])
            });
            d.on("change", i.PRIVACY_PREFERENCE, function(b) {
                var d = a(b.target).val();
                m(c, [{
                    type: "message_blocknoncontacts",
                    value: d
                }])
            });
            d.on(g.events.activate, i.ENTER_TO_SEND_PREFERENCE, function(b) {
                var d = a(b.target).prop("checked");
                m(c, [{
                    type: "message_entertosend",
                    value: d
                }])
            })
        },
        o = function(a, c) {
            f.getUserMessagePreferences(c).then(function(b) {
                k(a, b.blocknoncontacts);
                l(a, b.entertosend);
                var c = [];
                if (b.preferences.components.length) {
                    b.preferences.components.forEach(function(a) {
                        if (a.notifications.length) {
                            var b = a.notifications.filter(function(a) {
                                return a.preferencekey == "message_provider_moodle_instantmessage"
                            });
                            if (b.length) {
                                var d = a.notifications[0];
                                c = d.processors.map(function(a) {
                                    var b = a.loggedin.checked || a.loggedoff.checked;
                                    return {
                                        displayname: a.displayname,
                                        name: a.name,
                                        checked: b,
                                        locked: a.locked,
                                        lockedmessage: a.lockedmessage || null
                                    }
                                })
                            }
                        }
                    })
                }
                var d = a.find(i.NOTIFICATION_PREFERENCES_CONTAINER);
                if (c.length) {
                    d.removeClass("hidden");
                    return e.render(j.NOTIFICATION_PREFERENCES, {
                        processors: c
                    }).then(function(a) {
                        d.append(a);
                        return a
                    })
                } else {
                    return !0
                }
            }).then(function() {
                a.find(i.CONTENT_CONTAINER).removeClass("hidden");
                a.find(i.PLACEHOLDER_CONTAINER).addClass("hidden");
                n(a, c)
            }).catch(b.exception)
        };
    return {
        show: function show(b, c, d, e, f) {
            if (!d.attr("data-init")) {
                o(d, f);
                d.attr("data-init", !0)
            }
            return a.Deferred().resolve().promise()
        },
        description: function description() {
            return c.get_string("messagedrawerviewsettings", "core_message")
        }
    }
});
define("core_message/message_drawer_view_contacts_section_requests", ["jquery", "core/notification", "core/pubsub", "core/templates", "core_message/message_repository", "core_message/message_drawer_events", "core_message/message_drawer_lazy_load_list"], function(a, b, c, d, e, f, g) {
    var h = {
            CONTACT_REQUEST: "[data-region=\"contact-request\"]"
        },
        i = {
            REQUESTS_LIST: "core_message/message_drawer_view_contacts_body_section_requests_list"
        },
        j = function(a, c) {
            var e = c.map(function(a) {
                return {
                    id: a.id,
                    profileimageurl: a.profileimageurl,
                    fullname: a.fullname
                }
            });
            return d.render(i.REQUESTS_LIST, {
                requests: e
            }).then(function(b) {
                a.append(b);
                return b
            }).catch(b.exception)
        },
        k = function(a, c) {
            return e.getContactRequests(c).then(function(b) {
                g.setLoadedAll(a, !0);
                return b
            }).catch(b.exception)
        },
        l = function(a) {
            return function(b) {
                a.find("[data-request-id=\"" + b.userid + "\"]").remove();
                var c = a.find(h.CONTACT_REQUEST);
                if (!c.length) {
                    g.showEmptyMessage(a);
                    g.hideContent(a)
                }
            }
        },
        m = function(a) {
            c.subscribe(f.CONTACT_REQUEST_ACCEPTED, l(a));
            c.subscribe(f.CONTACT_REQUEST_DECLINED, l(a))
        };
    return {
        show: function show(a) {
            if (!a.attr("data-contacts-init")) {
                m(a);
                a.attr("data-contacts-init", !0)
            }
            g.show(a, k, j)
        }
    }
});

function _typeof(a) {
    if ("function" == typeof Symbol && "symbol" == typeof Symbol.iterator) {
        _typeof = function(a) {
            return typeof a
        }
    } else {
        _typeof = function(a) {
            return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
        }
    }
    return _typeof(a)
}
define("core_message/message_drawer_view_search", ["jquery", "core/custom_interaction_events", "core/notification", "core/pubsub", "core/str", "core/templates", "core_message/message_repository", "core_message/message_drawer_events"], function(a, b, c, d, e, f, g, h) {
    var i = 50,
        j = 3,
        k = {
            BLOCK_ICON_CONTAINER: "[data-region=\"block-icon-container\"]",
            CANCEL_SEARCH_BUTTON: "[data-action=\"cancel-search\"]",
            CONTACTS_CONTAINER: "[data-region=\"contacts-container\"]",
            CONTACTS_LIST: "[data-region=\"contacts-container\"] [data-region=\"list\"]",
            EMPTY_MESSAGE_CONTAINER: "[data-region=\"empty-message-container\"]",
            LIST: "[data-region=\"list\"]",
            LOADING_ICON_CONTAINER: "[data-region=\"loading-icon-container\"]",
            LOADING_PLACEHOLDER: "[data-region=\"loading-placeholder\"]",
            MESSAGES_LIST: "[data-region=\"messages-container\"] [data-region=\"list\"]",
            MESSAGES_CONTAINER: "[data-region=\"messages-container\"]",
            NON_CONTACTS_CONTAINER: "[data-region=\"non-contacts-container\"]",
            NON_CONTACTS_LIST: "[data-region=\"non-contacts-container\"] [data-region=\"list\"]",
            SEARCH_ICON_CONTAINER: "[data-region=\"search-icon-container\"]",
            SEARCH_ACTION: "[data-action=\"search\"]",
            SEARCH_INPUT: "[data-region=\"search-input\"]",
            SEARCH_RESULTS_CONTAINER: "[data-region=\"search-results-container\"]",
            LOAD_MORE_USERS: "[data-action=\"load-more-users\"]",
            LOAD_MORE_MESSAGES: "[data-action=\"load-more-messages\"]",
            BUTTON_TEXT: "[data-region=\"button-text\"]",
            NO_RESULTS_CONTAINTER: "[data-region=\"no-results-container\"]",
            ALL_CONTACTS_CONTAINER: "[data-region=\"all-contacts-container\"]"
        },
        l = {
            CONTACTS_LIST: "core_message/message_drawer_contacts_list",
            NON_CONTACTS_LIST: "core_message/message_drawer_non_contacts_list",
            MESSAGES_LIST: "core_message/message_drawer_messages_list"
        },
        m = function(a) {
            return a.attr("data-user-id")
        },
        n = function(a) {
            return a.find(k.EMPTY_MESSAGE_CONTAINER)
        },
        o = function(a) {
            return a.find(k.LOADING_ICON_CONTAINER)
        },
        p = function(a) {
            return a.find(k.LOADING_PLACEHOLDER)
        },
        q = function(a) {
            return a.find(k.SEARCH_ICON_CONTAINER)
        },
        r = function(a) {
            return a.find(k.SEARCH_INPUT)
        },
        s = function(a) {
            return a.find(k.SEARCH_RESULTS_CONTAINER)
        },
        t = function(a) {
            return a.find(k.CONTACTS_CONTAINER)
        },
        u = function(a) {
            return a.find(k.NON_CONTACTS_CONTAINER)
        },
        v = function(a) {
            return a.find(k.MESSAGES_CONTAINER)
        },
        w = function(a) {
            n(a).removeClass("hidden")
        },
        x = function(a) {
            n(a).addClass("hidden")
        },
        y = function(a) {
            o(a).removeClass("hidden")
        },
        z = function(a) {
            o(a).addClass("hidden")
        },
        A = function(a) {
            p(a).removeClass("hidden")
        },
        B = function(a) {
            p(a).addClass("hidden")
        },
        C = function(a) {
            q(a).removeClass("hidden")
        },
        D = function(a) {
            q(a).addClass("hidden")
        },
        E = function(a) {
            s(a).removeClass("hidden")
        },
        F = function(a) {
            s(a).addClass("hidden")
        },
        G = function(a) {
            var b = s(a);
            b.find(k.ALL_CONTACTS_CONTAINER).addClass("hidden");
            b.find(k.MESSAGES_CONTAINER).addClass("hidden");
            b.find(k.NO_RESULTS_CONTAINTER).removeClass("hidden")
        },
        H = function(a) {
            var b = s(a);
            b.find(k.ALL_CONTACTS_CONTAINER).removeClass("hidden");
            b.find(k.MESSAGES_CONTAINER).removeClass("hidden");
            b.find(k.NO_RESULTS_CONTAINTER).addClass("hidden")
        },
        I = function(a) {
            var b = s(a);
            b.find(k.ALL_CONTACTS_CONTAINER).removeClass("hidden")
        },
        J = function(a) {
            var b = s(a);
            b.find(k.ALL_CONTACTS_CONTAINER).addClass("hidden")
        },
        K = function(a) {
            var b = s(a);
            b.find(k.CONTACTS_CONTAINER).removeClass("hidden")
        },
        L = function(a) {
            var b = s(a);
            b.find(k.CONTACTS_CONTAINER).addClass("hidden")
        },
        M = function(a) {
            var b = s(a);
            b.find(k.NON_CONTACTS_CONTAINER).removeClass("hidden")
        },
        N = function(a) {
            var b = s(a);
            b.find(k.NON_CONTACTS_CONTAINER).addClass("hidden")
        },
        O = function(a) {
            var b = s(a);
            b.find(k.MESSAGES_CONTAINER).removeClass("hidden")
        },
        P = function(a) {
            var b = s(a);
            b.find(k.MESSAGES_CONTAINER).addClass("hidden")
        },
        Q = function(a) {
            r(a).prop("disabled", !0)
        },
        R = function(a) {
            r(a).prop("disabled", !1)
        },
        S = function(a) {
            r(a).val("")
        },
        T = function(a) {
            a.find(k.CONTACTS_LIST).empty();
            a.find(k.NON_CONTACTS_LIST).empty();
            a.find(k.MESSAGES_LIST).empty();
            H(a);
            I(a);
            K(a);
            M(a);
            O(a);
            Y(a);
            aa(a)
        },
        U = function(a, b) {
            D(a);
            x(b);
            F(b);
            y(a);
            A(b);
            Q(a)
        },
        V = function(a, b) {
            C(a);
            x(b);
            E(b);
            z(a);
            B(b);
            R(a)
        },
        W = function(a) {
            var b = a.find(k.LOAD_MORE_USERS);
            b.prop("disabled", !0);
            b.find(k.BUTTON_TEXT).addClass("hidden");
            b.find(k.LOADING_ICON_CONTAINER).removeClass("hidden")
        },
        X = function(a) {
            var b = a.find(k.LOAD_MORE_USERS);
            b.prop("disabled", !1);
            b.find(k.BUTTON_TEXT).removeClass("hidden");
            b.find(k.LOADING_ICON_CONTAINER).addClass("hidden")
        },
        Y = function(a) {
            a.find(k.LOAD_MORE_USERS).removeClass("hidden")
        },
        Z = function(a) {
            a.find(k.LOAD_MORE_USERS).addClass("hidden")
        },
        $ = function(a) {
            var b = a.find(k.LOAD_MORE_MESSAGES);
            b.prop("disabled", !0);
            b.find(k.BUTTON_TEXT).addClass("hidden");
            b.find(k.LOADING_ICON_CONTAINER).removeClass("hidden")
        },
        _ = function(a) {
            var b = a.find(k.LOAD_MORE_MESSAGES);
            b.prop("disabled", !1);
            b.find(k.BUTTON_TEXT).removeClass("hidden");
            b.find(k.LOADING_ICON_CONTAINER).addClass("hidden")
        },
        aa = function(a) {
            a.find(k.LOAD_MORE_MESSAGES).removeClass("hidden")
        },
        ba = function(a) {
            a.find(k.LOAD_MORE_MESSAGES).addClass("hidden")
        },
        ca = function(a, b) {
            return a.find("[data-contact-user-id=\"" + b + "\"]")
        },
        da = function(a, b) {
            var c = u(a),
                d = ca(c, b.userid);
            if (d.length) {
                d.remove();
                var e = t(a);
                e.removeClass("hidden");
                e.find(k.LIST).append(d)
            }
            if (!c.find(k.LIST).children().length) {
                c.addClass("hidden")
            }
        },
        ea = function(a, b) {
            var c = t(a),
                d = ca(c, b);
            if (d.length) {
                d.remove();
                var e = u(a);
                e.removeClass("hidden");
                e.find(k.LIST).append(d)
            }
            if (!c.find(k.LIST).children().length) {
                c.addClass("hidden")
            }
        },
        fa = function(a, b) {
            var c = ca(a, b);
            if (c.length) {
                c.find(k.BLOCK_ICON_CONTAINER).removeClass("hidden")
            }
        },
        ga = function(a, b) {
            var c = ca(a, b);
            if (c.length) {
                c.find(k.BLOCK_ICON_CONTAINER).addClass("hidden")
            }
        },
        ha = function(a, b) {
            if (!a) {
                return ""
            }
            var c = new RegExp("(" + b + ")", "gi");
            return a.replace(c, "<span class=\"matchtext\">$1</span>")
        },
        ia = function(a, b) {
            var c = t(a),
                d = a.attr("data-in-panel"),
                e = c.find(k.LIST);
            return f.render(l.CONTACTS_LIST, {
                contacts: b,
                frompanel: d
            }).then(function(a) {
                e.append(a);
                return a
            })
        },
        ja = function(a, b) {
            var c = u(a),
                d = a.attr("data-in-panel"),
                e = c.find(k.LIST);
            return f.render(l.NON_CONTACTS_LIST, {
                noncontacts: b,
                frompanel: d
            }).then(function(a) {
                e.append(a);
                return a
            })
        },
        ka = function(a, b) {
            var c = v(a),
                d = a.attr("data-in-panel"),
                e = c.find(k.LIST);
            return f.render(l.MESSAGES_LIST, {
                messages: b,
                frompanel: d
            }).then(function(a) {
                e.append(a);
                return a
            })
        },
        la = function(b, c, d, e, f) {
            var h = !1;
            W(b);
            return g.searchUsers(c, d, e + 1, f).then(function(a) {
                var b = a.contacts,
                    c = a.noncontacts;
                if (b.length <= e && c.length <= e) {
                    h = !0;
                    return {
                        contacts: b,
                        noncontacts: c
                    }
                } else {
                    return {
                        contacts: b.slice(0, e),
                        noncontacts: c.slice(0, e)
                    }
                }
            }).then(function(c) {
                var e = c.contacts.length,
                    f = c.noncontacts.length;
                if (e) {
                    c.contacts.forEach(function(a) {
                        a.highlight = ha(a.fullname, d)
                    })
                }
                if (f) {
                    c.noncontacts.forEach(function(a) {
                        a.highlight = ha(a.fullname, d)
                    })
                }
                return a.when(e ? ia(b, c.contacts) : !0, f ? ja(b, c.noncontacts) : !0).then(function() {
                    return {
                        contactsCount: e,
                        nonContactsCount: f
                    }
                })
            }).then(function(a) {
                X(b);
                if (h) {
                    Z(b)
                }
                return a
            }).catch(function(a) {
                X(b);
                throw a
            })
        },
        ma = function(a, b, c, d, e) {
            var f = !1;
            $(a);
            return g.searchMessages(b, c, d + 1, e).then(function(a) {
                var b = a.contacts;
                if (b.length <= d) {
                    f = !0;
                    return b
                } else {
                    return b.slice(0, d)
                }
            }).then(function(b) {
                if (b.length) {
                    b.forEach(function(a) {
                        a.lastmessage = ha(a.lastmessage, c)
                    });
                    return ka(a, b).then(function() {
                        return b.length
                    })
                } else {
                    return b.length
                }
            }).then(function(b) {
                _(a);
                if (f) {
                    ba(a)
                }
                return b
            }).catch(function(b) {
                _(a);
                throw b
            })
        },
        na = function(b, c, d, e, f, g, h) {
            var i = m(c);
            U(b, c);
            T(c);
            return a.when(la(c, i, d, e, f), ma(c, i, d, g, h)).then(function(a, d) {
                var e = a.contactsCount,
                    f = a.nonContactsCount;
                V(b, c);
                if (!e && !f && !d) {
                    G(c)
                } else {
                    if (!e && !f) {
                        J(c)
                    } else {
                        if (!e) {
                            L(c)
                        }
                        if (!f) {
                            N(c)
                        }
                    }
                    if (!d) {
                        P(c)
                    }
                }
            })
        },
        oa = function(a, e) {
            var f = m(e),
                g = r(a),
                l = "",
                n = 0,
                o = 0,
                p = function(b, d) {
                    l = g.val().trim();
                    if ("" !== l) {
                        n = 0;
                        o = 0;
                        na(a, e, l, j, o, 50, n).then(function() {
                            g.focus();
                            o = o + j;
                            n = n + 50
                        }).catch(c.exception)
                    }
                    d.originalEvent.preventDefault()
                };
            b.define(g, [b.events.enter]);
            b.define(a, [b.events.activate]);
            b.define(e, [b.events.activate]);
            g.on(b.events.enter, p);
            a.on(b.events.activate, k.SEARCH_ACTION, p);
            e.on(b.events.activate, k.LOAD_MORE_MESSAGES, function(a, b) {
                if ("" !== l) {
                    ma(e, f, l, 50, n).then(function() {
                        n = n + 50
                    }).catch(c.exception)
                }
                b.originalEvent.preventDefault()
            });
            e.on(b.events.activate, k.LOAD_MORE_USERS, function(a, b) {
                if ("" !== l) {
                    la(e, f, l, i, o).then(function() {
                        o = o + i
                    }).catch(c.exception)
                }
                b.originalEvent.preventDefault()
            });
            a.on(b.events.activate, k.CANCEL_SEARCH_BUTTON, function() {
                S(a);
                w(e);
                C(a);
                F(e);
                z(a);
                B(e);
                o = 0;
                n = 0
            });
            d.subscribe(h.CONTACT_ADDED, function(a) {
                da(e, a)
            });
            d.subscribe(h.CONTACT_REMOVED, function(a) {
                ea(e, a)
            });
            d.subscribe(h.CONTACT_BLOCKED, function(a) {
                fa(e, a)
            });
            d.subscribe(h.CONTACT_UNBLOCKED, function(a) {
                ga(e, a)
            })
        },
        pa = function(a, b) {
            if ("object" !== _typeof(b)) {
                return e.get_string("messagedrawerviewsearch", "core_message")
            }
            var c = r(b),
                d = c.val().trim();
            return e.get_string("messagedrawerviewsearch", "core_message", d)
        };
    return {
        show: function show(b, c, d) {
            if (!d.attr("data-init")) {
                oa(c, d);
                d.attr("data-init", !0)
            }
            var e = r(c);
            e.focus();
            return a.Deferred().resolve().promise()
        },
        description: pa
    }
});
define("core_message/notification_processor_settings", ["jquery", "core/ajax", "core/str", "core/notification", "core/custom_interaction_events", "core/modal", "core/modal_registry", "core/fragment"], function(a, b, c, d, e, f, g, h) {
    var i = !1,
        j = {
            SAVE_BUTTON: "[data-action=\"save\"]",
            CANCEL_BUTTON: "[data-action=\"cancel\"]",
            PROCESSOR: "[data-processor-name]",
            PREFERENCE_ROW: "[data-region=\"preference-row\"]"
        },
        k = function(a) {
            f.call(this, a);
            this.name = null;
            this.userId = null;
            this.contextId = null;
            this.element = null;
            this.saveButton = this.getFooter().find(j.SAVE_BUTTON);
            this.cancelButton = this.getFooter().find(j.CANCEL_BUTTON)
        };
    k.TYPE = "core_message-notification_processor_settings";
    k.prototype = Object.create(f.prototype);
    k.prototype.constructor = k;
    k.prototype.setUserId = function(a) {
        this.userId = a
    };
    k.prototype.getUserId = function() {
        return this.userId
    };
    k.prototype.setElement = function(a) {
        this.element = a
    };
    k.prototype.getElement = function() {
        return this.element
    };
    k.prototype.setName = function(a) {
        this.name = a
    };
    k.prototype.getName = function() {
        return this.name
    };
    k.prototype.setContextId = function(a) {
        this.contextId = a
    };
    k.prototype.getContextId = function() {
        return this.contextId
    };
    k.prototype.getForm = function() {
        return this.getBody().find("form")
    };
    k.prototype.disableButtons = function() {
        this.saveButton.prop("disabled", !0);
        this.cancelButton.prop("disabled", !0)
    };
    k.prototype.enableButtons = function() {
        this.saveButton.prop("disabled", !1);
        this.cancelButton.prop("disabled", !1)
    };
    k.prototype.loadTitleContent = function() {
        this.titlePromise = c.get_string("processorsettings", "message");
        this.setTitle(this.titlePromise);
        return this.titlePromise
    };
    k.prototype.loadBodyContent = function() {
        this.disableButtons();
        var a = {
            userid: this.getUserId(),
            type: this.getName()
        };
        this.bodyPromise = h.loadFragment("message", "processor_settings", this.getContextId(), a);
        this.setBody(this.bodyPromise);
        this.bodyPromise.then(function() {
            this.enableButtons()
        }.bind(this)).fail(d.exception);
        return this.bodyPromise
    };
    k.prototype.loadAllContent = function() {
        return a.when(this.loadTitleContent(), this.loadBodyContent())
    };
    k.prototype.show = function() {
        this.loadAllContent();
        f.prototype.show.call(this)
    };
    k.prototype.hide = function() {
        f.prototype.hide.call(this);
        this.setContextId(null);
        this.setName(null);
        this.setUserId(null)
    };
    k.prototype.updateConfiguredStatus = function() {
        var c = a(this.getElement()).closest(j.PROCESSOR);
        if (!c.hasClass("unconfigured")) {
            return !1
        }
        var e = c.attr("data-processor-name"),
            f = {
                methodname: "core_message_get_message_processor",
                args: {
                    name: e,
                    userid: this.userId
                }
            };
        return b.call([f])[0].fail(d.exception).done(function(b) {
            if (b.userconfigured) {
                var d = a(j.PREFERENCE_ROW + " [data-processor-name=\"" + e + "\"]");
                c.removeClass("unconfigured");
                d.removeClass("disabled")
            }
        })
    };
    k.prototype.registerEventListeners = function() {
        f.prototype.registerEventListeners.call(this);
        this.getModal().on(e.events.activate, j.SAVE_BUTTON, function(a, b) {
            this.getForm().submit();
            b.originalEvent.preventDefault()
        }.bind(this));
        this.getModal().on("mpp:formsubmitted", function(a) {
            this.hide();
            this.updateConfiguredStatus();
            a.stopPropagation()
        }.bind(this));
        this.getModal().on(e.events.activate, j.CANCEL_BUTTON, function(a, b) {
            this.hide();
            b.originalEvent.preventDefault();
            a.stopPropagation()
        }.bind(this))
    };
    if (!i) {
        g.register(k.TYPE, k, "core/modal_save_cancel");
        i = !0
    }
    return k
});
define("core_message/notification_preference", ["jquery", "core/ajax", "core/notification", "core_message/notification_processor"], function(a, b, c, d) {
    var e = {
            PROCESSOR: "[data-processor-name]",
            STATE_INPUTS: "[data-state] input"
        },
        f = function(b, c) {
            this.root = a(b);
            this.userId = c
        };
    f.prototype.getPreferenceKey = function() {
        return this.root.attr("data-preference-key")
    };
    f.prototype.getLoggedInPreferenceKey = function() {
        return this.getPreferenceKey() + "_loggedin"
    };
    f.prototype.getLoggedOffPreferenceKey = function() {
        return this.getPreferenceKey() + "_loggedoff"
    };
    f.prototype.getProcessors = function() {
        return this.root.find(e.PROCESSOR).map(function(b, c) {
            return new d(a(c))
        })
    };
    f.prototype.startLoading = function() {
        this.root.addClass("loading");
        this.root.find(e.STATE_INPUTS).prop("disabled", !0)
    };
    f.prototype.stopLoading = function() {
        this.root.removeClass("loading");
        this.root.find(e.STATE_INPUTS).prop("disabled", !1)
    };
    f.prototype.isLoading = function() {
        return this.root.hasClass("loading")
    };
    f.prototype.save = function() {
        if (this.isLoading()) {
            return a.Deferred().resolve()
        }
        this.startLoading();
        var d = "",
            e = "";
        this.getProcessors().each(function(a, b) {
            if (b.isLoggedInEnabled()) {
                if ("" === d) {
                    d = b.getName()
                } else {
                    d += "," + b.getName()
                }
            }
            if (b.isLoggedOffEnabled()) {
                if ("" === e) {
                    e = b.getName()
                } else {
                    e += "," + b.getName()
                }
            }
        });
        if ("" === d) {
            d = "none"
        }
        if ("" === e) {
            e = "none"
        }
        var f = {
            userid: this.userId,
            preferences: [{
                type: this.getLoggedInPreferenceKey(),
                value: d
            }, {
                type: this.getLoggedOffPreferenceKey(),
                value: e
            }]
        };
        return b.call([{
            methodname: "core_user_update_user_preferences",
            args: f
        }])[0].fail(c.exception).always(function() {
            this.stopLoading()
        }.bind(this))
    };
    return f
});
define("core_message/message_user_button", ["jquery", "core/custom_interaction_events", "core_message/message_drawer_helper"], function(a, b, c) {
    var d = function(a) {
            return parseInt(a.attr("data-userid"))
        },
        f = function(a) {
            return parseInt(a.attr("data-conversationid"))
        };
    return {
        send: function send(g) {
            g = a(g);
            b.define(g, [b.events.activate]);
            g.on(b.events.activate, function(a, b) {
                var e = f(g);
                if (e) {
                    c.showConversation(e)
                } else {
                    c.createConversationWithUser(d(g))
                }
                a.preventDefault();
                b.originalEvent.preventDefault()
            })
        }
    }
});
define("core_message/message_drawer_view_contacts", ["jquery", "core/pubsub", "core/str", "core_message/message_drawer_events", "core_message/message_drawer_view_contacts_section_contacts", "core_message/message_drawer_view_contacts_section_requests"], function(a, b, c, d, e, f) {
    var g = {
            ACTION_SHOW_CONTACTS_SECTION: "[data-action=\"show-contacts-section\"]",
            ACTION_SHOW_REQUESTS_SECTION: "[data-action=\"show-requests-section\"]",
            CONTACT_REQUEST_COUNT: "[data-region=\"contact-request-count\"]",
            CONTACTS_SECTION_CONTAINER: "[data-section=\"contacts\"]",
            REQUESTS_SECTION_CONTAINER: "[data-section=\"requests\"]"
        },
        h = function(a) {
            return a.find(g.CONTACTS_SECTION_CONTAINER)
        },
        i = function(a) {
            return a.find(g.REQUESTS_SECTION_CONTAINER)
        },
        j = function(a) {
            return a.find(g.ACTION_SHOW_CONTACTS_SECTION)
        },
        k = function(a) {
            return a.find(g.ACTION_SHOW_REQUESTS_SECTION)
        },
        l = function(a) {
            return a.hasClass("active")
        },
        m = function(a) {
            return function() {
                var b = a.find(g.CONTACT_REQUEST_COUNT),
                    c = parseInt(b.text(), 10);
                c = isNaN(c) ? 0 : c - 1;
                if (0 >= c) {
                    b.addClass("hidden")
                } else {
                    b.text(c)
                }
            }
        },
        n = function(a) {
            var c = h(a),
                g = i(a),
                l = j(a),
                n = k(a);
            l.on("show.bs.tab", function() {
                e.show(c)
            });
            n.on("show.bs.tab", function() {
                f.show(g)
            });
            b.subscribe(d.CONTACT_REQUEST_ACCEPTED, m(a));
            b.subscribe(d.CONTACT_REQUEST_DECLINED, m(a))
        };
    return {
        show: function show(b, c, d, g, m) {
            d = a(d);
            if (!d.attr("data-contacts-init")) {
                n(d);
                d.attr("data-contacts-init", !0)
            }
            var o = h(d),
                p = i(d);
            if (m) {
                var q = j(d),
                    r = k(d);
                if ("requests" == m) {
                    q.removeClass("active");
                    o.removeClass("show active");
                    r.addClass("active");
                    p.addClass("show active")
                } else {
                    r.removeClass("active");
                    p.removeClass("show active");
                    q.addClass("active");
                    o.addClass("show active")
                }
            }
            if (l(o)) {
                e.show(o)
            } else {
                f.show(p)
            }
            return a.Deferred().resolve().promise()
        },
        description: function description() {
            return c.get_string("messagedrawerviewcontacts", "core_message")
        }
    }
});

function _typeof(e) {
    if ("function" == typeof Symbol && "symbol" == typeof Symbol.iterator) {
        _typeof = function(e) {
            return typeof e
        }
    } else {
        _typeof = function(e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        }
    }
    return _typeof(e)
}
define("core_message/message_drawer_view_conversation", ["jquery", "core/auto_rows", "core/backoff_timer", "core/custom_interaction_events", "core/notification", "core/pending", "core/pubsub", "core/str", "core_message/message_repository", "core_message/message_drawer_events", "core_message/message_drawer_view_conversation_constants", "core_message/message_drawer_view_conversation_patcher", "core_message/message_drawer_view_conversation_renderer", "core_message/message_drawer_view_conversation_state_manager", "core_message/message_drawer_router", "core_message/message_drawer_routes", "core/emoji/auto_complete", "core/emoji/picker"], function(s, e, t, n, a, r, o, d, i, g, l, m, c, _, E, C, I, u) {
    var v = {},
        h = null,
        T = !1,
        A = 0,
        f = null,
        O = !1,
        p = [],
        M = !0,
        S = !1,
        N = !1,
        b = [],
        R = null,
        U = [],
        L = l.NEWEST_MESSAGES_FIRST,
        D = l.LOAD_MESSAGE_LIMIT,
        w = l.MILLISECONDS_IN_SEC,
        y = l.SELECTORS,
        P = l.CONVERSATION_TYPES,
        B = function() {
            if (!h || h.type == P.PUBLIC) {
                return null
            }
            var e = h.loggedInUserId;
            if (h.type == P.SELF) {
                return e
            }
            var s = Object.keys(h.members).filter(function(s) {
                return e != s
            });
            return s.length ? s[0] : null
        },
        F = function(e) {
            return Object.keys(v).reduce(function(s, t) {
                if (!s) {
                    var n = v[t].state;
                    if (n.type != P.PUBLIC) {
                        if (e in n.members) {
                            s = n.id
                        }
                    }
                }
                return s
            }, null)
        },
        k = function(e) {
            return {
                id: parseInt(e.attr("data-user-id"), 10),
                fullname: null,
                profileimageurl: null,
                profileimageurlsmall: null,
                isonline: null,
                showonlinestatus: null,
                isblocked: null,
                iscontact: null,
                isdeleted: null,
                canmessage: null,
                canmessageevenifblocked: null,
                requirescontact: null,
                contactrequests: []
            }
        },
        V = function() {
            return A
        },
        G = function(e) {
            A = e;
            v[h.id].messagesOffset = e
        },
        x = function() {
            return T
        },
        q = function(e) {
            T = e;
            v[h.id].loadedAllMessages = e
        },
        K = function(e) {
            return e.find(y.MESSAGES_CONTAINER)
        },
        Q = function(e) {
            return {
                id: e.id,
                name: e.name,
                subname: e.subname,
                imageUrl: e.imageUrl,
                isFavourite: e.isFavourite,
                isMuted: e.isMuted,
                type: e.type,
                totalMemberCount: e.totalMemberCount,
                loggedInUserId: e.loggedInUserId,
                messages: e.messages.map(function(e) {
                    return s.extend({}, e)
                }),
                members: Object.keys(e.members).map(function(t) {
                    var n = s.extend({}, e.members[t]);
                    n.contactrequests = e.members[t].contactrequests.map(function(e) {
                        return s.extend({}, e)
                    });
                    return n
                })
            }
        },
        j = function(e, s) {
            var t = e.id,
                n = t == s ? P.SELF : P.PRIVATE,
                r = _.setLoadingMembers(h, !0);
            r = _.setLoadingMessages(r, !0);
            R(r);
            return i.getMemberInfo(t, [s], !0, !0).then(function(e) {
                if (e.length) {
                    return e[0]
                } else {
                    throw new Error("Unable to load other user profile")
                }
            }).then(function(s) {
                var t = n == P.SELF ? [s] : [s, e],
                    a = _.addMembers(h, t);
                a = _.setLoadingMembers(a, !1);
                a = _.setLoadingMessages(a, !1);
                a = _.setName(a, s.fullname);
                a = _.setType(a, n);
                a = _.setImageUrl(a, s.profileimageurl);
                a = _.setTotalMemberCount(a, t.length);
                R(a);
                return s
            }).catch(function(e) {
                var s = _.setLoadingMembers(h, !1);
                R(s);
                a.exception(e)
            })
        },
        W = function(e, s) {
            var t = null;
            if (e.type == P.PRIVATE) {
                var n = e.members.filter(function(e) {
                    return e.id != s
                });
                t = n.length ? n[0] : null
            } else if (e.type == P.SELF) {
                t = e.members[0]
            }
            var a = e.name,
                r = e.imageurl;
            if (e.type != P.PUBLIC) {
                a = a || t ? t.fullname : "";
                r = r || t ? t.profileimageurl : ""
            }
            var o = _.addMembers(h, e.members);
            o = _.setName(o, a);
            o = _.setSubname(o, e.subname);
            o = _.setType(o, e.type);
            o = _.setImageUrl(o, r);
            o = _.setTotalMemberCount(o, e.membercount);
            o = _.setIsFavourite(o, e.isfavourite);
            o = _.setIsMuted(o, e.ismuted);
            o = _.addMessages(o, e.messages);
            o = _.setCanDeleteMessagesForAllUsers(o, e.candeletemessagesforallusers);
            return o
        },
        J = function(e, s, t, n, r) {
            var o = s.id,
                d = _.setLoadingMembers(h, !0);
            d = _.setLoadingMessages(d, !0);
            R(d);
            return i.getConversation(o, e, !0, !0, 0, 0, t + 1, n, r).then(function(e) {
                if (e.messages.length > t) {
                    e.messages = e.messages.slice(1)
                } else {
                    q(!0)
                }
                G(n + t);
                return e
            }).then(function(e) {
                var t = e.members.filter(function(e) {
                    return e.id == s.id
                });
                if (1 > t.length) {
                    e.members = e.members.concat([s])
                }
                var n = W(e, s.id);
                n = _.setLoadingMembers(n, !1);
                n = _.setLoadingMessages(n, !1);
                return R(n).then(function() {
                    return e
                })
            }).then(function() {
                return z(e)
            }).catch(function(e) {
                var s = _.setLoadingMembers(h, !1);
                s = _.setLoadingMessages(s, !1);
                R(s);
                a.exception(e)
            })
        },
        X = function(e, s, t, n) {
            var r = e.members.filter(function(e) {
                return e.id == s.id
            });
            if (1 > r.length) {
                e.members = e.members.concat([s])
            }
            var o = e.messages.length,
                d = o >= t,
                i = W(e, s.id);
            i = _.setLoadingMembers(i, !1);
            i = _.setLoadingMessages(i, !d);
            var g = R(i);
            return g.then(function() {
                if (!d) {
                    return Y(e.id, t, o, n, [])
                } else {
                    return {
                        messages: e.messages
                    }
                }
            }).then(function() {
                var e = h.messages;
                G(e.length);
                z(h.id);
                return e
            }).catch(a.exception)
        },
        Y = function(e, s, t, n, a, r) {
            return i.getMessages(h.loggedInUserId, e, s ? s + 1 : s, t, n, r).then(function(e) {
                if (e.messages.length && a.length) {
                    e.messages = e.messages.filter(function(e) {
                        return 0 > a.indexOf(parseInt(e.id, 10))
                    })
                }
                return e
            }).then(function(e) {
                if (!s) {
                    return e
                } else if (e.messages.length > s) {
                    e.messages = e.messages.slice(0, -1)
                } else {
                    q(!0)
                }
                return e
            }).then(function(e) {
                var s = e.members.filter(function(e) {
                        return !(e.id in h.members)
                    }),
                    t = _.addMembers(h, s);
                t = _.addMessages(t, e.messages);
                t = _.setLoadingMessages(t, !1);
                return R(t).then(function() {
                    return e
                })
            }).catch(function(e) {
                var s = _.setLoadingMessages(h, !1);
                R(s);
                throw e
            })
        },
        H = function(e, t) {
            return function() {
                var n = h.messages,
                    a = n.length ? n[n.length - 1] : null,
                    r = a ? a.timeCreated : null;
                if (r && !M && !S && !N) {
                    for (var d = [], l = n.length - 1, m; 0 <= l; l--) {
                        m = n[l];
                        if (m.timeCreated === r) {
                            d.push(m.id)
                        } else {
                            break
                        }
                    }
                    return Y(e, 0, 0, t, d, r).then(function(s) {
                        if (s.messages.length) {
                            f.restart();
                            var t = Q(h);
                            o.publish(g.CONVERSATION_NEW_LAST_MESSAGE, t);
                            return z(e)
                        } else {
                            return s
                        }
                    })
                }
                return s.Deferred().resolve().promise()
            }
        },
        z = function(e) {
            var s = h.loggedInUserId,
                t = new r("core_message/message_drawer_view_conversation:markConversationAsRead");
            return i.markAllConversationMessagesAsRead(s, e).then(function() {
                var s = _.markMessagesAsRead(h, h.messages);
                o.publish(g.CONVERSATION_READ, e);
                return R(s)
            }).then(function(e) {
                t.resolve();
                return e
            })
        },
        Z = function(e) {
            Ee(e);
            var s = _.addPendingBlockUsersById(h, [e]);
            R(s)
        },
        $ = function(e) {
            var s = _.setLoadingConfirmAction(h, !0),
                t = new r("core_message/message_drawer_view_conversation:blockUser");
            R(s);
            return i.blockUser(h.loggedInUserId, e).then(function(s) {
                var t = _.addMembers(h, [s]);
                t = _.removePendingBlockUsersById(t, [e]);
                t = _.setLoadingConfirmAction(t, !1);
                o.publish(g.CONTACT_BLOCKED, e);
                return R(t)
            }).then(function(e) {
                t.resolve();
                return e
            })
        },
        ee = function(e) {
            Ee(e);
            var s = _.addPendingUnblockUsersById(h, [e]);
            R(s)
        },
        se = function(e) {
            var s = _.setLoadingConfirmAction(h, !0),
                t = new r("core_message/message_drawer_view_conversation:unblockUser");
            R(s);
            return i.unblockUser(h.loggedInUserId, e).then(function(s) {
                var t = _.addMembers(h, [s]);
                t = _.removePendingUnblockUsersById(t, [e]);
                t = _.setLoadingConfirmAction(t, !1);
                o.publish(g.CONTACT_UNBLOCKED, e);
                return R(t)
            }).then(function(e) {
                t.resolve();
                return e
            })
        },
        te = function(e) {
            Ee(e);
            var s = _.addPendingRemoveContactsById(h, [e]);
            R(s)
        },
        ne = function(e) {
            var s = _.setLoadingConfirmAction(h, !0),
                t = new r("core_message/message_drawer_view_conversation:removeContact");
            R(s);
            return i.deleteContacts(h.loggedInUserId, [e]).then(function(s) {
                var t = _.addMembers(h, s);
                t = _.removePendingRemoveContactsById(t, [e]);
                t = _.setLoadingConfirmAction(t, !1);
                o.publish(g.CONTACT_REMOVED, e);
                return R(t)
            }).then(function(e) {
                t.resolve();
                return e
            })
        },
        ae = function(e) {
            Ee(e);
            var s = _.addPendingAddContactsById(h, [e]);
            R(s)
        },
        re = function(e) {
            var s = _.setLoadingConfirmAction(h, !0),
                t = new r("core_message/message_drawer_view_conversation:addContactRequests");
            R(s);
            return i.createContactRequest(h.loggedInUserId, e).then(function(e) {
                if (!e.request) {
                    throw new Error(e.warnings[0].message)
                }
                return e.request
            }).then(function(s) {
                var t = _.removePendingAddContactsById(h, [e]);
                t = _.addContactRequests(t, [s]);
                t = _.setLoadingConfirmAction(t, !1);
                return R(t)
            }).then(function(e) {
                t.resolve();
                return e
            })
        },
        oe = function() {
            var e = h.loggedInUserId,
                s = h.id,
                t = new r("core_message/message_drawer_view_conversation:setFavourite");
            return i.setFavouriteConversations(e, [s]).then(function() {
                var e = _.setIsFavourite(h, !0);
                return R(e)
            }).then(function() {
                return o.publish(g.CONVERSATION_SET_FAVOURITE, Q(h))
            }).then(function(e) {
                t.resolve();
                return e
            })
        },
        de = function() {
            var e = h.loggedInUserId,
                s = h.id,
                t = new r("core_message/message_drawer_view_conversation:unsetFavourite");
            return i.unsetFavouriteConversations(e, [s]).then(function() {
                var e = _.setIsFavourite(h, !1);
                return R(e)
            }).then(function() {
                return o.publish(g.CONVERSATION_UNSET_FAVOURITE, Q(h))
            }).then(function(e) {
                t.resolve();
                return e
            })
        },
        ie = function() {
            var e = h.loggedInUserId,
                s = h.id,
                t = new r("core_message/message_drawer_view_conversation:markConversationAsRead");
            return i.setMutedConversations(e, [s]).then(function() {
                var e = _.setIsMuted(h, !0);
                return R(e)
            }).then(function() {
                return o.publish(g.CONVERSATION_SET_MUTED, Q(h))
            }).then(function(e) {
                t.resolve();
                return e
            })
        },
        ge = function() {
            var e = h.loggedInUserId,
                s = h.id;
            return i.unsetMutedConversations(e, [s]).then(function() {
                var e = _.setIsMuted(h, !1);
                return R(e)
            }).then(function() {
                return o.publish(g.CONVERSATION_UNSET_MUTED, Q(h))
            })
        },
        le = function(e) {
            var s = h.selectedMessageIds;
            Ee(e);
            var t = _.addPendingDeleteMessagesById(h, s);
            R(t)
        },
        me = function() {
            var e = new r("core_message/message_drawer_view_conversation:deleteSelectedMessages"),
                t = h.pendingDeleteMessageIds,
                n = h.messages.filter(function(e) {
                    return 0 <= t.indexOf(e.id) && ("sent" == e.sendState || null === e.sendState)
                }),
                d = _.setLoadingConfirmAction(h, !0);
            R(d);
            var l = s.Deferred().resolve().promise();
            if (n.length) {
                var m = n.map(function(e) {
                    return e.id
                });
                if (d.deleteMessagesForAllUsers) {
                    l = i.deleteMessagesForAllUsers(h.loggedInUserId, m)
                } else {
                    l = i.deleteMessages(h.loggedInUserId, m)
                }
            }
            N = !0;
            if (f) {
                f.stop()
            }
            return l.then(function() {
                var e = _.removeMessagesById(h, t);
                e = _.removePendingDeleteMessagesById(e, t);
                e = _.removeSelectedMessagesById(e, t);
                e = _.setLoadingConfirmAction(e, !1);
                e = _.setDeleteMessagesForAllUsers(e, !1);
                var s = h.messages[h.messages.length - 1],
                    n = e.messages.length ? e.messages[e.messages.length - 1] : null;
                if (n && n.id != s.id) {
                    var a = Q(e);
                    o.publish(g.CONVERSATION_NEW_LAST_MESSAGE, a)
                } else if (!e.messages.length) {
                    o.publish(g.CONVERSATION_DELETED, e.id)
                }
                N = !1;
                return R(e)
            }).then(function(s) {
                e.resolve();
                return s
            }).catch(a.exception)
        },
        ce = function(e) {
            Ee(e);
            var s = _.setPendingDeleteConversation(h, !0);
            R(s)
        },
        _e = function() {
            var e = new r("core_message/message_drawer_view_conversation:markConversationAsRead"),
                s = _.setLoadingConfirmAction(h, !0);
            R(s);
            N = !0;
            if (f) {
                f.stop()
            }
            return i.deleteConversation(h.loggedInUserId, h.id).then(function() {
                var e = _.removeMessages(h, h.messages);
                e = _.removeSelectedMessagesById(e, h.selectedMessageIds);
                e = _.setPendingDeleteConversation(e, !1);
                e = _.setLoadingConfirmAction(e, !1);
                o.publish(g.CONVERSATION_DELETED, e.id);
                N = !1;
                return R(e)
            }).then(function(s) {
                e.resolve();
                return s
            })
        },
        Ee = function(e) {
            var s = h.pendingDeleteMessageIds,
                t = _.removePendingAddContactsById(h, [e]);
            t = _.removePendingRemoveContactsById(t, [e]);
            t = _.removePendingUnblockUsersById(t, [e]);
            t = _.removePendingBlockUsersById(t, [e]);
            t = _.removePendingDeleteMessagesById(t, s);
            t = _.setPendingDeleteConversation(t, !1);
            t = _.setDeleteMessagesForAllUsers(t, !1);
            R(t)
        },
        Ce = function(e) {
            var s = new r("core_message/message_drawer_view_conversation:acceptContactRequest"),
                t = h.loggedInUserId,
                n = h.members[e].contactrequests.filter(function(e) {
                    return e.requesteduserid == t
                }),
                a = n[0],
                d = _.setLoadingConfirmAction(h, !0);
            R(d);
            return i.acceptContactRequest(e, t).then(function(e) {
                var s = _.removeContactRequests(h, [a]);
                s = _.addMembers(h, [e]);
                s = _.setLoadingConfirmAction(s, !1);
                return R(s)
            }).then(function() {
                o.publish(g.CONTACT_ADDED, h.members[e]);
                o.publish(g.CONTACT_REQUEST_ACCEPTED, a)
            }).then(function(e) {
                s.resolve();
                return e
            })
        },
        Ie = function(e) {
            var s = new r("core_message/message_drawer_view_conversation:declineContactRequest"),
                t = h.loggedInUserId,
                n = h.members[e].contactrequests.filter(function(e) {
                    return e.requesteduserid == t
                }),
                a = n[0],
                d = _.setLoadingConfirmAction(h, !0);
            R(d);
            return i.declineContactRequest(e, t).then(function(e) {
                var s = _.removeContactRequests(h, [a]);
                s = _.addMembers(h, [e]);
                s = _.setLoadingConfirmAction(s, !1);
                return R(s)
            }).then(function() {
                o.publish(g.CONTACT_REQUEST_DECLINED, a)
            }).then(function(e) {
                s.resolve();
                return e
            })
        },
        ue = function() {
            if (S) {
                return
            }
            if (!b.length) {
                return
            }
            var e = new r("core_message/message_drawer_view_conversation:processSendMessageBuffer");
            S = !0;
            var t = b.slice();
            b = [];
            var n = h.id,
                a = null,
                l = t.map(function(e) {
                    return e.text
                }),
                m = t.map(function(e) {
                    return e.id
                }),
                c = null,
                E = null;
            if (!n && h.type != P.PUBLIC) {
                var C = B();
                c = i.sendMessagesToUser(C, l).then(function(e) {
                    if (e.length) {
                        a = parseInt(e[0].conversationid, 10);
                        E = e[0].candeletemessagesforallusers
                    }
                    return e
                })
            } else {
                c = i.sendMessagesToConversation(n, l)
            }
            c.then(function(e) {
                var s = e.map(function(e) {
                        return e.id
                    }),
                    n = [],
                    r = [],
                    d = [];
                t.forEach(function(s, t) {
                    var a = e[t];
                    n.push([s, a]);
                    if (0 <= h.selectedMessageIds.indexOf(s.id)) {
                        r.push(s.id);
                        d.push(a.id)
                    }
                });
                var i = _.updateMessages(h, n);
                i = _.setMessagesSendSuccessById(i, s);
                if (r.length) {
                    i = _.removeSelectedMessagesById(i, r)
                }
                if (d.length) {
                    i = _.addSelectedMessagesById(i, d)
                }
                var l = Q(i);
                if (!i.id) {
                    i = _.setId(i, a);
                    l.id = a;
                    Ve(a);
                    o.publish(g.CONVERSATION_CREATED, l);
                    i = _.setCanDeleteMessagesForAllUsers(i, E)
                }
                R(i);
                S = !1;
                ue();
                o.publish(g.CONVERSATION_NEW_LAST_MESSAGE, l)
            }).then(function(s) {
                e.resolve();
                return s
            }).catch(function(t) {
                var n;
                if (t.message) {
                    n = s.Deferred().resolve(t.message).promise()
                } else {
                    n = d.get_string("unknownerror", "core")
                }
                var a = function(e) {
                    var s = _.setMessagesSendFailById(h, m, e);
                    R(s);
                    S = !1;
                    ue()
                };
                n.then(a).then(function(s) {
                    e.resolve();
                    return s
                }).catch(function(s) {
                    var e = s.message || "Something went wrong!";
                    a(e)
                })
            })
        },
        ve = function(e) {
            var s = "temp" + Date.now(),
                t = {
                    id: s,
                    useridfrom: h.loggedInUserId,
                    text: e,
                    timecreated: null
                },
                n = _.addMessages(h, [t]);
            R(n);
            b.push(t);
            ue()
        },
        he = function(e) {
            var s = _.setMessagesSendPendingById(h, [e.id]);
            R(s);
            b.push(e);
            ue()
        },
        Te = function(e) {
            var s = h;
            if (-1 < h.selectedMessageIds.indexOf(e)) {
                s = _.removeSelectedMessagesById(h, [e])
            } else {
                s = _.addSelectedMessagesById(h, [e])
            }
            R(s)
        },
        Ae = function() {
            Ee(B());
            var e = _.removeSelectedMessagesById(h, h.selectedMessageIds);
            R(e)
        },
        fe = function(e, t, n) {
            if (O) {
                return
            }
            if (!p.length) {
                return
            }
            O = !0;
            var r = p.shift(),
                o = U.map(function(e) {
                    return e(r.patch)
                });
            s.when.apply(null, o).then(function() {
                O = !1;
                r.deferred.resolve(!0);
                fe(e, t, n)
            }).catch(function(e) {
                O = !1;
                r.deferred.reject(e);
                a.exception(e)
            })
        },
        Oe = function(e, t, n, a) {
            var r = function(s) {
                return c.render(e, t, n, s)
            };
            if (!a) {
                var o = _.buildInitialState(h.midnight, h.loggedInUserId, h.id),
                    d = m.buildPatch(o, h);
                r(d)
            }
            U.push(r);
            return function(a) {
                var r = m.buildPatch(h, a),
                    o = s.Deferred();
                if (Object.keys(r).length) {
                    p.push({
                        patch: r,
                        deferred: o
                    })
                } else {
                    o.resolve(!0)
                }
                h = a;
                if (a.id) {
                    v[a.id] = {
                        state: a,
                        messagesOffset: V(),
                        loadedAllMessages: x()
                    }
                }
                fe(e, t, n);
                return o.promise()
            }
        },
        pe = function(e) {
            return function(s, t) {
                if (!h.loadingConfirmAction) {
                    e(B());
                    var n = _.setLoadingConfirmAction(h, !1);
                    R(n)
                }
                t.originalEvent.preventDefault()
            }
        },
        Me = function(t, e) {
            var n = s(t.target),
                a = n.closest(y.FOOTER_CONTAINER),
                r = a.find(y.MESSAGE_TEXT_AREA),
                o = r.val().trim();
            if ("" !== o) {
                ve(o);
                r.val("");
                r.focus()
            }
            e.originalEvent.preventDefault()
        },
        Se = function(t, e) {
            var n = window.getSelection(),
                a = s(t.target);
            if ("" != n.toString()) {
                return
            }
            if (a.is("a")) {
                return
            }
            var r = a.closest(y.MESSAGE),
                o = r.attr("data-message-id");
            Te(o);
            e.originalEvent.preventDefault()
        },
        Ne = function(t, e) {
            var n = s(t.target),
                a = n.closest(y.MESSAGE),
                r = a.attr("data-message-id"),
                o = h.messages.filter(function(e) {
                    return e.id == r
                }),
                d = o.length ? o[0] : null;
            if (d) {
                he(d)
            }
            e.originalEvent.preventDefault();
            e.originalEvent.stopPropagation();
            t.stopPropagation()
        },
        be = function(s, e) {
            Ae();
            e.originalEvent.preventDefault()
        },
        Re = function(s) {
            return function(t, e) {
                var n = B(),
                    a = h.members[n];
                E.go(s, C.VIEW_CONTACT, a);
                e.originalEvent.preventDefault()
            }
        },
        Ue = function(s, e) {
            oe().catch(a.exception);
            e.originalEvent.preventDefault()
        },
        Le = function(s, e) {
            de().catch(a.exception);
            e.originalEvent.preventDefault()
        },
        De = function(s, e) {
            ie().catch(a.exception);
            e.originalEvent.preventDefault()
        },
        we = function(s, e) {
            ge().catch(a.exception);
            e.originalEvent.preventDefault()
        },
        ye = function(t) {
            var e = s(t.target).prop("checked"),
                n = _.setDeleteMessagesForAllUsers(h, e);
            R(n)
        },
        Pe = function(s) {
            return function(t, e) {
                E.go(s, C.VIEW_GROUP_INFO, {
                    id: h.id,
                    name: h.name,
                    subname: h.subname,
                    imageUrl: h.imageUrl,
                    totalMemberCount: h.totalMemberCount
                }, h.loggedInUserId);
                e.originalEvent.preventDefault()
            }
        },
        Be = function(s, e) {
            var t = _.setShowEmojiPicker(h, !h.showEmojiPicker);
            R(t);
            e.originalEvent.preventDefault()
        },
        Fe = function(t) {
            var e = s(t.target);
            if (h.showEmojiPicker && !e.closest(y.EMOJI_PICKER_CONTAINER).length && !e.closest(y.TOGGLE_EMOJI_PICKER_BUTTON).length) {
                var n = _.setShowEmojiPicker(h, !1);
                R(n)
            }
        },
        ke = function(t, r, d, i) {
            var l = !1,
                m = K(d),
                c = i.find(y.EMOJI_PICKER),
                E = i.find(y.EMOJI_AUTO_COMPLETE_CONTAINER),
                v = i.find(y.MESSAGE_TEXT_AREA),
                T = [
                    [y.ACTION_REQUEST_BLOCK, pe(Z)],
                    [y.ACTION_REQUEST_UNBLOCK, pe(ee)],
                    [y.ACTION_REQUEST_ADD_CONTACT, pe(ae)],
                    [y.ACTION_REQUEST_REMOVE_CONTACT, pe(te)],
                    [y.ACTION_REQUEST_DELETE_CONVERSATION, pe(ce)],
                    [y.ACTION_CANCEL_EDIT_MODE, be],
                    [y.ACTION_VIEW_CONTACT, Re(t)],
                    [y.ACTION_VIEW_GROUP_INFO, Pe(t)],
                    [y.ACTION_CONFIRM_FAVOURITE, Ue],
                    [y.ACTION_CONFIRM_MUTE, De],
                    [y.ACTION_CONFIRM_UNFAVOURITE, Le],
                    [y.ACTION_CONFIRM_UNMUTE, we]
                ],
                A = [
                    [y.ACTION_CANCEL_CONFIRM, pe(Ee)],
                    [y.ACTION_CONFIRM_BLOCK, pe($)],
                    [y.ACTION_CONFIRM_UNBLOCK, pe(se)],
                    [y.ACTION_CONFIRM_ADD_CONTACT, pe(re)],
                    [y.ACTION_CONFIRM_REMOVE_CONTACT, pe(ne)],
                    [y.ACTION_CONFIRM_DELETE_SELECTED_MESSAGES, pe(me)],
                    [y.ACTION_CONFIRM_DELETE_CONVERSATION, pe(_e)],
                    [y.ACTION_OKAY_CONFIRM, pe(Ee)],
                    [y.ACTION_REQUEST_ADD_CONTACT, pe(ae)],
                    [y.ACTION_ACCEPT_CONTACT_REQUEST, pe(Ce)],
                    [y.ACTION_DECLINE_CONTACT_REQUEST, pe(Ie)],
                    [y.MESSAGE, Se],
                    [y.DELETE_MESSAGES_FOR_ALL_USERS_TOGGLE, ye],
                    [y.RETRY_SEND, Ne]
                ],
                O = [
                    [y.SEND_MESSAGE_BUTTON, Me],
                    [y.TOGGLE_EMOJI_PICKER_BUTTON, Be],
                    [y.ACTION_REQUEST_DELETE_SELECTED_MESSAGES, pe(le)],
                    [y.ACTION_REQUEST_ADD_CONTACT, pe(ae)],
                    [y.ACTION_REQUEST_UNBLOCK, pe(ee)]
                ];
            e.init(i);
            if (E.length) {
                I(E[0], v[0], function(e) {
                    var s = _.setShowEmojiAutoComplete(h, e);
                    R(s)
                }, function(e) {
                    var s = _.setShowEmojiAutoComplete(h, !1);
                    R(s);
                    v.focus();
                    var t = v.prop("selectionStart"),
                        n = v.val(),
                        a = n.substring(0, t).replace(/\S*$/, ""),
                        r = n.substring(t).replace(/^\S*/, "");
                    v.val(a + e + r);
                    v.prop("selectionStart", a.length + e.length);
                    v.prop("selectionEnd", a.length + e.length)
                })
            }
            if (c.length) {
                u(c[0], function(e) {
                    var s = _.setShowEmojiPicker(h, !h.showEmojiPicker);
                    R(s);
                    v.focus();
                    var t = v.prop("selectionStart"),
                        n = v.val(),
                        a = n.substring(0, t),
                        r = n.substring(t, n.length);
                    v.val(a + e + r);
                    v.prop("selectionStart", t + e.length);
                    v.prop("selectionEnd", t + e.length)
                })
            }
            n.define(r, [n.events.activate]);
            n.define(d, [n.events.activate]);
            n.define(i, [n.events.activate, n.events.enter, n.events.escape]);
            n.define(m, [n.events.scrollTop, n.events.scrollLock]);
            m.on(n.events.scrollTop, function(s, e) {
                var t = 1 < Object.keys(h.members).length;
                if (!M && !l && !x() && t) {
                    l = !0;
                    var n = _.setLoadingMessages(h, !0);
                    R(n);
                    Y(h.id, D, V(), L, []).then(function() {
                        l = !1;
                        G(V() + D)
                    }).catch(function(e) {
                        l = !1;
                        a.exception(e)
                    })
                }
                e.originalEvent.preventDefault()
            });
            T.forEach(function(e) {
                var s = e[0],
                    t = e[1];
                r.on(n.events.activate, s, t)
            });
            A.forEach(function(e) {
                var s = e[0],
                    t = e[1];
                d.on(n.events.activate, s, t)
            });
            O.forEach(function(e) {
                var s = e[0],
                    t = e[1];
                i.on(n.events.activate, s, t)
            });
            i.on(n.events.enter, y.MESSAGE_TEXT_AREA, function(s, e) {
                var t = i.attr("data-enter-to-send");
                if (t && "false" != t && "0" != t) {
                    Me(s, e)
                }
            });
            i.on(n.events.escape, y.EMOJI_PICKER_CONTAINER, Be);
            s(document.body).on("click", Fe);
            o.subscribe(g.ROUTE_CHANGED, function(e) {
                if (f) {
                    if (e.route != C.VIEW_CONVERSATION) {
                        f.stop()
                    }
                }
            })
        },
        Ve = function(e) {
            if (f) {
                f.stop()
            }
            f = new t(H(e, L), t.getIncrementalCallback(h.messagePollMin * w, w, h.messagePollMax * w, h.messagePollAfterMax * w));
            f.start()
        },
        Ge = function(e, s, t) {
            T = !1;
            A = 0;
            f = null;
            O = !1;
            p = [];
            M = !0;
            S = !1;
            N = !1;
            b = [];
            var n = t.id,
                a = parseInt(e.attr("data-midnight"), 10),
                r = parseInt(e.attr("data-message-poll-min"), 10),
                o = parseInt(e.attr("data-message-poll-max"), 10),
                d = parseInt(e.attr("data-message-poll-after-max"), 10),
                i = _.buildInitialState(a, n, s, r, o, d);
            if (!h) {
                h = i
            }
            if (f) {
                f.stop()
            }
            R(i)
        },
        xe = function(e, s, t) {
            Ge(e, null, s);
            var n = null;
            if (s.id != t) {
                n = i.getConversationBetweenUsers(s.id, t, !0, !0, 0, 0, D, 0, L)
            } else {
                n = i.getSelfConversation(s.id, D, 0, L)
            }
            return n.then(function(t) {
                return Ke(e, t, s)
            }).catch(function() {
                return j(s, t)
            })
        },
        qe = function(e, t, n) {
            var a = null;
            if (t in v) {
                a = v[t]
            }
            Ge(e, t, n);
            var r = s.Deferred().resolve({}).promise();
            if (a) {
                var o = a.state;
                o = _.setLoadingMessages(o, !1);
                o = _.setLoadingMembers(o, !1);
                G(a.messagesOffset);
                q(a.loadedAllMessages);
                R(o)
            } else {
                r = J(t, n, D, 0, L)
            }
            return r.then(function() {
                return Ve(t)
            })
        },
        Ke = function(e, t, n) {
            var a = null;
            if (t.id in v) {
                a = v[t.id]
            }
            Ge(e, t.id, n);
            var r = s.Deferred().resolve({}).promise();
            if (a) {
                var o = a.state;
                o = _.setLoadingMessages(o, !1);
                o = _.setLoadingMembers(o, !1);
                G(a.messagesOffset);
                q(a.loadedAllMessages);
                R(o)
            } else {
                r = X(t, n, D, L)
            }
            return r.then(function() {
                return Ve(t.id)
            })
        },
        Qe = function(e, t, n, r, o, d, i) {
            var g = null,
                m = null;
            if (o && null !== o && "object" == _typeof(o)) {
                g = o;
                m = parseInt(g.id, 10)
            } else {
                g = null;
                m = parseInt(o, 10);
                m = isNaN(m) ? null : m
            }
            if (!m && d && i) {
                m = F(i)
            }
            var c = !h || h.id != m || i && i != B();
            if (!n.attr("data-init")) {
                R = Oe(t, n, r, c);
                ke(e, t, n, r);
                n.attr("data-init", !0)
            }
            if (c) {
                var _ = null,
                    E = k(n);
                if (g) {
                    _ = Ke(n, g, E, i)
                } else if (m) {
                    _ = qe(n, m, E, i)
                } else {
                    _ = xe(n, E, i)
                }
                return _.then(function() {
                    M = !1;
                    t.find(l.SELECTORS.CAN_RECEIVE_FOCUS).first().focus()
                }).catch(function(e) {
                    M = !1;
                    a.exception(e)
                })
            }
            Ve(m);
            if (h.type == P.PRIVATE && d) {
                var C = B();
                switch (d) {
                    case "block":
                        return Z(C);
                    case "unblock":
                        return ee(C);
                    case "add-contact":
                        return ae(C);
                    case "remove-contact":
                        return te(C);
                }
            }
            return s.Deferred().resolve().promise()
        },
        je = function() {
            return d.get_string("messagedrawerviewconversation", "core_message", h.name)
        };
    return {
        show: Qe,
        description: je
    }
});
define("core_message/message_drawer_view_overview", ["jquery", "core/key_codes", "core/pubsub", "core/str", "core_message/message_drawer_router", "core_message/message_drawer_routes", "core_message/message_drawer_events", "core_message/message_drawer_view_overview_section", "core_message/message_repository", "core_message/message_drawer_view_conversation_constants"], function(a, b, c, d, e, f, g, h, i, j) {
    var k = {
            CONTACT_REQUEST_COUNT: "[data-region=\"contact-request-count\"]",
            FAVOURITES: "[data-region=\"view-overview-favourites\"]",
            GROUP_MESSAGES: "[data-region=\"view-overview-group-messages\"]",
            MESSAGES: "[data-region=\"view-overview-messages\"]",
            SEARCH_INPUT: "[data-region=\"view-overview-search-input\"]",
            SECTION_TOGGLE_BUTTON: "[data-toggle]"
        },
        l = {
            PRIVATE: [j.CONVERSATION_TYPES.PRIVATE, j.CONVERSATION_TYPES.SELF],
            PUBLIC: [j.CONVERSATION_TYPES.PUBLIC],
            FAVOURITE: null
        },
        m = null,
        n = function(a) {
            if (null === m) {
                m = i.getAllConversationCounts(a)
            }
            return m
        },
        o = function(a, b, c) {
            var d = 0;
            if (b && b.length) {
                d = b.reduce(function(b, c) {
                    return b + a.types[c]
                }, d)
            }
            if (c) {
                d += a.favourites
            }
            return d
        },
        p = function(a) {
            var b = a.some(function(a) {
                var b = a[0];
                return h.isVisible(b)
            });
            if (b) {
                return
            }
            a.sort(function(c, a) {
                var b = c[1],
                    d = c[2],
                    e = a[1],
                    f = a[2];
                if (0 < d && 0 == f) {
                    return -1
                } else if (0 == d && 0 < f) {
                    return 1
                } else if (0 < b && 0 == e) {
                    return -1
                } else if (0 == b && 0 < e) {
                    return 1
                } else {
                    return 0
                }
            });
            var c = a[0][0],
                d = c.find(k.SECTION_TOGGLE_BUTTON);
            d.click()
        },
        q = function(a) {
            return a.find(k.SEARCH_INPUT)
        },
        r = function(a) {
            return a.attr("data-user-id")
        },
        s = function(a) {
            return function() {
                var b = a.find(k.CONTACT_REQUEST_COUNT),
                    c = parseInt(b.text(), 10);
                c = isNaN(c) ? 0 : c - 1;
                if (0 >= c) {
                    b.addClass("hidden")
                } else {
                    b.text(c)
                }
            }
        },
        t = function(a, d) {
            var h = q(d),
                i = [b.tab, b.shift, b.ctrl, b.alt];
            h.on("click", function() {
                e.go(a, f.VIEW_SEARCH)
            });
            h.on("keydown", function(b) {
                if (0 > i.indexOf(b.keyCode) && "Meta" != b.key) {
                    e.go(a, f.VIEW_SEARCH)
                }
            });
            c.subscribe(g.CONTACT_REQUEST_ACCEPTED, s(d));
            c.subscribe(g.CONTACT_REQUEST_DECLINED, s(d))
        };
    return {
        show: function show(a, b, c) {
            if (!b.attr("data-init")) {
                t(a, b);
                b.attr("data-init", !0)
            }
            var d = b.attr("data-in-panel") ? "frompanel" : null;
            q(b).val("");
            var e = r(c),
                f = n(e),
                g = [
                    [c.find(k.FAVOURITES), l.FAVOURITE, !0],
                    [c.find(k.GROUP_MESSAGES), l.PUBLIC, !1],
                    [c.find(k.MESSAGES), l.PRIVATE, !1]
                ];
            g.forEach(function(b) {
                var c = b[0],
                    e = b[1],
                    g = b[2],
                    i = f.then(function(a) {
                        return o(a.total, e, g)
                    }),
                    j = f.then(function(a) {
                        return o(a.unread, e, g)
                    });
                h.show(a, null, c, null, e, g, i, j, d)
            });
            return f.then(function(a) {
                var b = g.map(function(b) {
                    var c = b[0],
                        d = b[1],
                        e = b[2],
                        f = o(a.total, d, e),
                        g = o(a.unread, d, e);
                    return [c, f, g]
                });
                return p(b)
            })
        },
        description: function description() {
            return d.get_string("messagedrawerviewoverview", "core_message")
        }
    }
});
define("core_message/message_drawer_routes", [], function() {
    return {
        VIEW_CONTACT: "view-contact",
        VIEW_CONTACTS: "view-contacts",
        VIEW_CONVERSATION: "view-conversation",
        VIEW_GROUP_INFO: "view-group-info",
        VIEW_OVERVIEW: "view-overview",
        VIEW_SEARCH: "view-search",
        VIEW_SETTINGS: "view-settings"
    }
});
define("core_message/message_drawer_view_conversation_constants", [], function() {
    return {
        SELECTORS: {
            ACTION_ACCEPT_CONTACT_REQUEST: "[data-action=\"accept-contact-request\"]",
            ACTION_CANCEL_CONFIRM: "[data-action=\"cancel-confirm\"]",
            ACTION_OKAY_CONFIRM: "[data-action=\"okay-confirm\"]",
            ACTION_CANCEL_EDIT_MODE: "[data-action=\"cancel-edit-mode\"]",
            ACTION_CONFIRM_ADD_CONTACT: "[data-action=\"confirm-add-contact\"]",
            ACTION_CONFIRM_BLOCK: "[data-action=\"confirm-block\"]",
            ACTION_CONFIRM_DELETE_SELECTED_MESSAGES: "[data-action=\"confirm-delete-selected-messages\"]",
            ACTION_CONFIRM_DELETE_CONVERSATION: "[data-action=\"confirm-delete-conversation\"]",
            ACTION_CONFIRM_FAVOURITE: "[data-action=\"confirm-favourite\"]",
            ACTION_CONFIRM_MUTE: "[data-action=\"confirm-mute\"]",
            ACTION_CONFIRM_UNFAVOURITE: "[data-action=\"confirm-unfavourite\"]",
            ACTION_CONFIRM_REMOVE_CONTACT: "[data-action=\"confirm-remove-contact\"]",
            ACTION_CONFIRM_UNBLOCK: "[data-action=\"confirm-unblock\"]",
            ACTION_CONFIRM_UNMUTE: "[data-action=\"confirm-unmute\"]",
            ACTION_DECLINE_CONTACT_REQUEST: "[data-action=\"decline-contact-request\"]",
            ACTION_REQUEST_ADD_CONTACT: "[data-action=\"request-add-contact\"]",
            ACTION_REQUEST_BLOCK: "[data-action=\"request-block\"]",
            ACTION_REQUEST_DELETE_CONVERSATION: "[data-action=\"request-delete-conversation\"]",
            ACTION_REQUEST_DELETE_SELECTED_MESSAGES: "[data-action=\"delete-selected-messages\"]",
            ACTION_REQUEST_REMOVE_CONTACT: "[data-action=\"request-remove-contact\"]",
            ACTION_REQUEST_UNBLOCK: "[data-action=\"request-unblock\"]",
            ACTION_VIEW_CONTACT: "[data-action=\"view-contact\"]",
            ACTION_VIEW_GROUP_INFO: "[data-action=\"view-group-info\"]",
            CAN_RECEIVE_FOCUS: "input:not([type=\"hidden\"]), a[href], button, textarea, select, [tabindex]",
            CONFIRM_DIALOGUE: "[data-region=\"confirm-dialogue\"]",
            CONFIRM_DIALOGUE_BUTTON_TEXT: "[data-region=\"dialogue-button-text\"]",
            CONFIRM_DIALOGUE_CANCEL_BUTTON: "[data-action=\"cancel-confirm\"]",
            CONFIRM_DIALOGUE_CONTAINER: "[data-region=\"confirm-dialogue-container\"]",
            CONFIRM_DIALOGUE_HEADER: "[data-region=\"dialogue-header\"]",
            CONFIRM_DIALOGUE_OKAY_BUTTON: "[data-action=\"okay-confirm\"]",
            CONFIRM_DIALOGUE_TEXT: "[data-region=\"dialogue-text\"]",
            CONTACT_REQUEST_SENT_MESSAGE_CONTAINER: "[data-region=\"contact-request-sent-message-container\"]",
            CONTENT_PLACEHOLDER_CONTAINER: "[data-region=\"content-placeholder\"]",
            CONTENT_CONTAINER: "[data-region=\"content-container\"]",
            CONTENT_MESSAGES_CONTAINER: "[data-region=\"content-message-container\"]",
            CONTENT_MESSAGES_FOOTER_CONTAINER: "[data-region=\"content-messages-footer-container\"]",
            CONTENT_MESSAGES_FOOTER_EDIT_MODE_CONTAINER: "[data-region=\"content-messages-footer-edit-mode-container\"]",
            CONTENT_MESSAGES_FOOTER_REQUIRE_CONTACT_CONTAINER: "[data-region=\"content-messages-footer-require-contact-container\"]",
            CONTENT_MESSAGES_FOOTER_REQUIRE_UNBLOCK_CONTAINER: "[data-region=\"content-messages-footer-require-unblock-container\"]",
            CONTENT_MESSAGES_FOOTER_UNABLE_TO_MESSAGE_CONTAINER: "[data-region=\"content-messages-footer-unable-to-message\"]",
            DAY_MESSAGES_CONTAINER: "[data-region=\"day-messages-container\"]",
            DELETE_MESSAGES_FOR_ALL_USERS_TOGGLE: "[data-region=\"delete-messages-for-all-users-toggle\"]",
            DELETE_MESSAGES_FOR_ALL_USERS_TOGGLE_CONTAINER: "[data-region=\"delete-messages-for-all-users-toggle-container\"]",
            EMOJI_AUTO_COMPLETE_CONTAINER: "[data-region=\"emoji-auto-complete-container\"]",
            EMOJI_PICKER_CONTAINER: "[data-region=\"emoji-picker-container\"]",
            EMOJI_PICKER: "[data-region=\"emoji-picker\"]",
            EMOJI_PICKER_SEARCH_INPUT: "[data-region=\"search-input\"]",
            ERROR_MESSAGE_CONTAINER: "[data-region=\"error-message-container\"]",
            ERROR_MESSAGE: "[data-region=\"error-message\"]",
            FAVOURITE_ICON_CONTAINER: "[data-region=\"favourite-icon-container\"]",
            FOOTER_CONTAINER: "[data-region=\"content-messages-footer-container\"]",
            HEADER: "[data-region=\"header-content\"]",
            HEADER_EDIT_MODE: "[data-region=\"header-edit-mode\"]",
            HEADER_PLACEHOLDER_CONTAINER: "[data-region=\"header-placeholder\"]",
            LOADING_ICON_CONTAINER: "[data-region=\"loading-icon-container\"]",
            MESSAGE: "[data-region=\"message\"]",
            MESSAGE_NOT_SELECTED: "[data-region=\"message\"][aria-checked=\"false\"]",
            MESSAGE_NOT_SELECTED_ICON: "[data-region=\"not-selected-icon\"]",
            MESSAGE_SELECTED_ICON: "[data-region=\"selected-icon\"]",
            MESSAGES: "[data-region=\"content-message-container\"]",
            MESSAGES_CONTAINER: "[data-region=\"content-message-container\"]",
            MESSAGES_SELECTED_COUNT: "[data-region=\"message-selected-court\"]",
            MESSAGE_TEXT_AREA: "[data-region=\"send-message-txt\"]",
            MORE_MESSAGES_LOADING_ICON_CONTAINER: "[data-region=\"more-messages-loading-icon-container\"]",
            MUTED_ICON_CONTAINER: "[data-region=\"muted-icon-container\"]",
            PLACEHOLDER_CONTAINER: "[data-region=\"placeholder-container\"]",
            RETRY_SEND: "[data-region=\"retry-send\"]",
            SELF_CONVERSATION_MESSAGE_CONTAINER: "[data-region=\"self-conversation-message-container\"]",
            SEND_MESSAGE_BUTTON: "[data-action=\"send-message\"]",
            SEND_MESSAGE_ICON_CONTAINER: "[data-region=\"send-icon-container\"]",
            TEXT: "[data-region=\"text\"]",
            TEXT_CONTAINER: "[data-region=\"text-container\"]",
            TIME_CREATED: "[data-region=\"time-created\"]",
            TITLE: "[data-region=\"title\"]",
            TOGGLE_EMOJI_PICKER_BUTTON: "[data-action=\"toggle-emoji-picker\"]"
        },
        TEMPLATES: {
            HEADER_PRIVATE: "core_message/message_drawer_view_conversation_header_content_type_private",
            HEADER_PRIVATE_NO_CONTROLS: "core_message/message_drawer_view_conversation_header_content_type_private_no_controls",
            HEADER_PUBLIC: "core_message/message_drawer_view_conversation_header_content_type_public",
            HEADER_SELF: "core_message/message_drawer_view_conversation_header_content_type_self",
            DAY: "core_message/message_drawer_view_conversation_body_day",
            MESSAGE: "core_message/message_drawer_view_conversation_body_message",
            MESSAGES: "core_message/message_drawer_view_conversation_body_messages"
        },
        CONVERSATION_TYPES: {
            PRIVATE: 1,
            PUBLIC: 2,
            SELF: 3
        },
        NEWEST_MESSAGES_FIRST: !0,
        LOAD_MESSAGE_LIMIT: 100,
        MILLISECONDS_IN_SEC: 1e3
    }
});
define("core_message/preferences_notifications_list_controller", ["jquery", "core/ajax", "core/notification", "core/custom_interaction_events", "core_message/notification_preference", "core_message/notification_processor_settings", "core/modal_factory"], function(a, b, c, d, f, g, h) {
    var i = {
            DISABLE_NOTIFICATIONS: "[data-region=\"disable-notification-container\"] [data-disable-notifications]",
            DISABLE_NOTIFICATIONS_CONTAINER: "[data-region=\"disable-notification-container\"]",
            PREFERENCE: "[data-state]",
            PREFERENCE_ROW: "[data-region=\"preference-row\"]",
            PREFERENCE_INPUT: "[data-state] input",
            PROCESSOR_SETTING: "[data-processor-setting]"
        },
        j = function(b) {
            this.root = a(b);
            this.userId = this.root.attr("data-user-id");
            this.registerEventListeners()
        };
    j.prototype.isDisabled = function() {
        return this.root.hasClass("disabled")
    };
    j.prototype.setDisabled = function() {
        this.root.addClass("disabled");
        this.root.find(i.PREFERENCE_INPUT).prop("disabled", !0)
    };
    j.prototype.setEnabled = function() {
        this.root.removeClass("disabled");
        this.root.find(i.PREFERENCE_INPUT).prop("disabled", !1)
    };
    j.prototype.toggleDisableAllStatus = function() {
        var d = a(i.DISABLE_NOTIFICATIONS),
            e = a(i.DISABLE_NOTIFICATIONS_CONTAINER),
            f = d.prop("checked");
        if (e.hasClass("loading")) {
            return a.Deferred().resolve()
        }
        e.addClass("loading");
        var g = {
            methodname: "core_user_update_user_preferences",
            args: {
                userid: this.userId,
                emailstop: f ? 1 : 0
            }
        };
        return b.call([g])[0].done(function() {
            if (f) {
                this.setDisabled()
            } else {
                this.setEnabled()
            }
        }.bind(this)).always(function() {
            e.removeClass("loading")
        }).fail(c.exception)
    };
    j.prototype.registerEventListeners = function() {
        var b = a(i.DISABLE_NOTIFICATIONS);
        d.define(this.root, [d.events.activate]);
        this.root.on("change", function(b) {
            if (!this.isDisabled()) {
                var c = a(b.target).closest(i.PREFERENCE),
                    d = a(b.target).closest(i.PREFERENCE_ROW),
                    e = new f(d, this.userId);
                c.addClass("loading");
                e.save().always(function() {
                    c.removeClass("loading")
                })
            }
        }.bind(this));
        var j = h.create({
            type: g.TYPE
        });
        this.root.on(d.events.activate, i.PROCESSOR_SETTING, function(b) {
            var d = a(b.target).closest(i.PROCESSOR_SETTING);
            b.preventDefault();
            j.then(function(c) {
                c.setUserId(a(d).attr("data-user-id"));
                c.setName(a(d).attr("data-name"));
                c.setContextId(a(d).attr("data-context-id"));
                c.setElement(d);
                c.show();
                b.stopImmediatePropagation()
            }).fail(c.exception)
        });
        d.define(b, [d.events.activate]);
        b.on(d.events.activate, function() {
            this.toggleDisableAllStatus()
        }.bind(this))
    };
    return j
});
define("core_message/message_drawer_helper", ["core/pubsub", "core_message/message_drawer_events"], function(a, b) {
    return {
        createConversationWithUser: function createConversationWithUser(c) {
            a.publish(b.CREATE_CONVERSATION_WITH_USER, c)
        },
        show: function show() {
            a.publish(b.SHOW)
        },
        showConversation: function showConversation(c) {
            a.publish(b.SHOW_CONVERSATION, c)
        },
        showSettings: function showSettings() {
            a.publish(b.SHOW_SETTINGS)
        }
    }
});
define("core_message/message_drawer_events", [], function() {
    return {
        CREATE_CONVERSATION_WITH_USER: "message-drawer-create-conversation-with-user",
        CONTACT_BLOCKED: "message-drawer-contact-blocked",
        CONTACT_UNBLOCKED: "message-drawer-contact-unblocked",
        CONTACT_ADDED: "message-drawer-contact-added",
        CONTACT_REMOVED: "message-drawer-contact-removed",
        CONTACT_REQUEST_ACCEPTED: "message-drawer-contact-request-accepted",
        CONTACT_REQUEST_DECLINED: "message-drawer-contact-request-declined",
        CONVERSATION_CREATED: "message-drawer-conversation-created",
        CONVERSATION_NEW_LAST_MESSAGE: "message-drawer-conversation-new-last-message",
        CONVERSATION_DELETED: "message-drawer-conversation-deleted",
        CONVERSATION_READ: "message-drawer-conversation-read",
        CONVERSATION_SET_FAVOURITE: "message-drawer-conversation-set-favourite",
        CONVERSATION_SET_MUTED: "message-drawer-conversation-set-muted",
        CONVERSATION_UNSET_FAVOURITE: "message-drawer-conversation-unset-favourite",
        CONVERSATION_UNSET_MUTED: "message-drawer-conversation-unset-muted",
        PREFERENCES_UPDATED: "message-drawer-preferences-updated",
        ROUTE_CHANGED: "message-drawer-route-change",
        SHOW: "message-drawer-show",
        HIDE: "message-drawer-hide",
        TOGGLE_VISIBILITY: "message-drawer-toggle",
        SHOW_CONVERSATION: "message-drawer-show-conversation",
        SHOW_SETTINGS: "message-drawer-show-settings"
    }
});
define("core_message/message_drawer_view_contact", ["jquery", "core/str", "core/templates"], function(a, b, c) {
    var d = {
            CONTENT_CONTAINER: "[data-region=\"content-container\"]"
        },
        e = {
            CONTENT: "core_message/message_drawer_view_contact_body_content"
        },
        f = function(a) {
            return a.find(d.CONTENT_CONTAINER)
        },
        g = function(a, b) {
            return c.render(e.CONTENT, b).then(function(b) {
                f(a).append(b);
                return b
            })
        };
    return {
        show: function show(b, c, d, e, h) {
            var i = a(d);
            f(i).empty();
            return g(i, h)
        },
        description: function description(a, c) {
            return b.get_string("messagedrawerviewcontact", "core_message", c.fullname)
        }
    }
});
define("core_message/preferences_processor_form", ["jquery", "core/ajax", "core/notification"], function(a, b, c) {
    var d = function(b) {
        this.root = a(b);
        this.userId = this.root.attr("data-user-id");
        this.name = this.root.attr("data-processor-name");
        this.root.find("form").on("submit", function(c) {
            c.preventDefault();
            this.save().done(function() {
                a(b).trigger("mpp:formsubmitted")
            })
        }.bind(this))
    };
    d.prototype.startLoading = function() {
        this.root.addClass("loading")
    };
    d.prototype.stopLoading = function() {
        this.root.removeClass("loading")
    };
    d.prototype.isLoading = function() {
        return this.root.hasClass("loading")
    };
    d.prototype.save = function() {
        if (this.isLoading()) {
            return a.Deferred()
        }
        this.startLoading();
        var d = this.root.find("form").serializeArray(),
            e = {
                methodname: "core_message_message_processor_config_form",
                args: {
                    userid: this.userId,
                    name: this.name,
                    formvalues: d
                }
            };
        return b.call([e])[0].fail(c.exception).always(function() {
            this.stopLoading()
        }.bind(this))
    };
    return d
});

function _typeof(a) {
    if ("function" == typeof Symbol && "symbol" == typeof Symbol.iterator) {
        _typeof = function(a) {
            return typeof a
        }
    } else {
        _typeof = function(a) {
            return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
        }
    }
    return _typeof(a)
}
define("core_message/message_drawer_router", ["jquery", "core/pubsub", "core/str", "core_message/message_drawer_events"], function(a, b, c, d) {
    var e = {},
        f = {},
        g = {
            CAN_RECEIVE_FOCUS: "input:not([type=\"hidden\"]), a[href], button, textarea, select, [tabindex]",
            ROUTES_BACK: "[data-route-back]"
        },
        h = function(c, f) {
            var h, j = [].slice.call(arguments).some(function(a) {
                    return "frompanel" == a
                }),
                k = [].slice.call(arguments, 2),
                l = a.Deferred().resolve().promise();
            Object.keys(e[c]).forEach(function(a) {
                var b = e[c][a],
                    d = a === f;
                if (d) {
                    h = b
                }
                b.parameters.forEach(function(a) {
                    if ("object" !== _typeof(a) || null === a) {
                        return
                    }
                    a.removeClass("previous");
                    a.attr("data-from-panel", !1);
                    if (d) {
                        if (j) {
                            a.attr("data-from-panel", !0)
                        }
                        a.removeClass("hidden");
                        a.attr("aria-hidden", !1)
                    } else {
                        if (!a.attr("data-in-panel")) {
                            a.addClass("hidden");
                            a.attr("aria-hidden", !0)
                        } else if ("view-search" == f || "view-overview" == f) {
                            a.addClass("hidden");
                            a.attr("aria-hidden", !0)
                        }
                    }
                })
            });
            if (h) {
                if (h.onGo) {
                    l = h.onGo.apply(void 0, h.parameters.concat(k));
                    for (var m = a(document.activeElement), n = !1, o = null, p = 1, q; p < h.parameters.length; p++) {
                        q = h.parameters[p];
                        if ("object" !== _typeof(q) || null === q) {
                            continue
                        }
                        if (!o) {
                            o = q
                        }
                        if (q.has(m).length) {
                            n = !0;
                            break
                        }
                    }
                    if (!n) {
                        o.find(g.CAN_RECEIVE_FOCUS).filter(":visible").first().focus()
                    }
                }
            }
            var r = {
                route: f,
                params: k,
                renderPromise: l
            };
            b.publish(d.ROUTE_CHANGED, r);
            return r
        },
        i = function(b) {
            var d = a(document.activeElement),
                j = h.apply(b, arguments),
                k = !1;
            if (!f[b]) {
                f[b] = []
            }
            f[b] = f[b].reduce(function(a, b) {
                if (b.route === j.route) {
                    k = !0
                }
                if (!k) {
                    a.push(b)
                }
                return a
            }, []);
            var l = f[b].length,
                m = l ? f[b][l - 1] : null;
            if (m) {
                for (var n = e[b][m.route], o = n.parameters, p = 1; p < o.length; p++) {
                    if ("object" !== _typeof(o[p]) || null === o[p]) {
                        continue
                    }
                    o[p].addClass("previous")
                }
                m.focusElement = d;
                if (n.getDescription) {
                    n.getDescription.apply(null, n.parameters.concat(m.params)).then(function(a) {
                        return c.get_string("backto", "core_message", a)
                    }).then(function(a) {
                        return j.renderPromise.then(function() {
                            e[b][j.route].parameters.forEach(function(b) {
                                if ("object" !== _typeof(b) || !b) {
                                    return
                                }
                                b.find(g.ROUTES_BACK).attr("aria-label", a)
                            })
                        })
                    }).catch(function() {})
                }
            }
            f[b].push(j);
            return j
        };
    return {
        add: function add(a, b, c, d, f) {
            if (!e[a]) {
                e[a] = []
            }
            e[a][b] = {
                parameters: c,
                onGo: d,
                getDescription: f
            }
        },
        go: i,
        back: function back(a) {
            if (f[a].length) {
                f[a].pop();
                var b = f[a].pop();
                if (b) {
                    i.apply(void 0, [a, b.route].concat(b.params));
                    window.setTimeout(function() {
                        b.focusElement.focus()
                    }, 50)
                }
            }
        }
    }
});

function asyncGeneratorStep(a, b, c, d, e, f, g) {
    try {
        var h = a[f](g),
            i = h.value
    } catch (a) {
        c(a);
        return
    }
    if (h.done) {
        b(i)
    } else {
        Promise.resolve(i).then(d, e)
    }
}

function _asyncToGenerator(a) {
    return function() {
        var b = this,
            c = arguments;
        return new Promise(function(d, e) {
            var h = a.apply(b, c);

            function f(a) {
                asyncGeneratorStep(h, d, e, f, g, "next", a)
            }

            function g(a) {
                asyncGeneratorStep(h, d, e, f, g, "throw", a)
            }
            f(void 0)
        })
    }
}
define("core_message/message_drawer_view_overview_section", ["jquery", "core/custom_interaction_events", "core/notification", "core/pubsub", "core/str", "core/pending", "core/templates", "core/user_date", "core_message/message_repository", "core_message/message_drawer_events", "core_message/message_drawer_router", "core_message/message_drawer_routes", "core_message/message_drawer_lazy_load_list", "core_message/message_drawer_view_conversation_constants"], function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var o = {
            TOGGLE: "[data-region=\"toggle\"]",
            CONVERSATION: "[data-conversation-id]",
            BLOCKED_ICON_CONTAINER: "[data-region=\"contact-icon-blocked\"]",
            LAST_MESSAGE: "[data-region=\"last-message\"]",
            LAST_MESSAGE_DATE: "[data-region=\"last-message-date\"]",
            MUTED_ICON_CONTAINER: "[data-region=\"muted-icon-container\"]",
            UNREAD_COUNT: "[data-region=\"unread-count\"]",
            SECTION_TOTAL_COUNT: "[data-region=\"section-total-count\"]",
            SECTION_TOTAL_COUNT_CONTAINER: "[data-region=\"section-total-count-container\"]",
            SECTION_UNREAD_COUNT: "[data-region=\"section-unread-count\"]",
            PLACEHOLDER_CONTAINER: "[data-region=\"placeholder-container\"]"
        },
        p = {
            CONVERSATIONS_LIST: "core_message/message_drawer_conversations_list",
            CONVERSATIONS_LIST_ITEMS_PLACEHOLDER: "core_message/message_drawer_conversations_list_items_placeholder"
        },
        q = 50,
        r = {},
        s = {},
        t = !1,
        u = !1,
        v = function(a) {
            return m.getRoot(a).hasClass("show")
        },
        w = function(a) {
            a.addClass("expanded")
        },
        x = function(a) {
            a.removeClass("expanded")
        },
        y = function(a, b) {
            var c = a.find(o.SECTION_TOTAL_COUNT_CONTAINER),
                d = c.find(o.SECTION_TOTAL_COUNT);
            d.text(b);
            c.removeClass("hidden");
            e.get_string("totalconversations", "core_message", b).done(function(a) {
                c.attr("aria-label", a)
            });
            var f = 20 < b ? 20 : b,
                h = Array.apply(null, Array(f)).map(function() {
                    return !0
                });
            g.render(p.CONVERSATIONS_LIST_ITEMS_PLACEHOLDER, {
                placeholders: h
            }).then(function(b) {
                var c = a.find(o.PLACEHOLDER_CONTAINER);
                c.html(b)
            }).catch(function() {})
        },
        z = function(a, b) {
            var c = a.find(o.SECTION_UNREAD_COUNT);
            c.text(b);
            e.get_string("unreadconversations", "core_message", b).done(function(a) {
                c.attr("aria-label", a)
            });
            if (0 < b) {
                c.removeClass("hidden")
            }
        },
        A = function(b) {
            var c = function(b) {
                    return Object.keys(b).reduce(function(d, e) {
                        if (a.isArray(b[e])) {
                            d[e.toLowerCase()] = b[e].map(c)
                        } else {
                            d[e.toLowerCase()] = b[e]
                        }
                        return d
                    }, {})
                },
                d = c(b);
            d.messages = d.messages.map(function(a) {
                a.useridfrom = a.userfrom.id;
                return a
            });
            return d
        },
        B = function(b, d) {
            var h = new f,
                i = function() {
                    var b = _asyncToGenerator(regeneratorRuntime.mark(function b(d) {
                        var f, h, i, j, k, l, m;
                        return regeneratorRuntime.wrap(function(b) {
                            while (1) {
                                switch (b.prev = b.next) {
                                    case 0:
                                        if (d) {
                                            b.next = 2;
                                            break
                                        }
                                        return b.abrupt("return", null);
                                    case 2:
                                        f = document.createElement("element");
                                        f.innerHTML = d.text.replace(/<img /g, "<noimg ");
                                        h = f.querySelector("[src]") || !1;
                                        if (h) {
                                            b.next = 10;
                                            break
                                        }
                                        i = a(d.text).text();
                                        if (!i) {
                                            b.next = 10;
                                            break
                                        }
                                        if (!(-1 == i.indexOf("<"))) {
                                            b.next = 10;
                                            break
                                        }
                                        return b.abrupt("return", i);
                                    case 10:
                                        j = "i/messagecontentmultimediageneral";
                                        k = "messagecontentmultimediageneral";
                                        if (d.text.includes("<img")) {
                                            j = "i/messagecontentimage";
                                            k = "messagecontentimage"
                                        } else if (d.text.includes("<video")) {
                                            j = "i/messagecontentvideo";
                                            k = "messagecontentvideo"
                                        } else if (d.text.includes("<audio")) {
                                            j = "i/messagecontentaudio";
                                            k = "messagecontentaudio"
                                        }
                                        b.prev = 13;
                                        b.next = 16;
                                        return e.get_string(k, "core_message");
                                    case 16:
                                        l = b.sent;
                                        b.next = 19;
                                        return g.renderPix(j, "core", l);
                                    case 19:
                                        m = b.sent;
                                        return b.abrupt("return", m + " " + l);
                                    case 23:
                                        b.prev = 23;
                                        b.t0 = b["catch"](13);
                                        c.exception(b.t0);
                                        return b.abrupt("return", null);
                                    case 27:
                                    case "end":
                                        return b.stop();
                                }
                            }
                        }, b, null, [
                            [13, 23]
                        ])
                    }));
                    return function() {
                        return b.apply(this, arguments)
                    }
                }(),
                j = b.map(function(a) {
                    var b = a.messages.length ? a.messages[a.messages.length - 1] : null;
                    return i(b).then(function(c) {
                        var e = {
                                id: a.id,
                                imageurl: a.imageurl,
                                name: a.name,
                                subname: a.subname,
                                unreadcount: a.unreadcount,
                                ismuted: a.ismuted,
                                lastmessagedate: b ? b.timecreated : null,
                                sentfromcurrentuser: b ? b.useridfrom == d : null,
                                lastmessage: c
                            },
                            f = null;
                        if (a.type == n.CONVERSATION_TYPES.SELF) {
                            f = a.members[0]
                        } else if (a.type == n.CONVERSATION_TYPES.PRIVATE) {
                            f = a.members.reduce(function(a, b) {
                                if (!a && b.id != d) {
                                    a = b
                                }
                                return a
                            }, null)
                        }
                        if (null !== f) {
                            e.userid = f.id;
                            e.showonlinestatus = f.showonlinestatus;
                            e.isonline = f.isonline;
                            e.isblocked = f.isblocked
                        }
                        if (a.type == n.CONVERSATION_TYPES.PUBLIC) {
                            e.lastsendername = a.members.reduce(function(a, c) {
                                if (!a && b && c.id == b.useridfrom) {
                                    a = c.fullname
                                }
                                return a
                            }, null)
                        }
                        return e
                    }).catch(c.exception)
                });
            return Promise.all(j).then(function(a) {
                a.forEach(function(a) {
                    if (new Date().toDateString() == new Date(1e3 * a.lastmessagedate).toDateString()) {
                        a.istoday = !0
                    }
                });
                return g.render(p.CONVERSATIONS_LIST, {
                    conversations: a
                })
            }).then(function(b, c) {
                h.resolve();
                return a.Deferred().resolve(b, c)
            }).catch(function(a) {
                h.resolve();
                c.exception(a)
            })
        },
        C = function(a, b, d) {
            var e = null,
                f = !0;
            if (a && a.length) {
                var g = a.filter(function(a) {
                    return a != n.CONVERSATION_TYPES.SELF
                });
                f = a.length != g.length;
                e = g[0]
            }
            return function(a, g) {
                return i.getConversations(g, e, q + 1, d, b, f).then(function(b) {
                    var c = b.conversations;
                    if (c.length > q) {
                        c = c.slice(0, -1)
                    } else {
                        m.setLoadedAll(a, !0)
                    }
                    d = d + q;
                    c.forEach(function(a) {
                        r[a.id] = a
                    });
                    return c
                }).catch(c.exception)
            }
        },
        D = function(a) {
            return a.find(o.SECTION_TOTAL_COUNT)
        },
        E = function(a) {
            return a.find(o.SECTION_UNREAD_COUNT)
        },
        F = function(a) {
            if (t) {
                var b = D(a),
                    c = parseInt(b.text());
                c = c + 1;
                b.text(c)
            }
        },
        G = function(a) {
            if (t) {
                var b = D(a),
                    c = parseInt(b.text());
                c = c - 1;
                b.text(c)
            }
        },
        H = function(a) {
            if (u) {
                var b = E(a),
                    c = parseInt(b.text());
                c = c - 1;
                b.text(c);
                if (1 > c) {
                    b.addClass("hidden")
                }
            }
        },
        I = function(a, b) {
            return a.find("[data-conversation-id=\"" + b + "\"]")
        },
        J = function(a, b) {
            return a.find("[data-user-id=\"" + b + "\"]")
        },
        K = function(a) {
            a.find(o.MUTED_ICON_CONTAINER).removeClass("hidden")
        },
        L = function(a) {
            a.find(o.MUTED_ICON_CONTAINER).addClass("hidden")
        },
        M = function(a) {
            a.find(o.BLOCKED_ICON_CONTAINER).removeClass("hidden")
        },
        N = function(a) {
            a.find(o.BLOCKED_ICON_CONTAINER).addClass("hidden")
        },
        O = function(a, b, d) {
            var e = a.find(o.CONVERSATION);
            if (!e.length) {
                var f = m.getRoot(a);
                m.showContent(f);
                m.hideEmptyMessage(f)
            }
            r[b.id] = b;
            return B([b], d).then(function(b) {
                var c = m.getContentContainer(a);
                return c.prepend(b)
            }).then(function() {
                return F(a)
            }).catch(c.exception)
        },
        P = function(a, b) {
            b.remove();
            G(a);
            var c = a.find(o.CONVERSATION);
            if (!c.length) {
                var d = m.getRoot(a);
                m.hideContent(d);
                m.showEmptyMessage(d)
            }
        },
        Q = function(a, b) {
            var c = b.find(o.UNREAD_COUNT);
            c.text("0");
            c.addClass("hidden");
            H(a)
        },
        R = function(g, h, i, n, p, q) {
            var t = m.getRoot(h),
                u = function(a) {
                    var b = parseInt(a.type, 10);
                    if (n && 0 > n.indexOf(b) || p && !a.isFavourite || !p && a.isFavourite) {
                        return !1
                    }
                    return !0
                },
                v = h.find(o.TOGGLE);
            h.css("min-height", v.outerHeight());
            h.on("show.bs.collapse", function() {
                w(h);
                m.show(t, i, function(a, b, d) {
                    return B(b, d).then(function(b) {
                        a.append(b);
                        return b
                    }).catch(c.exception)
                })
            });
            h.on("hidden.bs.collapse", function() {
                x(h)
            });
            d.subscribe(j.CONTACT_BLOCKED, function(a) {
                var b = J(h, a);
                if (b.length) {
                    M(b)
                }
            });
            d.subscribe(j.CONTACT_UNBLOCKED, function(a) {
                var b = J(h, a);
                if (b.length) {
                    N(b)
                }
            });
            d.subscribe(j.CONVERSATION_SET_MUTED, function(a) {
                var b = a.id,
                    c = I(h, b);
                if (c.length) {
                    K(c)
                }
            });
            d.subscribe(j.CONVERSATION_UNSET_MUTED, function(a) {
                var b = a.id,
                    c = I(h, b);
                if (c.length) {
                    L(c)
                }
            });
            d.subscribe(j.CONVERSATION_NEW_LAST_MESSAGE, function(a) {
                if (!u(a)) {
                    return
                }
                var b = new f("core_message/message_drawer_view_overview_section:new"),
                    d = a.loggedInUserId,
                    e = a.id,
                    g = I(h, e);
                a = A(a);
                if (g.length) {
                    var i = m.getContentContainer(h);
                    B([a], d).then(function(b) {
                        if (s[e]) {
                            if (a.messages[0].timeadded < s[e]) {
                                return
                            }
                        }
                        i.prepend(b);
                        g.remove()
                    }).then(b.resolve).catch(c.exception)
                } else if (a.messages.length) {
                    O(h, a, d).then(b.resolve).catch()
                } else {
                    b.resolve()
                }
            });
            d.subscribe(j.CONVERSATION_DELETED, function(a) {
                var b = I(h, a);
                delete r[a];
                s[a] = new Date;
                if (b.length) {
                    P(h, b)
                }
            });
            d.subscribe(j.CONVERSATION_READ, function(a) {
                var b = I(h, a);
                if (b.length) {
                    Q(h, b)
                }
            });
            d.subscribe(j.CONVERSATION_SET_FAVOURITE, function(a) {
                var b = null;
                if (u(a)) {
                    b = I(h, a.id);
                    if (!b.length) {
                        O(h, A(a), a.loggedInUserId)
                    }
                } else {
                    b = I(h, a.id);
                    if (b.length) {
                        P(h, b)
                    }
                }
            });
            d.subscribe(j.CONVERSATION_UNSET_FAVOURITE, function(a) {
                var b = null;
                if (u(a)) {
                    b = I(h, a.id);
                    if (!b.length) {
                        O(h, A(a), a.loggedInUserId)
                    }
                } else {
                    b = I(h, a.id);
                    if (b.length) {
                        P(h, b)
                    }
                }
            });
            b.define(h, [b.events.activate]);
            h.on(b.events.activate, o.CONVERSATION, function(b, c) {
                var d = a(b.target).closest(o.CONVERSATION),
                    e = d.attr("data-conversation-id"),
                    f = r[e];
                k.go(g, l.VIEW_CONVERSATION, f, q);
                c.originalEvent.preventDefault()
            })
        };
    return {
        show: function show(b, d, e, f, g, h, i, j, k) {
            var l = a(e);
            if (!l.attr("data-init")) {
                var n = C(g, h, 0);
                R(b, l, n, g, h, k);
                if (v(l)) {
                    w(l);
                    var o = m.getRoot(l);
                    m.show(o, n, function(a, b, d) {
                        return B(b, d).then(function(b) {
                            a.append(b);
                            return b
                        }).catch(c.exception)
                    })
                }
                i.then(function(a) {
                    y(l, a);
                    t = !0
                }).catch(function() {});
                j.then(function(a) {
                    z(l, a);
                    u = !0
                }).catch(function() {});
                l.attr("data-init", !0)
            }
        },
        isVisible: v
    }
});
define("core_message/message_drawer_view_group_info", ["jquery", "core/str", "core/templates", "core_message/message_repository", "core_message/message_drawer_lazy_load_list"], function(a, b, c, d, e) {
    var f = {
            CONTENT_CONTAINER: "[data-region=\"group-info-content-container\"]",
            MEMBERS_LIST: "[data-region=\"members-list\"]"
        },
        g = {
            CONTENT: "core_message/message_drawer_view_group_info_body_content",
            MEMBERS_LIST: "core_message/message_drawer_view_group_info_participants_list"
        },
        h = function(a) {
            return a.find(f.CONTENT_CONTAINER)
        },
        i = function(a, b, d) {
            var e = 50 < b.totalMemberCount ? 50 : b.totalMemberCount,
                f = Array.apply(null, Array(e)).map(function() {
                    return !0
                }),
                i = {
                    name: b.name,
                    subname: b.subname,
                    imageurl: b.imageUrl,
                    placeholders: f,
                    loggedinuser: {
                        id: d
                    }
                };
            return c.render(g.CONTENT, i).then(function(b) {
                h(a).append(b);
                return b
            })
        },
        j = function(a, b, c) {
            return function(f, g) {
                return d.getConversationMembers(a.id, g, b + 1, c).then(function(a) {
                    if (a.length > b) {
                        a = a.slice(0, -1)
                    } else {
                        e.setLoadedAll(f, !0)
                    }
                    c = c + b;
                    return a.filter(function(a) {
                        return a.id != g
                    })
                })
            }
        },
        k = function(a, b) {
            return c.render(g.MEMBERS_LIST, {
                contacts: b
            }).then(function(b) {
                a.append(b);
                return b
            })
        };
    return {
        show: function show(b, c, d, f, g, l) {
            var m = a(d);
            h(m).empty();
            return i(m, g, l).then(function() {
                var a = e.getRoot(m);
                e.show(a, j(g, 50, 0), k)
            })
        },
        description: function description(a, c) {
            return b.get_string("messagedrawerviewgroupinfo", "core_message", c.name)
        }
    }
});
define("core_message/notification_processor", ["jquery"], function(a) {
    var b = {
            STATE_NONE: "[data-state=\"none\"]",
            STATE_BOTH: "[data-state=\"both\"]",
            STATE_LOGGED_IN: "[data-state=\"loggedin\"]",
            STATE_LOGGED_OFF: "[data-state=\"loggedoff\"]"
        },
        c = function(b) {
            this.root = a(b)
        };
    c.prototype.getName = function() {
        return this.root.attr("data-processor-name")
    };
    c.prototype.isLoggedInEnabled = function() {
        var a = this.root.find(b.STATE_NONE).find("input");
        if (a.prop("checked")) {
            return !1
        }
        var c = this.root.find(b.STATE_BOTH).find("input"),
            d = this.root.find(b.STATE_LOGGED_IN).find("input");
        return d.prop("checked") || c.prop("checked")
    };
    c.prototype.isLoggedOffEnabled = function() {
        var a = this.root.find(b.STATE_NONE).find("input");
        if (a.prop("checked")) {
            return !1
        }
        var c = this.root.find(b.STATE_BOTH).find("input"),
            d = this.root.find(b.STATE_LOGGED_OFF).find("input");
        return d.prop("checked") || c.prop("checked")
    };
    return c
});
define("core_message/message_drawer_view_conversation_renderer", ["jquery", "core/notification", "core/str", "core/templates", "core/user_date", "core_message/message_drawer_view_conversation_constants"], function(a, b, c, d, e, f) {
    var g = f.SELECTORS,
        h = f.TEMPLATES,
        i = f.CONVERSATION_TYPES,
        j = function(a) {
            return a.find(g.CONTENT_MESSAGES_CONTAINER)
        },
        k = function(a) {
            j(a).removeClass("hidden")
        },
        l = function(a) {
            j(a).addClass("hidden")
        },
        m = function(a) {
            return a.find(g.SELF_CONVERSATION_MESSAGE_CONTAINER)
        },
        n = function(a) {
            return m(a).addClass("hidden")
        },
        o = function(a) {
            return a.find(g.CONTACT_REQUEST_SENT_MESSAGE_CONTAINER)
        },
        p = function(a) {
            return o(a).addClass("hidden")
        },
        q = function(a) {
            return a.find(g.CONTENT_MESSAGES_FOOTER_CONTAINER)
        },
        r = function(a) {
            q(a).removeClass("hidden")
        },
        s = function(a) {
            q(a).addClass("hidden")
        },
        t = function(a) {
            return a.find(g.CONTENT_MESSAGES_FOOTER_EDIT_MODE_CONTAINER)
        },
        u = function(a) {
            t(a).removeClass("hidden")
        },
        v = function(a) {
            t(a).addClass("hidden")
        },
        w = function(a) {
            return a.find(g.PLACEHOLDER_CONTAINER)
        },
        x = function(a) {
            w(a).removeClass("hidden")
        },
        y = function(a) {
            w(a).addClass("hidden")
        },
        z = function(a) {
            return a.find(g.CONTENT_MESSAGES_FOOTER_REQUIRE_CONTACT_CONTAINER)
        },
        A = function(a) {
            z(a).removeClass("hidden")
        },
        B = function(a) {
            z(a).addClass("hidden")
        },
        C = function(a) {
            return a.find(g.CONTENT_MESSAGES_FOOTER_REQUIRE_UNBLOCK_CONTAINER)
        },
        D = function(a) {
            C(a).removeClass("hidden")
        },
        E = function(a) {
            C(a).addClass("hidden")
        },
        F = function(a) {
            return a.find(g.CONTENT_MESSAGES_FOOTER_UNABLE_TO_MESSAGE_CONTAINER)
        },
        G = function(a) {
            F(a).removeClass("hidden")
        },
        H = function(a) {
            F(a).addClass("hidden")
        },
        I = function(a) {
            P(a);
            S(a);
            V(a)
        },
        J = function(a) {
            s(a);
            v(a);
            y(a);
            B(a);
            E(a);
            H(a)
        },
        K = function(a) {
            return a.find(g.CONTENT_PLACEHOLDER_CONTAINER)
        },
        L = function(a) {
            K(a).removeClass("hidden")
        },
        M = function(a) {
            K(a).addClass("hidden")
        },
        N = function(a) {
            return a.find(g.HEADER)
        },
        O = function(a) {
            N(a).removeClass("hidden")
        },
        P = function(a) {
            N(a).addClass("hidden")
        },
        Q = function(a) {
            return a.find(g.HEADER_EDIT_MODE)
        },
        R = function(a) {
            Q(a).removeClass("hidden")
        },
        S = function(a) {
            Q(a).addClass("hidden")
        },
        T = function(a) {
            return a.find(g.HEADER_PLACEHOLDER_CONTAINER)
        },
        U = function(a) {
            T(a).removeClass("hidden")
        },
        V = function(a) {
            T(a).addClass("hidden")
        },
        W = function(a) {
            return a.find(g.EMOJI_PICKER_CONTAINER)
        },
        X = function(a) {
            return a.find(g.EMOJI_AUTO_COMPLETE_CONTAINER)
        },
        Y = function(a, b) {
            var c = j(a);
            return c.find("[data-message-id=\"" + b + "\"]")
        },
        Z = function(a, b) {
            var c = j(a);
            return c.find("[data-day-id=\"" + b + "\"]")
        },
        $ = function(a) {
            return a.find(g.MORE_MESSAGES_LOADING_ICON_CONTAINER)
        },
        _ = function(a) {
            $(a).removeClass("hidden")
        },
        aa = function(a) {
            $(a).addClass("hidden")
        },
        ba = function(a) {
            return a.find(g.CONFIRM_DIALOGUE_CONTAINER)
        },
        ca = function(a) {
            var b = ba(a),
                c = b.siblings(":not(.hidden)");
            c.attr("aria-hidden", !0);
            c.attr("tabindex", -1);
            c.attr("data-confirm-dialogue-hidden", !0);
            b.removeClass("hidden")
        },
        da = function(a) {
            var b = ba(a),
                c = b.siblings("[data-confirm-dialogue-hidden=\"true\"]");
            c.removeAttr("aria-hidden");
            c.removeAttr("tabindex");
            c.removeAttr("data-confirm-dialogue-hidden");
            b.addClass("hidden")
        },
        ea = function(a, b) {
            Q(a).find(g.MESSAGES_SELECTED_COUNT).text(b)
        },
        fa = function(a, b) {
            return a.map(function(a) {
                return {
                    id: a.id,
                    isread: a.isRead,
                    fromloggedinuser: a.fromLoggedInUser,
                    userfrom: a.userFrom,
                    text: a.text,
                    formattedtime: a.timeCreated ? b[a.timeCreated] : null
                }
            })
        },
        ga = function(b, c, e, f, g) {
            var i = j(c),
                k = f.map(function(a) {
                    return d.render(h.DAY, {
                        timestamp: a.value.timestamp,
                        messages: fa(a.value.messages, g)
                    })
                });
            return a.when.apply(a, k).then(function() {
                f.forEach(function(b, d) {
                    k[d].then(function(d) {
                        if (b.before) {
                            var e = Z(c, b.before.timestamp);
                            return a(d).insertBefore(e)
                        } else {
                            return i.append(d)
                        }
                    }).catch(function() {})
                })
            })
        },
        ha = function(b, c, e, f, i) {
            var j = f.map(function(a) {
                    return a.value
                }),
                k = fa(j, i);
            return d.render(h.MESSAGES, {
                messages: k
            }).then(function(b) {
                var d = a(b);
                f.forEach(function(a) {
                    var b = d.find("[data-message-id=\"" + a.value.id + "\"]");
                    if (a.before) {
                        var e = Y(c, a.before.id);
                        return b.insertBefore(e)
                    } else {
                        var f = Z(c, a.day.timestamp),
                            h = f.find(g.DAY_MESSAGES_CONTAINER);
                        return h.append(b)
                    }
                })
            })
        },
        ia = function(a, b, c, d, e) {
            d.forEach(function(a) {
                var c = a.before,
                    d = a.after,
                    f = Y(b, c.id);
                if (c.id != d.id) {
                    f.attr("data-message-id", d.id)
                }
                if (c.timeCreated != d.timeCreated) {
                    var h = e[d.timeCreated];
                    f.find(g.LOADING_ICON_CONTAINER).addClass("hidden");
                    f.find(g.TIME_CREATED).text(h).removeClass("hidden")
                }
                if (c.sendState != d.sendState) {
                    var i = f.find(g.LOADING_ICON_CONTAINER),
                        j = f.find(g.TIME_CREATED),
                        k = f.find(g.RETRY_SEND);
                    i.addClass("hidden");
                    i.attr("aria-hidden", "true");
                    j.addClass("hidden");
                    j.attr("aria-hidden", "true");
                    k.addClass("hidden");
                    k.attr("aria-hidden", "true");
                    f.removeClass("border border-danger");
                    switch (d.sendState) {
                        case "pending":
                            i.removeClass("hidden");
                            i.attr("aria-hidden", "false");
                            break;
                        case "error":
                            k.removeClass("hidden");
                            k.attr("aria-hidden", "false");
                            f.addClass("border border-danger");
                            break;
                        case "sent":
                            j.removeClass("hidden");
                            j.attr("aria-hidden", "false");
                            break;
                    }
                }
                if (c.text != d.text) {
                    f.find(g.TEXT_CONTAINER).html(d.text)
                }
                if (c.errorMessage != d.errorMessage) {
                    var l = f.find(g.ERROR_MESSAGE_CONTAINER),
                        a = l.find(g.ERROR_MESSAGE);
                    if (d.errorMessage) {
                        l.removeClass("hidden");
                        l.attr("aria-hidden", "false");
                        a.text(d.errorMessage)
                    } else {
                        l.addClass("hidden");
                        l.attr("aria-hidden", "true");
                        a.text("")
                    }
                }
            })
        },
        ja = function(a, b) {
            b.forEach(function(b) {
                Z(a, b.timestamp).remove()
            })
        },
        ka = function(a, b) {
            b.forEach(function(b) {
                Y(a, b.id).remove()
            })
        },
        la = function(b, d, f, g) {
            var h = [],
                i = 0 < g.days.add.length,
                j = 0 < g.messages.add.length,
                k = 0 < g.messages.update.length,
                l = [],
                m = a.Deferred().resolve({}).promise();
            if (i) {
                l = l.concat(g.days.add.reduce(function(a, b) {
                    return a.concat(b.value.messages.reduce(function(a, b) {
                        if (b.timeCreated) {
                            a.push(b.timeCreated)
                        }
                        return a
                    }, []))
                }, []))
            }
            if (j) {
                l = l.concat(g.messages.add.reduce(function(a, b) {
                    if (b.value.timeCreated) {
                        a.push(b.value.timeCreated)
                    }
                    return a
                }, []))
            }
            if (k) {
                l = l.concat(g.messages.update.reduce(function(a, b) {
                    if (b.before.timeCreated != b.after.timeCreated) {
                        a.push(b.after.timeCreated)
                    }
                    return a
                }, []))
            }
            if (l.length) {
                m = c.get_string("strftimetime24", "core_langconfig").then(function(a) {
                    var b = l.map(function(b) {
                        return {
                            timestamp: b,
                            format: a
                        }
                    });
                    return e.get(b)
                }).then(function(a) {
                    return l.reduce(function(b, c, d) {
                        b[c] = a[d];
                        return b
                    }, {})
                })
            }
            if (i) {
                h.push(m.then(function(a) {
                    return ga(b, d, f, g.days.add, a)
                }))
            }
            if (j) {
                h.push(m.then(function(a) {
                    return ha(b, d, f, g.messages.add, a)
                }))
            }
            if (k) {
                h.push(m.then(function(a) {
                    return ia(b, d, f, g.messages.update, a)
                }))
            }
            if (0 < g.days.remove.length) {
                ja(d, g.days.remove)
            }
            if (0 < g.messages.remove.length) {
                ka(d, g.messages.remove)
            }
            return a.when.apply(a, h)
        },
        ma = function(a, b, c, e) {
            var f = N(a),
                g = h.HEADER_PUBLIC;
            e.context.showrouteback = "false" === a.attr("data-from-panel");
            if (e.type == i.PRIVATE) {
                g = e.showControls ? h.HEADER_PRIVATE : h.HEADER_PRIVATE_NO_CONTROLS
            } else if (e.type == i.SELF) {
                g = h.HEADER_SELF
            }
            return d.render(g, e.context).then(function(a, b) {
                d.replaceNodeContents(f, a, b)
            })
        },
        na = function(a, b, d, e) {
            J(d);
            switch (e.type) {
                case "placeholder":
                    return x(d);
                case "add-contact":
                    return c.get_strings([{
                        key: "requirecontacttomessage",
                        component: "core_message",
                        param: e.user.fullname
                    }, {
                        key: "isnotinyourcontacts",
                        component: "core_message",
                        param: e.user.fullname
                    }]).then(function(a) {
                        var b = a[1],
                            c = a[0],
                            e = z(d);
                        e.find(g.TITLE).text(b);
                        e.find(g.TEXT).text(c);
                        A(d);
                        return a
                    });
                case "edit-mode":
                    return u(d);
                case "content":
                    return r(d);
                case "unblock":
                    return D(d);
                case "unable-to-message":
                    return G(d);
            }
            return !0
        },
        oa = function(a, b, c, d) {
            var e = j(b),
                f = Y(b, d),
                g = f.position();
            if (g) {
                var h = e.scrollTop() + g.top;
                e.scrollTop(h)
            }
        },
        pa = function(a, b, c, d) {
            if (d) {
                P(a);
                U(a)
            } else {
                O(a);
                V(a)
            }
        },
        qa = function(a, b, c, d) {
            if (d) {
                l(b);
                L(b)
            } else {
                k(b);
                M(b)
            }
        },
        ra = function(a, b, c, d) {
            if (d) {
                _(b)
            } else {
                aa(b)
            }
        },
        sa = function(a, b, c, d) {
            var e = W(c);
            if (d) {
                e.removeClass("hidden");
                e.attr("aria-hidden", !1);
                e.find(g.EMOJI_PICKER_SEARCH_INPUT).focus()
            } else {
                e.addClass("hidden");
                e.attr("aria-hidden", !0)
            }
        },
        ta = function(a, b, c, d) {
            var e = X(c);
            if (d) {
                e.removeClass("hidden");
                e.attr("aria-hidden", !1)
            } else {
                e.addClass("hidden");
                e.attr("aria-hidden", !0)
            }
        },
        ua = function(b, c, d, e, f, h, i, j, k) {
            var l = ba(c),
                m = e.map(function(a) {
                    return l.find(a)
                }),
                n = l.find(g.CONFIRM_DIALOGUE_CANCEL_BUTTON),
                o = l.find(g.CONFIRM_DIALOGUE_OKAY_BUTTON),
                p = l.find(g.CONFIRM_DIALOGUE_TEXT),
                q = l.find(g.CONFIRM_DIALOGUE_HEADER);
            l.find("button").addClass("hidden");
            if (i) {
                n.removeClass("hidden")
            } else {
                n.addClass("hidden")
            }
            if (k) {
                o.removeClass("hidden")
            } else {
                o.addClass("hidden")
            }
            if (h) {
                q = a("<h3 class=\"h6\" data-region=\"dialogue-header\"></h3>");
                q.text(h);
                var r = l.find(g.CONFIRM_DIALOGUE);
                r.prepend(q)
            } else if (q.length) {
                q.remove()
            }
            m.forEach(function(a) {
                a.removeClass("hidden")
            });
            p.text(f);
            ca(d);
            ca(c);
            if (!j) {
                ca(b)
            }
            l.find(g.CAN_RECEIVE_FOCUS).filter(":visible").first().focus()
        },
        va = function(a, b, c) {
            var d = ba(b),
                e = d.find(g.CONFIRM_DIALOGUE_CANCEL_BUTTON),
                f = d.find(g.CONFIRM_DIALOGUE_OKAY_BUTTON),
                h = d.find(g.CONFIRM_DIALOGUE_TEXT),
                i = d.find(g.CONFIRM_DIALOGUE_HEADER);
            Ea(b);
            da(b);
            da(c);
            da(a);
            d.find("button").addClass("hidden");
            e.removeClass("hidden");
            f.removeClass("hidden");
            h.text("");
            if (i.length) {
                i.remove()
            }
            a.find(g.CAN_RECEIVE_FOCUS).first().focus();
            return !0
        },
        wa = function(a, b, d, e) {
            if (e) {
                if (e.canmessageevenifblocked) {
                    return c.get_string("cantblockuser", "core_message", e.fullname).then(function(c) {
                        return ua(a, b, d, [], c, "", !1, !1, !0)
                    })
                } else {
                    return c.get_string("blockuserconfirm", "core_message", e.fullname).then(function(c) {
                        return ua(a, b, d, [g.ACTION_CONFIRM_BLOCK], c, "", !0, !1)
                    })
                }
            } else {
                return va(a, b, d)
            }
        },
        xa = function(a, b, d, e) {
            if (e) {
                return c.get_string("unblockuserconfirm", "core_message", e.fullname).then(function(c) {
                    return ua(a, b, d, [g.ACTION_CONFIRM_UNBLOCK], c, "", !0, !1)
                })
            } else {
                return va(a, b, d)
            }
        },
        ya = function(a, b, d, e) {
            if (e) {
                return c.get_string("addcontactconfirm", "core_message", e.fullname).then(function(c) {
                    return ua(a, b, d, [g.ACTION_CONFIRM_ADD_CONTACT], c, "", !0, !1)
                })
            } else {
                return va(a, b, d)
            }
        },
        za = function(a, b, d, e) {
            if (e) {
                return c.get_string("removecontactconfirm", "core_message", e.fullname).then(function(c) {
                    return ua(a, b, d, [g.ACTION_CONFIRM_REMOVE_CONTACT], c, "", !0, !1)
                })
            } else {
                return va(a, b, d)
            }
        },
        Aa = function(a, b, d, e) {
            var f = null;
            if (e.type == i.SELF) {
                f = "deleteselectedmessagesconfirmselfconversation"
            } else {
                if (e.canDeleteMessagesForAllUsers) {
                    Da(b);
                    f = "deleteforeveryoneselectedmessagesconfirm"
                } else {
                    f = "deleteselectedmessagesconfirm"
                }
            }
            if (e.show) {
                return c.get_string(f, "core_message").then(function(c) {
                    return ua(a, b, d, [g.ACTION_CONFIRM_DELETE_SELECTED_MESSAGES], c, "", !0, !1)
                })
            } else {
                return va(a, b, d)
            }
        },
        Ba = function(a, b, d, e) {
            var f = null;
            if (e == i.SELF) {
                f = "deleteallselfconfirm"
            } else if (e) {
                f = "deleteallconfirm"
            }
            if (f) {
                return c.get_string(f, "core_message").then(function(c) {
                    return ua(a, b, d, [g.ACTION_CONFIRM_DELETE_CONVERSATION], c, "", !0, !1)
                })
            } else {
                return va(a, b, d)
            }
        },
        Ca = function(a, b, d, e) {
            if (e) {
                return c.get_string("userwouldliketocontactyou", "core_message", e.fullname).then(function(c) {
                    var e = [g.ACTION_ACCEPT_CONTACT_REQUEST, g.ACTION_DECLINE_CONTACT_REQUEST];
                    return ua(a, b, d, e, c, "", !1, !0)
                })
            } else {
                return va(a, b, d)
            }
        },
        Da = function(a) {
            var b = ba(a),
                c = b.find(g.DELETE_MESSAGES_FOR_ALL_USERS_TOGGLE_CONTAINER);
            c.removeClass("hidden")
        },
        Ea = function(a) {
            var b = ba(a),
                c = b.find(g.DELETE_MESSAGES_FOR_ALL_USERS_TOGGLE_CONTAINER),
                d = b.find(g.DELETE_MESSAGES_FOR_ALL_USERS_TOGGLE);
            d.prop("checked", !1);
            c.addClass("hidden")
        },
        Fa = function(a, b, c, d) {
            if (d) {
                a.find(g.ACTION_REQUEST_BLOCK).addClass("hidden");
                a.find(g.ACTION_REQUEST_UNBLOCK).removeClass("hidden")
            } else {
                a.find(g.ACTION_REQUEST_BLOCK).removeClass("hidden");
                a.find(g.ACTION_REQUEST_UNBLOCK).addClass("hidden")
            }
        },
        Ga = function(a, b, c, d) {
            var e = a.find(g.FAVOURITE_ICON_CONTAINER),
                f = a.find(g.ACTION_CONFIRM_FAVOURITE),
                h = a.find(g.ACTION_CONFIRM_UNFAVOURITE);
            switch (d) {
                case "hide":
                    e.addClass("hidden");
                    f.addClass("hidden");
                    h.addClass("hidden");
                    break;
                case "show-add":
                    e.addClass("hidden");
                    f.removeClass("hidden");
                    h.addClass("hidden");
                    break;
                case "show-remove":
                    e.removeClass("hidden");
                    f.addClass("hidden");
                    h.removeClass("hidden");
                    break;
            }
        },
        Ha = function(a, b, c, d) {
            var e = a.find(g.MUTED_ICON_CONTAINER),
                f = a.find(g.ACTION_CONFIRM_MUTE),
                h = a.find(g.ACTION_CONFIRM_UNMUTE);
            switch (d) {
                case "hide":
                    e.addClass("hidden");
                    f.addClass("hidden");
                    h.addClass("hidden");
                    break;
                case "show-mute":
                    e.addClass("hidden");
                    f.removeClass("hidden");
                    h.addClass("hidden");
                    break;
                case "show-unmute":
                    e.removeClass("hidden");
                    f.addClass("hidden");
                    h.removeClass("hidden");
                    break;
            }
        },
        Ia = function(a, b, c, d) {
            var e = a.find(g.ACTION_REQUEST_ADD_CONTACT),
                f = a.find(g.ACTION_REQUEST_REMOVE_CONTACT);
            switch (d) {
                case "pending-contact":
                    e.addClass("hidden");
                    f.addClass("hidden");
                    break;
                case "contact":
                    e.addClass("hidden");
                    f.removeClass("hidden");
                    break;
                case "non-contact":
                    e.removeClass("hidden");
                    f.addClass("hidden");
                    break;
            }
        },
        Ja = function(a, b, c, d) {
            var e = ba(b),
                f = e.find("button"),
                h = e.find(g.CONFIRM_DIALOGUE_BUTTON_TEXT),
                i = e.find(g.LOADING_ICON_CONTAINER);
            if (d) {
                f.prop("disabled", !0);
                h.addClass("hidden");
                i.removeClass("hidden")
            } else {
                f.prop("disabled", !1);
                h.removeClass("hidden");
                i.addClass("hidden")
            }
        },
        Ka = function(a, b, c, d) {
            var e = null;
            if (d) {
                e = b.find(g.MESSAGE_NOT_SELECTED);
                e.find(g.MESSAGE_NOT_SELECTED_ICON).removeClass("hidden");
                P(a);
                R(a)
            } else {
                e = j(b);
                e.find(g.MESSAGE_NOT_SELECTED_ICON).addClass("hidden");
                e.find(g.MESSAGE_SELECTED_ICON).addClass("hidden");
                O(a);
                S(a)
            }
        },
        La = function(a, b, c, d) {
            var e = 0 < d.count;
            if (d.add.length) {
                d.add.forEach(function(a) {
                    var c = Y(b, a);
                    c.find(g.MESSAGE_NOT_SELECTED_ICON).addClass("hidden");
                    c.find(g.MESSAGE_SELECTED_ICON).removeClass("hidden");
                    c.attr("aria-checked", !0)
                })
            }
            if (d.remove.length) {
                d.remove.forEach(function(a) {
                    var c = Y(b, a);
                    if (e) {
                        c.find(g.MESSAGE_NOT_SELECTED_ICON).removeClass("hidden")
                    }
                    c.find(g.MESSAGE_SELECTED_ICON).addClass("hidden");
                    c.attr("aria-checked", !1)
                })
            }
            ea(a, d.count)
        },
        Ma = function(a, b, d, e) {
            if (e.show && !e.hasMessages) {
                return c.get_strings([{
                    key: "requirecontacttomessage",
                    component: "core_message",
                    param: e.user.fullname
                }, {
                    key: "isnotinyourcontacts",
                    component: "core_message",
                    param: e.user.fullname
                }]).then(function(c) {
                    var e = c[1],
                        f = c[0];
                    return ua(a, b, d, [g.ACTION_REQUEST_ADD_CONTACT], f, e, !1, !0)
                })
            } else {
                return va(a, b, d)
            }
        },
        Na = function(a, b, c, d) {
            var e = m(b);
            if (d) {
                e.removeClass("hidden")
            } else {
                e.addClass("hidden")
            }
            return !0
        },
        Oa = function(a, b, d, e) {
            var f = o(b);
            if (e) {
                return c.get_string("yourcontactrequestpending", "core_message", e).then(function(a) {
                    f.find(g.TEXT).text(a);
                    f.removeClass("hidden");
                    return a
                })
            } else {
                f.addClass("hidden");
                return !0
            }
        },
        Pa = function(a, b, c) {
            va(a, b, c);
            p(b);
            n(b);
            I(a);
            U(a);
            J(c);
            x(c);
            return !0
        };
    return {
        render: function render(c, d, e, f) {
            var g = [{
                    reset: Pa
                }, {
                    conversation: la,
                    header: ma,
                    footer: na,
                    confirmBlockUser: wa,
                    confirmUnblockUser: xa,
                    confirmAddContact: ya,
                    confirmRemoveContact: za,
                    confirmDeleteSelectedMessages: Aa,
                    confirmDeleteConversation: Ba,
                    confirmContactRequest: Ca,
                    requireAddContact: Ma,
                    selfConversationMessage: Na,
                    contactRequestSent: Oa
                }, {
                    loadingMembers: pa,
                    loadingFirstMessages: qa,
                    loadingMessages: ra,
                    isBlocked: Fa,
                    isContact: Ia,
                    isFavourite: Ga,
                    isMuted: Ha,
                    loadingConfirmAction: Ja,
                    inEditMode: Ka,
                    showEmojiPicker: sa,
                    showEmojiAutoComplete: ta
                }, {
                    scrollToMessage: oa,
                    selectedMessages: La
                }],
                h = function(a) {
                    var b = [];
                    for (var g in f) {
                        if (a.hasOwnProperty(g)) {
                            var h = a[g],
                                i = f[g];
                            b.push(h(c, d, e, i))
                        }
                    }
                    return b
                },
                i = h(g[0]);
            i = i.concat(h(g[1]));
            return a.when.apply(a, i).then(function() {
                for (var a = 2; a < g.length; a++) {
                    h(g[a])
                }
            }).catch(b.exception)
        }
    }
});
define("core_message/message_send_bulk", ["exports", "core/str", "core/modal_factory", "core/templates", "core/modal_events", "core/ajax", "core/notification"], function(a, b, c, d, e, f, g) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    a.sendMessage = a.showModal = void 0;
    c = h(c);
    d = h(d);
    e = h(e);
    f = h(f);
    g = h(g);

    function h(a) {
        return a && a.__esModule ? a : {
            default: a
        }
    }
    var i = function(a) {
        var f = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : null;
        if (!a.length) {
            return Promise.resolve()
        }
        var g = null;
        if (1 == a.length) {
            g = (0, b.get_string)("sendbulkmessagesingle", "core_message")
        } else {
            g = (0, b.get_string)("sendbulkmessage", "core_message", a.length)
        }
        return c.default.create({
            type: c.default.types.SAVE_CANCEL,
            body: d.default.render("core_message/send_bulk_message", {}),
            title: g
        }).then(function(b) {
            b.setSaveButtonText(g);
            b.getRoot().on(e.default.hidden, function() {
                if (f) {
                    f()
                }
                b.getRoot().remove()
            });
            b.getRoot().on(e.default.save, function() {
                var c = b.getRoot().find("form textarea").val();
                j(c, a)
            });
            b.show();
            return b
        })
    };
    a.showModal = i;
    var j = function(a, c) {
        var d = [];
        c.forEach(function(b) {
            d.push({
                touserid: b,
                text: a
            })
        });
        return f.default.call([{
            methodname: "core_message_send_instant_messages",
            args: {
                messages: d
            }
        }])[0].then(function(a) {
            if (1 == a.length) {
                return (0, b.get_string)("sendbulkmessagesentsingle", "core_message")
            } else {
                return (0, b.get_string)("sendbulkmessagesent", "core_message", a.length)
            }
        }).then(function(a) {
            g.default.addNotification({
                message: a,
                type: "success"
            });
            return !0
        }).catch(g.default.exception)
    };
    a.sendMessage = j
});
define("core_message/message_popover", ["jquery", "core/custom_interaction_events", "core/pubsub", "core_message/message_drawer_events"], function(a, b, c, d) {
    var e = {
            COUNT_CONTAINER: "[data-region=\"count-container\"]"
        },
        f = function() {
            c.publish(d.TOGGLE_VISIBILITY)
        },
        g = function(a) {
            return function() {
                var b = a.find(e.COUNT_CONTAINER),
                    c = parseInt(b.text(), 10);
                if (isNaN(c)) {
                    b.addClass("hidden")
                } else if (!c || 2 > c) {
                    b.addClass("hidden")
                } else {
                    c = c - 1;
                    b.text(c)
                }
            }
        },
        h = function(a) {
            b.define(a, [b.events.activate]);
            a.on(b.events.activate, function(a, b) {
                f();
                b.originalEvent.preventDefault()
            });
            c.subscribe(d.CONVERSATION_READ, g(a));
            c.subscribe(d.CONTACT_REQUEST_ACCEPTED, g(a));
            c.subscribe(d.CONTACT_REQUEST_DECLINED, g(a))
        };
    return {
        init: function init(b) {
            b = a(b);
            h(b)
        }
    }
});

function _typeof(a) {
    if ("function" == typeof Symbol && "symbol" == typeof Symbol.iterator) {
        _typeof = function(a) {
            return typeof a
        }
    } else {
        _typeof = function(a) {
            return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
        }
    }
    return _typeof(a)
}
define("core_message/message_drawer_view_conversation_patcher", ["jquery", "core/user_date", "core_message/message_drawer_view_conversation_constants"], function(a, b, c) {
    var d = function(a, c) {
            var d = a.reduce(function(a, d) {
                var e = d.timeCreated ? d.timeCreated : c,
                    f = b.getUserMidnightForTimestamp(e, c);
                if (a.hasOwnProperty(f)) {
                    a[f].push(d)
                } else {
                    a[f] = [d]
                }
                return a
            }, {});
            return Object.keys(d).map(function(a) {
                return {
                    timestamp: a,
                    messages: d[a]
                }
            })
        },
        e = function(c, a, d) {
            a = a.slice();
            var e = [],
                f = [],
                g = [];
            c.forEach(function(b) {
                var c = !1,
                    e = 0;
                for (; e < a.length; e++) {
                    var h = a[e];
                    if (d(b, h)) {
                        c = !0;
                        g.push({
                            a: b,
                            b: h
                        });
                        break
                    }
                }
                if (c) {
                    a.splice(e, 1)
                } else {
                    f.push(b)
                }
            });
            e = a;
            return {
                missingFromA: e,
                missingFromB: f,
                matches: g
            }
        },
        f = function(a, b) {
            for (var c = null, d = 0, e; d < a.length; d++) {
                e = a[d];
                if (b(e)) {
                    return e
                }
            }
            return c
        },
        g = function(c, d) {
            c = c.slice();
            d = d.slice();
            c.sort();
            d.sort();
            var e = c.length,
                f = d.length;
            if (1 > e && 1 > f) {
                return !0
            }
            if (e != f) {
                return !1
            }
            return c.every(function(a, b) {
                return a == d[b]
            })
        },
        h = function(c, a) {
            var b = Object.keys(c),
                d = Object.keys(a);
            if (b.length != d.length) {
                return !1
            }
            return b.every(function(b) {
                var d = c[b],
                    e = a[b],
                    f = _typeof(d),
                    i = _typeof(e);
                f = null === d ? "null" : f;
                i = null === d ? "null" : i;
                f = "object" === f && Array.isArray(f) ? "array" : f;
                i = "object" === i && Array.isArray(i) ? "array" : i;
                if (f !== i) {
                    return !1
                }
                switch (f) {
                    case "object":
                        return h(d, e);
                    case "array":
                        return g(d, e);
                    default:
                        return c[b] == a[b];
                }
            })
        },
        i = function(c, a) {
            return h({
                id: c.id,
                state: c.sendState,
                text: c.text,
                timeCreated: c.timeCreated
            }, {
                id: a.id,
                state: a.sendState,
                text: a.text,
                timeCreated: a.timeCreated
            })
        },
        j = function(a, b, c) {
            return {
                remove: b,
                add: c.map(function(b) {
                    var c = f(a, function(a) {
                        return b.timestamp < a.timestamp
                    });
                    return {
                        before: c,
                        value: b
                    }
                })
            }
        },
        k = function(a) {
            var b = [],
                c = [],
                d = [];
            a.forEach(function(a) {
                var g = a.a,
                    h = a.b,
                    j = e(g.messages, h.messages, i),
                    k = e(j.missingFromB, j.missingFromA, function(c, a) {
                        return c.id == a.id || c.sendState != a.sendState && c.timeAdded == a.timeAdded
                    });
                b = b.concat(k.missingFromB);
                k.missingFromA.forEach(function(a) {
                    var b = null;
                    if (a.timeCreated) {
                        b = f(g.messages, function(b) {
                            if (a.timeCreated == b.timeCreated) {
                                return a.id < b.id
                            } else {
                                return a.timeCreated < b.timeCreated
                            }
                        })
                    }
                    c.push({
                        before: b,
                        value: a,
                        day: g
                    })
                });
                d = d.concat(k.matches.map(function(a) {
                    return {
                        before: a.a,
                        after: a.b
                    }
                }))
            });
            return {
                add: c,
                remove: b,
                update: d
            }
        },
        l = function(a, b) {
            var c = e(a.messages, b.messages, i);
            if (c.missingFromA.length || c.missingFromB.length) {
                var f = d(a.messages, a.midnight),
                    g = d(b.messages, b.midnight),
                    h = e(f, g, function(a, b) {
                        return a.timestamp == b.timestamp
                    });
                return {
                    days: j(f, h.missingFromB, h.missingFromA),
                    messages: k(h.matches)
                }
            } else {
                return null
            }
        },
        m = function(a, b) {
            var d = L(a, b),
                e = B(a, b),
                f = J(a),
                g = J(b),
                h = d && d.show && !d.hasMessages,
                i = d && !d.show,
                j = !f && g;
            j = j || h || i;
            j = j || null !== e;
            if (j) {
                return {
                    type: c.CONVERSATION_TYPES.PRIVATE,
                    showControls: !h && !e,
                    context: {
                        id: b.id,
                        name: b.name,
                        subname: b.subname,
                        totalmembercount: b.totalMemberCount,
                        imageurl: b.imageUrl,
                        isfavourite: b.isFavourite,
                        ismuted: b.isMuted,
                        showfavourite: null !== b.id,
                        userid: g.id,
                        showonlinestatus: g.showonlinestatus,
                        isonline: g.isonline,
                        isblocked: g.isblocked,
                        iscontact: g.iscontact
                    }
                }
            }
            return null
        },
        n = function(a, b) {
            var d = null === a.name && null !== b.name;
            if (d) {
                return {
                    type: c.CONVERSATION_TYPES.SELF,
                    showControls: !1,
                    context: {
                        id: b.id,
                        name: b.name,
                        subname: b.subname,
                        imageurl: b.imageUrl,
                        isfavourite: b.isFavourite,
                        showfavourite: null !== b.id,
                        showonlinestatus: !0
                    }
                }
            }
            return null
        },
        o = function(a, b) {
            var d = a.totalMemberCount,
                e = b.totalMemberCount;
            if (d != e) {
                return {
                    type: c.CONVERSATION_TYPES.PUBLIC,
                    showControls: !0,
                    context: {
                        id: b.id,
                        name: b.name,
                        subname: b.subname,
                        totalmembercount: b.totalMemberCount,
                        imageurl: b.imageUrl,
                        isfavourite: b.isFavourite,
                        ismuted: b.isMuted,
                        showfavourite: null !== b.id
                    }
                }
            } else {
                return null
            }
        },
        p = function(a, b) {
            var c = a.messages,
                d = b.messages;
            if (1 > d.length) {
                return null
            }
            if (1 > c.length) {
                return d[d.length - 1].id
            }
            var e = c[a.messages.length - 1],
                f = d[d.length - 1],
                g = c[0],
                h = d[0];
            if (e.id != f.id) {
                return f.id
            } else if (g.id != h.id) {
                return g.id
            }
            return null
        },
        q = function(a, b) {
            if (!a.loadingMembers && b.loadingMembers) {
                return !0
            } else if (a.loadingMembers && !b.loadingMembers) {
                return !1
            } else {
                return null
            }
        },
        r = function(a, b) {
            if (a.hasTriedToLoadMessages === b.hasTriedToLoadMessages) {
                return null
            } else if (!b.hasTriedToLoadMessages && b.loadingMessages) {
                return !0
            } else if (b.hasTriedToLoadMessages && !b.loadingMessages) {
                return !1
            } else {
                return null
            }
        },
        s = function(a, b) {
            if (!a.loadingMessages && b.loadingMessages) {
                return !0
            } else if (a.loadingMessages && !b.loadingMessages) {
                return !1
            } else {
                return null
            }
        },
        t = function(a, b) {
            if (!a.showEmojiPicker && b.showEmojiPicker) {
                return !0
            } else if (a.showEmojiPicker && !b.showEmojiPicker) {
                return !1
            } else {
                return null
            }
        },
        u = function(a, b) {
            if (!a.showEmojiAutoComplete && b.showEmojiAutoComplete) {
                return !0
            } else if (a.showEmojiAutoComplete && !b.showEmojiAutoComplete) {
                return !1
            } else {
                return null
            }
        },
        v = function(a, b) {
            if (b.pendingBlockUserIds.length) {
                var c = b.pendingBlockUserIds[0];
                return b.members[c]
            } else if (a.pendingBlockUserIds.length) {
                return !1
            }
            return null
        },
        w = function(a, b) {
            if (b.pendingUnblockUserIds.length) {
                var c = b.pendingUnblockUserIds[0];
                return b.members[c]
            } else if (a.pendingUnblockUserIds.length) {
                return !1
            }
            return null
        },
        x = function(a, b) {
            if (b.pendingAddContactIds.length) {
                var c = b.pendingAddContactIds[0];
                return b.members[c]
            } else if (a.pendingAddContactIds.length) {
                return !1
            }
            return null
        },
        y = function(a, b) {
            if (b.pendingRemoveContactIds.length) {
                var c = b.pendingRemoveContactIds[0];
                return b.members[c]
            } else if (a.pendingRemoveContactIds.length) {
                return !1
            }
            return null
        },
        z = function(a, b) {
            var c = a.pendingDeleteMessageIds.length,
                d = b.pendingDeleteMessageIds.length;
            if (d && !c) {
                return {
                    show: !0,
                    type: b.type,
                    canDeleteMessagesForAllUsers: b.canDeleteMessagesForAllUsers
                }
            } else if (c && !d) {
                return {
                    show: !1
                }
            }
            return null
        },
        A = function(a, b) {
            if (!a.pendingDeleteConversation && b.pendingDeleteConversation) {
                return b.type
            } else if (a.pendingDeleteConversation && !b.pendingDeleteConversation) {
                return !1
            }
            return null
        },
        B = function(a, b) {
            var c = a.loggedInUserId,
                d = J(a),
                e = J(b),
                f = !d ? [] : d.contactrequests.filter(function(a) {
                    return a.requesteduserid == c && a.userid == d.id
                }),
                g = !e ? [] : e.contactrequests.filter(function(a) {
                    return a.requesteduserid == c && a.userid == e.id
                }),
                h = f.length ? f[0] : null,
                i = g.length ? g[0] : null;
            if (!h && i) {
                return e
            } else if (h && !i) {
                return !1
            } else {
                return null
            }
        },
        C = function(a, b) {
            var c = J(a),
                d = J(b);
            if (!c && !d) {
                return null
            } else if (!c && d) {
                return d.isblocked ? !0 : null
            } else if (!d && c) {
                return c.isblocked ? !1 : null
            } else if (c.isblocked && !d.isblocked) {
                return !1
            } else if (!c.isblocked && d.isblocked) {
                return !0
            } else {
                return null
            }
        },
        D = function(a, b) {
            var c = a.isFavourite,
                d = b.isFavourite;
            if (null === a.id && null === b.id) {
                return null
            } else if (null === a.id && null !== b.id) {
                return "show-add"
            } else if (null !== a.id && null === b.id) {
                return "hide"
            } else if (c == d) {
                return null
            } else if (!c && d) {
                return "show-remove"
            } else if (c && !d) {
                return "show-add"
            } else {
                return null
            }
        },
        E = function(a, b) {
            var c = a.isMuted,
                d = b.isMuted;
            if (null === a.id && null === b.id) {
                return null
            } else if (null === a.id && null !== b.id) {
                return "show-mute"
            } else if (null !== a.id && null === b.id) {
                return "hide"
            } else if (c == d) {
                return null
            } else if (!c && d) {
                return "show-unmute"
            } else if (c && !d) {
                return "show-mute"
            } else {
                return null
            }
        },
        F = function(a, b) {
            var c = a.loggedInUserId,
                d = J(a),
                e = J(b),
                f = !d ? [] : d.contactrequests.filter(function(a) {
                    return a.userid == c && a.requesteduserid == d.id || a.userid == d.id && a.requesteduserid == c
                }),
                g = !e ? [] : e.contactrequests.filter(function(a) {
                    return a.userid == c && a.requesteduserid == e.id || a.userid == e.id && a.requesteduserid == c
                }),
                h = 0 < f.length,
                i = 0 < g.length;
            if (!d && !e) {
                return null
            } else if (h && i) {
                return null
            } else if (!h && i && !e.iscontact) {
                return "pending-contact"
            } else if (!d && e) {
                return e.iscontact ? "contact" : null
            } else if (!e && d) {
                return d.iscontact ? "non-contact" : null
            } else if (d.iscontact && !e.iscontact) {
                return i ? "pending-contact" : "non-contact"
            } else if (!d.iscontact && e.iscontact) {
                return "contact"
            } else {
                return null
            }
        },
        G = function(a, b) {
            if (!a.loadingConfirmAction && b.loadingConfirmAction) {
                return !0
            } else if (a.loadingConfirmAction && !b.loadingConfirmAction) {
                return !1
            } else {
                return null
            }
        },
        H = function(a, b) {
            var c = 0 < a.selectedMessageIds.length,
                d = 0 < b.selectedMessageIds.length,
                e = a.messages.length != b.messages.length;
            if (!c && d) {
                return !0
            } else if (c && !d) {
                return !1
            } else if (c && e) {
                return !0
            } else {
                return null
            }
        },
        I = function(a, b) {
            var c = a.selectedMessageIds,
                d = b.selectedMessageIds;
            if (g(c, d)) {
                return null
            }
            var f = e(c, d, function(c, a) {
                return c == a
            });
            return {
                count: d.length,
                add: f.missingFromA,
                remove: f.missingFromB
            }
        },
        J = function(a) {
            return Object.keys(a.members).reduce(function(b, c) {
                if (c != a.loggedInUserId && !b) {
                    b = a.members[c]
                }
                return b
            }, null)
        },
        K = function(a, b) {
            if (b.canmessage) {
                return !1
            }
            var c = b.contactrequests.filter(function(b) {
                    return b.userid == a || b.requesteduserid
                }),
                d = 0 < c.length;
            return b.requirescontact && !b.iscontact && !d
        },
        L = function(a, b) {
            var c = J(a),
                d = J(b),
                e = 0 < a.messages.length,
                f = 0 < b.messages.length,
                g = b.loggedInUserId,
                h = c && K(g, c),
                i = d && K(g, d),
                j = x(a, b);
            if (!a.hasTriedToLoadMessages && !b.hasTriedToLoadMessages) {
                return null
            }
            if (!c && !d) {
                return null
            }
            if (!c && i) {
                return {
                    show: !0,
                    hasMessages: f,
                    user: d
                }
            }
            if (!1 === j && i) {
                return {
                    show: !0,
                    hasMessages: f,
                    user: d
                }
            }
            if (a.hasTriedToLoadMessages && b.hasTriedToLoadMessages) {
                if (!h && i) {
                    return {
                        show: !0,
                        hasMessages: f,
                        user: d
                    }
                }
                if (h && !i) {
                    return {
                        show: !1,
                        hasMessages: f
                    }
                }
            }
            if (!a.hasTriedToLoadMessages && b.hasTriedToLoadMessages) {
                if (i) {
                    return {
                        show: !0,
                        hasMessages: f,
                        user: d
                    }
                }
            }
            if (a.hasTriedToLoadMessages && !b.hasTriedToLoadMessages) {
                if (h) {
                    return {
                        show: !1,
                        hasMessages: e
                    }
                }
            }
            return null
        },
        M = function(a, b) {
            var c = J(a),
                d = J(b);
            if (!c && !d) {
                return null
            } else if (c && !d) {
                return c.isblocked ? !1 : null
            } else if (!c && d) {
                return d.isblocked ? !0 : null
            } else if (!c.isblocked && d.isblocked) {
                return !0
            } else if (c.isblocked && !d.isblocked) {
                return !1
            }
            return null
        },
        N = function(a, b) {
            var d = J(a),
                e = J(b);
            if (b.type == c.CONVERSATION_TYPES.SELF) {
                return null
            }
            if (!d && !e) {
                return null
            } else if (d && !e) {
                return d.canmessage ? null : !0
            } else if (!d && e) {
                return e.canmessage ? null : !0
            } else if (!d.canmessage && e.canmessage) {
                return !1
            } else if (d.canmessage && !e.canmessage) {
                return !0
            }
            return null
        },
        O = function(a, b) {
            var c = r(a, b),
                d = H(a, b),
                e = L(a, b),
                f = M(a, b),
                g = N(a, b),
                h = null !== e ? e.show && e.hasMessages : null,
                j = J(b),
                k = function(a, c) {
                    if (a) {
                        return c
                    } else if (null !== a && !a) {
                        if (!j) {
                            return {
                                type: "content"
                            }
                        } else if (j.isblocked) {
                            return {
                                type: "unblock"
                            }
                        } else if (b.messages.length && K(b.loggedInUserId, j)) {
                            return {
                                type: "add-contact",
                                user: j
                            }
                        } else if (!j.canmessage && j.requirescontact && !j.iscontact) {
                            return {
                                type: "unable-to-message"
                            }
                        }
                    }
                    return null
                };
            if (null === c && null === d && null === e && null === f) {
                return null
            }
            for (var l = [
                    [c, {
                        type: "placeholder"
                    }],
                    [d, {
                        type: "edit-mode"
                    }],
                    [g, {
                        type: "unable-to-message"
                    }],
                    [f, {
                        type: "unblock"
                    }],
                    [h, {
                        type: "add-contact",
                        user: j
                    }]
                ], m = 0; m < l.length; m++) {
                var n = l[m][0],
                    o = l[m][1],
                    p = k(n, o);
                if (null !== p) {
                    return p
                }
            }
            return {
                type: "content"
            }
        },
        P = function(a, b) {
            var c = r(a, b),
                d = H(a, b);
            if (null === c && null === d) {
                return null
            }
            if (c) {
                return {
                    type: "placeholder"
                }
            }
            if (d) {
                return {
                    type: "edit-mode"
                }
            }
            return {
                type: "content"
            }
        },
        Q = function(a, b) {
            var c = a.type,
                d = b.type,
                e = a.id,
                f = b.id,
                g = Object.keys(a.members),
                h = Object.keys(b.members);
            g.sort();
            h.sort();
            var i = g.every(function(a, b) {
                return a == h[b]
            });
            if (c != d) {
                return !0
            } else if (e && !f) {
                return !0
            } else if (e && f && e != f) {
                return !0
            } else if (!e && !f && !i) {
                return !0
            }
            return null
        },
        R = function(a, b) {
            if (a.type != b.type) {
                return b.type == c.CONVERSATION_TYPES.SELF
            }
            return null
        },
        S = function(a, b) {
            var c = b.loggedInUserId,
                d = J(a),
                e = J(b),
                f = !d ? [] : d.contactrequests.filter(function(a) {
                    return a.userid == c
                }),
                g = !e ? [] : e.contactrequests.filter(function(a) {
                    return a.userid == c
                }),
                h = 0 < f.length,
                i = 0 < g.length,
                j = 0 < a.messages.length,
                k = 0 < a.messages.length;
            if (!h && i && !e.iscontact && !k) {
                return e.fullname
            } else if (d && !d.iscontact && i && e.iscontact) {
                return !1
            } else if (h && !i) {
                return !1
            } else if (!j && k) {
                return !1
            } else {
                return null
            }
        },
        T = function(b, d) {
            var e = {
                all: {
                    reset: Q,
                    conversation: l,
                    scrollToMessage: p,
                    loadingMembers: q,
                    loadingFirstMessages: r,
                    loadingMessages: s,
                    confirmDeleteSelectedMessages: z,
                    inEditMode: H,
                    selectedMessages: I,
                    isFavourite: D,
                    isMuted: E,
                    showEmojiPicker: t,
                    showEmojiAutoComplete: u
                }
            };
            e[c.CONVERSATION_TYPES.PRIVATE] = {
                header: m,
                footer: O,
                confirmBlockUser: v,
                confirmUnblockUser: w,
                confirmAddContact: x,
                confirmRemoveContact: y,
                confirmContactRequest: B,
                confirmDeleteConversation: A,
                isBlocked: C,
                isContact: F,
                loadingConfirmAction: G,
                requireAddContact: L,
                contactRequestSent: S
            };
            e[c.CONVERSATION_TYPES.PUBLIC] = {
                header: o,
                footer: P
            };
            e[c.CONVERSATION_TYPES.SELF] = {
                header: n,
                footer: P,
                confirmDeleteConversation: A,
                selfConversationMessage: R
            };
            var f = a.extend({}, e.all);
            if (d.type && d.type in e) {
                f = a.extend(f, e[d.type])
            }
            return Object.keys(f).reduce(function(a, c) {
                var e = f[c],
                    g = e(b, d);
                if (null !== g) {
                    a[c] = g
                }
                return a
            }, {})
        };
    return {
        buildPatch: T
    }
});
define("core_message/message_drawer_lazy_load_list", ["jquery", "core/custom_interaction_events"], function(a, b) {
    var c = {
            ROOT: "[data-region=\"lazy-load-list\"]",
            LOADING_ICON_CONTAINER: "[data-region=\"loading-icon-container\"]",
            CONTENT_CONTAINER: "[data-region=\"content-container\"]",
            EMPTY_MESSAGE: "[data-region=\"empty-message-container\"]",
            PLACEHOLDER: "[data-region=\"placeholder-container\"]"
        },
        d = function(a) {
            a.attr("data-loading", !0)
        },
        e = function(a) {
            a.attr("data-loading", !1)
        },
        f = function(a) {
            return "true" === a.attr("data-loading")
        },
        g = function(a) {
            return a.attr("data-user-id")
        },
        h = function(a) {
            return a.find(c.CONTENT_CONTAINER)
        },
        i = function(a) {
            a.find(c.LOADING_ICON_CONTAINER).removeClass("hidden")
        },
        j = function(a) {
            a.find(c.LOADING_ICON_CONTAINER).addClass("hidden")
        },
        k = function(a) {
            a.find(c.EMPTY_MESSAGE).removeClass("hidden")
        },
        l = function(a) {
            a.find(c.PLACEHOLDER).removeClass("hidden")
        },
        m = function(a) {
            a.find(c.PLACEHOLDER).addClass("hidden")
        },
        n = function(a) {
            h(a).removeClass("hidden")
        },
        o = function(a) {
            h(a).addClass("hidden")
        },
        p = function(a) {
            return "true" == a.attr("data-loaded-all")
        },
        q = function(a, b) {
            a.attr("data-loaded-all", b)
        },
        r = function(a) {
            return !p(a) && !f(a)
        },
        s = function(a, b, c) {
            var f = g(a);
            d(a);
            return b(a, f).then(function(b) {
                if (0 < b.length) {
                    var d = h(a);
                    return c(d, b, f).then(function() {
                        return b
                    })
                } else {
                    return b
                }
            }).then(function(b) {
                e(a);
                a.attr("data-seen", !0);
                if (!b.length) {
                    q(a, !0)
                }
                return b
            }).catch(function() {
                e(a);
                a.attr("data-seen", !0)
            })
        },
        t = function(a, b, c) {
            h(a).empty();
            l(a);
            o(a);
            return s(a, b, c).then(function(b) {
                m(a);
                if (!b.length) {
                    k(a)
                } else {
                    n(a)
                }
            }).catch(function() {
                m(a);
                n(a)
            })
        },
        u = function(a, c, d) {
            b.define(a, [b.events.scrollBottom]);
            a.on(b.events.scrollBottom, function() {
                if (r(a)) {
                    i(a);
                    s(a, c, d).then(function() {
                        return j(a)
                    }).catch(function() {
                        return j(a)
                    })
                }
            })
        };
    return {
        show: function show(b, c, d) {
            b = a(b);
            if (!b.attr("data-init")) {
                u(b, c, d);
                t(b, c, d);
                b.attr("data-init", !0)
            }
        },
        getContentContainer: h,
        getRoot: function getRoot(a) {
            return a.find(c.ROOT)
        },
        setLoadedAll: q,
        showEmptyMessage: k,
        hideEmptyMessage: function hideEmptyMessage(a) {
            a.find(c.EMPTY_MESSAGE).addClass("hidden")
        },
        showContent: n,
        hideContent: o
    }
});
define("core_message/message_notification_preference", ["jquery", "core_message/notification_preference"], function(a, b) {
    var c = {
            PREFERENCE_KEY: "[data-preference-key]"
        },
        d = function(a, c) {
            b.call(this, a, c)
        };
    d.prototype = Object.create(b.prototype);
    d.prototype.constructor = d;
    d.prototype.getPreferenceKey = function() {
        return this.root.find(c.PREFERENCE_KEY).attr("data-preference-key")
    };
    return d
});
define("core_message/message_drawer_view_contacts_section_contacts", ["jquery", "core/notification", "core/pubsub", "core/templates", "core_message/message_repository", "core_message/message_drawer_events", "core_message/message_drawer_lazy_load_list"], function(a, b, c, d, e, f, g) {
    var h = {
            BLOCK_ICON_CONTAINER: "[data-region=\"block-icon-container\"]",
            CONTACT: "[data-region=\"contact\"]",
            CONTENT_CONTAINER: "[data-region=\"contacts-content-container\"]"
        },
        i = {
            CONTACTS_LIST: "core_message/message_drawer_contacts_list"
        },
        j = function(a, b) {
            return a.find("[data-contact-user-id=\"" + b + "\"]")
        },
        k = function(c, e) {
            var f = e.map(function(b) {
                return a.extend(b, {
                    id: b.userid
                })
            });
            return d.render(i.CONTACTS_LIST, {
                contacts: f
            }).then(function(a) {
                c.append(a);
                return a
            }).catch(b.exception)
        },
        l = function(a) {
            return function(c, d) {
                return e.getContacts(d, 101, a).then(function(a) {
                    return a
                }).then(function(a) {
                    if (a.length > 100) {
                        a.pop()
                    } else {
                        g.setLoadedAll(c, !0)
                    }
                    return a
                }).then(function(b) {
                    a = a + 100;
                    return b
                }).catch(b.exception)
            }
        },
        m = function(a, b) {
            j(a, b).remove()
        },
        n = function(a, b) {
            var c = j(a, b);
            if (c.length) {
                c.find(h.BLOCK_ICON_CONTAINER).removeClass("hidden")
            }
        },
        o = function(a, b) {
            var c = j(a, b);
            if (c.length) {
                c.find(h.BLOCK_ICON_CONTAINER).addClass("hidden")
            }
        },
        p = function(a) {
            c.subscribe(f.CONTACT_ADDED, function(b) {
                var c = g.getContentContainer(a);
                k(c, [b]);
                g.hideEmptyMessage(a);
                g.showContent(a)
            });
            c.subscribe(f.CONTACT_REMOVED, function(b) {
                m(a, b);
                var c = a.find(h.CONTACT);
                if (!c.length) {
                    g.hideContent(a);
                    g.showEmptyMessage(a)
                }
            });
            c.subscribe(f.CONTACT_BLOCKED, function(b) {
                n(a, b)
            });
            c.subscribe(f.CONTACT_UNBLOCKED, function(b) {
                o(a, b)
            })
        };
    return {
        show: function show(a) {
            if (!a.attr("data-contacts-init")) {
                p(a);
                a.attr("data-contacts-init", !0)
            }
            g.show(a, l(0), k)
        }
    }
});
define("core_message/message_drawer_view_conversation_state_manager", ["jquery"], function(a) {
    var b = function(b) {
            return a.extend(!0, {}, b)
        },
        c = function(a, b, c) {
            return a.map(function(a) {
                var d = a.useridfrom == b;
                return {
                    id: "" + a.id,
                    fromLoggedInUser: d,
                    userFrom: c[a.useridfrom],
                    text: a.text,
                    timeCreated: a.timecreated ? parseInt(a.timecreated, 10) : null
                }
            })
        },
        d = function(a) {
            return a.map(function(a) {
                return {
                    id: a.id,
                    fullname: a.fullname,
                    profileurl: a.profileurl,
                    profileimageurl: a.profileimageurl,
                    profileimageurlsmall: a.profileimageurlsmall,
                    isonline: a.isonline,
                    showonlinestatus: a.showonlinestatus,
                    isblocked: a.isblocked,
                    iscontact: a.iscontact,
                    isdeleted: a.isdeleted,
                    canmessage: a.canmessage,
                    canmessageevenifblocked: a.canmessageevenifblocked,
                    requirescontact: a.requirescontact,
                    contactrequests: a.contactrequests || []
                }
            })
        };
    return {
        buildInitialState: function buildInitialState(a, b, c, d, e, f) {
            return {
                midnight: a,
                loggedInUserId: b,
                id: c,
                messagePollMin: d,
                messagePollMax: e,
                messagePollAfterMax: f,
                name: null,
                subname: null,
                type: null,
                totalMemberCount: null,
                imageUrl: null,
                isFavourite: null,
                isMuted: null,
                canDeleteMessagesForAllUsers: !1,
                deleteMessagesForAllUsers: !1,
                members: {},
                messages: [],
                hasTriedToLoadMessages: !1,
                loadingMessages: !0,
                loadingMembers: !0,
                loadingConfirmAction: !1,
                pendingBlockUserIds: [],
                pendingUnblockUserIds: [],
                pendingRemoveContactIds: [],
                pendingAddContactIds: [],
                pendingDeleteMessageIds: [],
                pendingSendMessageIds: [],
                pendingDeleteConversation: !1,
                selectedMessageIds: [],
                showEmojiAutoComplete: !1,
                showEmojiPicker: !1
            }
        },
        addMessages: function addMessages(a, d) {
            var e = b(a),
                f = c(d, a.loggedInUserId, a.members);
            f = f.map(function(a) {
                a.sendState = null;
                a.timeAdded = Date.now();
                a.errorMessage = null;
                return a
            });
            var g = a.messages.concat(f);
            g.sort(function(c, a) {
                if (null === c.timeCreated && null === a.timeCreated) {
                    if (c.timeAdded < a.timeAdded) {
                        return -1
                    } else if (c.timeAdded > a.timeAdded) {
                        return 1
                    }
                }
                if (null === c.timeCreated && null !== a.timeCreated) {
                    return 1
                } else if (null !== c.timeCreated && null === a.timeCreated) {
                    return -1
                } else if (c.timeCreated < a.timeCreated) {
                    return -1
                } else if (c.timeCreated > a.timeCreated) {
                    return 1
                } else if (c.id < a.id) {
                    return -1
                } else if (c.id > a.id) {
                    return 1
                } else {
                    return 0
                }
            });
            e.messages = g.filter(function(a, b, c) {
                return !b || a.id != c[b - 1].id
            });
            return e
        },
        updateMessages: function updateMessages(d, e) {
            var f = b(d),
                g = e.reduce(function(a, b) {
                    var e = b[0],
                        f = b[1],
                        g = c([f], d.loggedInUserId, d.members),
                        h = g[0];
                    a[e.id] = h;
                    return a
                }, {});
            f.messages = f.messages.map(function(b) {
                if (b.id in g) {
                    return a.extend(b, g[b.id])
                } else {
                    return b
                }
            });
            return f
        },
        removeMessages: function removeMessages(a, c) {
            var d = b(a),
                e = c.map(function(a) {
                    return "" + a.id
                });
            d.messages = d.messages.filter(function(a) {
                return 0 > e.indexOf(a.id)
            });
            return d
        },
        removeMessagesById: function removeMessagesById(a, c) {
            var d = b(a);
            c = c.map(function(a) {
                return "" + a
            });
            d.messages = d.messages.filter(function(a) {
                return 0 > c.indexOf(a.id)
            });
            return d
        },
        addMembers: function addMembers(a, c) {
            var e = b(a),
                f = d(c);
            f.forEach(function(a) {
                e.members[a.id] = a
            });
            return e
        },
        removeMembers: function removeMembers(a, c) {
            var d = b(a);
            c.forEach(function(a) {
                delete d.members[a.id]
            });
            return d
        },
        setLoadingMessages: function setLoadingMessages(a, c) {
            var d = b(a);
            d.loadingMessages = c;
            if (a.loadingMessages && !c) {
                d.hasTriedToLoadMessages = !0
            }
            return d
        },
        setLoadingMembers: function setLoadingMembers(a, c) {
            var d = b(a);
            d.loadingMembers = c;
            return d
        },
        setId: function setId(a, c) {
            var d = b(a);
            d.id = c;
            return d
        },
        setName: function setName(a, c) {
            var d = b(a);
            d.name = c;
            return d
        },
        setSubname: function setSubname(a, c) {
            var d = b(a);
            d.subname = c;
            return d
        },
        setType: function setType(a, c) {
            var d = b(a);
            d.type = c;
            return d
        },
        setIsFavourite: function setIsFavourite(a, c) {
            var d = b(a);
            d.isFavourite = c;
            return d
        },
        setIsMuted: function setIsMuted(a, c) {
            var d = b(a);
            d.isMuted = c;
            return d
        },
        setCanDeleteMessagesForAllUsers: function setCanDeleteMessagesForAllUsers(a, c) {
            var d = b(a);
            d.canDeleteMessagesForAllUsers = c;
            return d
        },
        setDeleteMessagesForAllUsers: function setDeleteMessagesForAllUsers(a, c) {
            var d = b(a);
            d.deleteMessagesForAllUsers = c;
            return d
        },
        setTotalMemberCount: function setTotalMemberCount(a, c) {
            var d = b(a);
            d.totalMemberCount = c;
            return d
        },
        setImageUrl: function setImageUrl(a, c) {
            var d = b(a);
            d.imageUrl = c;
            return d
        },
        setLoadingConfirmAction: function setLoadingConfirmAction(a, c) {
            var d = b(a);
            d.loadingConfirmAction = c;
            return d
        },
        setPendingDeleteConversation: function setPendingDeleteConversation(a, c) {
            var d = b(a);
            d.pendingDeleteConversation = c;
            return d
        },
        setMessagesSendPendingById: function setMessagesSendPendingById(a, c) {
            var d = b(a);
            c = c.map(function(a) {
                return "" + a
            });
            d.messages.forEach(function(a) {
                if (0 <= c.indexOf(a.id)) {
                    a.sendState = "pending";
                    a.errorMessage = null
                }
            });
            return d
        },
        setMessagesSendSuccessById: function setMessagesSendSuccessById(a, c) {
            var d = b(a);
            c = c.map(function(a) {
                return "" + a
            });
            d.messages.forEach(function(a) {
                if (0 <= c.indexOf(a.id)) {
                    a.sendState = "sent";
                    a.errorMessage = null
                }
            });
            return d
        },
        setMessagesSendFailById: function setMessagesSendFailById(a, c, d) {
            var e = b(a);
            c = c.map(function(a) {
                return "" + a
            });
            e.messages.forEach(function(a) {
                if (0 <= c.indexOf(a.id)) {
                    a.sendState = "error";
                    a.errorMessage = d
                }
            });
            return e
        },
        setShowEmojiAutoComplete: function setShowEmojiAutoComplete(a, c) {
            var d = b(a);
            d.showEmojiAutoComplete = c;
            return d
        },
        setShowEmojiPicker: function setShowEmojiPicker(a, c) {
            var d = b(a);
            d.showEmojiPicker = c;
            return d
        },
        addPendingBlockUsersById: function addPendingBlockUsersById(a, c) {
            var d = b(a);
            c.forEach(function(a) {
                d.pendingBlockUserIds.push(a)
            });
            return d
        },
        addPendingRemoveContactsById: function addPendingRemoveContactsById(a, c) {
            var d = b(a);
            c.forEach(function(a) {
                d.pendingRemoveContactIds.push(a)
            });
            return d
        },
        addPendingUnblockUsersById: function addPendingUnblockUsersById(a, c) {
            var d = b(a);
            c.forEach(function(a) {
                d.pendingUnblockUserIds.push(a)
            });
            return d
        },
        addPendingAddContactsById: function addPendingAddContactsById(a, c) {
            var d = b(a);
            c.forEach(function(a) {
                d.pendingAddContactIds.push(a)
            });
            return d
        },
        addPendingDeleteMessagesById: function addPendingDeleteMessagesById(a, c) {
            var d = b(a);
            c.forEach(function(a) {
                d.pendingDeleteMessageIds.push(a)
            });
            return d
        },
        removePendingBlockUsersById: function removePendingBlockUsersById(a, c) {
            var d = b(a);
            d.pendingBlockUserIds = d.pendingBlockUserIds.filter(function(a) {
                return 0 > c.indexOf(a)
            });
            return d
        },
        removePendingRemoveContactsById: function removePendingRemoveContactsById(a, c) {
            var d = b(a);
            d.pendingRemoveContactIds = d.pendingRemoveContactIds.filter(function(a) {
                return 0 > c.indexOf(a)
            });
            return d
        },
        removePendingUnblockUsersById: function removePendingUnblockUsersById(a, c) {
            var d = b(a);
            d.pendingUnblockUserIds = d.pendingUnblockUserIds.filter(function(a) {
                return 0 > c.indexOf(a)
            });
            return d
        },
        removePendingAddContactsById: function removePendingAddContactsById(a, c) {
            var d = b(a);
            d.pendingAddContactIds = d.pendingAddContactIds.filter(function(a) {
                return 0 > c.indexOf(a)
            });
            return d
        },
        removePendingDeleteMessagesById: function removePendingDeleteMessagesById(a, c) {
            var d = b(a);
            c = c.map(function(a) {
                return "" + a
            });
            d.pendingDeleteMessageIds = d.pendingDeleteMessageIds.filter(function(a) {
                return 0 > c.indexOf(a)
            });
            return d
        },
        addSelectedMessagesById: function addSelectedMessagesById(a, c) {
            var d = b(a);
            c = c.map(function(a) {
                return "" + a
            });
            d.selectedMessageIds = d.selectedMessageIds.concat(c);
            return d
        },
        removeSelectedMessagesById: function removeSelectedMessagesById(a, c) {
            var d = b(a);
            c = c.map(function(a) {
                return "" + a
            });
            d.selectedMessageIds = d.selectedMessageIds.filter(function(a) {
                return 0 > c.indexOf(a)
            });
            return d
        },
        markMessagesAsRead: function markMessagesAsRead(a, c) {
            var d = b(a),
                e = c.map(function(a) {
                    return a.id
                });
            d.messages = d.messages.map(function(a) {
                if (0 <= e.indexOf(a.id)) {
                    a.isRead = !0
                }
                return a
            });
            return d
        },
        addContactRequests: function addContactRequests(a, c) {
            var d = b(a);
            c.forEach(function(a) {
                var b = a.userid,
                    c = a.requesteduserid;
                d.members[b].contactrequests.push(a);
                d.members[c].contactrequests.push(a)
            });
            return d
        },
        removeContactRequests: function removeContactRequests(a, c) {
            var d = b(a);
            c.forEach(function(a) {
                var b = a.userid,
                    c = a.requesteduserid;
                d.members[b].contactrequests = d.members[b].contactrequests.filter(function(a) {
                    return a.userid != b
                });
                d.members[c].contactrequests = d.members[c].contactrequests.filter(function(a) {
                    return a.requesteduserid != c
                })
            });
            return d
        }
    }
});
define("core_question/edit_tags", ["jquery", "core/fragment", "core/str", "core/modal_events", "core/modal_factory", "core/notification", "core/custom_interaction_events", "core_question/repository", "core_question/selectors"], function(a, b, c, d, e, f, g, h, i) {
    var j = function(a) {
            a.find(i.actions.save).prop("disabled", !1)
        },
        k = function(a) {
            a.find(i.actions.save).prop("disabled", !0)
        },
        l = function(a) {
            return a.getBody().find("form").serialize()
        },
        m = function(a) {
            var b = a.find(i.containers.loadingIcon);
            b.removeClass("hidden")
        },
        n = function(a) {
            var b = a.find(i.containers.loadingIcon);
            b.addClass("hidden")
        },
        o = function(a, b) {
            a.getBody().attr("data-contextid", b)
        },
        p = function(a) {
            return a.getBody().data("contextid")
        },
        q = function(a, b) {
            a.getBody().attr("data-questionid", b)
        },
        r = function(a) {
            return a.getBody().data("questionid")
        },
        s = function(h) {
            var l = e.create({
                type: e.types.SAVE_CANCEL,
                large: !1
            }, [h, i.actions.edittags]).then(function(a) {
                c.get_string("questiontags", "question").then(function(b) {
                    a.setTitle(b);
                    return b
                }).fail(f.exception);
                a.getRoot().on(d.save, function(b) {
                    var c = a.getBody().find("form");
                    c.submit();
                    b.preventDefault()
                });
                a.getRoot().on("submit", "form", function(b) {
                    t(a, h).then(function() {
                        a.hide();
                        location.reload()
                    }).fail(f.exception);
                    b.preventDefault();
                    b.stopPropagation()
                });
                return a
            });
            h.on(g.events.activate, i.actions.edittags, function(c) {
                var d = a(c.currentTarget),
                    e = d.data("questionid"),
                    g = !!d.data("cantag"),
                    p = d.data("contextid");
                l.then(function(a) {
                    k(h);
                    m(h);
                    var c = b.loadFragment("question", "tags_form", p, {
                        id: e
                    });
                    a.setBody(c);
                    c.then(function() {
                        j(h)
                    }).always(function() {
                        n(h)
                    }).fail(f.exception);
                    if (g) {
                        a.getRoot().find(i.actions.save).show()
                    } else {
                        a.getRoot().find(i.actions.save).hide()
                    }
                    q(a, e);
                    o(a, p);
                    return a
                }).fail(f.exception);
                c.preventDefault()
            })
        },
        t = function(a, b) {
            k(b);
            m(b);
            var c = l(a),
                d = r(a),
                e = p(a);
            return h.submitTagCreateUpdateForm(d, e, c).always(function() {
                n(b);
                j(b)
            }).fail(f.exception)
        };
    return {
        init: function init(b) {
            b = a(b);
            s(b)
        }
    }
});
define("core_question/selectors", [], function() {
    return {
        actions: {
            save: "[data-action=\"save\"]",
            edittags: "[data-action=\"edittags\"]"
        },
        containers: {
            loadingIcon: "[data-region=\"overlay-icon-container\"]"
        }
    }
});
define("core_question/repository", ["jquery", "core/ajax"], function(a, b) {
    return {
        submitTagCreateUpdateForm: function submitTagCreateUpdateForm(a, c, d) {
            return b.call([{
                methodname: "core_question_submit_tags_form",
                args: {
                    questionid: a,
                    contextid: c,
                    formdata: d
                }
            }])[0]
        }
    }
});
define("core_search/form-search-user-selector", ["jquery", "core/ajax", "core/templates"], function(a, b, c) {
    return {
        processResults: function processResults(b, c) {
            var d = [];
            a.each(c, function(a, b) {
                d.push({
                    value: b.id,
                    label: b._label
                })
            });
            return d
        },
        transport: function transport(d, e, f, g) {
            var h, i = {
                    query: e
                },
                j = a(d).attr("withincourseid");
            if ("undefined" != typeof j && "" !== a("#id_searchwithin").val()) {
                i.courseid = j
            } else {
                i.courseid = 0
            }
            h = b.call([{
                methodname: "core_search_get_relevant_users",
                args: i
            }]);
            h[0].then(function(b) {
                var d = [];
                a.each(b, function(a, b) {
                    d.push(c.render("core_search/form-user-selector-suggestion", b))
                });
                return a.when.apply(a.when, d).then(function() {
                    var c = arguments,
                        d = 0;
                    a.each(b, function(a, b) {
                        b._label = c[d++]
                    });
                    f(b)
                })
            }).fail(g)
        }
    }
});
define("core_user/participants", ["jquery", "core/str", "core/modal_factory", "core/modal_events", "core/templates", "core/notification", "core/ajax"], function(a, b, c, d, e, f, g) {
    var h = {
            BULKACTIONSELECT: "#formactionid",
            BULKUSERCHECKBOXES: "input.usercheckbox",
            BULKUSERNOSCHECKBOXES: "input.usercheckbox[value='0']",
            BULKUSERSELECTEDCHECKBOXES: "input.usercheckbox:checked",
            BULKACTIONFORM: "#participantsform",
            CHECKALLBUTTON: "#checkall",
            CHECKALLNOSBUTTON: "#checkallnos"
        },
        i = function(a) {
            this.courseId = a.courseid;
            this.noteStateNames = a.noteStateNames;
            this.stateHelpIcon = a.stateHelpIcon;
            this.attachEventListeners()
        };
    i.prototype.modal = null;
    i.prototype.courseId = -1;
    i.prototype.noteStateNames = {};
    i.prototype.stateHelpIcon = "";
    i.prototype.attachEventListeners = function() {
        a(h.BULKACTIONSELECT).on("change", function(b) {
            var c = a(b.target).val();
            if (-1 !== c.indexOf("#")) {
                b.preventDefault();
                var d = [];
                a(h.BULKUSERSELECTEDCHECKBOXES).each(function(b, c) {
                    var e = a(c).attr("name"),
                        f = e.replace("user", "");
                    d.push(f)
                });
                if ("#messageselect" == c) {
                    this.showSendMessage(d).fail(f.exception)
                } else if ("#addgroupnote" == c) {
                    this.showAddNote(d).fail(f.exception)
                }
                a(h.BULKACTIONSELECT + " option[value=\"\"]").prop("selected", "selected")
            } else if ("" !== c) {
                if (0 < a(h.BULKUSERSELECTEDCHECKBOXES).length) {
                    a(h.BULKACTIONFORM).submit()
                } else {
                    a(h.BULKACTIONSELECT + " option[value=\"\"]").prop("selected", "selected")
                }
            }
        }.bind(this));
        a(h.CHECKALLBUTTON).on("click", function() {
            var b = a(this).data("showallink");
            if (b) {
                window.location = b
            }
        });
        a(h.CHECKALLNOSBUTTON).on("click", function() {
            a(h.BULKUSERNOSCHECKBOXES).prop("checked", !0)
        })
    };
    i.prototype.showAddNote = function(f) {
        if (0 == f.length) {
            return a.Deferred().resolve().promise()
        }
        var g = [];
        for (var i in this.noteStateNames) {
            switch (i) {
                case "draft":
                    g.push({
                        value: "personal",
                        label: this.noteStateNames[i]
                    });
                    break;
                case "public":
                    g.push({
                        value: "course",
                        label: this.noteStateNames[i],
                        selected: 1
                    });
                    break;
                case "site":
                    g.push({
                        value: i,
                        label: this.noteStateNames[i]
                    });
                    break;
            }
        }
        var j = {
                stateNames: g,
                stateHelpIcon: this.stateHelpIcon
            },
            k = null;
        if (1 == f.length) {
            k = b.get_string("addbulknotesingle", "core_notes")
        } else {
            k = b.get_string("addbulknote", "core_notes", f.length)
        }
        return a.when(c.create({
            type: c.types.SAVE_CANCEL,
            body: e.render("core_user/add_bulk_note", j)
        }), k).then(function(b, c) {
            this.modal = b;
            this.modal.setTitle(c);
            this.modal.setSaveButtonText(c);
            this.modal.getRoot().on(d.hidden, function() {
                var b = a("#user-notifications [role=alert]");
                if (b.length) {
                    b.focus()
                } else {
                    a(h.BULKACTIONSELECT).focus()
                }
                this.modal.getRoot().remove()
            }.bind(this));
            this.modal.getRoot().on(d.save, this.submitAddNote.bind(this, f));
            this.modal.show();
            return this.modal
        }.bind(this))
    };
    i.prototype.submitAddNote = function(a) {
        var c = this.modal.getRoot().find("form textarea").val(),
            d = this.modal.getRoot().find("form select").val(),
            e = [],
            h = 0;
        for (h = 0; h < a.length; h++) {
            e.push({
                userid: a[h],
                text: c,
                courseid: this.courseId,
                publishstate: d
            })
        }
        return g.call([{
            methodname: "core_notes_create_notes",
            args: {
                notes: e
            }
        }])[0].then(function(a) {
            if (1 == a.length) {
                return b.get_string("addbulknotedonesingle", "core_notes")
            } else {
                return b.get_string("addbulknotedone", "core_notes", a.length)
            }
        }).then(function(a) {
            f.addNotification({
                message: a,
                type: "success"
            });
            return !0
        }).catch(f.exception)
    };
    i.prototype.showSendMessage = function(f) {
        if (0 == f.length) {
            return a.Deferred().resolve().promise()
        }
        var g = null;
        if (1 == f.length) {
            g = b.get_string("sendbulkmessagesingle", "core_message")
        } else {
            g = b.get_string("sendbulkmessage", "core_message", f.length)
        }
        return a.when(c.create({
            type: c.types.SAVE_CANCEL,
            body: e.render("core_user/send_bulk_message", {})
        }), g).then(function(b, c) {
            this.modal = b;
            this.modal.setTitle(c);
            this.modal.setSaveButtonText(c);
            this.modal.getRoot().on(d.hidden, function() {
                a(h.BULKACTIONSELECT).focus();
                this.modal.getRoot().remove()
            }.bind(this));
            this.modal.getRoot().on(d.save, this.submitSendMessage.bind(this, f));
            this.modal.show();
            return this.modal
        }.bind(this))
    };
    i.prototype.submitSendMessage = function(a) {
        var c = this.modal.getRoot().find("form textarea").val(),
            d = [],
            e = 0;
        for (e = 0; e < a.length; e++) {
            d.push({
                touserid: a[e],
                text: c
            })
        }
        return g.call([{
            methodname: "core_message_send_instant_messages",
            args: {
                messages: d
            }
        }])[0].then(function(a) {
            if (1 == a.length) {
                return b.get_string("sendbulkmessagesentsingle", "core_message")
            } else {
                return b.get_string("sendbulkmessagesent", "core_message", a.length)
            }
        }).then(function(a) {
            f.addNotification({
                message: a,
                type: "success"
            });
            return !0
        }).catch(f.exception)
    };
    return {
        init: function init(a) {
            return new i(a)
        }
    }
});
define("core_user/status_field", ["core/templates", "jquery", "core/str", "core/config", "core/notification", "core/modal_factory", "core/modal_events", "core/fragment", "core/ajax"], function(a, b, c, d, f, g, h, i, j) {
    var k = {
            EDIT_ENROLMENT: "[data-action=\"editenrolment\"]",
            SHOW_DETAILS: "[data-action=\"showdetails\"]",
            UNENROL: "[data-action=\"unenrol\"]"
        },
        l = function(a) {
            this.contextid = a.contextid;
            this.courseid = a.courseid;
            this.bindEditEnrol();
            this.bindUnenrol();
            this.bindStatusDetails()
        };
    l.prototype.courseid = 0;
    l.prototype.bindEditEnrol = function() {
        var a = this;
        b(k.EDIT_ENROLMENT).click(function(d) {
            d.preventDefault();
            var e = b(this),
                i = e.parent(),
                j = i.data("fullname"),
                k = e.attr("rel");
            b.when(c.get_string("edituserenrolment", "enrol", j)).then(function(a) {
                return g.create({
                    large: !0,
                    title: a,
                    type: g.types.SAVE_CANCEL
                })
            }).done(function(b) {
                b.getRoot().on(h.save, function(c) {
                    c.preventDefault();
                    a.submitEditFormAjax(b)
                });
                b.getRoot().on(h.hidden, function() {
                    b.destroy()
                });
                b.setBody(a.getBody(k));
                b.show()
            }).fail(f.exception)
        })
    };
    l.prototype.bindUnenrol = function() {
        var a = this;
        b(k.UNENROL).click(function(d) {
            d.preventDefault();
            var e = b(this),
                i = e.parent(),
                j = [{
                    key: "unenrol",
                    component: "enrol"
                }, {
                    key: "unenrolconfirm",
                    component: "enrol",
                    param: {
                        user: i.data("fullname"),
                        course: i.data("coursename"),
                        enrolinstancename: i.data("enrolinstancename")
                    }
                }],
                k = g.create({
                    type: g.types.SAVE_CANCEL
                });
            b.when(c.get_strings(j), k).done(function(c, f) {
                var g = c[0],
                    i = c[1];
                f.setTitle(g);
                f.setBody(i);
                f.setSaveButtonText(g);
                f.getRoot().on(h.save, function() {
                    var c = {
                        ueid: b(e).attr("rel")
                    };
                    d.preventDefault();
                    a.submitUnenrolFormAjax(f, c)
                });
                f.getRoot().on(h.hidden, function() {
                    f.destroy()
                });
                f.show()
            }).fail(f.exception)
        })
    };
    l.prototype.bindStatusDetails = function() {
        b(k.SHOW_DETAILS).click(function(d) {
            d.preventDefault();
            var e = b(this),
                i = e.parent(),
                j = {
                    fullname: i.data("fullname"),
                    coursename: i.data("coursename"),
                    enrolinstancename: i.data("enrolinstancename"),
                    status: i.data("status"),
                    statusclass: i.find("span").attr("class"),
                    timestart: i.data("timestart"),
                    timeend: i.data("timeend"),
                    timeenrolled: i.data("timeenrolled")
                },
                l = e.next(k.EDIT_ENROLMENT);
            if (l.length) {
                j.editenrollink = b("<div>").append(l.clone()).html()
            }
            var m = c.get_strings([{
                    key: "enroldetails",
                    component: "enrol"
                }]),
                n = g.create({
                    large: !0,
                    type: g.types.CANCEL
                });
            b.when(m, n).done(function(c, d) {
                var e = a.render("core_user/status_details", j);
                d.setTitle(c[0]);
                d.setBody(e);
                if (l.length) {
                    d.getRoot().on("click", k.EDIT_ENROLMENT, function(a) {
                        a.preventDefault();
                        d.hide();
                        b(l).trigger("click")
                    })
                }
                d.show();
                d.getRoot().on(h.hidden, function() {
                    d.destroy()
                })
            }).fail(f.exception)
        })
    };
    l.prototype.submitEditFormAjax = function(a) {
        var c = this,
            d = a.getRoot().find("form"),
            e = b(d).find("[name=\"ue\"]").val(),
            g = {
                methodname: "core_enrol_submit_user_enrolment_form",
                args: {
                    formdata: d.serialize()
                }
            };
        j.call([g])[0].done(function(b) {
            if (b.result) {
                a.hide();
                if ("undefined" != typeof window.M.core_formchangechecker) {
                    window.M.core_formchangechecker.reset_form_dirty_state()
                }
                window.location.reload()
            } else {
                var f = JSON.stringify(d.serialize());
                a.setBody(c.getBody(e, f))
            }
        }).fail(f.exception)
    };
    l.prototype.submitUnenrolFormAjax = function(a, b) {
        j.call([{
            methodname: "core_enrol_unenrol_user_enrolment",
            args: b
        }])[0].done(function(b) {
            if (b.result) {
                a.hide();
                if ("undefined" != typeof window.M.core_formchangechecker) {
                    window.M.core_formchangechecker.reset_form_dirty_state()
                }
                window.location.reload()
            } else {
                f.alert(b.errors[0].key, b.errors[0].message)
            }
        }).fail(f.exception)
    };
    l.prototype.getBody = function(a, b) {
        var c = {
            ueid: a
        };
        if ("undefined" != typeof b) {
            c.formdata = b
        }
        return i.loadFragment("enrol", "user_enrolment_form", this.contextid, c).fail(f.exception)
    };
    return {
        init: function init(a) {
            new l(a)
        }
    }
});
define("core_user/unified_filter_datasource", ["jquery", "core/ajax", "core/notification"], function(a, b, c) {
    return {
        list: function list(b, c) {
            var d = [],
                e = a(b),
                f = a(b).data("originaloptionsjson"),
                g = e.val();
            a.each(f, function(b, e) {
                if ("" !== a.trim(c) && -1 === e.label.toLocaleLowerCase().indexOf(c.toLocaleLowerCase())) {
                    return !0
                }
                if (-1 < a.inArray(e.value, g)) {
                    return !0
                }
                d.push(e);
                return !0
            });
            var h = new a.Deferred;
            h.resolve(d);
            return h.promise()
        },
        processResults: function processResults(b, c) {
            var d = [];
            a.each(c, function(a, b) {
                d.push({
                    value: b.value,
                    label: b.label
                })
            });
            return d
        },
        transport: function transport(a, b, d) {
            this.list(a, b).then(d).catch(c.exception)
        }
    }
});
define("core_user/unified_filter", ["jquery", "core/form-autocomplete", "core/str", "core/notification"], function(a, b, c, d) {
    var e = {
            UNIFIED_FILTERS: "#unified-filters"
        },
        f = function init() {
            M.util.js_pending("unified_filter_datasource");
            c.get_strings([{
                key: "userfilterplaceholder",
                component: "moodle"
            }, {
                key: "nofiltersapplied",
                component: "moodle"
            }]).done(function(a) {
                var c = a[0],
                    f = a[1];
                b.enhance(e.UNIFIED_FILTERS, !0, "core_user/unified_filter_datasource", c, !1, !0, f, !0).then(function() {
                    M.util.js_complete("unified_filter_datasource")
                }).fail(d.exception)
            }).fail(d.exception);
            var f = a(e.UNIFIED_FILTERS).val();
            a(e.UNIFIED_FILTERS).on("change", function() {
                var b = a(this).val(),
                    c = [],
                    d = [],
                    e = !1;
                a.each(b, function(a, b) {
                    var f = b.split(":", 2);
                    if (2 !== f.length) {
                        d.push(b);
                        return !0
                    }
                    var g = f[0],
                        h = f[1];
                    if ("undefined" != typeof c[g]) {
                        e = !0
                    }
                    c[g] = h;
                    return !0
                });
                if (e) {
                    var g = [];
                    for (var h in c) {
                        g.push(h + ":" + c[h])
                    }
                    g = g.concat(d);
                    a(this).val(g)
                }
                if (f.join(",") != b.join(",")) {
                    this.form.submit()
                }
            })
        },
        g = function getForm() {
            return a(e.UNIFIED_FILTERS).closest("form")
        };
    return {
        init: function init() {
            f()
        },
        getForm: function getForm() {
            return g()
        }
    }
});
define("qtype_ddimageortext/question", ["jquery", "core/dragdrop", "core/key_codes"], function(a, b, c) {
    "use strict";

    function d(a, b, c) {
        this.containerId = a;
        M.util.js_pending("qtype_ddimageortext-init-" + this.containerId);
        this.places = c;
        this.allImagesLoaded = !1;
        this.imageLoadingTimeoutId = null;
        if (b) {
            this.getRoot().addClass("qtype_ddimageortext-readonly")
        }
        var d = this;
        this.getNotYetLoadedImages().one("load", function() {
            d.waitForAllImagesToBeLoaded()
        });
        this.waitForAllImagesToBeLoaded()
    }
    d.prototype.waitForAllImagesToBeLoaded = function() {
        var a = this;
        if (this.allImagesLoaded) {
            return
        }
        if (null !== this.imageLoadingTimeoutId) {
            clearTimeout(this.imageLoadingTimeoutId)
        }
        if (0 < this.getNotYetLoadedImages().length) {
            this.imageLoadingTimeoutId = setTimeout(function() {
                a.waitForAllImagesToBeLoaded()
            }, 100);
            return
        }
        this.allImagesLoaded = !0;
        a.setupQuestion()
    };
    d.prototype.getNotYetLoadedImages = function() {
        var a = this;
        return this.getRoot().find(".ddarea img").not(function(b, c) {
            return a.imageIsLoaded(c)
        })
    };
    d.prototype.imageIsLoaded = function(a) {
        return a.complete && 0 !== a.naturalHeight
    };
    d.prototype.setupQuestion = function() {
        this.resizeAllDragsAndDrops();
        this.cloneDrags();
        this.positionDragsAndDrops();
        M.util.js_complete("qtype_ddimageortext-init-" + this.containerId)
    };
    d.prototype.resizeAllDragsAndDrops = function() {
        var b = this;
        this.getRoot().find(".draghomes > div").each(function(c, d) {
            b.resizeAllDragsAndDropsInGroup(b.getClassnameNumericSuffix(a(d), "dragitemgroup"))
        })
    };
    d.prototype.resizeAllDragsAndDropsInGroup = function(b) {
        var c = this.getRoot(),
            d = c.find(".dragitemgroup" + b + " .draghome"),
            e = 0,
            f = 0;
        d.each(function(a, b) {
            e = Math.max(e, Math.ceil(b.offsetWidth));
            f = Math.max(f, Math.ceil(b.offsetHeight))
        });
        e += 10;
        f += 10;
        d.each(function(b, c) {
            var d = Math.round((e - c.offsetWidth) / 2),
                g = Math.floor((f - c.offsetHeight) / 2);
            a(c).css({
                "padding-left": d + "px",
                "padding-right": e - c.offsetWidth - d + "px",
                "padding-top": g + "px",
                "padding-bottom": f - c.offsetHeight - g + "px"
            })
        });
        for (var g in this.places) {
            if (!this.places.hasOwnProperty(g)) {
                continue
            }
            var h = this.places[g],
                i = h.text;
            if (parseInt(h.group) !== b) {
                continue
            }
            if ("" === i) {
                i = M.util.get_string("blank", "qtype_ddimageortext")
            }
            c.find(".dropzones").append("<div class=\"dropzone group" + h.group + " place" + g + "\" tabindex=\"0\"><span class=\"accesshide\">" + i + "</span>&nbsp;</div>");
            c.find(".dropzone.place" + g).width(e - 2).height(f - 2)
        }
    };
    d.prototype.cloneDrags = function() {
        var b = this;
        this.getRoot().find(".ddarea .draghome").each(function(c, d) {
            b.cloneDragsForOneChoice(a(d))
        })
    };
    d.prototype.cloneDragsForOneChoice = function(a) {
        if (a.hasClass("infinite")) {
            for (var b = this.noOfDropsInGroup(this.getGroup(a)), c = 0; c < b; c++) {
                this.cloneDrag(a)
            }
        } else {
            this.cloneDrag(a)
        }
    };
    d.prototype.cloneDrag = function(a) {
        var b = a.clone();
        b.removeClass("draghome").addClass("drag unplaced moodle-has-zindex").offset(a.offset());
        this.getRoot().find(".dragitems").append(b)
    };
    d.prototype.positionDragsAndDrops = function() {
        var b = this,
            c = this.getRoot(),
            d = this.bgImage().offset();
        c.find(".ddarea .dropzone").each(function(c, e) {
            var f = a(e),
                g = b.places[b.getPlace(f)];
            f.offset({
                left: d.left + parseInt(g.xy[0]),
                top: d.top + parseInt(g.xy[1])
            })
        });
        c.find(".ddarea .drag").each(function(c, d) {
            var e = a(d),
                f = b.getClassnameNumericSuffix(e, "inplace");
            e.addClass("unplaced").removeClass("placed").offset(b.getDragHome(b.getGroup(e), b.getChoice(e)).offset());
            if (null !== f) {
                e.removeClass("inplace" + f)
            }
        });
        c.find("input.placeinput").each(function(d, e) {
            var f = a(e),
                g = f.val();
            if ("0" === g) {
                return
            }
            var h = b.getPlace(f);
            b.getUnplacedChoice(b.getGroup(f), g).removeClass("unplaced").addClass("placed inplace" + h).offset(c.find(".dropzone.place" + h).offset())
        });
        this.bgImage().data("prev-top", d.top).data("prev-left", d.left)
    };
    d.prototype.fixLayoutIfBackgroundMoved = function() {
        var a = this.bgImage(),
            b = a.offset(),
            c = a.data("prev-top"),
            d = a.data("prev-left");
        if (d === void 0 || c === void 0) {
            return
        }
        if (c === b.top && d === b.left) {
            return
        }
        this.positionDragsAndDrops()
    };
    d.prototype.handleDragStart = function(c) {
        var d = this,
            e = a(c.target).closest(".drag"),
            f = b.prepare(c);
        if (!f.start) {
            return
        }
        var g = this.getClassnameNumericSuffix(e, "inplace");
        if (null !== g) {
            this.setInputValue(g, 0);
            e.removeClass("inplace" + g)
        }
        e.addClass("beingdragged");
        b.start(c, e, function(a, b, c) {
            d.dragMove(a, b, c)
        }, function(a, b, c) {
            d.dragEnd(a, b, c)
        })
    };
    d.prototype.dragMove = function(b, c, d) {
        var e = this;
        this.getRoot().find(".dropzone.group" + this.getGroup(d)).each(function(d, f) {
            var g = a(f);
            if (e.isPointInDrop(b, c, g)) {
                g.addClass("valid-drag-over-drop")
            } else {
                g.removeClass("valid-drag-over-drop")
            }
        })
    };
    d.prototype.dragEnd = function(b, c, d) {
        var e = this,
            f = this.getRoot(),
            g = !1;
        f.find(".dropzone.group" + this.getGroup(d)).each(function(f, h) {
            var i = a(h);
            if (!e.isPointInDrop(b, c, i)) {
                return !0
            }
            i.removeClass("valid-drag-over-drop");
            e.sendDragToDrop(d, i);
            g = !0;
            return !1
        });
        if (!g) {
            this.sendDragHome(d)
        }
    };
    d.prototype.sendDragToDrop = function(a, b) {
        var c = this.getCurrentDragInPlace(this.getPlace(b));
        if (0 !== c.length) {
            this.sendDragHome(c)
        }
        if (0 === a.length) {
            this.setInputValue(this.getPlace(b), 0)
        } else {
            this.setInputValue(this.getPlace(b), this.getChoice(a));
            a.removeClass("unplaced").addClass("placed inplace" + this.getPlace(b));
            this.animateTo(a, b)
        }
    };
    d.prototype.sendDragHome = function(a) {
        a.removeClass("placed").addClass("unplaced");
        var b = this.getClassnameNumericSuffix(a, "inplace");
        if (null !== b) {
            a.removeClass("inplace" + b)
        }
        this.animateTo(a, this.getDragHome(this.getGroup(a), this.getChoice(a)))
    };
    d.prototype.handleKeyPress = function(b) {
        var d = a(b.target).closest(".dropzone"),
            e = this.getCurrentDragInPlace(this.getPlace(d)),
            f = a();
        switch (b.keyCode) {
            case c.space:
            case c.arrowRight:
            case c.arrowDown:
                f = this.getNextDrag(this.getGroup(d), e);
                break;
            case c.arrowLeft:
            case c.arrowUp:
                f = this.getPreviousDrag(this.getGroup(d), e);
                break;
            case c.escape:
                break;
            default:
                return;
        }
        b.preventDefault();
        this.sendDragToDrop(f, d)
    };
    d.prototype.getNextDrag = function(a, b) {
        var c, d = this.noOfChoicesInGroup(a);
        if (0 === b.length) {
            c = 1
        } else {
            c = this.getChoice(b) + 1
        }
        var e = this.getUnplacedChoice(a, c);
        while (0 === e.length && c < d) {
            c++;
            e = this.getUnplacedChoice(a, c)
        }
        return e
    };
    d.prototype.getPreviousDrag = function(a, b) {
        var c;
        if (0 === b.length) {
            c = this.noOfChoicesInGroup(a)
        } else {
            c = this.getChoice(b) - 1
        }
        var d = this.getUnplacedChoice(a, c);
        while (0 === d.length && 1 < c) {
            c--;
            d = this.getUnplacedChoice(a, c)
        }
        return d
    };
    d.prototype.animateTo = function(a, b) {
        var c = a.offset(),
            d = b.offset();
        a.addClass("beingdragged");
        a.animate({
            left: parseInt(a.css("left")) + d.left - c.left,
            top: parseInt(a.css("top")) + d.top - c.top
        }, {
            duration: "fast",
            done: function done() {
                a.removeClass("beingdragged");
                a.offset(d)
            }
        })
    };
    d.prototype.isPointInDrop = function(a, b, c) {
        var d = c.offset();
        return a >= d.left && a < d.left + c.width() && b >= d.top && b < d.top + c.height()
    };
    d.prototype.setInputValue = function(a, b) {
        this.getRoot().find("input.placeinput.place" + a).val(b)
    };
    d.prototype.getRoot = function() {
        return a(document.getElementById(this.containerId))
    };
    d.prototype.bgImage = function() {
        return this.getRoot().find("img.dropbackground")
    };
    d.prototype.getDragHome = function(a, b) {
        return this.getRoot().find(".ddarea .draghome.group" + a + ".choice" + b)
    };
    d.prototype.getUnplacedChoice = function(a, b) {
        return this.getRoot().find(".ddarea .drag.group" + a + ".choice" + b + ".unplaced").slice(0, 1)
    };
    d.prototype.getCurrentDragInPlace = function(a) {
        return this.getRoot().find(".ddarea .drag.inplace" + a)
    };
    d.prototype.noOfDropsInGroup = function(a) {
        return this.getRoot().find(".dropzone.group" + a).length
    };
    d.prototype.noOfChoicesInGroup = function(a) {
        return this.getRoot().find(".dragitemgroup" + a + " .draghome").length
    };
    d.prototype.getClassnameNumericSuffix = function(a, b) {
        var c = a.attr("class");
        if ("" !== c) {
            for (var d = c.split(" "), e = 0, f; e < d.length; e++) {
                f = new RegExp("^" + b + "([0-9])+$");
                if (f.test(d[e])) {
                    var g = /([0-9])+$/,
                        h = g.exec(d[e]);
                    return +h[0]
                }
            }
        }
        return null
    };
    d.prototype.getChoice = function(a) {
        return this.getClassnameNumericSuffix(a, "choice")
    };
    d.prototype.getGroup = function(a) {
        return this.getClassnameNumericSuffix(a, "group")
    };
    d.prototype.getPlace = function(a) {
        return this.getClassnameNumericSuffix(a, "place")
    };
    var f = {
        eventHandlersInitialised: !1,
        questions: {},
        init: function init(a, b, c) {
            f.questions[a] = new d(a, b, c);
            if (!f.eventHandlersInitialised) {
                f.setupEventHandlers();
                f.eventHandlersInitialised = !0
            }
        },
        setupEventHandlers: function setupEventHandlers() {
            a("body").on("mousedown touchstart", ".que.ddimageortext:not(.qtype_ddimageortext-readonly) .dragitems .drag", f.handleDragStart).on("keydown", ".que.ddimageortext:not(.qtype_ddimageortext-readonly) .dropzones .dropzone", f.handleKeyPress);
            a(window).on("resize", f.handleWindowResize);
            setTimeout(f.fixLayoutIfThingsMoved, 100)
        },
        handleDragStart: function handleDragStart(a) {
            a.preventDefault();
            var b = f.getQuestionForEvent(a);
            if (b) {
                b.handleDragStart(a)
            }
        },
        handleKeyPress: function handleKeyPress(a) {
            var b = f.getQuestionForEvent(a);
            if (b) {
                b.handleKeyPress(a)
            }
        },
        handleWindowResize: function handleWindowResize() {
            for (var a in f.questions) {
                if (f.questions.hasOwnProperty(a)) {
                    f.questions[a].positionDragsAndDrops()
                }
            }
        },
        fixLayoutIfThingsMoved: function fixLayoutIfThingsMoved() {
            for (var a in f.questions) {
                if (f.questions.hasOwnProperty(a)) {
                    f.questions[a].fixLayoutIfBackgroundMoved()
                }
            }
            setTimeout(f.fixLayoutIfThingsMoved, 100)
        },
        getQuestionForEvent: function getQuestionForEvent(b) {
            var c = a(b.currentTarget).closest(".que.ddimageortext").attr("id");
            return f.questions[c]
        }
    };
    return {
        init: f.init
    }
});
define("qtype_ddimageortext/form", ["jquery", "core/dragdrop"], function(a, b) {
    "use strict";
    var c = {
        maxBgImageSize: null,
        maxDragImageSize: null,
        fp: null,
        init: function init(b, d) {
            c.maxBgImageSize = b;
            c.maxDragImageSize = d;
            c.fp = c.filePickers();
            a("#id_previewareaheader").append("<div class=\"ddarea\">  <div class=\"droparea\">    <img class=\"dropbackground\" />    <div class=\"dropzones\"></div>  </div>  <div class=\"dragitems\"></div></div>");
            c.updateVisibilityOfFilePickers();
            c.setOptionsForDragItemSelectors();
            c.setupEventHandlers();
            c.waitForFilePickerToInitialise()
        },
        waitForFilePickerToInitialise: function waitForFilePickerToInitialise() {
            if (null === c.fp.file("bgimage").href) {
                setTimeout(c.waitForFilePickerToInitialise, 1e3);
                return
            }
            M.util.js_pending("dragDropToImageForm");
            a("form.mform").on("change", ".filepickerhidden", function() {
                M.util.js_pending("dragDropToImageForm");
                c.loadPreviewImage()
            });
            c.loadPreviewImage()
        },
        loadPreviewImage: function loadPreviewImage() {
            a("fieldset#id_previewareaheader .dropbackground").one("load", c.afterPreviewImageLoaded).attr("src", c.fp.file("bgimage").href)
        },
        afterPreviewImageLoaded: function afterPreviewImageLoaded() {
            var b = a("fieldset#id_previewareaheader .dropbackground");
            c.constrainImageSize(b, c.maxBgImageSize);
            c.createDropZones();
            M.util.js_complete("dragDropToImageForm")
        },
        constrainImageSize: function constrainImageSize(a, b) {
            var c = Math.max(a.width() / b.width, a.height() / b.height);
            if (1 < c) {
                a.css("width", Math.floor(a.width() / c))
            }
            a.addClass("constrained")
        },
        createDropZones: function createDropZones() {
            var b = a(".dropzones");
            b.empty();
            var d = c.fp.file("bgimage").href;
            if (null === d) {
                return
            }
            for (var e = c.form.getFormValue("nodropzone", []), f = 0, g; f < e; f++) {
                g = c.form.getFormValue("drops", [f, "choice"]);
                if ("0" === g) {
                    continue
                }
                g = g - 1;
                var h = c.form.getFormValue("drags", [g, "draggroup"]),
                    i = c.form.getFormValue("draglabel", [g]);
                if ("image" === c.form.getFormValue("drags", [g, "dragitemtype"])) {
                    var j = c.fp.file("dragitem[" + g + "]").href;
                    if (null === j) {
                        continue
                    }
                    b.append("<img class=\"droppreview group" + h + " drop" + f + "\" src=\"" + j + "\" alt=\"" + i + "\" data-drop-no=\"" + f + "\">")
                } else if ("" !== i) {
                    b.append("<div class=\"droppreview group" + h + " drop" + f + "\"  data-drop-no=\"" + f + "\">" + i + "</div>")
                }
            }
            c.waitForAllDropImagesToBeLoaded()
        },
        waitForAllDropImagesToBeLoaded: function waitForAllDropImagesToBeLoaded() {
            var b = a(".dropzones img").not(function(a, b) {
                return c.imageIsLoaded(b)
            });
            if (0 < b.length) {
                setTimeout(function() {
                    c.waitForAllDropImagesToBeLoaded()
                }, 100);
                return
            }
            c.updateDropZones()
        },
        imageIsLoaded: function imageIsLoaded(a) {
            return a.complete && 0 !== a.naturalHeight
        },
        updateDropZones: function updateDropZones() {
            var b = c.fp.file("bgimage").href;
            if (null === b) {
                return
            }
            for (var d = a("fieldset#id_previewareaheader .dropbackground").offset(), e = c.form.getFormValue("nodropzone", []), f = 0, g; f < e; f++) {
                g = a(".dropzones .drop" + f);
                if (0 === g.length) {
                    continue
                }
                var h = c.form.getFormValue("drops", [f, "choice"]) - 1;
                g.offset({
                    left: d.left + parseInt(c.form.getFormValue("drops", [f, "xleft"])),
                    top: d.top + parseInt(c.form.getFormValue("drops", [f, "ytop"]))
                });
                var i = c.form.getFormValue("draglabel", [h]);
                if (g.is("img")) {
                    g.attr("alt", i)
                } else {
                    g.html(i)
                }
            }
            a(".dropzones .droppreview").css("padding", "0");
            for (var j = a("select.draggroup").first().find("option").length, k = 1; k <= j; k++) {
                c.resizeAllDragsAndDropsInGroup(k)
            }
        },
        resizeAllDragsAndDropsInGroup: function resizeAllDragsAndDropsInGroup(b) {
            var c = a(".dropzones .droppreview.group" + b),
                d = 0,
                e = 0;
            c.each(function(a, b) {
                d = Math.max(d, Math.ceil(b.offsetWidth));
                e = Math.max(e, Math.ceil(b.offsetHeight))
            });
            d += 10;
            e += 10;
            c.each(function(b, c) {
                var f = Math.round((d - c.offsetWidth) / 2),
                    g = Math.floor((e - c.offsetHeight) / 2);
                a(c).css({
                    "padding-left": f + "px",
                    "padding-right": d - c.offsetWidth - f + "px",
                    "padding-top": g + "px",
                    "padding-bottom": e - c.offsetHeight - g + "px"
                })
            })
        },
        setupEventHandlers: function setupEventHandlers() {
            a("fieldset#id_draggableitemheader").on("change input", "input, select", function(b) {
                var d = a(b.target).closest("select, input");
                if (d.hasClass("dragitemtype")) {
                    c.updateVisibilityOfFilePickers()
                }
                c.setOptionsForDragItemSelectors();
                if (d.is(".dragitemtype, .draggroup")) {
                    c.createDropZones()
                } else if (d.is(".draglabel")) {
                    c.updateDropZones()
                }
            });
            a("fieldset#id_dropzoneheader").on("change input", "input, select", function(b) {
                var d = a(b.target).closest("select, input");
                if (d.is("select")) {
                    c.createDropZones()
                } else {
                    c.updateDropZones()
                }
            });
            a("fieldset#id_previewareaheader").on("mousedown touchstart", ".droppreview", function(a) {
                c.dragStart(a)
            });
            a(window).on("resize", function() {
                c.updateDropZones()
            })
        },
        updateVisibilityOfFilePickers: function updateVisibilityOfFilePickers() {
            for (var b = c.form.getFormValue("noitems", []), d = 0, e; d < b; d++) {
                e = a("input#id_dragitem_" + d).closest(".fitem_ffilepicker");
                if ("image" === c.form.getFormValue("drags", [d, "dragitemtype"])) {
                    e.show()
                } else {
                    e.hide()
                }
            }
        },
        setOptionsForDragItemSelectors: function setOptionsForDragItemSelectors() {
            for (var b = {
                    0: ""
                }, d = c.form.getFormValue("noitems", []), e = c.form.getFormValue("nodropzone", []), f = 0; f < d; f++) {
                var g = c.form.getFormValue("draglabel", [f]),
                    h = c.fp.file(c.form.toNameWithIndex("dragitem", [f]));
                if ("image" === c.form.getFormValue("drags", [f, "dragitemtype"]) && null !== h.name) {
                    b[f + 1] = f + 1 + ". " + g + " (" + h.name + ")"
                } else if ("" !== g) {
                    b[f + 1] = f + 1 + ". " + g
                }
            }
            for (var i = 0; i < e; i++) {
                var j = a("#id_drops_" + i + "_choice"),
                    k = j.val();
                j.find("option").remove();
                for (var l in b) {
                    if (!b.hasOwnProperty(l)) {
                        continue
                    }
                    j.append("<option value=\"" + l + "\">" + b[l] + "</option>");
                    var m = j.find("option[value=\"" + l + "\"]");
                    if (parseInt(l) === parseInt(k)) {
                        m.attr("selected", !0)
                    } else if (c.isItemUsed(parseInt(l))) {
                        m.attr("disabled", !0)
                    }
                }
            }
        },
        isItemUsed: function isItemUsed(b) {
            if (0 === b) {
                return !1
            }
            if (c.form.getFormValue("drags", [b - 1, "infinite"])) {
                return !1
            }
            return 0 !== a("fieldset#id_dropzoneheader select").filter(function(c, d) {
                return parseInt(a(d).val()) === b
            }).length
        },
        dragStart: function dragStart(d) {
            var e = a(d.target).closest(".droppreview"),
                f = b.prepare(d);
            if (!f.start) {
                return
            }
            b.start(d, e, function(a, b, d) {
                c.dragMove(d)
            }, function() {
                c.dragEnd()
            })
        },
        dragMove: function dragMove(b) {
            var d = a("fieldset#id_previewareaheader .dropbackground"),
                e = d.offset(),
                f = b.data("dropNo"),
                g = b.offset(),
                h = Math.round(g.left - e.left),
                i = Math.round(g.top - e.top);
            h = Math.max(0, Math.min(h, d.width() - b.width() - 10));
            i = Math.max(0, Math.min(i, d.height() - b.height() - 10));
            c.form.setFormValue("drops", [f, "xleft"], h);
            c.form.setFormValue("drops", [f, "ytop"], i)
        },
        dragEnd: function dragEnd() {
            c.updateDropZones()
        },
        form: {
            toNameWithIndex: function toNameWithIndex(a, b) {
                for (var c = a, d = 0; d < b.length; d++) {
                    c = c + "[" + b[d] + "]"
                }
                return c
            },
            getEl: function getEl(b, c) {
                var d = a("form.mform")[0];
                return d.elements[this.toNameWithIndex(b, c)]
            },
            getFormValue: function getFormValue(a, b) {
                var c = this.getEl(a, b);
                if (!c.type) {
                    c = c[c.length - 1]
                }
                if ("checkbox" === c.type) {
                    return c.checked
                } else {
                    return c.value
                }
            },
            setFormValue: function setFormValue(a, b, c) {
                var d = this.getEl(a, b);
                if ("checkbox" === d.type) {
                    d.checked = c
                } else {
                    d.value = c
                }
            }
        },
        filePickers: function filePickers() {
            var b, c;
            if (b === void 0) {
                b = {};
                c = {};
                var d = a("form.mform input.filepickerhidden");
                d.each(function(a, d) {
                    b[d.value] = d.name;
                    c[d.name] = d.parentNode
                })
            }
            return {
                file: function file(b) {
                    var d = a(c[b]),
                        e = d.find("div.filepicker-filelist a");
                    if (e.length) {
                        return {
                            href: e.get(0).href,
                            name: e.get(0).innerHTML
                        }
                    } else {
                        return {
                            href: null,
                            name: null
                        }
                    }
                },
                name: function name(a) {
                    return b[a]
                }
            }
        }
    };
    return {
        init: c.init
    }
});
define("qtype_ddmarker/shapes", function() {
    "use strict";

    function a(a, b) {
        this.x = a;
        this.y = b
    }
    a.prototype.toString = function() {
        return this.x + "," + this.y
    };
    a.prototype.move = function(a, b) {
        this.x += a;
        this.y += b
    };
    a.prototype.offset = function(b, c) {
        if (b instanceof a) {
            c = b.y;
            b = b.x
        }
        return new a(this.x + b, this.y + c)
    };
    a.parse = function(b) {
        var c = b.split(",");
        if (2 !== c.length) {
            throw new Error(b + " is not a valid point")
        }
        return new a(Math.round(c[0]), Math.round(c[1]))
    };

    function b(b, c, d) {
        this.label = b;
        this.centre = new a(c || 0, d || 0)
    }
    b.prototype.getType = function() {
        throw new Error("Not implemented.")
    };
    b.prototype.getCoordinates = function() {
        throw new Error("Not implemented.")
    };
    b.prototype.parse = function() {
        throw new Error("Not implemented.")
    };
    b.prototype.move = function() {};
    b.prototype.edit = function() {};
    b.prototype.normalizeShape = function() {};
    b.prototype.makeSvg = function() {
        throw new Error("Not implemented.")
    };
    b.prototype.updateSvg = function() {};
    b.prototype.makeSimilarCircle = function() {
        throw new Error("Not implemented.")
    };
    b.prototype.makeSimilarRectangle = function() {
        throw new Error("Not implemented.")
    };
    b.prototype.makeSimilarPolygon = function() {
        throw new Error("Not implemented.")
    };
    b.prototype.getHandlePositions = function() {
        return null
    };

    function c(a, c, d, e) {
        c = c || 15;
        d = d || 15;
        b.call(this, a, c, d);
        this.radius = e || 15
    }
    c.prototype = new b;
    c.prototype.getType = function() {
        return "circle"
    };
    c.prototype.getCoordinates = function() {
        return this.centre + ";" + Math.abs(this.radius)
    };
    c.prototype.makeSvg = function(a) {
        var b = h(a, "circle");
        this.updateSvg(b);
        return b
    };
    c.prototype.updateSvg = function(a) {
        a.childNodes[0].setAttribute("cx", this.centre.x);
        a.childNodes[0].setAttribute("cy", this.centre.y);
        a.childNodes[0].setAttribute("r", Math.abs(this.radius));
        a.childNodes[1].setAttribute("x", this.centre.x);
        a.childNodes[1].setAttribute("y", this.centre.y + 15);
        a.childNodes[1].textContent = this.label
    };
    c.prototype.parse = function(b) {
        if (!b.match(/^\d+,\d+;\d+$/)) {
            return !1
        }
        var c = b.split(";");
        this.centre = a.parse(c[0]);
        this.radius = Math.round(c[1]);
        return !0
    };
    c.prototype.move = function(a, b, c, d) {
        this.centre.move(a, b);
        if (this.centre.x < this.radius) {
            this.centre.x = this.radius
        }
        if (this.centre.x > c - this.radius) {
            this.centre.x = c - this.radius
        }
        if (this.centre.y < this.radius) {
            this.centre.y = this.radius
        }
        if (this.centre.y > d - this.radius) {
            this.centre.y = d - this.radius
        }
    };
    c.prototype.edit = function(a, b, c, d, e) {
        this.radius += b;
        var f = Math.min(this.centre.x, this.centre.y, d - this.centre.x, e - this.centre.y);
        if (this.radius > f) {
            this.radius = f
        }
        if (this.radius < -f) {
            this.radius = -f
        }
    };
    c.prototype.normalizeShape = function() {
        this.radius = Math.abs(this.radius)
    };
    c.prototype.makeSimilarRectangle = function() {
        return new d(this.label, this.centre.x - this.radius, this.centre.y - this.radius, 2 * this.radius, 2 * this.radius)
    };
    c.prototype.makeSimilarPolygon = function() {
        return new e(this.label, [this.centre.offset(-this.radius, -this.radius), this.centre.offset(-this.radius, this.radius), this.centre.offset(this.radius, this.radius), this.centre.offset(this.radius, -this.radius)])
    };
    c.prototype.getHandlePositions = function() {
        return {
            moveHandle: this.centre,
            editHandles: [this.centre.offset(this.radius, 0)]
        }
    };

    function d(a, c, d, e, f) {
        b.call(this, a, c, d);
        this.width = e || 30;
        this.height = f || 30
    }
    d.prototype = new b;
    d.prototype.getType = function() {
        return "rectangle"
    };
    d.prototype.getCoordinates = function() {
        return this.centre + ";" + this.width + "," + this.height
    };
    d.prototype.makeSvg = function(a) {
        var b = h(a, "rect");
        this.updateSvg(b);
        return b
    };
    d.prototype.updateSvg = function(a) {
        if (0 <= this.width) {
            a.childNodes[0].setAttribute("x", this.centre.x);
            a.childNodes[0].setAttribute("width", this.width)
        } else {
            a.childNodes[0].setAttribute("x", this.centre.x + this.width);
            a.childNodes[0].setAttribute("width", -this.width)
        }
        if (0 <= this.height) {
            a.childNodes[0].setAttribute("y", this.centre.y);
            a.childNodes[0].setAttribute("height", this.height)
        } else {
            a.childNodes[0].setAttribute("y", this.centre.y + this.height);
            a.childNodes[0].setAttribute("height", -this.height)
        }
        a.childNodes[1].setAttribute("x", this.centre.x + this.width / 2);
        a.childNodes[1].setAttribute("y", this.centre.y + this.height / 2 + 15);
        a.childNodes[1].textContent = this.label
    };
    d.prototype.parse = function(b) {
        if (!b.match(/^\d+,\d+;\d+,\d+$/)) {
            return !1
        }
        var c = b.split(";");
        this.centre = a.parse(c[0]);
        var d = a.parse(c[1]);
        this.width = d.x;
        this.height = d.y;
        return !0
    };
    d.prototype.move = function(a, b, c, d) {
        this.centre.move(a, b);
        if (0 > this.centre.x) {
            this.centre.x = 0
        }
        if (this.centre.x > c - this.width) {
            this.centre.x = c - this.width
        }
        if (0 > this.centre.y) {
            this.centre.y = 0
        }
        if (this.centre.y > d - this.height) {
            this.centre.y = d - this.height
        }
    };
    d.prototype.edit = function(a, b, c, d, e) {
        this.width += b;
        this.height += c;
        if (this.width < -this.centre.x) {
            this.width = -this.centre.x
        }
        if (this.width > d - this.centre.x) {
            this.width = d - this.centre.x
        }
        if (this.height < -this.centre.y) {
            this.height = -this.centre.y
        }
        if (this.height > e - this.centre.y) {
            this.height = e - this.centre.y
        }
    };
    d.prototype.normalizeShape = function() {
        if (0 > this.width) {
            this.centre.x += this.width;
            this.width = -this.width
        }
        if (0 > this.height) {
            this.centre.y += this.height;
            this.height = -this.height
        }
    };
    d.prototype.makeSimilarCircle = function() {
        return new c(this.label, Math.round(this.centre.x + this.width / 2), Math.round(this.centre.y + this.height / 2), Math.round((this.width + this.height) / 4))
    };
    d.prototype.makeSimilarPolygon = function() {
        return new e(this.label, [this.centre, this.centre.offset(0, this.height), this.centre.offset(this.width, this.height), this.centre.offset(this.width, 0)])
    };
    d.prototype.getHandlePositions = function() {
        return {
            moveHandle: this.centre.offset(this.width / 2, this.height / 2),
            editHandles: [this.centre.offset(this.width, this.height)]
        }
    };

    function e(c, d) {
        b.call(this, c, 0, 0);
        this.points = d ? d.slice() : [new a(10, 10), new a(40, 10), new a(10, 40)];
        this.normalizeShape()
    }
    e.prototype = new b;
    e.prototype.getType = function() {
        return "polygon"
    };
    e.prototype.getCoordinates = function() {
        for (var a = "", b = 0; b < this.points.length; b++) {
            a += this.centre.offset(this.points[b]) + ";"
        }
        return a.slice(0, a.length - 1)
    };
    e.prototype.makeSvg = function(a) {
        var b = h(a, "polygon");
        this.updateSvg(b);
        return b
    };
    e.prototype.updateSvg = function(a) {
        a.childNodes[0].setAttribute("points", this.getCoordinates().replace(/[,;]/g, " "));
        a.childNodes[1].setAttribute("x", this.centre.x);
        a.childNodes[1].setAttribute("y", this.centre.y + 15);
        a.childNodes[1].textContent = this.label
    };
    e.prototype.parse = function(b) {
        if (!b.match(/^\d+,\d+(?:;\d+,\d+)*$/)) {
            return !1
        }
        for (var c = b.split(";"), d = [], e = 0; e < c.length; e++) {
            d.push(a.parse(c[e]))
        }
        this.points = d;
        this.centre.x = 0;
        this.centre.y = 0;
        this.normalizeShape();
        return !0
    };
    e.prototype.move = function(a, b, c, d) {
        this.centre.move(a, b);
        for (var e = c, f = 0, g = d, h = 0, j = 0; j < this.points.length; j++) {
            e = Math.min(e, this.points[j].x);
            f = Math.max(f, this.points[j].x);
            g = Math.min(g, this.points[j].y);
            h = Math.max(h, this.points[j].y)
        }
        if (this.centre.x < -e) {
            this.centre.x = -e
        }
        if (this.centre.x > c - f) {
            this.centre.x = c - f
        }
        if (this.centre.y < -g) {
            this.centre.y = -g
        }
        if (this.centre.y > d - h) {
            this.centre.y = d - h
        }
    };
    e.prototype.edit = function(a, b, c, d, e) {
        this.points[a].move(b, c);
        if (this.points[a].x < -this.centre.x) {
            this.points[a].x = -this.centre.x
        }
        if (this.points[a].x > d - this.centre.x) {
            this.points[a].x = d - this.centre.x
        }
        if (this.points[a].y < -this.centre.y) {
            this.points[a].y = -this.centre.y
        }
        if (this.points[a].y > e - this.centre.y) {
            this.points[a].y = e - this.centre.y
        }
    };
    e.prototype.addNewPointAfter = function(b) {
        this.points.splice(b, 0, new a(this.points[b].x, this.points[b].y))
    };
    e.prototype.normalizeShape = function() {
        var a, b = 0,
            c = 0;
        if (0 === this.points.length) {
            return
        }
        for (a = 0; a < this.points.length; a++) {
            b += this.points[a].x;
            c += this.points[a].y
        }
        b = Math.round(b / this.points.length);
        c = Math.round(c / this.points.length);
        if (0 === b && 0 === c) {
            return
        }
        for (a = 0; a < this.points.length; a++) {
            this.points[a].move(-b, -c)
        }
        this.centre.move(b, c)
    };
    e.prototype.makeSimilarCircle = function() {
        return this.makeSimilarRectangle().makeSimilarCircle()
    };
    e.prototype.makeSimilarRectangle = function() {
        for (var a, b = 0, c = 0, e = 0, f = 0, g = 0; g < this.points.length; g++) {
            a = this.points[g];
            b = Math.min(b, a.x);
            c = Math.max(c, a.x);
            e = Math.min(e, a.y);
            f = Math.max(f, a.y)
        }
        return new d(this.label, this.centre.x + b, this.centre.y + e, Math.max(c - b, 10), Math.max(f - e, 10))
    };
    e.prototype.getHandlePositions = function() {
        for (var a = [], b = 0; b < this.points.length; b++) {
            a.push(this.points[b].offset(this.centre.x, this.centre.y))
        }
        return {
            moveHandle: this.centre,
            editHandles: a
        }
    };

    function f(a) {
        b.call(this, a)
    }
    f.prototype = new b;
    f.prototype.getType = function() {
        return "null"
    };
    f.prototype.getCoordinates = function() {
        return ""
    };
    f.prototype.makeSvg = function() {
        return null
    };
    f.prototype.updateSvg = function() {};
    f.prototype.parse = function() {
        return !1
    };
    f.prototype.makeSimilarCircle = function() {
        return new c(this.label)
    };
    f.prototype.makeSimilarRectangle = function() {
        return new d(this.label)
    };
    f.prototype.makeSimilarPolygon = function() {
        return new e(this.label)
    };

    function g(a, b) {
        var c = a.ownerDocument.createElementNS("http://www.w3.org/2000/svg", b);
        a.appendChild(c);
        return c
    }

    function h(a, b) {
        var c = g(a, "g");
        g(c, b).setAttribute("class", "shape");
        g(c, "text").setAttribute("class", "shapeLabel");
        return c
    }
    return {
        Point: a,
        Shape: b,
        Circle: c,
        Rectangle: d,
        Polygon: e,
        NullShape: f,
        createSvgElement: g,
        make: function make(a, b) {
            switch (a) {
                case "circle":
                    return new c(b);
                case "rectangle":
                    return new d(b);
                case "polygon":
                    return new e(b);
                default:
                    return new f(b);
            }
        },
        getSimilar: function getSimilar(a, b) {
            if (a === b.getType()) {
                return b
            }
            switch (a) {
                case "circle":
                    return b.makeSimilarCircle();
                case "rectangle":
                    return b.makeSimilarRectangle();
                case "polygon":
                    return b.makeSimilarPolygon();
                default:
                    return new f(b.label);
            }
        }
    }
});
define("qtype_ddmarker/question", ["jquery", "core/dragdrop", "qtype_ddmarker/shapes", "core/key_codes"], function(a, b, c, d) {
    "use strict";

    function e(a, b, c, d) {
        this.containerId = a;
        this.visibleDropZones = d;
        if (c) {
            this.getRoot().addClass("qtype_ddmarker-readonly")
        }
        this.loadImage(b)
    }
    e.prototype.loadImage = function(a) {
        var b = this;
        this.getRoot().find(".dropbackground").one("load", function() {
            if (0 < b.visibleDropZones.length) {
                b.drawDropzones()
            }
            b.repositionDrags()
        }).attr("src", a).css({
            border: "1px solid #000",
            "max-width": "none"
        })
    };
    e.prototype.drawDropzones = function() {
        var a = this.getRoot().find("img.dropbackground");
        this.getRoot().find("div.dropzones").html("<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"dropzones\" width=\"" + a.outerWidth() + "\" height=\"" + a.outerHeight() + "\"></svg>");
        var b = this.getRoot().find("svg.dropzones");
        b.css("position", "absolute");
        for (var c = 0, d = 0, e; d < this.visibleDropZones.length; d++) {
            e = "color" + c;
            c = (c + 1) % 8;
            this.addDropzone(b, d, e)
        }
    };
    e.prototype.addDropzone = function(a, b, d) {
        var e = this.visibleDropZones[b],
            f = c.make(e.shape, ""),
            g;
        if (!f.parse(e.coords)) {
            return
        }
        g = this.getRoot().find("div.markertexts span.markertext" + b);
        if (g.length) {
            if ("" !== e.markertext) {
                g.html(e.markertext)
            } else {
                g.remove()
            }
        } else if ("" !== e.markertext) {
            this.getRoot().find("div.markertexts").append("<span class=\"" + ("markertext markertext" + b) + "\">" + e.markertext + "</span>")
        }
        var h = f.makeSvg(a[0]);
        h.setAttribute("class", "dropzone " + d)
    };
    e.prototype.repositionDropZones = function() {
        var a = this.getRoot().find("svg.dropzones");
        if (0 === a.length) {
            return
        }
        var b = this.convertToWindowXY(new c.Point(-1, 0));
        a.offset({
            left: b.x,
            top: b.y
        });
        for (var d = 0, e; d < this.visibleDropZones.length; d++) {
            e = this.getRoot().find("div.ddarea div.markertexts span.markertext" + d);
            if (0 === e.length) {
                continue
            }
            var f = this.visibleDropZones[d],
                g = c.make(f.shape, "");
            if (!g.parse(f.coords)) {
                continue
            }
            var h = g.getHandlePositions(),
                i = this.convertToWindowXY(h.moveHandle.offset(-e.outerWidth() / 2, -e.outerHeight() / 2));
            e.offset({
                left: i.x - 4,
                top: i.y
            })
        }
    };
    e.prototype.repositionDrags = function() {
        var b = this.getRoot(),
            c = this;
        b.find("div.dragitems .dragitem").each(function(b, c) {
            a(c).addClass("unneeded")
        });
        b.find("input.choices").each(function(a, b) {
            for (var d = c.getChoiceNoFromElement(b), e = c.getCoords(b), f = c.dragHome(d), g = 0, h; g < e.length; g++) {
                h = c.dragItem(d, g);
                if (!h.length || h.hasClass("beingdragged")) {
                    h = c.cloneNewDragItem(f, g)
                } else {
                    h.removeClass("unneeded")
                }
                h.offset({
                    left: e[g].x,
                    top: e[g].y
                })
            }
        });
        b.find("div.dragitems .dragitem").each(function(b, c) {
            var d = a(c);
            if (d.hasClass("unneeded") && !d.hasClass("beingdragged")) {
                d.remove()
            }
        });
        this.repositionDropZones();
        var d = this.bgImage(),
            e = d.offset();
        d.data("prev-top", e.top).data("prev-left", e.left)
    };
    e.prototype.getCoords = function(b) {
        var d = this.getRoot(),
            e = this.getChoiceNoFromElement(b),
            f = +this.getClassnameNumericSuffix(b, "noofdrags"),
            g = 0 < d.find("span.dragitem.beingdragged.choice" + e).length,
            h = [],
            j = a(b).val();
        if ("" !== j) {
            for (var k = j.split(";"), l = 0; l < k.length; l++) {
                h[l] = this.convertToWindowXY(c.Point.parse(k[l]))
            }
        }
        var m = h.length + (g ? 1 : 0);
        if (a(b).hasClass("infinite") || m < f) {
            h[h.length] = this.dragHomeXY(e)
        }
        return h
    };
    e.prototype.convertToWindowXY = function(a) {
        var b = this.bgImage();
        return a.offset(b.offset().left + 1, b.offset().top + 1)
    };
    e.prototype.convertToBgImgXY = function(a) {
        var b = this.bgImage();
        return a.offset(-b.offset().left - 1, -b.offset().top - 1)
    };
    e.prototype.coordsInBgImg = function(a) {
        var b = this.bgImage();
        return 0 < a.x && a.x <= b.width() && 0 < a.y && a.y <= b.height()
    };
    e.prototype.dragHomeXY = function(a) {
        var b = this.dragHome(a);
        return new c.Point(b.offset().left, b.offset().top)
    };
    e.prototype.getRoot = function() {
        return a(document.getElementById(this.containerId))
    };
    e.prototype.bgImage = function() {
        return this.getRoot().find("img.dropbackground")
    };
    e.prototype.dragHome = function(a) {
        return this.getRoot().find("div.dragitems span.draghome.choice" + a)
    };
    e.prototype.dragItem = function(a, b) {
        return this.getRoot().find("div.dragitems span.dragitem.choice" + a + ".item" + b)
    };
    e.prototype.cloneNewDragItem = function(a, b) {
        var c = a.clone(!0);
        c.removeClass("draghome").addClass("dragitem").addClass("item" + b);
        a.after(c);
        c.attr("tabIndex", 0);
        return c
    };
    e.prototype.handleDragStart = function(c) {
        var d = this,
            e = a(c.target).closest(".dragitem"),
            f = b.prepare(c);
        if (!f.start) {
            return
        }
        e.addClass("beingdragged");
        b.start(c, e, function() {}, function(a, b, c) {
            d.dragEnd(c)
        })
    };
    e.prototype.dragEnd = function(a) {
        a.removeClass("beingdragged");
        var b = this.getChoiceNoFromElement(a);
        this.saveCoordsForChoice(b, a);
        this.repositionDrags()
    };
    e.prototype.saveCoordsForChoice = function(a, b) {
        for (var d = [], e = this.getRoot().find("span.dragitem.choice" + a).length, f, g = !0, h = 0, j; h <= e; h++) {
            j = this.dragItem(a, h);
            if (0 === j.length) {
                continue
            }
            if (!j.hasClass("beingdragged")) {
                f = this.convertToBgImgXY(new c.Point(j.offset().left, j.offset().top));
                if (this.coordsInBgImg(f)) {
                    d[d.length] = f
                }
            }
            if (b && 0 !== b.length && b[0].innerText === j[0].innerText) {
                g = !1
            }
        }
        if (g) {
            f = this.convertToBgImgXY(new c.Point(b.offset().left, b.offset().top));
            if (this.coordsInBgImg(f)) {
                d[d.length] = f
            }
        }
        this.getRoot().find("input.choice" + a).val(d.join(";"))
    };
    e.prototype.handleKeyPress = function(b) {
        var e = a(b.target).closest(".dragitem"),
            f = new c.Point(e.offset().left, e.offset().top),
            g = this.getChoiceNoFromElement(e);
        switch (b.keyCode) {
            case d.arrowLeft:
            case 65:
                f.x -= 1;
                break;
            case d.arrowRight:
            case 68:
                f.x += 1;
                break;
            case d.arrowDown:
            case 83:
                f.y += 1;
                break;
            case d.arrowUp:
            case 87:
                f.y -= 1;
                break;
            case d.space:
            case d.escape:
                f = null;
                break;
            default:
                return;
        }
        b.preventDefault();
        if (null !== f) {
            f = this.constrainToBgImg(f)
        } else {
            f = this.dragHomeXY(g)
        }
        e.offset({
            left: f.x,
            top: f.y
        });
        this.saveCoordsForChoice(g, e);
        this.repositionDrags()
    };
    e.prototype.constrainToBgImg = function(a) {
        var b = this.bgImage(),
            c = this.convertToBgImgXY(a);
        c.x = Math.max(0, c.x);
        c.y = Math.max(0, c.y);
        c.x = Math.min(b.width(), c.x);
        c.y = Math.min(b.height(), c.y);
        return this.convertToWindowXY(c)
    };
    e.prototype.getChoiceNoFromElement = function(a) {
        return +this.getClassnameNumericSuffix(a, "choice")
    };
    e.prototype.getClassnameNumericSuffix = function(b, c) {
        var d = a(b).attr("class");
        if (d !== void 0 && "" !== d) {
            for (var e = d.split(" "), f = 0, g; f < e.length; f++) {
                g = new RegExp("^" + c + "([0-9])+$");
                if (g.test(e[f])) {
                    var h = /([0-9])+$/,
                        i = h.exec(e[f]);
                    return +i[0]
                }
            }
        }
        return null
    };
    e.prototype.handleResize = function() {
        this.repositionDrags()
    };
    e.prototype.fixLayoutIfBackgroundMoved = function() {
        var a = this.bgImage(),
            b = a.offset(),
            c = a.data("prev-top"),
            d = a.data("prev-left");
        if (d === void 0 || c === void 0) {
            return
        }
        if (c === b.top && d === b.left) {
            return
        }
        this.repositionDrags()
    };
    var f = {
        eventHandlersInitialised: !1,
        questions: {},
        init: function init(a, b, c, d) {
            f.questions[a] = new e(a, b, c, d);
            if (!f.eventHandlersInitialised) {
                f.setupEventHandlers();
                f.eventHandlersInitialised = !0
            }
        },
        setupEventHandlers: function setupEventHandlers() {
            a("body").on("mousedown touchstart", ".que.ddmarker:not(.qtype_ddmarker-readonly) div.dragitems .dragitem", f.handleDragStart).on("keydown keypress", ".que.ddmarker:not(.qtype_ddmarker-readonly) div.dragitems .dragitem", f.handleKeyPress);
            a(window).on("resize", f.handleWindowResize);
            setTimeout(f.fixLayoutIfThingsMoved, 100)
        },
        handleDragStart: function handleDragStart(a) {
            a.preventDefault();
            var b = f.getQuestionForEvent(a);
            if (b) {
                b.handleDragStart(a)
            }
        },
        handleKeyPress: function handleKeyPress(a) {
            var b = f.getQuestionForEvent(a);
            if (b) {
                b.handleKeyPress(a)
            }
        },
        handleWindowResize: function handleWindowResize() {
            for (var a in f.questions) {
                if (f.questions.hasOwnProperty(a)) {
                    f.questions[a].handleResize()
                }
            }
        },
        fixLayoutIfThingsMoved: function fixLayoutIfThingsMoved() {
            for (var a in f.questions) {
                if (f.questions.hasOwnProperty(a)) {
                    f.questions[a].fixLayoutIfBackgroundMoved()
                }
            }
            setTimeout(f.fixLayoutIfThingsMoved, 100)
        },
        getQuestionForEvent: function getQuestionForEvent(b) {
            var c = a(b.currentTarget).closest(".que.ddmarker").attr("id");
            return f.questions[c]
        }
    };
    return {
        init: f.init
    }
});
define("qtype_ddmarker/form", ["jquery", "core/dragdrop", "qtype_ddmarker/shapes"], function(a, b, c) {
    "use strict";

    function d(a) {
        this.dropzoneNo = a;
        this.svgEl = null;
        this.shape = c.make(this.getShapeType(), this.getLabel());
        this.updateCoordinatesFromForm()
    }
    d.prototype.updateCoordinatesFromForm = function(a) {
        var b = this.getCoordinates(),
            c = "polygon" === this.shape.getType() && this.shape.points.length;
        if (this.shape.getCoordinates() === b) {
            return
        }
        if (!this.shape.parse(b)) {
            return
        }
        if ("polygon" === this.shape.getType() && c !== this.shape.points.length) {
            var d = this.isActive();
            this.removeFromSvg();
            if (a) {
                this.addToSvg(a);
                if (d) {
                    this.setActive()
                }
            }
        } else {
            this.updateSvgEl()
        }
    };
    d.prototype.updateLabel = function() {
        var a = this.getLabel();
        if (this.shape.label !== a) {
            this.shape.label = a;
            this.updateSvgEl()
        }
    };
    d.prototype.changeShape = function(a) {
        var b = this.getShapeType(),
            d = this.isActive();
        if (b === this.shape.getType()) {
            return
        }
        this.removeFromSvg();
        this.shape = c.getSimilar(b, this.shape);
        if (a) {
            this.addToSvg(a);
            if (d) {
                this.setActive()
            }
        }
        this.setCoordinatesInForm()
    };
    d.prototype.addToSvg = function(a) {
        if (null !== this.svgEl) {
            throw new Error("this.svgEl already set")
        }
        this.svgEl = this.shape.makeSvg(a);
        if (!this.svgEl) {
            return
        }
        this.svgEl.setAttribute("class", "dropzone");
        this.svgEl.setAttribute("data-dropzone-no", this.dropzoneNo);
        var b = this.shape.getHandlePositions();
        if (null === b) {
            return
        }
        var d = c.createSvgElement(this.svgEl, "circle");
        d.setAttribute("cx", b.moveHandle.x);
        d.setAttribute("cy", b.moveHandle.y);
        d.setAttribute("r", 7);
        d.setAttribute("class", "handle move");
        for (var e = 0; e < b.editHandles.length; ++e) {
            this.makeEditHandle(e, b.editHandles[e])
        }
    };
    d.prototype.makeEditHandle = function(a, b) {
        var d = c.createSvgElement(this.svgEl, "rect");
        d.setAttribute("x", b.x - 6);
        d.setAttribute("y", b.y - 6);
        d.setAttribute("width", 11);
        d.setAttribute("height", 11);
        d.setAttribute("class", "handle edit");
        d.setAttribute("data-edit-handle-no", a)
    };
    d.prototype.removeFromSvg = function() {
        if (null !== this.svgEl) {
            this.svgEl.parentNode.removeChild(this.svgEl);
            this.svgEl = null
        }
    };
    d.prototype.updateSvgEl = function() {
        if (null === this.svgEl) {
            return
        }
        this.shape.updateSvg(this.svgEl);
        var a = this.shape.getHandlePositions();
        if (null === a) {
            return
        }
        this.svgEl.childNodes[2].setAttribute("cx", a.moveHandle.x);
        this.svgEl.childNodes[2].setAttribute("cy", a.moveHandle.y);
        for (var b = 0; b < a.editHandles.length; ++b) {
            this.svgEl.childNodes[3 + b].setAttribute("x", a.editHandles[b].x - 6);
            this.svgEl.childNodes[3 + b].setAttribute("y", a.editHandles[b].y - 6)
        }
    };
    d.prototype.isActive = function() {
        return null !== this.svgEl && this.svgEl.getAttribute("class").match(/\bactive\b/)
    };
    d.prototype.setActive = function() {
        var a = this.svgEl.parentNode;
        a.removeChild(this.svgEl);
        a.appendChild(this.svgEl);
        this.svgEl.setAttribute("class", this.svgEl.getAttribute("class") + " active")
    };
    d.prototype.setCoordinatesInForm = function() {
        f.form.setFormValue("drops", [this.dropzoneNo, "coords"], this.shape.getCoordinates())
    };
    d.prototype.getCoordinates = function() {
        return f.form.getFormValue("drops", [this.dropzoneNo, "coords"]).replace(/\s*/g, "")
    };
    d.prototype.getChoiceNo = function() {
        return f.form.getFormValue("drops", [this.dropzoneNo, "choice"])
    };
    d.prototype.getLabel = function() {
        return f.form.getMarkerText(this.getChoiceNo())
    };
    d.prototype.getShapeType = function() {
        return f.form.getFormValue("drops", [this.dropzoneNo, "shape"])
    };
    d.prototype.handleMove = function(c) {
        var d = b.prepare(c);
        if (!d.start) {
            return
        }
        var e = this,
            f = d.x,
            g = d.y,
            h = this.makeDragProxy(d.x, d.y),
            i = a("fieldset#id_previewareaheader .dropbackground"),
            j = i.width(),
            k = i.height();
        b.start(c, a(h), function(a, b) {
            e.shape.move(a - f, b - g, j, k);
            f = a;
            g = b;
            e.updateSvgEl();
            e.setCoordinatesInForm()
        }, function() {
            document.body.removeChild(h)
        })
    };
    d.prototype.handleEdit = function(c, d, e) {
        var f = b.prepare(c);
        if (!f.start) {
            return
        }
        if ("polygon" === this.shape.getType() && (c.ctrlKey || c.metaKey)) {
            this.shape.addNewPointAfter(d);
            this.removeFromSvg();
            this.addToSvg(e);
            this.setActive()
        }
        var g = this,
            h = f.x,
            i = f.y,
            j = this.makeDragProxy(f.x, f.y),
            k = a("fieldset#id_previewareaheader .dropbackground"),
            l = k.width(),
            m = k.height();
        b.start(c, a(j), function(a, b) {
            g.shape.edit(d, a - h, b - i, l, m);
            h = a;
            i = b;
            g.updateSvgEl();
            g.setCoordinatesInForm()
        }, function() {
            document.body.removeChild(j);
            g.shape.normalizeShape();
            g.updateSvgEl();
            g.setCoordinatesInForm()
        })
    };
    d.prototype.makeDragProxy = function(a, b) {
        var c = document.createElement("div");
        c.style.position = "absolute";
        c.style.top = b + "px";
        c.style.left = a + "px";
        c.style.width = "1px";
        c.style.height = "1px";
        document.body.appendChild(c);
        return c
    };
    var f = {
        maxSizes: null,
        fp: null,
        noDropZones: null,
        dropZones: [],
        init: function init(a) {
            f.maxSizes = a;
            f.fp = f.filePickers();
            f.noDropZones = f.form.getFormValue("nodropzone", []);
            f.setupPreviewArea();
            f.setOptionsForDragItemSelectors();
            f.createShapes();
            f.setupEventHandlers();
            f.waitForFilePickerToInitialise()
        },
        setupPreviewArea: function setupPreviewArea() {
            a("fieldset#id_previewareaheader div.fcontainer").append("<div class=\"ddarea que ddmarker\">   <div id=\"ddm-droparea\" class=\"droparea\">       <img class=\"dropbackground\" />       <div id=\"ddm-dropzone\" class=\"dropzones\">       </div>   </div></div>")
        },
        setOptionsForDragItemSelectors: function setOptionsForDragItemSelectors() {
            var b = {
                    0: ""
                },
                c = f.form.getFormValue("noitems", []),
                d = [],
                e, g, h;
            for (g = 1; g <= c; g++) {
                h = f.form.getMarkerText(g);
                if ("" !== h) {
                    b[g] = a("<div/>").text(h).html()
                }
            }
            for (g = 0; g < f.noDropZones; g++) {
                e = a("#id_drops_" + g + "_choice");
                d[g] = +e.val()
            }
            for (g = 0; g < f.noDropZones; g++) {
                e = a("#id_drops_" + g + "_choice");
                e.find("option").remove();
                for (var j in b) {
                    j = +j;
                    var l = "<option value=\"" + j + "\">" + b[j] + "</option>";
                    e.append(l);
                    var m = e.find("option[value=\"" + j + "\"]");
                    if (0 === j) {
                        continue
                    }
                    if (j === d[g]) {
                        m.attr("selected", !0);
                        continue
                    }
                    var n = f.form.getFormValue("drags", [j - 1, "noofdrags"]);
                    if (0 === +n) {
                        continue
                    }
                    for (var o in d) {
                        if (+d[o] !== j) {
                            continue
                        }
                        if (1 === +n) {
                            m.attr("disabled", !0);
                            break
                        } else {
                            n--
                        }
                    }
                }
                if (0 < f.dropZones.length) {
                    f.dropZones[g].updateLabel()
                }
            }
        },
        createShapes: function createShapes() {
            for (var a = 0; a < f.noDropZones; a++) {
                f.dropZones[a] = new d(a)
            }
        },
        setupEventHandlers: function setupEventHandlers() {
            a("fieldset#id_draggableitemheader").on("change input", "input, select", function() {
                f.setOptionsForDragItemSelectors()
            });
            a("fieldset#id_dropzoneheader").on("change input", "input, select", function(a) {
                var b = a.currentTarget.name.match(/^drops\[(\d+)]\[([a-z]*)]$/);
                if (!b) {
                    return
                }
                var c = b[1],
                    d = b[2],
                    e = f.dropZones[c];
                switch (d) {
                    case "shape":
                        e.changeShape(f.form.getSvg());
                        break;
                    case "coords":
                        e.updateCoordinatesFromForm(f.form.getSvg());
                        break;
                    case "choice":
                        e.updateLabel();
                        break;
                }
            });
            var b = a("fieldset#id_previewareaheader");
            b.on("click", "g.dropzone", function(b) {
                var c = a(b.currentTarget).data("dropzone-no"),
                    d = f.dropZones[c].isActive();
                a(f.form.getSvg()).find(".dropzone.active").removeClass("active");
                if (!d) {
                    f.dropZones[c].setActive()
                }
            });
            b.on("mousedown touchstart", ".dropzone .handle.move", function(b) {
                var c = a(b.currentTarget).closest("g").data("dropzoneNo");
                f.dropZones[c].handleMove(b)
            });
            b.on("mousedown touchstart", ".dropzone .handle.edit", function(b) {
                var c = a(b.currentTarget).closest("g").data("dropzoneNo"),
                    d = b.currentTarget.getAttribute("data-edit-handle-no");
                f.dropZones[c].handleEdit(b, d, f.form.getSvg())
            })
        },
        waitForFilePickerToInitialise: function waitForFilePickerToInitialise() {
            if (null === f.fp.file("bgimage").href) {
                setTimeout(f.waitForFilePickerToInitialise, 1e3);
                return
            }
            a("form.mform").on("change", "#id_bgimage", f.loadPreviewImage);
            f.loadPreviewImage()
        },
        loadPreviewImage: function loadPreviewImage() {
            a("fieldset#id_previewareaheader .dropbackground").one("load", f.afterPreviewImageLoaded).attr("src", f.fp.file("bgimage").href)
        },
        afterPreviewImageLoaded: function afterPreviewImageLoaded() {
            var b = a("fieldset#id_previewareaheader .dropbackground");
            f.constrainImageSize();
            a("#ddm-dropzone").css("position", "relative").css("top", -1 * (b.height() + 1));
            a("#ddm-droparea").css("height", b.height() + 20);
            f.updateSvgDisplay()
        },
        constrainImageSize: function constrainImageSize() {
            var b = a("fieldset#id_previewareaheader .dropbackground"),
                c = Math.max(b.width() / f.maxSizes.width, b.height() / f.maxSizes.height);
            if (1 < c) {
                b.css("width", Math.floor(b.width() / c))
            }
            b.addClass("constrained")
        },
        updateSvgDisplay: function updateSvgDisplay() {
            var b = a("fieldset#id_previewareaheader .dropbackground"),
                c;
            if (f.form.getSvg()) {
                for (c = 0; c < f.noDropZones; c++) {
                    f.dropZones[c].updateSvgEl()
                }
            } else {
                a("#ddm-dropzone").html("<svg xmlns=\"http://www.w3.org/2000/svg\" class=\"dropzones\" width=\"" + b.outerWidth() + "\" height=\"" + b.outerHeight() + "\"></svg>");
                for (c = 0; c < f.noDropZones; c++) {
                    f.dropZones[c].addToSvg(f.form.getSvg())
                }
            }
        },
        form: {
            getMarkerText: function getMarkerText(a) {
                if (0 !== +a) {
                    var b = f.form.getFormValue("drags", [a - 1, "label"]);
                    return b.replace(/^\s*(.*)\s*$/, "$1")
                } else {
                    return ""
                }
            },
            getSvg: function getSvg() {
                var b = a("fieldset#id_previewareaheader svg");
                if (0 === b.length) {
                    return null
                } else {
                    return b[0]
                }
            },
            toNameWithIndex: function toNameWithIndex(a, b) {
                for (var c = a, d = 0; d < b.length; d++) {
                    c = c + "[" + b[d] + "]"
                }
                return c
            },
            getEl: function getEl(b, c) {
                var d = a("form.mform")[0];
                return d.elements[this.toNameWithIndex(b, c)]
            },
            getFormValue: function getFormValue(a, b) {
                var c = this.getEl(a, b);
                if ("checkbox" === c.type) {
                    return c.checked
                } else {
                    return c.value
                }
            },
            setFormValue: function setFormValue(a, b, c) {
                var d = this.getEl(a, b);
                if ("checkbox" === d.type) {
                    d.checked = c
                } else {
                    d.value = c
                }
            }
        },
        filePickers: function filePickers() {
            var b, c;
            if (b === void 0) {
                b = {};
                c = {};
                a("form.mform input.filepickerhidden").each(function(a, d) {
                    b[d.value] = d.name;
                    c[d.name] = d.parentNode
                })
            }
            return {
                file: function file(b) {
                    var d = a(c[b]).find("div.filepicker-filelist a");
                    if (d.length) {
                        return {
                            href: d.get(0).href,
                            name: d.get(0).innerHTML
                        }
                    } else {
                        return {
                            href: null,
                            name: null
                        }
                    }
                },
                name: function name(a) {
                    return b[a]
                }
            }
        }
    };
    return {
        init: f.init
    }
});
define("qtype_ddwtos/ddwtos", ["jquery", "core/dragdrop", "core/key_codes"], function(a, b, c) {
    "use strict";

    function d(a, b) {
        this.containerId = a;
        if (b) {
            this.getRoot().addClass("qtype_ddwtos-readonly")
        }
        this.resizeAllDragsAndDrops();
        this.cloneDrags();
        this.positionDrags()
    }
    d.prototype.resizeAllDragsAndDrops = function() {
        var b = this;
        this.getRoot().find(".answercontainer > div").each(function(c, d) {
            b.resizeAllDragsAndDropsInGroup(b.getClassnameNumericSuffix(a(d), "draggrouphomes"))
        })
    };
    d.prototype.resizeAllDragsAndDropsInGroup = function(a) {
        var b = this,
            c = this.getRoot().find(".draggrouphomes" + a + " span.draghome"),
            d = 0,
            e = 0;
        c.each(function(a, b) {
            d = Math.max(d, Math.ceil(b.offsetWidth));
            e = Math.max(e, Math.ceil(0 + b.offsetHeight))
        });
        d += 8;
        e += 2;
        c.each(function(a, c) {
            b.setElementSize(c, d, e)
        });
        this.getRoot().find("span.drop.group" + a).each(function(a, c) {
            b.setElementSize(c, d, e)
        })
    };
    d.prototype.setElementSize = function(b, c, d) {
        a(b).width(c).height(d).css("lineHeight", d + "px")
    };
    d.prototype.cloneDrags = function() {
        var b = this;
        this.getRoot().find("span.draghome").each(function(c, d) {
            b.cloneDragsForOneChoice(a(d))
        })
    };
    d.prototype.cloneDragsForOneChoice = function(a) {
        if (a.hasClass("infinite")) {
            for (var b = this.noOfDropsInGroup(this.getGroup(a)), c = 0; c < b; c++) {
                this.cloneDrag(a)
            }
        } else {
            this.cloneDrag(a)
        }
    };
    d.prototype.cloneDrag = function(a) {
        var b = a.clone();
        b.removeClass("draghome").addClass("drag unplaced moodle-has-zindex").offset(a.offset());
        this.getRoot().find("div.drags").append(b)
    };
    d.prototype.positionDrags = function() {
        var b = this,
            c = this.getRoot();
        c.find("span.drag").each(function(c, d) {
            var e = a(d),
                f = b.getClassnameNumericSuffix(e, "inplace");
            e.addClass("unplaced").removeClass("placed").offset(b.getDragHome(b.getGroup(e), b.getChoice(e)).offset());
            if (null !== f) {
                e.removeClass("inplace" + f)
            }
        });
        c.find("input.placeinput").each(function(d, e) {
            var f = a(e),
                g = f.val(),
                h = b.getPlace(f),
                i = c.find(".drop.place" + h),
                j = i.offset();
            i.data("prev-top", j.top).data("prev-left", j.left);
            if ("0" === g) {
                return
            }
            b.getUnplacedChoice(b.getGroup(f), g).removeClass("unplaced").addClass("placed inplace" + h).offset(c.find(".drop.place" + h).offset())
        })
    };
    d.prototype.fixLayoutIfDropsMoved = function() {
        var b = this,
            c = this.getRoot(),
            d = !1;
        c.find("input.placeinput").each(function(e, f) {
            var g = b.getPlace(a(f)),
                h = c.find(".drop.place" + g),
                i = h.offset(),
                j = h.data("prev-top"),
                k = h.data("prev-left");
            if (k === void 0 || j === void 0) {
                return
            }
            if (j === i.top && k === i.left) {
                return
            }
            d = !0
        });
        if (d) {
            this.positionDrags()
        }
    };
    d.prototype.handleDragStart = function(c) {
        var d = this,
            e = a(c.target).closest(".drag"),
            f = b.prepare(c);
        if (!f.start) {
            return
        }
        var g = this.getClassnameNumericSuffix(e, "inplace");
        if (null !== g) {
            this.setInputValue(g, 0);
            e.removeClass("inplace" + g)
        }
        e.addClass("beingdragged");
        b.start(c, e, function(a, b, c) {
            d.dragMove(a, b, c)
        }, function(a, b, c) {
            d.dragEnd(a, b, c)
        })
    };
    d.prototype.dragMove = function(b, c, d) {
        var e = this;
        this.getRoot().find("span.drop.group" + this.getGroup(d)).each(function(d, f) {
            var g = a(f);
            if (e.isPointInDrop(b, c, g)) {
                g.addClass("valid-drag-over-drop")
            } else {
                g.removeClass("valid-drag-over-drop")
            }
        })
    };
    d.prototype.dragEnd = function(b, c, d) {
        var e = this,
            f = this.getRoot(),
            g = !1;
        f.find("span.drop.group" + this.getGroup(d)).each(function(f, h) {
            var i = a(h);
            if (!e.isPointInDrop(b, c, i)) {
                return !0
            }
            i.removeClass("valid-drag-over-drop");
            e.sendDragToDrop(d, i);
            g = !0;
            return !1
        });
        if (!g) {
            this.sendDragHome(d)
        }
    };
    d.prototype.sendDragToDrop = function(a, b) {
        var c = this.getCurrentDragInPlace(this.getPlace(b));
        if (0 !== c.length) {
            this.sendDragHome(c)
        }
        if (0 === a.length) {
            this.setInputValue(this.getPlace(b), 0)
        } else {
            this.setInputValue(this.getPlace(b), this.getChoice(a));
            a.removeClass("unplaced").addClass("placed inplace" + this.getPlace(b));
            this.animateTo(a, b)
        }
    };
    d.prototype.sendDragHome = function(a) {
        a.removeClass("placed").addClass("unplaced");
        var b = this.getClassnameNumericSuffix(a, "inplace");
        if (null !== b) {
            a.removeClass("inplace" + b)
        }
        this.animateTo(a, this.getDragHome(this.getGroup(a), this.getChoice(a)))
    };
    d.prototype.handleKeyPress = function(b) {
        var d = a(b.target).closest(".drop"),
            e = this.getCurrentDragInPlace(this.getPlace(d)),
            f = a();
        switch (b.keyCode) {
            case c.space:
            case c.arrowRight:
            case c.arrowDown:
                f = this.getNextDrag(this.getGroup(d), e);
                break;
            case c.arrowLeft:
            case c.arrowUp:
                f = this.getPreviousDrag(this.getGroup(d), e);
                break;
            case c.escape:
                break;
            default:
                return;
        }
        b.preventDefault();
        this.sendDragToDrop(f, d)
    };
    d.prototype.getNextDrag = function(a, b) {
        var c, d = this.noOfChoicesInGroup(a);
        if (0 === b.length) {
            c = 1
        } else {
            c = this.getChoice(b) + 1
        }
        var e = this.getUnplacedChoice(a, c);
        while (0 === e.length && c < d) {
            c++;
            e = this.getUnplacedChoice(a, c)
        }
        return e
    };
    d.prototype.getPreviousDrag = function(a, b) {
        var c;
        if (0 === b.length) {
            c = this.noOfChoicesInGroup(a)
        } else {
            c = this.getChoice(b) - 1
        }
        var d = this.getUnplacedChoice(a, c);
        while (0 === d.length && 1 < c) {
            c--;
            d = this.getUnplacedChoice(a, c)
        }
        return d
    };
    d.prototype.animateTo = function(a, b) {
        var c = a.offset(),
            d = b.offset();
        a.addClass("beingdragged");
        a.animate({
            left: parseInt(a.css("left")) + d.left - c.left,
            top: parseInt(a.css("top")) + d.top - c.top
        }, {
            duration: "fast",
            done: function done() {
                a.removeClass("beingdragged");
                a.offset(d)
            }
        })
    };
    d.prototype.isPointInDrop = function(a, b, c) {
        var d = c.offset();
        return a >= d.left && a < d.left + c.width() && b >= d.top && b < d.top + c.height()
    };
    d.prototype.setInputValue = function(a, b) {
        this.getRoot().find("input.placeinput.place" + a).val(b)
    };
    d.prototype.getRoot = function() {
        return a(document.getElementById(this.containerId))
    };
    d.prototype.getDragHome = function(a, b) {
        return this.getRoot().find(".draghome.group" + a + ".choice" + b)
    };
    d.prototype.getUnplacedChoice = function(a, b) {
        return this.getRoot().find(".drag.group" + a + ".choice" + b + ".unplaced").slice(0, 1)
    };
    d.prototype.getCurrentDragInPlace = function(a) {
        return this.getRoot().find("span.drag.inplace" + a)
    };
    d.prototype.noOfDropsInGroup = function(a) {
        return this.getRoot().find(".drop.group" + a).length
    };
    d.prototype.noOfChoicesInGroup = function(a) {
        return this.getRoot().find(".draghome.group" + a).length
    };
    d.prototype.getClassnameNumericSuffix = function(a, b) {
        var c = a.attr("class");
        if ("" !== c) {
            for (var d = c.split(" "), e = 0, f; e < d.length; e++) {
                f = new RegExp("^" + b + "([0-9])+$");
                if (f.test(d[e])) {
                    var g = /([0-9])+$/,
                        h = g.exec(d[e]);
                    return +h[0]
                }
            }
        }
        return null
    };
    d.prototype.getChoice = function(a) {
        return this.getClassnameNumericSuffix(a, "choice")
    };
    d.prototype.getGroup = function(a) {
        return this.getClassnameNumericSuffix(a, "group")
    };
    d.prototype.getPlace = function(a) {
        return this.getClassnameNumericSuffix(a, "place")
    };
    var f = {
        eventHandlersInitialised: !1,
        questions: {},
        init: function init(a, b) {
            f.questions[a] = new d(a, b);
            if (!f.eventHandlersInitialised) {
                f.setupEventHandlers();
                f.eventHandlersInitialised = !0
            }
        },
        setupEventHandlers: function setupEventHandlers() {
            a("body").on("mousedown touchstart", ".que.ddwtos:not(.qtype_ddwtos-readonly) span.drag", f.handleDragStart).on("keydown", ".que.ddwtos:not(.qtype_ddwtos-readonly) span.drop", f.handleKeyPress);
            a(window).on("resize", f.handleWindowResize);
            setTimeout(f.fixLayoutIfThingsMoved, 100)
        },
        handleDragStart: function handleDragStart(a) {
            a.preventDefault();
            var b = f.getQuestionForEvent(a);
            if (b) {
                b.handleDragStart(a)
            }
        },
        handleKeyPress: function handleKeyPress(a) {
            var b = f.getQuestionForEvent(a);
            if (b) {
                b.handleKeyPress(a)
            }
        },
        handleWindowResize: function handleWindowResize() {
            for (var a in f.questions) {
                if (f.questions.hasOwnProperty(a)) {
                    f.questions[a].positionDrags()
                }
            }
        },
        fixLayoutIfThingsMoved: function fixLayoutIfThingsMoved() {
            for (var a in f.questions) {
                if (f.questions.hasOwnProperty(a)) {
                    f.questions[a].fixLayoutIfDropsMoved()
                }
            }
            setTimeout(f.fixLayoutIfThingsMoved, 100)
        },
        getQuestionForEvent: function getQuestionForEvent(b) {
            var c = a(b.currentTarget).closest(".que.ddwtos").attr("id");
            return f.questions[c]
        }
    };
    return {
        init: f.init
    }
});
define("qtype_multichoice/clearchoice", ["jquery", "core/custom_interaction_events"], function(a, b) {
    var c = {
            ANSWER_RADIOS: ".answer input",
            CLEARRESULTS_LINK: "a[data-action=\"clearresults\"]"
        },
        d = "d-none",
        e = function(f) {
            var g = f.find(c.CLEARRESULTS_LINK);
            f.on(b.events.activate, c.CLEARRESULTS_LINK, function(b, e) {
                f.find(c.ANSWER_RADIOS).each(function() {
                    a(this).prop("checked", !1)
                });
                a(b.target).addClass(d);
                e.originalEvent.preventDefault()
            });
            f.on(b.events.activate, c.ANSWER_RADIOS, function() {
                g.removeClass(d)
            })
        };
    return {
        init: function init(b) {
            b = a("#" + b);
            e(b)
        }
    }
});
define("mod_assign/grading_navigation", ["jquery", "core/notification", "core/str", "core/form-autocomplete", "core/ajax", "mod_assign/grading_form_change_checker"], function(a, b, c, d, e, f) {
    var g = function(e) {
        this._regionSelector = e;
        this._region = a(e);
        this._filters = [];
        this._users = [];
        this._filteredUsers = [];
        this._lastXofYUpdate = 0;
        this._firstLoadUsers = !0;
        this._loadAllUsers();
        this._region.find("[data-action=\"previous-user\"]").on("click", this._handlePreviousUser.bind(this));
        this._region.find("[data-action=\"next-user\"]").on("click", this._handleNextUser.bind(this));
        this._region.find("[data-action=\"change-user\"]").on("change", this._handleChangeUser.bind(this));
        this._region.find("[data-region=\"user-filters\"]").on("click", this._toggleExpandFilters.bind(this));
        a(document).on("user-changed", this._refreshSelector.bind(this));
        a(document).on("done-saving-show-next", this._handleNextUser.bind(this));
        var f = this._region.find("[data-region=\"user-filters\"]"),
            g = a(document.getElementById(f.attr("aria-controls")));
        g.on("change", "select", this._filterChanged.bind(this));
        var h = a("[data-region=\"grading-navigation-panel\"]").data("first-userid");
        if (h) {
            this._selectUserById(h)
        }
        c.get_string("changeuser", "mod_assign").done(function(a) {
            d.enhance("[data-action=change-user]", !1, "mod_assign/participant_selector", a)
        }).fail(b.exception);
        a(document).bind("start-loading-user", function() {
            this._isLoading = !0
        }.bind(this));
        a(document).bind("finish-loading-user", function() {
            this._isLoading = !1
        }.bind(this))
    };
    g.prototype._isLoading = !1;
    g.prototype._regionSelector = null;
    g.prototype._filters = null;
    g.prototype._users = null;
    g.prototype._region = null;
    g.prototype._lastFilters = "";
    g.prototype._loadAllUsers = function() {
        var a = this._region.find("[data-action=change-user]"),
            c = a.attr("data-assignmentid"),
            d = a.attr("data-groupid"),
            f = this._region.find("[data-region=\"configure-filters\"]"),
            g = f.find("select[name=\"filter\"]").val(),
            h = f.find("select[name=\"workflowfilter\"]");
        if (h) {
            g += "," + h.val()
        }
        var i = f.find("select[name=\"markerfilter\"]");
        if (i) {
            g += "," + i.val()
        }
        if (this._lastFilters == g) {
            return !1
        }
        this._lastFilters = g;
        e.call([{
            methodname: "mod_assign_list_participants",
            args: {
                assignid: c,
                groupid: d,
                filter: "",
                onlyids: !0,
                tablesort: !0
            },
            done: this._usersLoaded.bind(this),
            fail: b.exception
        }]);
        return !0
    };
    g.prototype._usersLoaded = function(b) {
        this._firstLoadUsers = !1;
        this._filteredUsers = this._users = b;
        if (this._users.length) {
            var c = this._region.find("[data-region=\"user-filters\"]"),
                d = a(document.getElementById(c.attr("aria-controls")));
            d.find("select[name=\"filter\"]").trigger("change")
        } else {
            this._selectNoUser()
        }
        this._triggerNextUserEvent()
    };
    g.prototype._checkClickOutsideConfigureFilters = function(b) {
        var c = this._region.find("[data-region=\"configure-filters\"]");
        if (!c.is(b.target) && 0 === c.has(b.target).length) {
            var d = this._region.find("[data-region=\"user-filters\"]");
            c.hide();
            c.attr("aria-hidden", "true");
            d.attr("aria-expanded", "false");
            a(document).unbind("click.mod_assign_grading_navigation")
        }
    };
    g.prototype._updateFilterPreferences = function(b, c, d) {
        var f = [],
            g = 0;
        if (0 == c.length || this._firstLoadUsers) {
            var h = a.Deferred();
            h.resolve();
            return h
        }
        for (g = 0; g < c.length; g++) {
            var j = c[g];
            if ("none" == j) {
                j = ""
            }
            f.push({
                userid: b,
                name: d[g],
                value: j
            })
        }
        return e.call([{
            methodname: "core_user_set_user_preferences",
            args: {
                preferences: f
            }
        }])[0]
    };
    g.prototype._filterChanged = function() {
        var d = this._region.find("[data-region=\"configure-filters\"]"),
            e = d.find("select");
        this._filters = [];
        e.each(function(b, c) {
            this._filters.push(a(c).val())
        }.bind(this));
        var f = [];
        d.find("option:checked").each(function(b, c) {
            f[f.length] = a(c).text()
        });
        if (f.length) {
            this._region.find("[data-region=\"user-filters\"] span").text(f.join(", "))
        } else {
            c.get_string("nofilters", "mod_assign").done(function(a) {
                this._region.find("[data-region=\"user-filters\"] span").text(a)
            }.bind(this)).fail(b.exception)
        }
        var g = this._region.find("[data-action=change-user]"),
            h = g.data("currentuserid");
        this._updateFilterPreferences(h, this._filters, ["assign_filter", "assign_workflowfilter", "assign_markerfilter"]).done(function() {
            if (!this._loadAllUsers()) {
                var b = parseInt(g.attr("data-selected")),
                    c = 0;
                a.each(this._filteredUsers, function(a, d) {
                    if (b == d.id) {
                        c = a
                    }
                });
                if (this._filteredUsers.length) {
                    this._selectUserById(this._filteredUsers[c].id)
                } else {
                    this._selectNoUser()
                }
            }
        }.bind(this)).fail(b.exception);
        this._refreshCount()
    };
    g.prototype._selectNoUser = function() {
        if (this._isLoading) {
            return
        }
        if (f.checkFormForChanges("[data-region=\"grade-panel\"] .gradeform")) {
            c.get_strings([{
                key: "unsavedchanges",
                component: "mod_assign"
            }, {
                key: "unsavedchangesquestion",
                component: "mod_assign"
            }, {
                key: "saveandcontinue",
                component: "mod_assign"
            }, {
                key: "cancel",
                component: "core"
            }]).done(function(c) {
                b.confirm(c[0], c[1], c[2], c[3], function() {
                    a(document).trigger("save-changes", -1)
                })
            })
        } else {
            a(document).trigger("user-changed", -1)
        }
    };
    g.prototype._selectUserById = function(d) {
        var e = this._region.find("[data-action=change-user]"),
            g = parseInt(d, 10);
        if (this._isLoading) {
            return
        }
        if (f.checkFormForChanges("[data-region=\"grade-panel\"] .gradeform")) {
            c.get_strings([{
                key: "unsavedchanges",
                component: "mod_assign"
            }, {
                key: "unsavedchangesquestion",
                component: "mod_assign"
            }, {
                key: "saveandcontinue",
                component: "mod_assign"
            }, {
                key: "cancel",
                component: "core"
            }]).done(function(c) {
                b.confirm(c[0], c[1], c[2], c[3], function() {
                    a(document).trigger("save-changes", g)
                })
            })
        } else {
            e.attr("data-selected", d);
            if (!isNaN(g) && 0 < g) {
                a(document).trigger("user-changed", d)
            }
        }
    };
    g.prototype._toggleExpandFilters = function(b) {
        b.preventDefault();
        var c = a(b.target).closest("[data-region=\"user-filters\"]"),
            d = "true" == c.attr("aria-expanded"),
            e = a(document.getElementById(c.attr("aria-controls")));
        if (d) {
            e.hide();
            e.attr("aria-hidden", "true");
            c.attr("aria-expanded", "false");
            a(document).unbind("click.mod_assign_grading_navigation")
        } else {
            e.css("display", "inline-block");
            e.attr("aria-hidden", "false");
            c.attr("aria-expanded", "true");
            b.stopPropagation();
            a(document).on("click.mod_assign_grading_navigation", this._checkClickOutsideConfigureFilters.bind(this))
        }
    };
    g.prototype._handlePreviousUser = function(a) {
        a.preventDefault();
        var b = this._region.find("[data-action=change-user]"),
            c = b.attr("data-selected"),
            d = 0,
            e = 0;
        for (d = 0; d < this._filteredUsers.length; d++) {
            if (this._filteredUsers[d].id == c) {
                e = d;
                break
            }
        }
        var f = this._filteredUsers.length,
            g = e - 1;
        if (0 > g) {
            g = f - 1
        }
        if (f) {
            this._selectUserById(this._filteredUsers[g].id)
        }
    };
    g.prototype._handleNextUser = function(b, c) {
        b.preventDefault();
        var d = this._region.find("[data-action=change-user]"),
            e = d.attr("data-selected"),
            f = 0,
            g = 0;
        for (f = 0; f < this._filteredUsers.length; f++) {
            if (this._filteredUsers[f].id == e) {
                g = f;
                break
            }
        }
        var h = this._filteredUsers.length,
            j = (g + 1) % h;
        if (c && h) {
            var k = this._filteredUsers[j].id,
                l = parseInt(k, 10);
            d.attr("data-selected", k);
            if (!isNaN(l) && 0 < l) {
                a(document).trigger("user-changed", k)
            }
        } else if (h) {
            this._selectUserById(this._filteredUsers[j].id)
        }
    };
    g.prototype._setCountString = function(a, d) {
        var e = 0;
        this._lastXofYUpdate++;
        e = this._lastXofYUpdate;
        c.get_string("xofy", "mod_assign", {
            x: a,
            y: d
        }).done(function(a) {
            if (e == this._lastXofYUpdate) {
                this._region.find("[data-region=\"user-count-summary\"]").text(a)
            }
        }.bind(this)).fail(b.exception)
    };
    g.prototype._refreshCount = function() {
        var a = this._region.find("[data-action=change-user]"),
            b = a.attr("data-selected"),
            c = 0,
            d = 0;
        if (isNaN(b) || 0 >= b) {
            this._region.find("[data-region=\"user-count\"]").hide()
        } else {
            this._region.find("[data-region=\"user-count\"]").show();
            for (c = 0; c < this._filteredUsers.length; c++) {
                if (this._filteredUsers[c].id == b) {
                    d = c;
                    break
                }
            }
            var e = this._filteredUsers.length;
            if (e) {
                d += 1
            }
            this._setCountString(d, e);
            if (0 < d) {
                var f = new URL(window.location);
                if (0 < parseInt(f.searchParams.get("blindid"))) {
                    var g = this._filteredUsers[d - 1].recordid;
                    f.searchParams.set("blindid", g)
                } else {
                    f.searchParams.set("userid", b)
                }
                window.history.replaceState({}, "", f)
            }
        }
    };
    g.prototype._refreshSelector = function(a, b) {
        var c = this._region.find("[data-action=change-user]");
        b = parseInt(b, 10);
        if (!isNaN(b) && 0 < b) {
            c.attr("data-selected", b)
        }
        this._refreshCount()
    };
    g.prototype._triggerNextUserEvent = function() {
        if (1 < this._filteredUsers.length) {
            a(document).trigger("next-user", {
                nextUserId: null,
                nextUser: !0
            })
        } else {
            a(document).trigger("next-user", {
                nextUser: !1
            })
        }
    };
    g.prototype._handleChangeUser = function() {
        var d = this._region.find("[data-action=change-user]"),
            e = parseInt(d.val(), 10);
        if (this._isLoading) {
            return
        }
        if (f.checkFormForChanges("[data-region=\"grade-panel\"] .gradeform")) {
            c.get_strings([{
                key: "unsavedchanges",
                component: "mod_assign"
            }, {
                key: "unsavedchangesquestion",
                component: "mod_assign"
            }, {
                key: "saveandcontinue",
                component: "mod_assign"
            }, {
                key: "cancel",
                component: "core"
            }]).done(function(c) {
                b.confirm(c[0], c[1], c[2], c[3], function() {
                    a(document).trigger("save-changes", e)
                })
            })
        } else {
            if (!isNaN(e) && 0 < e) {
                d.attr("data-selected", e);
                a(document).trigger("user-changed", e)
            }
        }
    };
    return g
});
define("mod_assign/grading_review_panel", ["jquery", "mod_assign/grading_events"], function(a, b) {
    var c = function() {
        this._region = a("[data-region=\"review-panel-content\"]");
        this.registerEventListeners()
    };
    c.prototype._region = null;
    c.prototype.getReviewPanel = function(a) {
        var b = this._region.data("panel-owner");
        if ("undefined" == typeof b) {
            this._region.data("review-panel-plugin", a)
        }
        if (this._region.data("review-panel-plugin") == a) {
            return this._region[0]
        }
        return !1
    };
    c.prototype.getTogglePanelButton = function() {
        return this.getPanelElement().find("[data-region=\"review-panel-toggle\"]")
    };
    c.prototype.getPanelElement = function() {
        return a("[data-region=\"review-panel\"]")
    };
    c.prototype.getPanelContentElement = function() {
        return a("[data-region=\"review-panel-content\"]")
    };
    c.prototype.togglePanel = function() {
        if (this.getPanelElement().hasClass("collapsed")) {
            a(document).trigger(b.EXPAND_REVIEW_PANEL)
        } else {
            a(document).trigger(b.COLLAPSE_REVIEW_PANEL)
        }
    };
    c.prototype.collapsePanel = function() {
        this.getPanelElement().addClass("collapsed").removeClass("grade-panel-collapsed");
        this.getPanelContentElement().attr("aria-hidden", !0)
    };
    c.prototype.expandPanel = function() {
        this.getPanelElement().removeClass("collapsed");
        this.getPanelContentElement().removeAttr("aria-hidden")
    };
    c.prototype.registerEventListeners = function() {
        var c = this.getTogglePanelButton();
        c.click(function(a) {
            this.togglePanel();
            a.preventDefault()
        }.bind(this));
        c.keydown(function(a) {
            if (!a.metaKey && !a.shiftKey && !a.altKey && !a.ctrlKey) {
                if (13 === a.keyCode || 32 === a.keyCode) {
                    this.togglePanel();
                    a.preventDefault()
                }
            }
        }.bind(this));
        var d = a(document);
        d.on(b.COLLAPSE_REVIEW_PANEL, function() {
            this.collapsePanel()
        }.bind(this));
        d.on(b.COLLAPSE_GRADE_PANEL, function() {
            this.expandPanel();
            this.getPanelElement().addClass("grade-panel-collapsed")
        }.bind(this));
        d.on(b.EXPAND_REVIEW_PANEL, function() {
            this.expandPanel()
        }.bind(this));
        d.on(b.EXPAND_GRADE_PANEL, function() {
            this.getPanelElement().removeClass("grade-panel-collapsed")
        }.bind(this))
    };
    return c
});
define("mod_assign/grading_events", function() {
    return {
        COLLAPSE_REVIEW_PANEL: "grading:collapse-review-panel",
        EXPAND_REVIEW_PANEL: "grading:expand-review-panel",
        COLLAPSE_GRADE_PANEL: "grading:collapse-grade-panel",
        EXPAND_GRADE_PANEL: "grading:expand-grade-panel"
    }
});
define("mod_assign/override_form", ["exports", "jquery"], function(a, b) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    a.init = void 0;
    b = function(a) {
        return a && a.__esModule ? a : {
            default: a
        }
    }(b);
    var c = function(a, c) {
        var d = document.getElementById(a),
            e = d.querySelector("[name=\"".concat(c, "\"]"));
        (0, b.default)(e).on("change", function() {
            var a = document.createElement("input");
            a.setAttribute("type", "hidden");
            a.setAttribute("name", "userchange");
            a.setAttribute("value", !0);
            d.appendChild(a);
            if ("undefined" != typeof M.core_formchangechecker) {
                M.core_formchangechecker.reset_form_dirty_state()
            }
            d.submit()
        })
    };
    a.init = c
});
define("mod_assign/grading_form_change_checker", ["jquery"], function(a) {
    return {
        saveFormState: function saveFormState(b) {
            a(b).trigger("save-form-state");
            var c = a(b).serialize();
            a(b).data("saved-form-state", c)
        },
        checkFormForChanges: function checkFormForChanges(b) {
            a(b).trigger("save-form-state");
            var c = a(b).serialize(),
                d = a(b).data("saved-form-state");
            if ("undefined" == typeof d) {
                return !1
            }
            return d != c
        }
    }
});
define("mod_assign/participant_selector", ["core/ajax", "jquery", "core/templates"], function(a, b, c) {
    return {
        processResults: function processResults(a, b) {
            return b
        },
        transport: function transport(d, e, f, g) {
            var h = b(d).attr("data-assignmentid"),
                i = b(d).attr("data-groupid"),
                j = b("[data-region=\"configure-filters\"] input[type=\"checkbox\"]"),
                k = [];
            j.each(function(a, c) {
                k[b(c).attr("name")] = b(c).prop("checked")
            });
            a.call([{
                methodname: "mod_assign_list_participants",
                args: {
                    assignid: h,
                    groupid: i,
                    filter: e,
                    limit: 30,
                    includeenrolments: !1,
                    tablesort: !0
                }
            }])[0].then(function(a) {
                var d = [],
                    e = b("[data-showuseridentity]").data("showuseridentity").split(",");
                b.each(a, function(a, f) {
                    var g = f,
                        h = [],
                        i = !0;
                    if (k.filter_submitted && !f.submitted) {
                        i = !1
                    }
                    if (k.filter_notsubmitted && f.submitted) {
                        i = !1
                    }
                    if (k.filter_requiregrading && !f.requiregrading) {
                        i = !1
                    }
                    if (k.filter_grantedextension && !f.grantedextension) {
                        i = !1
                    }
                    if (i) {
                        b.each(e, function(a, b) {
                            if ("undefined" != typeof f[b] && "" !== f[b]) {
                                g.hasidentity = !0;
                                h.push(f[b])
                            }
                        });
                        g.identity = h.join(", ");
                        d.push(c.render("mod_assign/list_participant_user_summary", g).then(function(a) {
                            return {
                                value: f.id,
                                label: a
                            }
                        }))
                    }
                });
                return b.when.apply(b, d)
            }).then(function() {
                var a = [];
                if (arguments[0]) {
                    a = Array.prototype.slice.call(arguments)
                }
                f(a)
            }).catch(g)
        }
    }
});
define("mod_assign/grading_panel", ["jquery", "core/yui", "core/notification", "core/templates", "core/fragment", "core/ajax", "core/str", "mod_assign/grading_form_change_checker", "mod_assign/grading_events", "core/event"], function(a, b, c, d, e, f, g, h, i, j) {
    var k = function(b) {
        this._regionSelector = b;
        this._region = a(b);
        this._userCache = [];
        this.registerEventListeners()
    };
    k.prototype._regionSelector = null;
    k.prototype._lastUserId = 0;
    k.prototype._lastAttemptNumber = -1;
    k.prototype._region = null;
    k.prototype.nextUserId = null;
    k.prototype.nextUser = !1;
    k.prototype._niceReplaceNodeContents = function(b, c, e) {
        var f = a.Deferred();
        b.fadeOut("fast", function() {
            d.replaceNodeContents(b, c, e);
            b.fadeIn("fast", function() {
                f.resolve()
            })
        });
        return f.promise()
    };
    k.prototype._saveFormState = function() {
        var b = a("[data-region=\"grading-actions-form\"] [name=\"sendstudentnotifications\"]").prop("checked");
        a(".gradeform [name=\"sendstudentnotifications\"]").val(b)
    };
    k.prototype._submitForm = function(b, d, e) {
        var g = a(this._region.find("form.gradeform"));
        a("[data-region=\"overlay\"]").show();
        g.trigger("save-form-state");
        j.notifyFormSubmitAjax(g[0]);
        var h = g.serialize(),
            i = this._region.attr("data-assignmentid");
        f.call([{
            methodname: "mod_assign_submit_grading_form",
            args: {
                assignmentid: i,
                userid: this._lastUserId,
                jsonformdata: JSON.stringify(h)
            },
            done: this._handleFormSubmissionResponse.bind(this, h, d, e),
            fail: c.exception
        }])
    };
    k.prototype._handleFormSubmissionResponse = function(d, e, f, h) {
        if ("undefined" == typeof e) {
            e = this._lastUserId
        }
        if (h.length) {
            a(document).trigger("reset", [this._lastUserId, d])
        } else {
            g.get_strings([{
                key: "changessaved",
                component: "core"
            }, {
                key: "gradechangessaveddetail",
                component: "mod_assign"
            }]).done(function(a) {
                c.alert(a[0], a[1])
            }).fail(c.exception);
            b.use("moodle-core-formchangechecker", function() {
                M.core_formchangechecker.reset_form_dirty_state()
            });
            if (e == this._lastUserId) {
                a(document).trigger("reset", e)
            } else if (f) {
                a(document).trigger("done-saving-show-next", !0)
            } else {
                a(document).trigger("user-changed", e)
            }
        }
        a("[data-region=\"overlay\"]").hide()
    };
    k.prototype._resetForm = function(b, c, d) {
        var e = a.Event("custom");
        if ("undefined" == typeof c) {
            c = this._lastUserId
        }
        this._lastUserId = 0;
        this._refreshGradingPanel(e, c, d)
    };
    k.prototype._chooseAttempt = function(b) {
        var d = a(b.target),
            e = d.data("submissions"),
            f = a(document.getElementById(e)),
            h = f.clone(),
            i = h.wrap(a("<form/>")).html();
        g.get_strings([{
            key: "viewadifferentattempt",
            component: "mod_assign"
        }, {
            key: "view",
            component: "core"
        }, {
            key: "cancel",
            component: "core"
        }]).done(function(b) {
            c.confirm(b[0], i, b[1], b[2], function() {
                var b = a("input:radio[name='select-attemptnumber']:checked").val();
                this._refreshGradingPanel(null, this._lastUserId, "", b)
            }.bind(this))
        }.bind(this)).fail(c.exception)
    };
    k.prototype._addPopoutButtons = function(b) {
        var e = a(b);
        d.render("mod_assign/popout_button", {}).done(function(a) {
            var b = e.find("[data-fieldtype=\"filemanager\"],[data-fieldtype=\"editor\"],[data-fieldtype=\"grading\"]").closest(".fitem");
            b.addClass("has-popout").find("label").parent().append(a);
            e.on("click", "[data-region=\"popout-button\"]", this._togglePopout.bind(this))
        }.bind(this)).fail(c.exception)
    };
    k.prototype._togglePopout = function(b) {
        b.preventDefault();
        var c = a(b.target).closest(".fitem");
        if (c.hasClass("popout")) {
            a(".popout").removeClass("popout")
        } else {
            a(".popout").removeClass("popout");
            c.addClass("popout");
            c.addClass("moodle-has-zindex")
        }
    };
    k.prototype._refreshGradingPanel = function(b, f, g, i) {
        var j = this._region.attr("data-contextid");
        if ("undefined" == typeof g) {
            g = ""
        }
        if ("undefined" == typeof i) {
            i = -1
        }
        if (this._lastUserId == f && this._lastAttemptNumber == i && "" === g) {
            return
        }
        this._lastUserId = f;
        this._lastAttemptNumber = i;
        a(document).trigger("start-loading-user");
        window.M.util.js_pending("mod-assign-loading-user");
        d.render("mod_assign/loading", {}).done(function(b, d) {
            this._niceReplaceNodeContents(this._region, b, d).done(function() {
                if (0 < f) {
                    this._region.show();
                    var b = {
                        userid: f,
                        attemptnumber: i,
                        jsonformdata: JSON.stringify(g)
                    };
                    e.loadFragment("mod_assign", "gradingpanel", j, b).done(function(b, d) {
                        this._niceReplaceNodeContents(this._region, b, d).done(function() {
                            h.saveFormState("[data-region=\"grade-panel\"] .gradeform");
                            a(document).on("editor-content-restored", function() {
                                h.saveFormState("[data-region=\"grade-panel\"] .gradeform")
                            });
                            a("[data-region=\"attempt-chooser\"]").on("click", this._chooseAttempt.bind(this));
                            this._addPopoutButtons("[data-region=\"grade-panel\"] .gradeform");
                            a(document).trigger("finish-loading-user");
                            window.M.util.js_complete("mod-assign-loading-user")
                        }.bind(this)).fail(c.exception)
                    }.bind(this)).fail(c.exception);
                    a("[data-region=\"review-panel\"]").show()
                } else {
                    this._region.hide();
                    a("[data-region=\"review-panel\"]").hide();
                    a(document).trigger("finish-loading-user");
                    window.M.util.js_complete("mod-assign-loading-user")
                }
            }.bind(this))
        }.bind(this)).fail(c.exception)
    };
    k.prototype._getNextUser = function(a, b) {
        this.nextUserId = b.nextUserId;
        this.nextUser = b.nextUser
    };
    k.prototype._handleSaveAndShowNext = function() {
        this._submitForm(null, this.nextUserId, this.nextUser)
    };
    k.prototype.getPanelElement = function() {
        return a("[data-region=\"grade-panel\"]")
    };
    k.prototype.collapsePanel = function() {
        this.getPanelElement().addClass("collapsed")
    };
    k.prototype.expandPanel = function() {
        this.getPanelElement().removeClass("collapsed")
    };
    k.prototype.registerEventListeners = function() {
        var b = a(document),
            c = a(this._region);
        c.on("submit", "form", function(a) {
            a.preventDefault()
        });
        b.on("next-user", this._getNextUser.bind(this));
        b.on("user-changed", this._refreshGradingPanel.bind(this));
        b.on("save-changes", this._submitForm.bind(this));
        b.on("save-and-show-next", this._handleSaveAndShowNext.bind(this));
        b.on("reset", this._resetForm.bind(this));
        b.on("save-form-state", this._saveFormState.bind(this));
        b.on(i.COLLAPSE_GRADE_PANEL, function() {
            this.collapsePanel()
        }.bind(this));
        b.on(i.COLLAPSE_REVIEW_PANEL, function() {
            this.expandPanel()
        }.bind(this));
        b.on(i.EXPAND_GRADE_PANEL, function() {
            this.expandPanel()
        }.bind(this))
    };
    return k
});
define("mod_assign/grading_navigation_user_info", ["jquery", "core/notification", "core/ajax", "core/templates"], function(a, b, c, d) {
    var e = function(b) {
        this._regionSelector = b;
        this._region = a(b);
        this._userCache = {};
        a(document).on("user-changed", this._refreshUserInfo.bind(this))
    };
    e.prototype._regionSelector = null;
    e.prototype._userCache = null;
    e.prototype._region = null;
    e.prototype._lastUserId = 0;
    e.prototype._getAssignmentId = function() {
        return this._region.attr("data-assignmentid")
    };
    e.prototype._refreshUserInfo = function(e, f) {
        var g = a.Deferred();
        this._region.attr("data-userid", f);
        if (this._lastUserId == f) {
            return
        }
        this._lastUserId = f;
        d.render("mod_assign/loading", {}).done(function(e, h) {
            this._region.fadeOut("fast", function() {
                d.replaceNodeContents(this._region, e, h);
                this._region.fadeIn("fast")
            }.bind(this));
            if (0 > f) {
                d.render("mod_assign/grading_navigation_no_users", {}).done(function(a, b) {
                    if (f == this._lastUserId) {
                        this._region.fadeOut("fast", function() {
                            d.replaceNodeContents(this._region, a, b);
                            this._region.fadeIn("fast")
                        }.bind(this))
                    }
                }.bind(this)).fail(b.exception);
                return
            }
            if ("undefined" != typeof this._userCache[f]) {
                g.resolve(this._userCache[f])
            } else {
                var i = this._getAssignmentId(),
                    j = c.call([{
                        methodname: "mod_assign_get_participant",
                        args: {
                            userid: f,
                            assignid: i,
                            embeduser: !0
                        }
                    }]);
                j[0].done(function(a) {
                    if (!a.hasOwnProperty("id")) {
                        g.reject("No users")
                    } else {
                        this._userCache[f] = a;
                        g.resolve(this._userCache[f])
                    }
                }.bind(this)).fail(b.exception)
            }
            g.done(function(c) {
                var e = a("[data-showuseridentity]").data("showuseridentity").split(","),
                    g = [];
                c.courseid = a("[data-region=\"grading-navigation-panel\"]").attr("data-courseid");
                if (c.user) {
                    a.each(e, function(a, b) {
                        if ("undefined" != typeof c.user[b] && "" !== c.user[b]) {
                            c.hasidentity = !0;
                            g.push(c.user[b])
                        }
                    });
                    c.identity = g.join(", ");
                    if (c.user.profileimageurl) {
                        c.profileimageurl = c.user.profileimageurl
                    }
                }
                d.render("mod_assign/grading_navigation_user_summary", c).done(function(a, b) {
                    if (f == this._lastUserId) {
                        this._region.fadeOut("fast", function() {
                            d.replaceNodeContents(this._region, a, b);
                            this._region.fadeIn("fast")
                        }.bind(this))
                    }
                }.bind(this)).fail(b.exception)
            }.bind(this)).fail(function() {
                d.render("mod_assign/grading_navigation_no_users", {}).done(function(a, b) {
                    this._region.fadeOut("fast", function() {
                        d.replaceNodeContents(this._region, a, b);
                        this._region.fadeIn("fast")
                    }.bind(this))
                }.bind(this)).fail(b.exception)
            }.bind(this))
        }.bind(this)).fail(b.exception)
    };
    return e
});
define("mod_assign/grading_actions", ["jquery", "mod_assign/grading_events"], function(a, b) {
    var c = function(b) {
        this._regionSelector = b;
        this._region = a(b);
        this.registerEventListeners()
    };
    c.prototype._regionSelector = null;
    c.prototype._lastUserId = 0;
    c.prototype._region = null;
    c.prototype._showActionsForm = function(a, b) {
        var c = this._region.find("[data-region=grading-actions-form]");
        if (b != this._lastUserId && 0 < b) {
            this._lastUserId = b
        }
        if (0 < b) {
            c.removeClass("hide")
        } else {
            c.addClass("hide")
        }
    };
    c.prototype._trigger = function(b) {
        a(document).trigger(b)
    };
    c.prototype.getReviewPanelElement = function() {
        return a("[data-region=\"review-panel\"]")
    };
    c.prototype.hasReviewPanelElement = function() {
        return 0 < this.getReviewPanelElement().length
    };
    c.prototype.getCollapseGradePanelButton = function() {
        return a("[data-region=\"grade-actions\"] .collapse-grade-panel")
    };
    c.prototype.getCollapseReviewPanelButton = function() {
        return a("[data-region=\"grade-actions\"] .collapse-review-panel")
    };
    c.prototype.getExpandAllPanelsButton = function() {
        return a("[data-region=\"grade-actions\"] .collapse-none")
    };
    c.prototype.resetLayoutButtons = function() {
        this.getCollapseGradePanelButton().removeClass("active");
        this.getCollapseReviewPanelButton().removeClass("active");
        this.getExpandAllPanelsButton().removeClass("active")
    };
    c.prototype.collapseReviewPanel = function() {
        a(document).trigger(b.COLLAPSE_REVIEW_PANEL);
        a(document).trigger(b.EXPAND_GRADE_PANEL);
        this.resetLayoutButtons();
        this.getCollapseReviewPanelButton().addClass("active")
    };
    c.prototype.collapseGradePanel = function() {
        a(document).trigger(b.COLLAPSE_GRADE_PANEL);
        a(document).trigger(b.EXPAND_REVIEW_PANEL);
        this.resetLayoutButtons();
        this.getCollapseGradePanelButton().addClass("active")
    };
    c.prototype.expandAllPanels = function() {
        a(document).trigger(b.EXPAND_GRADE_PANEL);
        a(document).trigger(b.EXPAND_REVIEW_PANEL);
        this.resetLayoutButtons();
        this.getExpandAllPanelsButton().addClass("active")
    };
    c.prototype.registerEventListeners = function() {
        if (this.hasReviewPanelElement()) {
            var b = this.getCollapseReviewPanelButton();
            b.click(function(a) {
                this.collapseReviewPanel();
                a.preventDefault()
            }.bind(this));
            b.keydown(function(a) {
                if (!a.metaKey && !a.shiftKey && !a.altKey && !a.ctrlKey) {
                    if (13 === a.keyCode || 32 === a.keyCode) {
                        this.collapseReviewPanel();
                        a.preventDefault()
                    }
                }
            }.bind(this));
            var c = this.getCollapseGradePanelButton();
            c.click(function(a) {
                this.collapseGradePanel();
                a.preventDefault()
            }.bind(this));
            c.keydown(function(a) {
                if (!a.metaKey && !a.shiftKey && !a.altKey && !a.ctrlKey) {
                    if (13 === a.keyCode || 32 === a.keyCode) {
                        this.collapseGradePanel();
                        a.preventDefault()
                    }
                }
            }.bind(this));
            var d = this.getExpandAllPanelsButton();
            d.click(function(a) {
                this.expandAllPanels();
                a.preventDefault()
            }.bind(this));
            d.keydown(function(a) {
                if (!a.metaKey && !a.shiftKey && !a.altKey && !a.ctrlKey) {
                    if (13 === a.keyCode || 32 === a.keyCode) {
                        this.expandAllPanels();
                        a.preventDefault()
                    }
                }
            }.bind(this))
        }
        a(document).on("user-changed", this._showActionsForm.bind(this));
        this._region.find("[name=\"savechanges\"]").on("click", this._trigger.bind(this, "save-changes"));
        this._region.find("[name=\"saveandshownext\"]").on("click", this._trigger.bind(this, "save-and-show-next"));
        this._region.find("[name=\"resetbutton\"]").on("click", this._trigger.bind(this, "reset"));
        this._region.find("form").on("submit", function(a) {
            a.preventDefault()
        })
    };
    return c
});
define("mod_feedback/edit", ["jquery", "core/ajax", "core/str", "core/notification"], function(a, b, c, d) {
    var e = {
        deleteItem: function deleteItem(b) {
            b.preventDefault();
            var e = a(b.currentTarget).attr("href");
            c.get_strings([{
                key: "confirmation",
                component: "admin"
            }, {
                key: "confirmdeleteitem",
                component: "mod_feedback"
            }, {
                key: "yes",
                component: "moodle"
            }, {
                key: "no",
                component: "moodle"
            }]).then(function(a) {
                d.confirm(a[0], a[1], a[2], a[3], function() {
                    window.location = e
                })
            }).catch()
        },
        setup: function setup() {
            a("body").delegate("[data-action=\"delete\"]", "click", e.deleteItem)
        }
    };
    return {
        setup: e.setup
    }
});
define("mod_forum/discussion_list", ["jquery", "core/templates", "core/str", "core/notification", "mod_forum/subscription_toggle", "mod_forum/selectors", "mod_forum/repository", "core/pubsub", "mod_forum/forum_events"], function(a, b, c, d, e, f, g, h, i) {
    var j = function(e) {
        h.subscribe(i.SUBSCRIPTION_TOGGLED, function(a) {
            var b = a.discussionId,
                c = a.subscriptionState,
                d = e.find(f.discussion.item + "[data-discussionid= " + b + "]"),
                g = d.find(f.discussion.subscribedLabel);
            if (c) {
                d.addClass("subscribed");
                g.removeAttr("hidden")
            } else {
                d.removeClass("subscribed");
                g.attr("hidden", !0)
            }
        });
        e.on("click", f.favourite.toggle, function() {
            var b = a(this),
                c = b.data("forumid"),
                e = b.data("discussionid"),
                f = b.data("targetstate");
            g.setFavouriteDiscussionState(c, e, f).then(function() {
                return location.reload()
            }).catch(d.exception)
        });
        e.on("click", f.pin.toggle, function(b) {
            b.preventDefault();
            var c = a(this),
                e = c.data("forumid"),
                f = c.data("discussionid"),
                h = c.data("targetstate");
            g.setPinDiscussionState(e, f, h).then(function() {
                return location.reload()
            }).catch(d.exception)
        });
        e.on("click", f.lock.toggle, function(h) {
            var e = a(this),
                i = e.data("forumid"),
                j = e.data("discussionid"),
                k = e.data("state");
            g.setDiscussionLockState(i, j, k).then(function(a) {
                var b = e.parents(f.summary.actions).find(f.lock.icon),
                    c = e.parents(f.discussion.item).find(f.discussion.lockedLabel);
                if (a.locked) {
                    b.removeClass("hidden");
                    c.removeAttr("hidden")
                } else {
                    b.addClass("hidden");
                    c.attr("hidden", !0)
                }
                return a
            }).then(function(a) {
                a.forumid = i;
                return b.render("mod_forum/discussion_lock_toggle", a)
            }).then(function(a, c) {
                return b.replaceNode(e, a, c)
            }).then(function() {
                return c.get_string("lockupdated", "forum").done(function(a) {
                    return d.addNotification({
                        message: a,
                        type: "info"
                    })
                })
            }).catch(d.exception);
            h.preventDefault()
        })
    };
    return {
        init: function init(a) {
            e.init(a, !1, function(a, b) {
                var d = a.attr("id"),
                    e = b.userstate.subscribed ? 0 : 1;
                a.data("targetstate", e);
                var f = b.userstate.subscribed ? "unsubscribediscussion" : "subscribediscussion";
                return c.get_string(f, "mod_forum").then(function(b) {
                    a.closest("td").find("label[for=\"" + d + "\"]").text(b);
                    return b
                })
            });
            j(a)
        }
    }
});
define("mod_forum/discussion", ["jquery", "core/custom_interaction_events", "mod_forum/selectors", "core/pubsub", "mod_forum/forum_events", "core/str", "core/notification"], function(a, b, c, d, e, f, g) {
    var h = function(a) {
            var b = a.prev(c.post.post);
            if (b.length) {
                var d = b.find(c.post.post).last();
                if (d.length) {
                    d.focus()
                } else {
                    b.focus()
                }
            } else {
                a.parents(c.post.post).first().focus()
            }
        },
        i = function(b) {
            var d = b.find(c.post.post).first();
            if (d.length) {
                d.focus()
            } else {
                var e = b.next(c.post.post);
                if (e.length) {
                    e.focus()
                } else {
                    for (var f = b.parents(c.post.post).toArray(), g = 0, h; g < f.length; g++) {
                        h = a(f[g]).next(c.post.post);
                        if (h.length) {
                            h.focus();
                            break
                        }
                    }
                }
            }
        },
        j = function(b) {
            var d = a(b).closest(c.post.inpageReplyContent);
            return d.length ? !0 : !1
        },
        k = function(k) {
            var l = k.find(c.post.post);
            l.each(function(b, d) {
                var e = a(d).find(c.post.action),
                    f = e.first();
                e.attr("tabindex", "-1");
                f.attr("tabindex", 0)
            });
            b.define(k, [b.events.up, b.events.down, b.events.next, b.events.previous, b.events.home, b.events.end]);
            k.on(b.events.up, function(b, d) {
                var e = document.activeElement;
                if (j(e)) {
                    return
                }
                var f = a(e).closest(c.post.post);
                if (f.length) {
                    h(f)
                } else {
                    k.find(c.post.post).first().focus()
                }
                d.originalEvent.preventDefault()
            });
            k.on(b.events.down, function(b, d) {
                var e = document.activeElement;
                if (j(e)) {
                    return
                }
                var f = a(e).closest(c.post.post);
                if (f.length) {
                    i(f)
                } else {
                    k.find(c.post.post).first().focus()
                }
                d.originalEvent.preventDefault()
            });
            k.on(b.events.home, function(a, b) {
                if (j(document.activeElement)) {
                    return
                }
                k.find(c.post.post).first().focus();
                b.originalEvent.preventDefault()
            });
            k.on(b.events.end, function(a, b) {
                if (j(document.activeElement)) {
                    return
                }
                k.find(c.post.post).last().focus();
                b.originalEvent.preventDefault()
            });
            k.on(b.events.next, c.post.action, function(b, d) {
                var e = a(b.target),
                    f = e.closest(c.post.actionsContainer),
                    g = f.find(c.post.action),
                    h = e.next(c.post.action);
                g.attr("tabindex", "-1");
                if (!h.length) {
                    h = g.first()
                }
                h.attr("tabindex", 0);
                h.focus();
                d.originalEvent.preventDefault()
            });
            k.on(b.events.previous, c.post.action, function(b, d) {
                var e = a(b.target),
                    f = e.closest(c.post.actionsContainer),
                    g = f.find(c.post.action),
                    h = e.prev(c.post.action);
                g.attr("tabindex", "-1");
                if (!h.length) {
                    h = g.last()
                }
                h.attr("tabindex", 0);
                h.focus();
                d.originalEvent.preventDefault()
            });
            k.on(b.events.home, c.post.action, function(b, d) {
                var e = a(b.target),
                    f = e.closest(c.post.actionsContainer),
                    g = f.find(c.post.action),
                    h = g.first();
                g.attr("tabindex", "-1");
                h.attr("tabindex", 0);
                h.focus();
                b.stopPropagation();
                d.originalEvent.preventDefault()
            });
            k.on(b.events.end, c.post.action, function(b, d) {
                var e = a(b.target),
                    f = e.closest(c.post.actionsContainer),
                    g = f.find(c.post.action),
                    h = g.last();
                g.attr("tabindex", "-1");
                h.attr("tabindex", 0);
                h.focus();
                b.stopPropagation();
                d.originalEvent.preventDefault()
            });
            d.subscribe(e.SUBSCRIPTION_TOGGLED, function(a) {
                var b = a.subscriptionState,
                    c = b ? "discussionsubscribed" : "discussionunsubscribed";
                f.get_string(c, "forum").then(function(a) {
                    return g.addNotification({
                        message: a,
                        type: "info"
                    })
                }).catch(g.exception)
            })
        };
    return {
        init: function init(a) {
            k(a)
        }
    }
});
define("mod_forum/discussion_nested_v2", ["exports", "jquery", "core/auto_rows", "core/custom_interaction_events", "core/notification", "core/templates", "mod_forum/discussion", "mod_forum/inpage_reply", "mod_forum/lock_toggle", "mod_forum/favourite_toggle", "mod_forum/pin_toggle", "mod_forum/selectors", "mod_forum/subscription_toggle"], function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    a.init = void 0;
    b = n(b);
    c = n(c);
    d = n(d);
    e = n(e);
    f = n(f);
    g = n(g);
    h = n(h);
    i = n(i);
    j = n(j);
    k = n(k);
    l = n(l);
    m = n(m);

    function n(a) {
        return a && a.__esModule ? a : {
            default: a
        }
    }

    function o(a) {
        for (var b = 1; b < arguments.length; b++) {
            var c = null != arguments[b] ? arguments[b] : {},
                d = Object.keys(c);
            if ("function" == typeof Object.getOwnPropertySymbols) {
                d = d.concat(Object.getOwnPropertySymbols(c).filter(function(a) {
                    return Object.getOwnPropertyDescriptor(c, a).enumerable
                }))
            }
            d.forEach(function(b) {
                p(a, b, c[b])
            })
        }
        return a
    }

    function p(a, b, c) {
        if (b in a) {
            Object.defineProperty(a, b, {
                value: c,
                enumerable: !0,
                configurable: !0,
                writable: !0
            })
        } else {
            a[b] = c
        }
        return a
    }

    function q(a, b, c, d, e, f, g) {
        try {
            var h = a[f](g),
                i = h.value
        } catch (a) {
            c(a);
            return
        }
        if (h.done) {
            b(i)
        } else {
            Promise.resolve(i).then(d, e)
        }
    }

    function r(a) {
        return function() {
            var b = this,
                c = arguments;
            return new Promise(function(d, e) {
                var h = a.apply(b, c);

                function f(a) {
                    q(h, d, e, f, g, "next", a)
                }

                function g(a) {
                    q(h, d, e, f, g, "throw", a)
                }
                f(void 0)
            })
        }
    }
    var s = function(a) {
            return a.closest(l.default.post.post)
        },
        t = function(a, b) {
            return a.find("".concat(l.default.post.post, "[data-post-id=").concat(b, "]"))
        },
        u = function(a) {
            return a.parents(l.default.post.post)
        },
        v = function(a) {
            return a.children().not(l.default.post.repliesContainer).find(l.default.post.forumCoreContent)
        },
        w = function(a) {
            return a.children().filter(l.default.post.inpageReplyContainer)
        },
        x = function(a) {
            return w(a).find(l.default.post.inpageReplyContent)
        },
        y = function(a) {
            return v(a).find(l.default.post.inpageReplyCreateButton)
        },
        z = function(a) {
            return a.children(l.default.post.repliesVisibilityToggleContainer)
        },
        A = function(a) {
            return a.children(l.default.post.repliesContainer)
        },
        B = function(a) {
            return 0 < A(a).children().length
        },
        C = function(a) {
            return a.find(l.default.post.showReplies)
        },
        D = function(a) {
            return a.find(l.default.post.hideReplies)
        },
        E = function(a) {
            var b = A(a);
            return b.is(":visible")
        },
        F = function(a) {
            var b = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : null,
                c = A(a),
                d = z(a),
                e = C(d),
                f = D(d);
            e.addClass("hidden");
            f.removeClass("hidden");
            c.slideDown({
                duration: 150,
                queue: !1,
                complete: function complete() {
                    if (b) {
                        var a = t(c, b);
                        if (a.length) {
                            a[0].scrollIntoView()
                        }
                    }
                }
            }).css("display", "none").fadeIn(150)
        },
        G = function(a) {
            var b = A(a),
                c = z(a),
                d = C(c),
                e = D(c);
            d.removeClass("hidden");
            e.addClass("hidden");
            b.slideUp({
                duration: 150,
                queue: !1
            }).fadeOut(150)
        },
        H = null,
        I = function(a) {
            return function() {
                var b = r(regeneratorRuntime.mark(function b(c) {
                    var d, g, h, i;
                    return regeneratorRuntime.wrap(function(b) {
                        while (1) {
                            switch (b.prev = b.next) {
                                case 0:
                                    d = w(c);
                                    g = z(c);
                                    h = y(c);
                                    if (K(d)) {
                                        b.next = 14;
                                        break
                                    }
                                    b.prev = 4;
                                    b.next = 7;
                                    return L(a, h, c);
                                case 7:
                                    i = b.sent;
                                    f.default.appendNodeContents(d, i, "");
                                    b.next = 14;
                                    break;
                                case 11:
                                    b.prev = 11;
                                    b.t0 = b["catch"](4);
                                    e.default.exception(b.t0);
                                case 14:
                                    h.fadeOut(150, function() {
                                        var a = x(c);
                                        a.slideDown({
                                            duration: 150,
                                            queue: !1,
                                            complete: function complete() {
                                                a.find("textarea").focus()
                                            }
                                        }).css("display", "none").fadeIn(150);
                                        if (g.length && B(c)) {
                                            g.fadeIn(150);
                                            G(c)
                                        }
                                    });
                                case 15:
                                case "end":
                                    return b.stop();
                            }
                        }
                    }, b, null, [
                        [4, 11]
                    ])
                }));
                return function() {
                    return b.apply(this, arguments)
                }
            }()
        },
        J = function(a) {
            var b = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : null,
                c = x(a),
                d = y(a),
                e = z(a);
            if (e.length && B(a)) {
                e.fadeOut(150);
                if (!E(a)) {
                    F(a, b)
                }
            }
            c.slideUp({
                duration: 150,
                queue: !1,
                complete: function complete() {
                    d.fadeIn(150)
                }
            }).fadeOut(200)
        },
        K = function(a) {
            return 0 < a.find(l.default.post.inpageReplyContent).length
        },
        L = function(a, b, c) {
            var d = v(c),
                e = d.find(l.default.post.forumSubject).text(),
                g = d.find(l.default.post.authorName).text(),
                i = o({
                    postid: c.data("post-id"),
                    reply_url: b.attr("data-href"),
                    sesskey: M.cfg.sesskey,
                    parentsubject: e,
                    parentauthorname: g,
                    canreplyprivately: b.data("can-reply-privately"),
                    postformat: h.default.CONTENT_FORMATS.MOODLE
                }, a);
            return f.default.render("mod_forum/inpage_reply_v2", i)
        },
        N = function(a) {
            z(a).find(l.default.post.replyCount).each(function(a, b) {
                var c = parseInt(b.innerText, 10);
                b.innerText = c + 1
            })
        },
        O = function(a) {
            d.default.define(a, [d.default.events.activate]);
            c.default.init(a);
            a.on(d.default.events.activate, l.default.post.inpageReplyCreateButton, function(a, c) {
                c.originalEvent.preventDefault();
                var d = s((0, b.default)(a.currentTarget));
                H(d)
            });
            a.on(d.default.events.activate, l.default.post.inpageReplyCancelButton, function(a, c) {
                c.originalEvent.preventDefault();
                var d = s((0, b.default)(a.currentTarget));
                J(d)
            });
            a.on(d.default.events.activate, l.default.post.showReplies, function(a, c) {
                c.originalEvent.preventDefault();
                var d = s((0, b.default)(a.target));
                F(d)
            });
            a.on(d.default.events.activate, l.default.post.hideReplies, function(a, c) {
                c.originalEvent.preventDefault();
                var d = s((0, b.default)(a.target));
                G(d)
            });
            a.on(h.default.EVENTS.POST_CREATED, l.default.post.inpageSubmitBtn, function(a, c) {
                var d = (0, b.default)(a.currentTarget),
                    e = s(d),
                    f = u(d);
                J(e, c);
                f.each(function(a, c) {
                    N((0, b.default)(c))
                })
            })
        },
        P = function(a, b) {
            H = I(b);
            O(a);
            g.default.init(a);
            h.default.init(a);
            var c = a.find(l.default.discussion.tools);
            i.default.init(c, !1);
            j.default.init(c, !1, function(a, b) {
                var c = b.userstate.favourited ? 0 : 1;
                return a.data("targetstate", c)
            });
            k.default.init(c, !1, function(a, b) {
                var c = b.pinned ? 0 : 1;
                return a.data("targetstate", c)
            });
            m.default.init(c, !1, function(a, b) {
                var c = b.userstate.subscribed ? 0 : 1;
                a.data("targetstate", c)
            })
        };
    a.init = P
});
define("mod_forum/grades/grader/selectors", ["exports"], function(a) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    a.default = void 0;
    a.default = {
        launch: "[data-grade-action=\"launch\"]",
        gradableItem: "[data-gradable-itemtype]",
        gradableItems: {
            wholeForum: "[data-gradable-itemtype=\"forum\"]"
        },
        expandConversation: "[data-action=\"view-context\"]",
        posts: "[data-region=\"posts\"]",
        viewGrade: "[data-grade-action=\"view\"]"
    };
    return a.default
});
define("mod_forum/grades/expandconversation", ["exports", "./grader/selectors", "mod_forum/repository", "core/notification", "core/templates", "core/modal_factory", "core/modal_events"], function(a, b, c, d, e, f, g) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    a.registerEventListeners = void 0;
    b = i(b);
    c = h(c);
    e = h(e);
    f = i(f);
    g = i(g);

    function h(a) {
        return a && a.__esModule ? a : {
            default: a
        }
    }

    function i(a) {
        if (a && a.__esModule) {
            return a
        } else {
            var b = {};
            if (null != a) {
                for (var c in a) {
                    if (Object.prototype.hasOwnProperty.call(a, c)) {
                        var d = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(a, c) : {};
                        if (d.get || d.set) {
                            Object.defineProperty(b, c, d)
                        } else {
                            b[c] = a[c]
                        }
                    }
                }
            }
            b.default = a;
            return b
        }
    }

    function j(a, b) {
        return m(a) || l(a, b) || k()
    }

    function k() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance")
    }

    function l(a, b) {
        var c = [],
            d = !0,
            e = !1,
            f = void 0;
        try {
            for (var g = a[Symbol.iterator](), h; !(d = (h = g.next()).done); d = !0) {
                c.push(h.value);
                if (b && c.length === b) break
            }
        } catch (a) {
            e = !0;
            f = a
        } finally {
            try {
                if (!d && null != g["return"]) g["return"]()
            } finally {
                if (e) throw f
            }
        }
        return c
    }

    function m(a) {
        if (Array.isArray(a)) return a
    }

    function n(a, b, c, d, e, f, g) {
        try {
            var h = a[f](g),
                i = h.value
        } catch (a) {
            c(a);
            return
        }
        if (h.done) {
            b(i)
        } else {
            Promise.resolve(i).then(d, e)
        }
    }

    function o(a) {
        return function() {
            var b = this,
                c = arguments;
            return new Promise(function(d, e) {
                var h = a.apply(b, c);

                function f(a) {
                    n(h, d, e, f, g, "next", a)
                }

                function g(a) {
                    n(h, d, e, f, g, "throw", a)
                }
                f(void 0)
            })
        }
    }
    var p = function(a) {
            return a.closest(b.expandConversation)
        },
        q = function() {
            var a = o(regeneratorRuntime.mark(function a(b) {
                var d, h, i, k, l, m, n, o, p, q, r, s, t, u, v = arguments;
                return regeneratorRuntime.wrap(function(a) {
                    while (1) {
                        switch (a.prev = a.next) {
                            case 0:
                                d = 1 < v.length && v[1] !== void 0 ? v[1] : {}, h = d.focusOnClose, i = void 0 === h ? null : h;
                                k = b.dataset.postid;
                                l = b.dataset.discussionid;
                                m = b.dataset.name;
                                n = "1" == b.dataset.experimentalDisplayMode;
                                a.next = 7;
                                return Promise.all([c.default.getDiscussionPosts(parseInt(l)), f.create({
                                    title: m,
                                    large: !0,
                                    type: f.types.CANCEL
                                })]);
                            case 7:
                                o = a.sent;
                                p = j(o, 2);
                                q = p[0];
                                r = p[1];
                                s = new Map(q.posts.map(function(a) {
                                    a.readonly = !0;
                                    a.hasreplies = !1;
                                    a.replies = [];
                                    return [a.id, a]
                                }));
                                t = [];
                                q.posts.forEach(function(a) {
                                    if (a.parentid) {
                                        var b = s.get(a.parentid);
                                        if (b) {
                                            a.parentauthorname = b.author.fullname;
                                            b.hasreplies = !0;
                                            b.replies.push(a)
                                        } else {
                                            t.push(a)
                                        }
                                    } else {
                                        t.push(a)
                                    }
                                });
                                r.getRoot().on(g.hidden, function() {
                                    r.destroy();
                                    try {
                                        i.focus()
                                    } catch (a) {}
                                });
                                r.getRoot().on(g.bodyRendered, function() {
                                    var a = r.getRoot()[0].querySelector("#p".concat(k));
                                    if (a) {
                                        a.scrollIntoView({
                                            behavior: "smooth"
                                        })
                                    }
                                });
                                r.show();
                                u = e.default.render("mod_forum/grades/grader/discussion/post_modal", {
                                    posts: t,
                                    experimentaldisplaymode: n
                                });
                                r.setBody(u);
                            case 19:
                            case "end":
                                return a.stop();
                        }
                    }
                }, a)
            }));
            return function() {
                return a.apply(this, arguments)
            }
        }();
    a.registerEventListeners = function registerEventListeners(a) {
        a.addEventListener("click", function(a) {
            var b = p(a.target);
            if (b) {
                a.preventDefault();
                try {
                    q(b, {
                        focusOnClose: a.target
                    })
                } catch (a) {
                    (0, d.exception)(a)
                }
            }
        })
    }
});
define("mod_forum/grades/grader", ["exports", "./grader/selectors", "mod_forum/repository", "core/templates", "../local/grades/grader", "core/notification", "core_course/repository", "core/url"], function(a, b, c, d, e, f, g, h) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    a.registerLaunchListeners = void 0;
    b = j(b);
    c = i(c);
    d = i(d);
    e = j(e);
    f = i(f);
    g = i(g);

    function i(a) {
        return a && a.__esModule ? a : {
            default: a
        }
    }

    function j(a) {
        if (a && a.__esModule) {
            return a
        } else {
            var b = {};
            if (null != a) {
                for (var c in a) {
                    if (Object.prototype.hasOwnProperty.call(a, c)) {
                        var d = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(a, c) : {};
                        if (d.get || d.set) {
                            Object.defineProperty(b, c, d)
                        } else {
                            b[c] = a[c]
                        }
                    }
                }
            }
            b.default = a;
            return b
        }
    }

    function k(a) {
        for (var b = 1; b < arguments.length; b++) {
            var c = null != arguments[b] ? arguments[b] : {},
                d = Object.keys(c);
            if ("function" == typeof Object.getOwnPropertySymbols) {
                d = d.concat(Object.getOwnPropertySymbols(c).filter(function(a) {
                    return Object.getOwnPropertyDescriptor(c, a).enumerable
                }))
            }
            d.forEach(function(b) {
                l(a, b, c[b])
            })
        }
        return a
    }

    function l(a, b, c) {
        if (b in a) {
            Object.defineProperty(a, b, {
                value: c,
                enumerable: !0,
                configurable: !0,
                writable: !0
            })
        } else {
            a[b] = c
        }
        return a
    }

    function m(a, b, c, d, e, f, g) {
        try {
            var h = a[f](g),
                i = h.value
        } catch (a) {
            c(a);
            return
        }
        if (h.done) {
            b(i)
        } else {
            Promise.resolve(i).then(d, e)
        }
    }

    function n(a) {
        return function() {
            var b = this,
                c = arguments;
            return new Promise(function(d, e) {
                var h = a.apply(b, c);

                function f(a) {
                    m(h, d, e, f, g, "next", a)
                }

                function g(a) {
                    m(h, d, e, f, g, "throw", a)
                }
                f(void 0)
            })
        }
    }
    var o = {
            contentRegion: "mod_forum/grades/grader/discussion/posts"
        },
        p = function(a, b) {
            return function(e) {
                return c.default.getDiscussionByUserID(e, a).then(function(a) {
                    a.discussions = a.discussions.map(s);
                    a.experimentaldisplaymode = b ? !0 : !1;
                    return d.default.render(o.contentRegion, a)
                }).catch(f.default.exception)
            }
        },
        q = function(a, b) {
            return n(regeneratorRuntime.mark(function c() {
                var d;
                return regeneratorRuntime.wrap(function(c) {
                    while (1) {
                        switch (c.prev = c.next) {
                            case 0:
                                c.next = 2;
                                return g.default.getUsersFromCourseModuleID(a, b);
                            case 2:
                                d = c.sent;
                                return c.abrupt("return", d.users);
                            case 4:
                            case "end":
                                return c.stop();
                        }
                    }
                }, c)
            }))
        },
        r = function(a) {
            return a.closest(b.gradableItem)
        },
        s = function(a) {
            var b = new Map;
            a.posts.parentposts.forEach(function(a) {
                return b.set(a.id, a)
            });
            var c = a.posts.userposts.map(function(a) {
                a.readonly = !0;
                a.hasreplies = !1;
                a.replies = [];
                var c = a.parentid ? b.get(a.parentid) : null;
                if (c) {
                    c.hasreplies = !1;
                    c.replies = [];
                    c.readonly = !0;
                    a.parentauthorname = c.author.fullname
                }
                return {
                    parent: c,
                    post: a
                }
            });
            return k({}, a, {
                posts: c
            })
        },
        t = function() {
            var a = n(regeneratorRuntime.mark(function a(b) {
                var c, d, f, g, i, j, k = arguments;
                return regeneratorRuntime.wrap(function(a) {
                    while (1) {
                        switch (a.prev = a.next) {
                            case 0:
                                c = 1 < k.length && k[1] !== void 0 ? k[1] : {}, d = c.focusOnClose, f = void 0 === d ? null : d;
                                g = b.dataset;
                                a.next = 4;
                                return e.getGradingPanelFunctions("mod_forum", g.contextid, g.gradingComponent, g.gradingComponentSubtype, g.gradableItemtype);
                            case 4:
                                i = a.sent;
                                j = g.group ? g.group : 0;
                                a.next = 8;
                                return e.launch(q(g.cmid, j), p(g.cmid, "1" == g.experimentalDisplayMode), i.getter, i.setter, {
                                    groupid: g.groupid,
                                    initialUserId: g.initialuserid,
                                    moduleName: g.name,
                                    courseName: g.courseName,
                                    courseUrl: (0, h.relativeUrl)("/course/view.php", {
                                        id: g.courseId
                                    }),
                                    sendStudentNotifications: g.sendStudentNotifications,
                                    focusOnClose: f
                                });
                            case 8:
                            case "end":
                                return a.stop();
                        }
                    }
                }, a)
            }));
            return function() {
                return a.apply(this, arguments)
            }
        }(),
        u = function() {
            var a = n(regeneratorRuntime.mark(function a(b) {
                var c, d, f, g, h, i = arguments;
                return regeneratorRuntime.wrap(function(a) {
                    while (1) {
                        switch (a.prev = a.next) {
                            case 0:
                                c = 1 < i.length && i[1] !== void 0 ? i[1] : {}, d = c.focusOnClose, f = void 0 === d ? null : d;
                                g = b.dataset;
                                a.next = 4;
                                return e.getGradingPanelFunctions("mod_forum", g.contextid, g.gradingComponent, g.gradingComponentSubtype, g.gradableItemtype);
                            case 4:
                                h = a.sent;
                                a.next = 7;
                                return e.view(h.getter, g.userid, g.name, {
                                    focusOnClose: f
                                });
                            case 7:
                            case "end":
                                return a.stop();
                        }
                    }
                }, a)
            }));
            return function() {
                return a.apply(this, arguments)
            }
        }();
    a.registerLaunchListeners = function registerLaunchListeners() {
        document.addEventListener("click", function() {
            var a = n(regeneratorRuntime.mark(function a(c) {
                var d, e;
                return regeneratorRuntime.wrap(function(a) {
                    while (1) {
                        switch (a.prev = a.next) {
                            case 0:
                                if (!c.target.matches(b.launch)) {
                                    a.next = 17;
                                    break
                                }
                                d = r(c.target);
                                if (d) {
                                    a.next = 4;
                                    break
                                }
                                throw Error("Unable to find a gradable item");
                            case 4:
                                if (!d.matches(b.gradableItems.wholeForum)) {
                                    a.next = 16;
                                    break
                                }
                                c.preventDefault();
                                a.prev = 6;
                                a.next = 9;
                                return t(d, {
                                    focusOnClose: c.target
                                });
                            case 9:
                                a.next = 14;
                                break;
                            case 11:
                                a.prev = 11;
                                a.t0 = a["catch"](6);
                                f.default.exception(a.t0);
                            case 14:
                                a.next = 17;
                                break;
                            case 16:
                                throw Error("Unable to find a valid gradable item");
                            case 17:
                                if (!c.target.matches(b.viewGrade)) {
                                    a.next = 35;
                                    break
                                }
                                c.preventDefault();
                                e = r(c.target);
                                if (e) {
                                    a.next = 22;
                                    break
                                }
                                throw Error("Unable to find a gradable item");
                            case 22:
                                if (!e.matches(b.gradableItems.wholeForum)) {
                                    a.next = 34;
                                    break
                                }
                                c.preventDefault();
                                a.prev = 24;
                                a.next = 27;
                                return u(e, {
                                    focusOnClose: c.target
                                });
                            case 27:
                                a.next = 32;
                                break;
                            case 29:
                                a.prev = 29;
                                a.t1 = a["catch"](24);
                                f.default.exception(a.t1);
                            case 32:
                                a.next = 35;
                                break;
                            case 34:
                                throw Error("Unable to find a valid gradable item");
                            case 35:
                            case "end":
                                return a.stop();
                        }
                    }
                }, a, null, [
                    [6, 11],
                    [24, 29]
                ])
            }));
            return function() {
                return a.apply(this, arguments)
            }
        }())
    }
});
define("mod_forum/local/layouts", ["exports", "./layout/fullscreen"], function(a, b) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    Object.defineProperty(a, "createFullScreenWindow", {
        enumerable: !0,
        get: function get() {
            return b.createLayout
        }
    })
});
define("mod_forum/local/grades/local/grader/user_picker/selectors", ["exports"], function(a) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    a.default = void 0;
    a.default = {
        regions: {
            currentUser: "[data-region=\"user_picker/current_user\"]",
            userRegion: "[data-region=\"user_picker/user\"]"
        },
        actions: {
            changeUser: "[data-action=\"change-user\"]"
        }
    };
    return a.default
});
define("mod_forum/local/grades/local/grader/gradingpanel", ["exports"], function(a) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    a.default = void 0;
    var d = "undefined" != typeof window ? window : "undefined" != typeof self ? self : "undefined" != typeof global ? global : {};

    function b(a, b, c, d, e, f, g) {
        try {
            var h = a[f](g),
                i = h.value
        } catch (a) {
            c(a);
            return
        }
        if (h.done) {
            b(i)
        } else {
            Promise.resolve(i).then(d, e)
        }
    }

    function c(a) {
        return function() {
            var c = this,
                d = arguments;
            return new Promise(function(e, f) {
                var i = a.apply(c, d);

                function g(a) {
                    b(i, e, f, g, h, "next", a)
                }

                function h(a) {
                    b(i, e, f, g, h, "throw", a)
                }
                g(void 0)
            })
        }
    }
    var e = function() {
        var a = c(regeneratorRuntime.mark(function a(b, c, e, f, g) {
            var h, i;
            return regeneratorRuntime.wrap(function(a) {
                while (1) {
                    switch (a.prev = a.next) {
                        case 0:
                            h = "".concat(e, "/grades/grader/gradingpanel");
                            if (f) {
                                h += "/".concat(f)
                            }
                            a.next = 4;
                            return "function" == typeof d.define && d.define.amd ? new Promise(function(a, b) {
                                d.require([h], a, b)
                            }) : "undefined" != typeof module && module.exports && "undefined" != typeof require || "undefined" != typeof module && module.component && d.require && "component" === d.require.loader ? Promise.resolve(require((h))) : Promise.resolve(d[h]);
                        case 4:
                            i = a.sent;
                            return a.abrupt("return", {
                                getter: function(a) {
                                    return i.fetchCurrentGrade(b, c, g, a)
                                },
                                setter: function(a, d, e) {
                                    return i.storeCurrentGrade(b, c, g, a, d, e)
                                }
                            });
                        case 6:
                        case "end":
                            return a.stop();
                    }
                }
            }, a)
        }));
        return function() {
            return a.apply(this, arguments)
        }
    }();
    a.default = e;
    return a.default
});
define("mod_forum/local/grades/local/grader/user_picker", ["exports", "core/templates", "./user_picker/selectors", "core/str"], function(a, b, c, d) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    a.default = void 0;
    b = e(b);
    c = e(c);

    function e(a) {
        return a && a.__esModule ? a : {
            default: a
        }
    }

    function f(a) {
        for (var b = 1; b < arguments.length; b++) {
            var c = null != arguments[b] ? arguments[b] : {},
                d = Object.keys(c);
            if ("function" == typeof Object.getOwnPropertySymbols) {
                d = d.concat(Object.getOwnPropertySymbols(c).filter(function(a) {
                    return Object.getOwnPropertyDescriptor(c, a).enumerable
                }))
            }
            d.forEach(function(b) {
                g(a, b, c[b])
            })
        }
        return a
    }

    function g(a, b, c) {
        if (b in a) {
            Object.defineProperty(a, b, {
                value: c,
                enumerable: !0,
                configurable: !0,
                writable: !0
            })
        } else {
            a[b] = c
        }
        return a
    }

    function h(a, b) {
        return l(a) || k(a, b) || j()
    }

    function j() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance")
    }

    function k(a, b) {
        var c = [],
            d = !0,
            e = !1,
            f = void 0;
        try {
            for (var g = a[Symbol.iterator](), h; !(d = (h = g.next()).done); d = !0) {
                c.push(h.value);
                if (b && c.length === b) break
            }
        } catch (a) {
            e = !0;
            f = a
        } finally {
            try {
                if (!d && null != g["return"]) g["return"]()
            } finally {
                if (e) throw f
            }
        }
        return c
    }

    function l(a) {
        if (Array.isArray(a)) return a
    }

    function m(a, b, c, d, e, f, g) {
        try {
            var h = a[f](g),
                i = h.value
        } catch (a) {
            c(a);
            return
        }
        if (h.done) {
            b(i)
        } else {
            Promise.resolve(i).then(d, e)
        }
    }

    function n(a) {
        return function() {
            var b = this,
                c = arguments;
            return new Promise(function(d, e) {
                var h = a.apply(b, c);

                function f(a) {
                    m(h, d, e, f, g, "next", a)
                }

                function g(a) {
                    m(h, d, e, f, g, "throw", a)
                }
                f(void 0)
            })
        }
    }

    function o(a, b) {
        if (!(a instanceof b)) {
            throw new TypeError("Cannot call a class as a function")
        }
    }

    function p(a, b) {
        for (var c = 0, d; c < b.length; c++) {
            d = b[c];
            d.enumerable = d.enumerable || !1;
            d.configurable = !0;
            if ("value" in d) d.writable = !0;
            Object.defineProperty(a, d.key, d)
        }
    }

    function q(a, b, c) {
        if (b) p(a.prototype, b);
        if (c) p(a, c);
        return a
    }
    var r = function() {
            function a(b, c, d) {
                o(this, a);
                this.userList = b;
                this.showUserCallback = c;
                this.preChangeUserCallback = d;
                this.currentUserIndex = 0;
                this.render = this.render.bind(this);
                this.setUserId = this.setUserId.bind(this)
            }
            q(a, [{
                key: "setUserId",
                value: function setUserId(a) {
                    var b = this.userList.findIndex(function(b) {
                        return b.id === parseInt(a)
                    });
                    if (-1 === b) {
                        throw Error("User with id ".concat(a, " not found"))
                    }
                    this.currentUserIndex = b
                }
            }, {
                key: "render",
                value: function() {
                    var a = n(regeneratorRuntime.mark(function a() {
                        var c, d, e;
                        return regeneratorRuntime.wrap(function(a) {
                            while (1) {
                                switch (a.prev = a.next) {
                                    case 0:
                                        this.root = document.createElement("div");
                                        a.next = 3;
                                        return this.renderNavigator();
                                    case 3:
                                        c = a.sent;
                                        d = c.html;
                                        e = c.js;
                                        b.default.replaceNodeContents(this.root, d, e);
                                        a.next = 9;
                                        return this.showUser(this.currentUser);
                                    case 9:
                                        this.registerEventListeners();
                                    case 10:
                                    case "end":
                                        return a.stop();
                                }
                            }
                        }, a, this)
                    }));
                    return function render() {
                        return a.apply(this, arguments)
                    }
                }()
            }, {
                key: "renderNavigator",
                value: function renderNavigator() {
                    return b.default.renderForPromise("".concat("mod_forum/local/grades/local/grader", "/user_picker"), {})
                }
            }, {
                key: "renderUserChange",
                value: function renderUserChange(a) {
                    return b.default.renderForPromise("".concat("mod_forum/local/grades/local/grader", "/user_picker/user"), a)
                }
            }, {
                key: "showUser",
                value: function() {
                    var a = n(regeneratorRuntime.mark(function a(e) {
                        var f, g, i, j, k, l, m;
                        return regeneratorRuntime.wrap(function(a) {
                            while (1) {
                                switch (a.prev = a.next) {
                                    case 0:
                                        a.next = 2;
                                        return Promise.all([this.renderUserChange(e), this.showUserCallback(e)]);
                                    case 2:
                                        f = a.sent;
                                        g = h(f, 1);
                                        i = g[0];
                                        j = i.html;
                                        k = i.js;
                                        l = this.root.querySelector(c.default.regions.userRegion);
                                        b.default.replaceNodeContents(l, j, k);
                                        m = this.root.querySelector(c.default.regions.currentUser);
                                        a.next = 12;
                                        return (0, d.get_string)("nowgradinguser", "mod_forum", e.fullname);
                                    case 12:
                                        m.textContent = a.sent;
                                    case 13:
                                    case "end":
                                        return a.stop();
                                }
                            }
                        }, a, this)
                    }));
                    return function showUser() {
                        return a.apply(this, arguments)
                    }
                }()
            }, {
                key: "registerEventListeners",
                value: function registerEventListeners() {
                    var a = this;
                    this.root.addEventListener("click", function() {
                        var b = n(regeneratorRuntime.mark(function b(d) {
                            var e, f;
                            return regeneratorRuntime.wrap(function(b) {
                                while (1) {
                                    switch (b.prev = b.next) {
                                        case 0:
                                            e = d.target.closest(c.default.actions.changeUser);
                                            if (!e) {
                                                b.next = 9;
                                                break
                                            }
                                            b.next = 4;
                                            return a.preChangeUserCallback(a.currentUser);
                                        case 4:
                                            f = b.sent;
                                            if (f.failed) {
                                                b.next = 9;
                                                break
                                            }
                                            a.updateIndex(parseInt(e.dataset.direction));
                                            b.next = 9;
                                            return a.showUser(a.currentUser);
                                        case 9:
                                        case "end":
                                            return b.stop();
                                    }
                                }
                            }, b)
                        }));
                        return function() {
                            return b.apply(this, arguments)
                        }
                    }())
                }
            }, {
                key: "updateIndex",
                value: function updateIndex(a) {
                    this.currentUserIndex += a;
                    if (0 > this.currentUserIndex) {
                        this.currentUserIndex = this.userList.length - 1
                    } else if (this.currentUserIndex > this.userList.length - 1) {
                        this.currentUserIndex = 0
                    }
                    return this.currentUserIndex
                }
            }, {
                key: "currentUser",
                get: function get() {
                    return f({}, this.userList[this.currentUserIndex], {
                        total: this.userList.length,
                        displayIndex: this.currentUserIndex + 1
                    })
                }
            }, {
                key: "rootNode",
                get: function get() {
                    return this.root
                }
            }]);
            return a
        }(),
        s = function() {
            var a = n(regeneratorRuntime.mark(function a(b, c, d) {
                var e, f, g, h, i = arguments;
                return regeneratorRuntime.wrap(function(a) {
                    while (1) {
                        switch (a.prev = a.next) {
                            case 0:
                                e = 3 < i.length && i[3] !== void 0 ? i[3] : {}, f = e.initialUserId, g = void 0 === f ? null : f;
                                h = new r(b, c, d);
                                if (g) {
                                    h.setUserId(g)
                                }
                                a.next = 5;
                                return h.render();
                            case 5:
                                return a.abrupt("return", h);
                            case 6:
                            case "end":
                                return a.stop();
                        }
                    }
                }, a)
            }));
            return function() {
                return a.apply(this, arguments)
            }
        }();
    a.default = s;
    return a.default
});
define("mod_forum/local/grades/local/grader/selectors", ["exports"], function(a) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    a.default = void 0;
    var b = function(a, b) {
            return "[data-".concat(a, "=\"").concat(b, "\"]")
        },
        c = {
            buttons: {
                toggleFullscreen: b("action", "togglefullscreen"),
                closeGrader: b("action", "closegrader"),
                collapseGradingDrawer: b("action", "collapse-grading-drawer"),
                saveGrade: b("action", "savegrade"),
                selectUser: b("action", "select-user"),
                toggleSearch: b("action", "toggle-search")
            },
            regions: {
                bodyContainer: b("region", "body-container"),
                moduleContainer: b("region", "module_content_container"),
                moduleReplace: b("region", "module_content"),
                pickerRegion: b("region", "user_picker"),
                gradingInfoContainer: b("region", "grading-info-container"),
                gradingPanel: b("region", "grade"),
                gradingPanelContainer: b("region", "grading-panel-container"),
                gradingPanelErrors: b("region", "grade-errors"),
                searchResultsContainer: b("region", "search-results-container"),
                statusContainer: b("region", "status-container"),
                userSearchContainer: b("region", "user-search-container"),
                userSearchInput: b("region", "user-search-input")
            },
            values: {
                sendStudentNotifications: "[data-region=\"notification\"] input[type=\"radio\"]:checked"
            }
        };
    a.default = c;
    return a.default
});
define("mod_forum/local/grades/grader", ["exports", "core/templates", "./local/grader/selectors", "./local/grader/user_picker", "mod_forum/local/layout/fullscreen", "./local/grader/gradingpanel", "core/toast", "core/notification", "core/str", "core_grades/grades/grader/gradingpanel/normalise", "core/loadingicon", "core/utils", "core_grades/grades/grader/gradingpanel/comparison", "core/modal_factory", "core/modal_events", "core/pubsub", "core/drawer_events"], function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    Object.defineProperty(a, "getGradingPanelFunctions", {
        enumerable: !0,
        get: function get() {
            return f.default
        }
    });
    a.view = a.launch = void 0;
    b = s(b);
    c = s(c);
    d = s(d);
    f = s(f);
    n = r(n);
    o = r(o);
    q = s(q);

    function r(a) {
        if (a && a.__esModule) {
            return a
        } else {
            var b = {};
            if (null != a) {
                for (var c in a) {
                    if (Object.prototype.hasOwnProperty.call(a, c)) {
                        var d = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(a, c) : {};
                        if (d.get || d.set) {
                            Object.defineProperty(b, c, d)
                        } else {
                            b[c] = a[c]
                        }
                    }
                }
            }
            b.default = a;
            return b
        }
    }

    function s(a) {
        return a && a.__esModule ? a : {
            default: a
        }
    }

    function t(a) {
        for (var b = 1; b < arguments.length; b++) {
            var c = null != arguments[b] ? arguments[b] : {},
                d = Object.keys(c);
            if ("function" == typeof Object.getOwnPropertySymbols) {
                d = d.concat(Object.getOwnPropertySymbols(c).filter(function(a) {
                    return Object.getOwnPropertyDescriptor(c, a).enumerable
                }))
            }
            d.forEach(function(b) {
                u(a, b, c[b])
            })
        }
        return a
    }

    function u(a, b, c) {
        if (b in a) {
            Object.defineProperty(a, b, {
                value: c,
                enumerable: !0,
                configurable: !0,
                writable: !0
            })
        } else {
            a[b] = c
        }
        return a
    }

    function v(a, b) {
        return y(a) || x(a, b) || w()
    }

    function w() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance")
    }

    function x(a, b) {
        var c = [],
            d = !0,
            e = !1,
            f = void 0;
        try {
            for (var g = a[Symbol.iterator](), h; !(d = (h = g.next()).done); d = !0) {
                c.push(h.value);
                if (b && c.length === b) break
            }
        } catch (a) {
            e = !0;
            f = a
        } finally {
            try {
                if (!d && null != g["return"]) g["return"]()
            } finally {
                if (e) throw f
            }
        }
        return c
    }

    function y(a) {
        if (Array.isArray(a)) return a
    }

    function z(a, b, c, d, e, f, g) {
        try {
            var h = a[f](g),
                i = h.value
        } catch (a) {
            c(a);
            return
        }
        if (h.done) {
            b(i)
        } else {
            Promise.resolve(i).then(d, e)
        }
    }

    function A(a) {
        return function() {
            var b = this,
                c = arguments;
            return new Promise(function(d, e) {
                var h = a.apply(b, c);

                function f(a) {
                    z(h, d, e, f, g, "next", a)
                }

                function g(a) {
                    z(h, d, e, f, g, "throw", a)
                }
                f(void 0)
            })
        }
    }
    var B = {
            grader: {
                app: "mod_forum/local/grades/grader",
                gradingPanel: {
                    error: "mod_forum/local/grades/local/grader/gradingpanel/error"
                },
                searchResults: "mod_forum/local/grades/local/grader/user_picker/user_search",
                status: "mod_forum/local/grades/local/grader/status"
            }
        },
        C = function(a, d) {
            var e = a.querySelector(c.default.regions.pickerRegion);
            b.default.replaceNodeContents(e, d, "")
        },
        D = function(a, b) {
            return [a, b]
        },
        E = function(a, d, e, f) {
            var g = !0;
            return function() {
                var h = A(regeneratorRuntime.mark(function h(i) {
                    var j, l, n, o, p, q, r, s, t, u, w, x, y, z;
                    return regeneratorRuntime.wrap(function(h) {
                        while (1) {
                            switch (h.prev = h.next) {
                                case 0:
                                    j = g ? null : (0, k.addIconToContainerWithPromise)(a);
                                    h.next = 3;
                                    return Promise.all([d(i.id).then(D), e(i.id)]);
                                case 3:
                                    l = h.sent;
                                    n = v(l, 2);
                                    o = v(n[0], 2);
                                    p = o[0];
                                    q = o[1];
                                    r = n[1];
                                    b.default.replaceNodeContents(a.querySelector(c.default.regions.moduleReplace), p, q);
                                    h.next = 12;
                                    return b.default.render(r.templatename, r.grade).then(D);
                                case 12:
                                    s = h.sent;
                                    t = v(s, 2);
                                    u = t[0];
                                    w = t[1];
                                    x = a.querySelector(c.default.regions.gradingPanelContainer);
                                    y = x.querySelector(c.default.regions.gradingPanel);
                                    b.default.replaceNodeContents(y, u, w);
                                    z = y.querySelector("form");
                                    (0, m.fillInitialValues)(z);
                                    z.addEventListener("submit", function(a) {
                                        f(i);
                                        a.preventDefault()
                                    });
                                    x.scrollTop = 0;
                                    g = !1;
                                    if (j) {
                                        j.resolve()
                                    }
                                case 25:
                                case "end":
                                    return h.stop();
                            }
                        }
                    }, h)
                }));
                return function() {
                    return h.apply(this, arguments)
                }
            }()
        },
        F = function(a, b, c) {
            a.classList.add("hidden");
            b.classList.add("hidden");
            c.classList.remove("hidden")
        },
        G = function(a, b, c) {
            a.classList.remove("hidden");
            b.classList.remove("hidden");
            c.classList.add("hidden")
        },
        H = function(a, b, d) {
            b.classList.remove("collapsed");
            a.setAttribute("aria-expanded", "true");
            a.classList.add("expand");
            a.classList.remove("collapse");
            var e = b.parentElement.querySelector(c.default.regions.gradingInfoContainer);
            e.setAttribute("aria-hidden", "true");
            var f = b.parentElement.querySelector(c.default.buttons.collapseGradingDrawer);
            f.setAttribute("aria-hidden", "true");
            f.setAttribute("tabindex", "-1");
            d.focus()
        },
        I = function(a, b, d) {
            b.classList.add("collapsed");
            a.setAttribute("aria-expanded", "false");
            a.classList.add("collapse");
            a.classList.remove("expand");
            a.focus();
            var e = b.parentElement.querySelector(c.default.regions.gradingInfoContainer);
            e.removeAttribute("aria-hidden");
            var f = b.parentElement.querySelector(c.default.buttons.collapseGradingDrawer);
            f.removeAttribute("aria-hidden");
            f.setAttribute("tabindex", "0");
            d.value = ""
        },
        J = function(a, b) {
            if ("" === b) {
                return a
            }
            b = b.toLowerCase();
            return a.filter(function(a) {
                return a.fullname.toLowerCase().includes(b)
            })
        },
        K = function() {
            var a = A(regeneratorRuntime.mark(function a(c, d) {
                var e, f, g;
                return regeneratorRuntime.wrap(function(a) {
                    while (1) {
                        switch (a.prev = a.next) {
                            case 0:
                                a.next = 2;
                                return b.default.renderForPromise(B.grader.searchResults, {
                                    users: d
                                });
                            case 2:
                                e = a.sent;
                                f = e.html;
                                g = e.js;
                                b.default.replaceNodeContents(c, f, g);
                            case 6:
                            case "end":
                                return a.stop();
                        }
                    }
                }, a)
            }));
            return function() {
                return a.apply(this, arguments)
            }
        }(),
        L = function(a, b, d, e) {
            var f = a.getContainer(),
                g = f.querySelector(c.default.buttons.toggleSearch),
                h = f.querySelector(c.default.regions.userSearchContainer),
                i = h.querySelector(c.default.regions.userSearchInput),
                j = f.querySelector(c.default.regions.bodyContainer),
                k = f.querySelector(c.default.regions.pickerRegion),
                m = f.querySelector(c.default.regions.searchResultsContainer);
            f.addEventListener("click", function(f) {
                if (f.target.closest(c.default.buttons.toggleFullscreen)) {
                    f.stopImmediatePropagation();
                    f.preventDefault();
                    a.toggleFullscreen();
                    return
                }
                if (f.target.closest(c.default.buttons.closeGrader)) {
                    f.stopImmediatePropagation();
                    f.preventDefault();
                    a.close();
                    return
                }
                if (f.target.closest(c.default.buttons.saveGrade)) {
                    d(b.currentUser)
                }
                if (f.target.closest(c.default.buttons.toggleSearch)) {
                    if ("true" === g.getAttribute("aria-expanded")) {
                        I(g, h, i);
                        G(j, k, m);
                        m.innerHTML = ""
                    } else {
                        H(g, h, i);
                        F(j, k, m);
                        K(m, e)
                    }
                    return
                }
                var l = f.target.closest(c.default.buttons.selectUser);
                if (l) {
                    var n = l.getAttribute("data-userid"),
                        o = e.find(function(a) {
                            return a.id == n
                        });
                    b.setUserId(n);
                    b.showUser(o);
                    I(g, h, i);
                    G(j, k, m);
                    m.innerHTML = ""
                }
            });
            i.addEventListener("input", (0, l.debounce)(function() {
                var a = J(e, i.value);
                K(m, a)
            }, 300));
            (0, p.subscribe)(q.default.DRAWER_HIDDEN, function(a) {
                var b = a[0];
                if (b.querySelector(c.default.regions.gradingPanel)) {
                    M(f, 0)
                }
            });
            (0, p.subscribe)(q.default.DRAWER_SHOWN, function(a) {
                var b = a[0];
                if (b.querySelector(c.default.regions.gradingPanel)) {
                    M(f, b.offsetWidth)
                }
            })
        },
        M = function(a, b) {
            var d = a.querySelector(c.default.regions.moduleContainer);
            if (d) {
                d.style.marginRight = "".concat(b, "px")
            }
        },
        N = function(a, b) {
            return function() {
                var d = A(regeneratorRuntime.mark(function d(e) {
                    var f;
                    return regeneratorRuntime.wrap(function(d) {
                        while (1) {
                            switch (d.prev = d.next) {
                                case 0:
                                    d.prev = 0;
                                    a.querySelector(c.default.regions.gradingPanelErrors).innerHTML = "";
                                    d.next = 4;
                                    return b(e.id, a.querySelector(c.default.values.sendStudentNotifications).value, a.querySelector(c.default.regions.gradingPanel));
                                case 4:
                                    f = d.sent;
                                    if (!f.success) {
                                        d.next = 11;
                                        break
                                    }
                                    d.t0 = g.add;
                                    d.next = 9;
                                    return (0, i.get_string)("grades:gradesavedfor", "mod_forum", e);
                                case 9:
                                    d.t1 = d.sent;
                                    (0, d.t0)(d.t1);
                                case 11:
                                    if (f.failed) {
                                        O(a, e, f.error)
                                    }
                                    return d.abrupt("return", f);
                                case 15:
                                    d.prev = 15;
                                    d.t2 = d["catch"](0);
                                    O(a, e, d.t2);
                                    return d.abrupt("return", (0, j.failedUpdate)(d.t2));
                                case 19:
                                case "end":
                                    return d.stop();
                            }
                        }
                    }, d, null, [
                        [0, 15]
                    ])
                }));
                return function() {
                    return d.apply(this, arguments)
                }
            }()
        },
        O = function() {
            var a = A(regeneratorRuntime.mark(function a(d, e, f) {
                var h, j, k, l, m, n;
                return regeneratorRuntime.wrap(function(a) {
                    while (1) {
                        switch (a.prev = a.next) {
                            case 0:
                                a.t0 = Promise;
                                a.t1 = b.default.renderForPromise(B.grader.gradingPanel.error, {
                                    error: f
                                });
                                a.next = 4;
                                return (0, i.get_string)("grades:gradesavefailed", "mod_forum", t({
                                    error: f.message
                                }, e));
                            case 4:
                                a.t2 = a.sent;
                                a.t3 = [a.t1, a.t2];
                                a.next = 8;
                                return a.t0.all.call(a.t0, a.t3);
                            case 8:
                                h = a.sent;
                                j = v(h, 2);
                                k = j[0];
                                l = k.html;
                                m = k.js;
                                n = j[1];
                                b.default.replaceNodeContents(d.querySelector(c.default.regions.gradingPanelErrors), l, m);
                                (0, g.add)(n);
                            case 16:
                            case "end":
                                return a.stop();
                        }
                    }
                }, a)
            }));
            return function() {
                return a.apply(this, arguments)
            }
        }(),
        P = function() {
            var a = A(regeneratorRuntime.mark(function a(f, g, j, k) {
                var l, m, n, o, p, q, r, s, t, u, w, x, y, z, A, D, F, G, H, I, J, K, M = arguments;
                return regeneratorRuntime.wrap(function(a) {
                    while (1) {
                        switch (a.prev = a.next) {
                            case 0:
                                l = 4 < M.length && M[4] !== void 0 ? M[4] : {}, m = l.initialUserId, n = void 0 === m ? null : m, o = l.moduleName, p = l.courseName, q = l.courseUrl, r = l.sendStudentNotifications, s = l.focusOnClose, t = void 0 === s ? null : s;
                                a.next = 3;
                                return f();
                            case 3:
                                u = a.sent;
                                if (u.length) {
                                    a.next = 12;
                                    break
                                }
                                a.t0 = h.addNotification;
                                a.next = 8;
                                return (0, i.get_string)("nouserstograde", "core_grades");
                            case 8:
                                a.t1 = a.sent;
                                a.t2 = {
                                    message: a.t1,
                                    type: "error"
                                };
                                (0, a.t0)(a.t2);
                                return a.abrupt("return");
                            case 12:
                                a.next = 14;
                                return Promise.all([(0, e.createLayout)({
                                    fullscreen: !1,
                                    showLoader: !1,
                                    focusOnClose: t
                                }), b.default.renderForPromise(B.grader.app, {
                                    moduleName: o,
                                    courseName: p,
                                    courseUrl: q,
                                    drawer: {
                                        show: !0
                                    },
                                    defaultsendnotifications: r
                                })]);
                            case 14:
                                w = a.sent;
                                x = v(w, 2);
                                y = x[0];
                                z = x[1];
                                A = z.html;
                                D = z.js;
                                F = y.getContainer();
                                G = N(F, k);
                                b.default.replaceNodeContents(F, A, D);
                                H = E(F, g, j, G);
                                I = u.map(function(a) {
                                    return a.id
                                });
                                J = F.querySelector(c.default.regions.statusContainer);
                                a.next = 28;
                                return (0, d.default)(u, function(a) {
                                    var c = {
                                        status: null,
                                        index: I.indexOf(a.id) + 1,
                                        total: u.length
                                    };
                                    b.default.render(B.grader.status, c).then(function(a) {
                                        J.innerHTML = a;
                                        return a
                                    }).catch();
                                    H(a)
                                }, G, {
                                    initialUserId: n
                                });
                            case 28:
                                K = a.sent;
                                L(y, K, G, u);
                                C(F, K.rootNode);
                            case 31:
                            case "end":
                                return a.stop();
                        }
                    }
                }, a)
            }));
            return function() {
                return a.apply(this, arguments)
            }
        }();
    a.launch = P;
    var Q = function() {
        var a = A(regeneratorRuntime.mark(function a(c, d, e) {
            var f, g, h, i, j, l, m, p, q, r, s, t, u, w, x, y, z, A = arguments;
            return regeneratorRuntime.wrap(function(a) {
                while (1) {
                    switch (a.prev = a.next) {
                        case 0:
                            f = 3 < A.length && A[3] !== void 0 ? A[3] : {}, g = f.focusOnClose, h = void 0 === g ? null : g;
                            a.next = 3;
                            return Promise.all([c(d), n.create({
                                title: e,
                                large: !0,
                                type: n.types.CANCEL
                            })]);
                        case 3:
                            i = a.sent;
                            j = v(i, 2);
                            l = j[0];
                            m = j[1];
                            p = (0, k.addIconToContainerWithPromise)(m.getRoot());
                            m.getRoot().on(o.hidden, function() {
                                m.destroy();
                                if (h) {
                                    try {
                                        h.focus()
                                    } catch (a) {}
                                }
                            });
                            m.show();
                            q = document.createElement("div");
                            a.next = 13;
                            return b.default.renderForPromise("mod_forum/local/grades/view_grade", l);
                        case 13:
                            r = a.sent;
                            s = r.html;
                            t = r.js;
                            b.default.replaceNodeContents(q, s, t);
                            a.next = 19;
                            return R(l);
                        case 19:
                            u = a.sent;
                            w = v(u, 2);
                            x = w[0];
                            y = w[1];
                            z = q.querySelector("[data-region=\"grade-template\"]");
                            b.default.replaceNodeContents(z, x, y);
                            m.setBody(q.outerHTML);
                            p.resolve();
                        case 27:
                        case "end":
                            return a.stop();
                    }
                }
            }, a)
        }));
        return function() {
            return a.apply(this, arguments)
        }
    }();
    a.view = Q;
    var R = function() {
        var a = A(regeneratorRuntime.mark(function a(c) {
            var d, e, f;
            return regeneratorRuntime.wrap(function(a) {
                while (1) {
                    switch (a.prev = a.next) {
                        case 0:
                            a.next = 2;
                            return b.default.renderForPromise(c.templatename, c.grade);
                        case 2:
                            d = a.sent;
                            e = d.html;
                            f = d.js;
                            return a.abrupt("return", [e, f]);
                        case 6:
                        case "end":
                            return a.stop();
                    }
                }
            }, a)
        }));
        return function() {
            return a.apply(this, arguments)
        }
    }()
});
define("mod_forum/local/layout/fullscreen", ["exports", "core/loadingicon", "core/toast", "core/local/aria/focuslock"], function(a, b, c, d) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    a.createLayout = void 0;
    d = function(a) {
        if (a && a.__esModule) {
            return a
        } else {
            var b = {};
            if (null != a) {
                for (var c in a) {
                    if (Object.prototype.hasOwnProperty.call(a, c)) {
                        var d = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(a, c) : {};
                        if (d.get || d.set) {
                            Object.defineProperty(b, c, d)
                        } else {
                            b[c] = a[c]
                        }
                    }
                }
            }
            b.default = a;
            return b
        }
    }(d);
    var e = function() {
            var a = 0 < arguments.length && arguments[0] !== void 0 ? arguments[0] : {},
                b = a.fullscreen,
                e = void 0 === b ? !0 : b,
                h = a.showLoader,
                i = void 0 === h ? !1 : h,
                j = a.focusOnClose,
                k = void 0 === j ? null : j,
                l = document.createElement("div");
            document.body.append(l);
            l.classList.add("layout");
            l.classList.add("fullscreen");
            l.setAttribute("role", "application");
            (0, c.addToastRegion)(l);
            g();
            d.trapFocus(l);
            var m = f(l, d, k);
            if (i) {
                m.showLoadingIcon()
            }
            if (e) {
                m.requestFullscreen()
            }
            return m
        },
        f = function(a, c, d) {
            var e = document.createElement("div");
            a.append(e);
            var f = document.createElement("div");
            a.append(f);
            var g = function() {
                    if (a.requestFullscreen) {
                        a.requestFullscreen()
                    } else if (a.msRequestFullscreen) {
                        a.msRequestFullscreen()
                    } else if (a.mozRequestFullscreen) {
                        a.mozRequestFullscreen()
                    } else if (a.webkitRequestFullscreen) {
                        a.webkitRequestFullscreen()
                    } else {
                        a.setTop(0)
                    }
                },
                i = function() {
                    if (document.exitRequestFullScreen) {
                        if (document.fullScreenElement !== a) {
                            return
                        }
                        document.exitRequestFullScreen()
                    } else if (document.msExitFullscreen) {
                        if (document.msFullscreenElement !== a) {
                            return
                        }
                        document.msExitFullscreen()
                    } else if (document.mozCancelFullScreen) {
                        if (document.mozFullScreenElement !== a) {
                            return
                        }
                        document.mozCancelFullScreen()
                    } else if (document.webkitExitFullscreen) {
                        if (document.webkitFullscreenElement !== a) {
                            return
                        }
                        document.webkitExitFullscreen()
                    }
                },
                j = function() {
                    var a = f.lastElementChild;
                    while (a) {
                        f.removeChild(a);
                        a = f.lastElementChild
                    }
                };
            return {
                close: function close() {
                    i();
                    h();
                    c.untrapFocus();
                    a.remove();
                    if (d) {
                        try {
                            d.focus()
                        } catch (a) {}
                    }
                },
                toggleFullscreen: function toggleFullscreen() {
                    if (document.exitRequestFullScreen) {
                        if (document.fullScreenElement === a) {
                            i()
                        } else {
                            g()
                        }
                    } else if (document.msExitFullscreen) {
                        if (document.msFullscreenElement === a) {
                            i()
                        } else {
                            g()
                        }
                    } else if (document.mozCancelFullScreen) {
                        if (document.mozFullScreenElement === a) {
                            i()
                        } else {
                            g()
                        }
                    } else if (document.webkitExitFullscreen) {
                        if (document.webkitFullscreenElement === a) {
                            i()
                        } else {
                            g()
                        }
                    }
                },
                requestFullscreen: g,
                exitFullscreen: i,
                getContainer: function getContainer() {
                    return e
                },
                setContent: function setContent(a) {
                    j();
                    var b = e.lastElementChild;
                    while (b) {
                        e.removeChild(b);
                        b = e.lastElementChild
                    }
                    e.append(a)
                },
                showLoadingIcon: function showLoadingIcon() {
                    (0, b.addIconToContainer)(f)
                },
                hideLoadingIcon: j
            }
        },
        g = function() {
            document.querySelector("body").classList.add("overflow-hidden")
        },
        h = function() {
            document.querySelector("body").classList.remove("overflow-hidden")
        };
    a.createLayout = e
});
define("mod_forum/inpage_reply", ["jquery", "core/templates", "core/notification", "mod_forum/repository", "mod_forum/selectors"], function(a, b, c, d, f) {
    var g = {
            NESTED_V2: 4,
            THREADED: 2,
            NESTED: 3,
            FLAT_OLDEST_FIRST: 1,
            FLAT_NEWEST_FIRST: -1
        },
        h = {
            POST_CREATED: "mod_forum-post-created"
        },
        i = {
            MOODLE: 0
        },
        j = function(a) {
            var b = a.find(f.post.inpageSubmitBtnText),
                c = a.find(f.post.loadingIconContainer),
                d = a.outerWidth();
            a.css("width", d);
            b.addClass("hidden");
            c.removeClass("hidden")
        },
        k = function(a) {
            var b = a.find(f.post.inpageSubmitBtnText),
                c = a.find(f.post.loadingIconContainer);
            a.css("width", "");
            b.removeClass("hidden");
            c.addClass("hidden")
        },
        l = function(l) {
            l.on("click", f.post.inpageSubmitBtn, function(m) {
                m.preventDefault();
                var e = a(m.currentTarget),
                    n = e.parent().find(f.post.inpageReplyButton),
                    o = e.parents(f.post.inpageReplyForm).get(0),
                    p = o.elements.post.value.trim(),
                    q = i.MOODLE,
                    r = o.elements.reply.value,
                    s = o.elements.subject.value,
                    t = e.closest(f.post.post),
                    u = o.elements.privatereply != void 0 ? o.elements.privatereply.checked : !1,
                    v = l.find(f.post.modeSelect),
                    w = v.length ? parseInt(v.get(0).value) : null,
                    x;
                if (p.length) {
                    j(e);
                    n.prop("disabled", !0);
                    d.addDiscussionPost(r, s, p, q, u, !0).then(function(a) {
                        var b = a.messages.reduce(function(a, b) {
                            if ("success" == b.type) {
                                a += "<p>" + b.message + "</p>"
                            }
                            return a
                        }, "");
                        c.addNotification({
                            message: b,
                            type: "success"
                        });
                        return a
                    }).then(function(a) {
                        o.reset();
                        var c = a.post;
                        x = c.id;
                        switch (w) {
                            case g.NESTED_V2:
                                var d = c.capabilities,
                                    e = t.children().not(f.post.repliesContainer).find(f.post.authorName).text();
                                c.parentauthorname = e;
                                c.showactionmenu = d.view || d.controlreadstatus || d.edit || d.split || d.delete || d.export || c.urls.viewparent;
                                return b.render("mod_forum/forum_discussion_nested_v2_post_reply", c);
                            case g.THREADED:
                                return b.render("mod_forum/forum_discussion_threaded_post", c);
                            case g.NESTED:
                                return b.render("mod_forum/forum_discussion_nested_post", c);
                            default:
                                return b.render("mod_forum/forum_discussion_post", c);
                        }
                    }).then(function(a, c) {
                        var d = t.find(f.post.repliesContainer).first();
                        if (w == g.FLAT_NEWEST_FIRST) {
                            return b.prependNodeContents(d, a, c)
                        } else {
                            return b.appendNodeContents(d, a, c)
                        }
                    }).then(function() {
                        e.trigger(h.POST_CREATED, x);
                        k(e);
                        n.prop("disabled", !1);
                        return t.find(f.post.inpageReplyContent).hide()
                    }).then(function() {
                        location.href = "#p" + x
                    }).catch(function(a) {
                        k(e);
                        n.prop("disabled", !1);
                        return c.exception(a)
                    })
                }
            })
        };
    return {
        init: function init(a) {
            l(a)
        },
        CONTENT_FORMATS: i,
        EVENTS: h
    }
});
define("mod_forum/subscription_toggle", ["jquery", "core/templates", "core/notification", "mod_forum/repository", "mod_forum/selectors", "core/pubsub", "mod_forum/forum_events"], function(a, b, c, d, e, f, g) {
    return {
        init: function registerEventListeners(b, h, i) {
            b.on("click", e.subscription.toggle, function(b) {
                var e = a(this),
                    j = e.data("forumid"),
                    k = e.data("discussionid"),
                    l = e.data("targetstate");
                d.setDiscussionSubscriptionState(j, k, l).then(function(a) {
                    f.publish(g.SUBSCRIPTION_TOGGLED, {
                        discussionId: k,
                        subscriptionState: l
                    });
                    return i(e, a)
                }).catch(c.exception);
                if (h) {
                    b.preventDefault()
                }
            })
        }
    }
});
define("mod_forum/lock_toggle", ["jquery", "core/templates", "core/notification", "mod_forum/repository", "mod_forum/selectors"], function(a, b, c, d, e) {
    return {
        init: function registerEventListeners(b, f) {
            b.on("click", e.lock.toggle, function(b) {
                var e = a(this),
                    g = e.data("forumid"),
                    h = e.data("discussionid"),
                    i = e.data("state");
                d.setDiscussionLockState(g, h, i).then(function() {
                    return location.reload()
                }).catch(c.exception);
                if (f) {
                    b.preventDefault()
                }
            })
        }
    }
});
define("mod_forum/posts_list", ["jquery", "core/templates", "core/notification", "core/pending", "mod_forum/selectors", "mod_forum/inpage_reply"], function(a, b, c, d, f, g) {
    var h = function(e) {
        e.on("click", f.post.inpageReplyLink, function(h) {
            h.preventDefault();
            if (window.location.hash) {
                var e = window.location.href.split("#")[0];
                history.pushState({}, document.title, e)
            }
            var i = new d("inpage-reply"),
                j = a(h.currentTarget).parents(f.post.forumCoreContent),
                k = j.find(f.post.forumSubject),
                l = a(h.currentTarget).parents(f.post.forumContent),
                m = {
                    postid: a(l).data("post-id"),
                    reply_url: a(h.currentTarget).attr("href"),
                    sesskey: M.cfg.sesskey,
                    parentsubject: k.data("replySubject"),
                    canreplyprivately: a(h.currentTarget).data("can-reply-privately"),
                    postformat: g.CONTENT_FORMATS.MOODLE
                };
            if (!l.find(f.post.inpageReplyContent).length) {
                b.render("mod_forum/inpage_reply", m).then(function(a, c) {
                    return b.appendNodeContents(j, a, c)
                }).then(function() {
                    return l.find(f.post.inpageReplyContent).slideToggle(300, i.resolve).find("textarea").focus()
                }).fail(c.exception)
            } else {
                var n = l.find(f.post.inpageReplyContent);
                n.slideToggle(300, i.resolve);
                if (n.is(":visible")) {
                    n.find("textarea").focus()
                }
            }
        })
    };
    return {
        init: function init(a) {
            h(a);
            g.init(a)
        }
    }
});
define("mod_forum/form-user-selector", ["jquery", "core/ajax", "core/templates"], function(a, b, c) {
    return {
        processResults: function processResults(b, c) {
            var d = [];
            a.each(c, function(a, b) {
                d.push({
                    value: b.id,
                    label: b._label
                })
            });
            return d
        },
        transport: function transport(d, e, f, g) {
            var h, i = a(d).attr("courseid");
            h = b.call([{
                methodname: "core_enrol_search_users",
                args: {
                    courseid: i,
                    search: e,
                    searchanywhere: !0,
                    page: 0,
                    perpage: 30
                }
            }]);
            h[0].then(function(b) {
                var d = [],
                    e = 0;
                a.each(b, function(a, b) {
                    d.push(c.render("mod_forum/form-user-selector-suggestion", b))
                });
                return a.when.apply(a.when, d).then(function() {
                    var c = arguments;
                    a.each(b, function(a, b) {
                        b._label = c[e];
                        e++
                    });
                    f(b)
                })
            }).fail(g)
        }
    }
});
define("mod_forum/selectors", [], function() {
    return {
        subscription: {
            toggle: "[data-type='subscription-toggle'][data-action='toggle']"
        },
        summary: {
            actions: "[data-container='discussion-summary-actions']"
        },
        post: {
            post: "[data-region=\"post\"]",
            action: "[data-region=\"post-action\"]",
            actionsContainer: "[data-region=\"post-actions-container\"]",
            authorName: "[data-region=\"author-name\"]",
            forumCoreContent: "[data-region-content='forum-post-core']",
            forumContent: "[data-content='forum-post']",
            forumSubject: "[data-region-content='forum-post-core-subject']",
            inpageReplyButton: "button",
            inpageReplyLink: "[data-action='collapsible-link']",
            inpageReplyCancelButton: "[data-action='cancel-inpage-reply']",
            inpageReplyCreateButton: "[data-action='create-inpage-reply']",
            inpageReplyContainer: "[data-region=\"inpage-reply-container\"]",
            inpageReplyContent: "[data-content='inpage-reply-content']",
            inpageReplyForm: "form[data-content='inpage-reply-form']",
            inpageSubmitBtn: "[data-action='forum-inpage-submit']",
            inpageSubmitBtnText: "[data-region='submit-text']",
            loadingIconContainer: "[data-region='loading-icon-container']",
            repliesContainer: "[data-region='replies-container']",
            replyCount: "[data-region=\"reply-count\"]",
            modeSelect: "select[name='mode']",
            showReplies: "[data-action=\"show-replies\"]",
            hideReplies: "[data-action=\"hide-replies\"]",
            repliesVisibilityToggleContainer: "[data-region=\"replies-visibility-toggle-container\"]"
        },
        lock: {
            toggle: "[data-action='toggle'][data-type='lock-toggle']",
            icon: "[data-region='locked-icon']"
        },
        favourite: {
            toggle: "[data-type='favorite-toggle'][data-action='toggle']"
        },
        pin: {
            toggle: "[data-type='pin-toggle'][data-action='toggle']"
        },
        discussion: {
            tools: "[data-container=\"discussion-tools\"]",
            item: "[data-region=\"discussion-list-item\"]",
            lockedLabel: "[data-region='locked-label']",
            subscribedLabel: "[data-region='subscribed-label']",
            timedLabel: "[data-region='timed-label']"
        }
    }
});
define("mod_forum/favourite_toggle", ["jquery", "core/templates", "core/notification", "mod_forum/repository", "mod_forum/selectors", "core/str"], function(a, b, c, d, e, f) {
    return {
        init: function registerEventListeners(b, g, h) {
            b.on("click", e.favourite.toggle, function(b) {
                var e = a(this),
                    i = e.data("forumid"),
                    j = e.data("discussionid"),
                    k = e.data("targetstate");
                d.setFavouriteDiscussionState(i, j, k).then(function(a) {
                    return h(e, a)
                }).then(function() {
                    return f.get_string("favouriteupdated", "forum").done(function(a) {
                        return c.addNotification({
                            message: a,
                            type: "info"
                        })
                    })
                }).catch(c.exception);
                if (g) {
                    b.preventDefault()
                }
            })
        }
    }
});
define("mod_forum/pin_toggle", ["jquery", "core/ajax", "core/str", "core/templates", "core/notification", "mod_forum/repository", "mod_forum/selectors", "core/str"], function(a, b, c, d, f, g, h, i) {
    return {
        init: function registerEventListeners(b, c, d) {
            b.on("click", h.pin.toggle, function(b) {
                var e = a(this),
                    h = e.data("forumid"),
                    j = e.data("discussionid"),
                    k = e.data("targetstate");
                g.setPinDiscussionState(h, j, k).then(function(a) {
                    return d(e, a)
                }).then(function() {
                    return i.get_string("pinupdated", "forum").done(function(a) {
                        return f.addNotification({
                            message: a,
                            type: "info"
                        })
                    })
                }).fail(f.exception);
                if (c) {
                    b.preventDefault()
                }
            })
        }
    }
});
define("mod_forum/forum_events", [], function() {
    return {
        SUBSCRIPTION_TOGGLED: "mod_forum/subscription_toggle:subscriptionToggled"
    }
});
define("mod_forum/repository", ["core/ajax"], function(a) {
    return {
        setDiscussionSubscriptionState: function setDiscussionSubscriptionState(b, c, d) {
            return a.call([{
                methodname: "mod_forum_set_subscription_state",
                args: {
                    forumid: b,
                    discussionid: c,
                    targetstate: d
                }
            }])[0]
        },
        addDiscussionPost: function addDiscussionPost(b, c, d, e, f, g) {
            return a.call([{
                methodname: "mod_forum_add_discussion_post",
                args: {
                    postid: b,
                    message: d,
                    messageformat: e,
                    subject: c,
                    options: [{
                        name: "private",
                        value: f
                    }, {
                        name: "topreferredformat",
                        value: g
                    }]
                }
            }])[0]
        },
        setDiscussionLockState: function setDiscussionLockState(b, c, d) {
            return a.call([{
                methodname: "mod_forum_set_lock_state",
                args: {
                    forumid: b,
                    discussionid: c,
                    targetstate: d
                }
            }])[0]
        },
        setFavouriteDiscussionState: function setFavouriteDiscussionState(b, c, d) {
            return a.call([{
                methodname: "mod_forum_toggle_favourite_state",
                args: {
                    discussionid: c,
                    targetstate: d
                }
            }])[0]
        },
        setPinDiscussionState: function setPinDiscussionState(b, c, d) {
            return a.call([{
                methodname: "mod_forum_set_pin_state",
                args: {
                    discussionid: c,
                    targetstate: d
                }
            }])[0]
        },
        getDiscussionByUserID: function getDiscussionByUserID(b, c) {
            var d = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : "modified",
                e = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : "DESC";
            return a.call([{
                methodname: "mod_forum_get_discussion_posts_by_userid",
                args: {
                    userid: b,
                    cmid: c,
                    sortby: d,
                    sortdirection: e
                }
            }])[0]
        },
        getDiscussionPosts: function getDiscussionPosts(b) {
            var c = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : "created",
                d = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : "ASC";
            return a.call([{
                methodname: "mod_forum_get_discussion_posts",
                args: {
                    discussionid: b,
                    sortby: c,
                    sortdirection: d
                }
            }])[0]
        }
    }
});
define("mod_lti/events", [], function() {
    return {
        NEW_TOOL_TYPE: "lti.tool.type.new",
        START_EXTERNAL_REGISTRATION: "lti.registration.external.start",
        STOP_EXTERNAL_REGISTRATION: "lti.registration.external.stop",
        START_CARTRIDGE_REGISTRATION: "lti.registration.cartridge.start",
        STOP_CARTRIDGE_REGISTRATION: "lti.registration.cartridge.stop",
        REGISTRATION_FEEDBACK: "lti.registration.feedback",
        CAPABILITIES_AGREE: "lti.tool.type.capabilities.agree",
        CAPABILITIES_DECLINE: "lti.tool.type.capabilities.decline"
    }
});
define("mod_lti/form-field", ["jquery"], function(a) {
    var b = function(a, b, c, d) {
        this.name = a;
        this.id = "id_" + this.name;
        this.selector = "#" + this.id;
        this.type = b;
        this.resetIfUndefined = c;
        this.defaultValue = d
    };
    b.TYPES = {
        TEXT: 1,
        SELECT: 2,
        CHECKBOX: 3,
        EDITOR: 4
    };
    b.prototype.setFieldValue = function(c) {
        if (null === c) {
            if (this.resetIfUndefined) {
                c = this.defaultValue
            } else {
                return
            }
        }
        switch (this.type) {
            case b.TYPES.CHECKBOX:
                if (c) {
                    a(this.selector).prop("checked", !0)
                } else {
                    a(this.selector).prop("checked", !1)
                }
                break;
            case b.TYPES.EDITOR:
                if ("undefined" != typeof c.text) {
                    var d = a(this.selector + "editable");
                    if (d.length) {
                        d.html(c.text)
                    } else if ("undefined" != typeof tinyMCE) {
                        tinyMCE.execInstanceCommand(this.id, "mceInsertContent", !1, c.text)
                    }
                    a(this.selector).val(c.text)
                }
                break;
            default:
                a(this.selector).val(c);
                break;
        }
    };
    return b
});
define("mod_lti/tool_card_controller", ["jquery", "core/ajax", "core/notification", "core/templates", "core/modal_factory", "mod_lti/tool_type", "mod_lti/events", "mod_lti/keys", "core/str"], function(a, b, c, d, e, f, g, h, i) {
    var j = {
            DELETE_BUTTON: ".delete",
            NAME_ELEMENT: ".name",
            DESCRIPTION_ELEMENT: ".description",
            CAPABILITIES_CONTAINER: ".capabilities-container",
            ACTIVATE_BUTTON: ".tool-card-footer a.activate"
        },
        k = 2e3,
        l = function(a) {
            return a.find(j.DELETE_BUTTON)
        },
        m = function(a) {
            return a.find(j.NAME_ELEMENT)
        },
        n = function(a) {
            return a.find(j.DESCRIPTION_ELEMENT)
        },
        o = function(a) {
            return a.find(j.ACTIVATE_BUTTON)
        },
        p = function(a) {
            return o(a).length ? !0 : !1
        },
        q = function(a) {
            return a.find(j.CAPABILITIES_CONTAINER)
        },
        r = function(a) {
            return q(a).length ? !0 : !1
        },
        s = function(a) {
            return a.attr("data-type-id")
        },
        t = function(a) {
            a.removeClass("announcement loading success fail capabilities")
        },
        u = function(a) {
            t(a);
            a.addClass("announcement loading")
        },
        v = function(a) {
            a.removeClass("announcement loading")
        },
        w = function(b) {
            var c = a.Deferred();
            t(b);
            b.addClass("announcement success");
            setTimeout(function() {
                b.removeClass("announcement success");
                c.resolve()
            }, k);
            return c
        },
        x = function(b) {
            var c = a.Deferred();
            t(b);
            b.addClass("announcement fail");
            setTimeout(function() {
                b.removeClass("announcement fail");
                c.resolve()
            }, k);
            return c
        },
        y = function(b) {
            var d = a.Deferred(),
                e = s(b);
            u(b);
            if ("" === e) {
                return a.Deferred().resolve()
            }
            i.get_strings([{
                key: "delete",
                component: "mod_lti"
            }, {
                key: "delete_confirmation",
                component: "mod_lti"
            }, {
                key: "delete",
                component: "mod_lti"
            }, {
                key: "cancel",
                component: "core"
            }]).done(function(a) {
                c.confirm(a[0], a[1], a[2], a[3], function() {
                    f.delete(e).done(function() {
                        v(b);
                        w(b).done(function() {
                            b.remove()
                        }).fail(c.exception).always(function() {
                            d.resolve()
                        })
                    }).fail(function(a) {
                        x(b);
                        d.reject(a)
                    })
                }, function() {
                    v(b);
                    d.resolve()
                })
            }).fail(function(a) {
                v(b);
                c.exception(a);
                d.reject(a)
            });
            return d
        },
        z = function(a, b) {
            a.attr("data-val-snapshot", b)
        },
        A = function(a) {
            return a.attr("data-val-snapshot")
        },
        B = function(a) {
            var b = n(a);
            if (b.hasClass("loading")) {
                return
            }
            var c = b.text().trim();
            z(b, c)
        },
        C = function(b) {
            var d = s(b);
            if ("" === d) {
                return a.Deferred().resolve()
            }
            var e = n(b);
            if (e.hasClass("loading")) {
                return a.Deferred().resolve()
            }
            var g = e.text().trim(),
                h = A(e);
            if (h == g) {
                return a.Deferred().resolve()
            }
            e.addClass("loading");
            var i = f.update({
                id: d,
                description: g
            });
            i.done(function(a) {
                e.removeClass("loading");
                e.text(a.description)
            }).fail(c.exception);
            i.fail(function() {
                e.removeClass("loading")
            });
            return i
        },
        D = function(a) {
            var b = m(a);
            if (b.hasClass("loading")) {
                return
            }
            var c = b.text().trim();
            z(b, c)
        },
        E = function(b) {
            var c = s(b);
            if ("" === c) {
                return a.Deferred().resolve()
            }
            var d = m(b);
            if (d.hasClass("loading")) {
                return a.Deferred().resolve()
            }
            var e = d.text().trim(),
                g = A(d);
            if (g == e) {
                return a.Deferred().resolve()
            }
            d.addClass("loading");
            var h = f.update({
                id: c,
                name: e
            });
            h.done(function(a) {
                d.removeClass("loading");
                d.text(a.name)
            });
            h.fail(function() {
                d.removeClass("loading")
            });
            return h
        },
        F = function(b) {
            var c = s(b);
            if ("" === c) {
                return a.Deferred().resolve()
            }
            u(b);
            var e = f.update({
                id: c,
                state: f.constants.state.configured
            });
            e.then(function(a) {
                v(b);
                w(b);
                return a
            }).then(function(a) {
                return d.render("mod_lti/tool_card", a)
            }).then(function(a) {
                var c = a[0],
                    e = a[1];
                d.replaceNode(b, c, e)
            }).catch(function() {
                v(b);
                x(b)
            });
            return e
        },
        G = function(a) {
            a.addClass("announcement capabilities")
        },
        H = function(a) {
            a.removeClass("announcement capabilities")
        },
        I = function(a) {
            if (r(a)) {
                G(a)
            } else {
                F(a)
            }
        },
        J = function(a) {
            var b = l(a);
            b.click(function(b) {
                b.preventDefault();
                y(a)
            });
            b.keypress(function(a) {
                if (!a.metaKey && !a.shiftKey && !a.altKey && !a.ctrlKey) {
                    if (a.keyCode == h.ENTER || a.keyCode == h.SPACE) {
                        a.preventDefault();
                        b.click()
                    }
                }
            });
            var c = n(a);
            c.focus(function(b) {
                b.preventDefault();
                B(a)
            });
            c.blur(function(b) {
                b.preventDefault();
                C(a)
            });
            c.keypress(function(a) {
                if (!a.metaKey && !a.shiftKey && !a.altKey && !a.ctrlKey) {
                    if (a.keyCode == h.ENTER) {
                        a.preventDefault();
                        c.blur()
                    }
                }
            });
            var d = m(a);
            d.focus(function(b) {
                b.preventDefault();
                D(a)
            });
            d.blur(function(b) {
                b.preventDefault();
                E(a)
            });
            d.keypress(function(a) {
                if (!a.metaKey && !a.shiftKey && !a.altKey && !a.ctrlKey) {
                    if (a.keyCode == h.ENTER) {
                        a.preventDefault();
                        d.blur()
                    }
                }
            });
            if (p(a)) {
                var f = o(a);
                f.click(function(b) {
                    b.preventDefault();
                    I(a)
                });
                f.keypress(function(a) {
                    if (!a.metaKey && !a.shiftKey && !a.altKey && !a.ctrlKey) {
                        if (a.keyCode == h.ENTER || a.keyCode == h.SPACE) {
                            a.preventDefault();
                            f.click()
                        }
                    }
                })
            }
            if (r(a)) {
                var i = q(a);
                i.on(g.CAPABILITIES_AGREE, function() {
                    F(a)
                });
                i.on(g.CAPABILITIES_DECLINE, function() {
                    H(a)
                })
            }
        },
        K = function(b) {
            var c = a("#" + b.data("uniqid") + "-" + b.data("deploymentid")),
                f = {
                    uniqid: b.data("uniqid"),
                    platformid: b.data("platformid"),
                    clientid: b.data("clientid"),
                    deploymentid: b.data("deploymentid"),
                    urls: {
                        publickeyset: b.data("publickeyseturl"),
                        accesstoken: b.data("accesstokenurl"),
                        authrequest: b.data("authrequesturl")
                    }
                },
                g = d.render("mod_lti/tool_config_modal_body", f),
                h = "mailto:?subject=" + encodeURIComponent(b.data("mailtosubject")) + "&body=" + encodeURIComponent(b.data("platformidstr")) + ":%20" + encodeURIComponent(b.data("platformid")) + "%0D%0A" + encodeURIComponent(b.data("clientidstr")) + ":%20" + encodeURIComponent(b.data("clientid")) + "%0D%0A" + encodeURIComponent(b.data("deploymentidstr")) + ":%20" + encodeURIComponent(b.data("deploymentid")) + "%0D%0A" + encodeURIComponent(b.data("publickeyseturlstr")) + ":%20" + encodeURIComponent(b.data("publickeyseturl")) + "%0D%0A" + encodeURIComponent(b.data("accesstokenurlstr")) + ":%20" + encodeURIComponent(b.data("accesstokenurl")) + "%0D%0A" + encodeURIComponent(b.data("authrequesturlstr")) + ":%20" + encodeURIComponent(b.data("authrequesturl")) + "%0D%0A";
            f = {
                mailto: h
            };
            var i = d.render("mod_lti/tool_config_modal_footer", f);
            e.create({
                large: !0,
                title: b.data("modaltitle"),
                body: g,
                footer: i
            }, c)
        };
    return {
        init: function init(a) {
            J(a);
            K(a)
        }
    }
});
define("mod_lti/tool_proxy_card_controller", ["jquery", "core/ajax", "core/notification", "core/templates", "mod_lti/tool_proxy", "mod_lti/events", "mod_lti/keys", "core/str"], function(a, b, c, d, e, f, g, h) {
    var i = {
            DELETE_BUTTON: ".delete",
            CAPABILITIES_CONTAINER: ".capabilities-container",
            ACTIVATE_BUTTON: ".tool-card-footer a.activate"
        },
        j = 2e3,
        k = function(a) {
            return a.find(i.DELETE_BUTTON)
        },
        l = function(a) {
            return a.find(i.ACTIVATE_BUTTON)
        },
        m = function(a) {
            return a.attr("data-proxy-id")
        },
        n = function(a) {
            a.removeClass("announcement loading success fail capabilities")
        },
        o = function(a) {
            n(a);
            a.addClass("announcement loading")
        },
        p = function(a) {
            a.removeClass("announcement loading")
        },
        q = function(b) {
            var c = a.Deferred();
            n(b);
            b.addClass("announcement success");
            setTimeout(function() {
                b.removeClass("announcement success");
                c.resolve()
            }, j);
            return c
        },
        r = function(b) {
            var c = a.Deferred();
            n(b);
            b.addClass("announcement fail");
            setTimeout(function() {
                b.removeClass("announcement fail");
                c.resolve()
            }, j);
            return c
        },
        s = function(b) {
            var d = a.Deferred(),
                f = m(b);
            o(b);
            if ("" === f) {
                return a.Deferred().resolve()
            }
            h.get_strings([{
                key: "delete",
                component: "mod_lti"
            }, {
                key: "delete_confirmation",
                component: "mod_lti"
            }, {
                key: "delete",
                component: "mod_lti"
            }, {
                key: "cancel",
                component: "core"
            }]).done(function(a) {
                c.confirm(a[0], a[1], a[2], a[3], function() {
                    e.delete(f).done(function() {
                        p(b);
                        q(b).done(function() {
                            b.remove();
                            d.resolve()
                        }).fail(c.exception)
                    }).fail(function(a) {
                        r(b);
                        d.reject(a)
                    })
                }, function() {
                    p(b);
                    d.resolve()
                })
            }).fail(function(a) {
                p(b);
                c.exception(a);
                d.reject(a)
            });
            return d
        },
        t = function(b) {
            var c = {
                proxyid: m(b)
            };
            a(document).trigger(f.START_EXTERNAL_REGISTRATION, c)
        },
        u = function(a) {
            var b = k(a);
            b.click(function(b) {
                b.preventDefault();
                s(a)
            });
            b.keypress(function(a) {
                if (!a.metaKey && !a.shiftKey && !a.altKey && !a.ctrlKey) {
                    if (a.keyCode == g.ENTER || a.keyCode == g.SPACE) {
                        a.preventDefault();
                        b.click()
                    }
                }
            });
            var c = l(a);
            c.click(function(b) {
                b.preventDefault();
                t(a)
            });
            c.keypress(function(a) {
                if (!a.metaKey && !a.shiftKey && !a.altKey && !a.ctrlKey) {
                    if (a.keyCode == g.ENTER || a.keyCode == g.SPACE) {
                        a.preventDefault();
                        c.click()
                    }
                }
            })
        };
    return {
        init: function init(a) {
            u(a)
        }
    }
});
define("mod_lti/external_registration_return", [], function() {
    return {
        init: function init(a, b, c, d) {
            if (window.parent) {
                window.parent.triggerExternalRegistrationComplete({
                    message: a,
                    error: b,
                    id: c,
                    status: d
                })
            }
        }
    }
});
define("mod_lti/tool_type", ["core/ajax", "core/notification"], function(a, b) {
    return {
        query: function query(c) {
            var d = a.call([{
                methodname: "mod_lti_get_tool_types",
                args: c || {}
            }])[0];
            d.fail(b.exception);
            return d
        },
        create: function create(b) {
            var c = a.call([{
                methodname: "mod_lti_create_tool_type",
                args: b
            }])[0];
            return c
        },
        update: function update(c) {
            var d = a.call([{
                methodname: "mod_lti_update_tool_type",
                args: c
            }])[0];
            d.fail(b.exception);
            return d
        },
        delete: function _delete(c) {
            var d = a.call([{
                methodname: "mod_lti_delete_tool_type",
                args: {
                    id: c
                }
            }])[0];
            d.fail(b.exception);
            return d
        },
        getFromToolProxyId: function getFromToolProxyId(a) {
            return this.query({
                toolproxyid: a
            })
        },
        isCartridge: function isCartridge(b) {
            var c = a.call([{
                methodname: "mod_lti_is_cartridge",
                args: {
                    url: b
                }
            }])[0];
            return c
        },
        constants: {
            state: {
                configured: 1,
                pending: 2,
                rejected: 3
            }
        }
    }
});
define("mod_lti/external_registration", ["jquery", "core/ajax", "core/notification", "core/templates", "mod_lti/events", "mod_lti/tool_proxy", "mod_lti/tool_type", "mod_lti/keys", "core/str"], function(a, b, c, d, e, f, g, h, i) {
    var j = {
            EXTERNAL_REGISTRATION_CONTAINER: "#external-registration-page-container",
            EXTERNAL_REGISTRATION_TEMPLATE_CONTAINER: "#external-registration-template-container",
            EXTERNAL_REGISTRATION_CANCEL_BUTTON: "#cancel-external-registration",
            TOOL_TYPE_CAPABILITIES_CONTAINER: "#tool-type-capabilities-container",
            TOOL_TYPE_CAPABILITIES_TEMPLATE_CONTAINER: "#tool-type-capabilities-template-container",
            CAPABILITIES_AGREE_CONTAINER: ".capabilities-container"
        },
        k = function() {
            return a(j.EXTERNAL_REGISTRATION_CANCEL_BUTTON)
        },
        l = function() {
            return a(j.EXTERNAL_REGISTRATION_CONTAINER)
        },
        m = function() {
            return a(j.EXTERNAL_REGISTRATION_TEMPLATE_CONTAINER)
        },
        n = function() {
            return a(j.TOOL_TYPE_CAPABILITIES_CONTAINER)
        },
        o = function() {
            return a(j.TOOL_TYPE_CAPABILITIES_TEMPLATE_CONTAINER)
        },
        p = function() {
            n().addClass("loading")
        },
        q = function() {
            n().removeClass("loading")
        },
        r = function() {
            k().addClass("loading")
        },
        s = function() {
            k().removeClass("loading")
        },
        t = function() {
            n().addClass("hidden")
        },
        u = function() {
            n().removeClass("hidden")
        },
        v = function() {
            l().addClass("hidden")
        },
        w = function() {
            l().removeClass("hidden")
        },
        x = function(a) {
            var b = k();
            b.attr("data-tool-proxy-id", a)
        },
        y = function() {
            var a = k();
            return a.attr("data-tool-proxy-id")
        },
        z = function() {
            var a = k();
            a.removeAttr("data-tool-proxy-id")
        },
        A = function() {
            return y() ? !0 : !1
        },
        B = function() {
            var a = k();
            return a.attr("data-tool-proxy-new") && A()
        },
        C = function() {
            var a = k();
            return a.attr("data-tool-proxy-new", "new")
        },
        D = function() {
            var a = k();
            return a.removeAttr("data-tool-proxy-new")
        },
        E = function(a) {
            return b.call([{
                methodname: "mod_lti_get_tool_proxy_registration_request",
                args: {
                    id: a
                }
            }])[0]
        },
        F = function() {
            r();
            var b = a.Deferred();
            if (B()) {
                var d = y();
                f.delete(d).done(function() {
                    b.resolve()
                }).fail(function(a) {
                    b.reject(a)
                })
            } else {
                b.resolve()
            }
            b.done(function() {
                L();
                s()
            }).fail(function(b) {
                c.exception(b);
                L();
                s();
                i.get_string("failedtodeletetoolproxy", "mod_lti").done(function(b) {
                    a(document).trigger(e.REGISTRATION_FEEDBACK, {
                        message: b,
                        error: !0
                    })
                }).fail(c.exception)
            });
            return b
        },
        G = function(a) {
            var b = d.render("mod_lti/tool_proxy_registration_form", a);
            b.done(function(a, b) {
                var c = m();
                c.append(a);
                d.runTemplateJS(b);
                c.find("form").submit();
                w()
            }).fail(c.exception);
            return b
        },
        H = function(a) {
            return g.update({
                id: a.id,
                state: g.constants.state.configured
            })
        },
        I = function(b) {
            var f = a.Deferred();
            d.render("mod_lti/tool_type_capabilities_agree", b).done(function(a, c) {
                var g = o();
                v();
                u();
                d.replaceNodeContents(g, a, c);
                var h = g.find(j.CAPABILITIES_AGREE_CONTAINER);
                h.on(e.CAPABILITIES_AGREE, function() {
                    p();
                    H(b).always(function() {
                        q();
                        g.empty();
                        f.resolve()
                    })
                });
                h.on(e.CAPABILITIES_DECLINE, function() {
                    g.empty();
                    f.resolve()
                })
            }).fail(f.reject);
            f.done(function() {
                t()
            }).fail(c.exception);
            return f
        },
        J = function(b) {
            var c = a.Deferred();
            if (!b || "" === b) {
                c.resolve()
            } else {
                f.create({
                    regurl: b
                }).done(function(a) {
                    C();
                    c = K(a.id)
                }).fail(function(b) {
                    F();
                    var d = {
                        message: b.message,
                        error: !0
                    };
                    a(document).trigger(e.REGISTRATION_FEEDBACK, d);
                    c.reject(b)
                })
            }
            return c
        },
        K = function(b) {
            var c = a.Deferred();
            x(b);
            E(b).done(function(a) {
                G(a).done(function() {
                    c.resolve()
                }).fail(c.fail)
            }).fail(c.fail);
            return c
        },
        L = function() {
            if (A()) {
                z()
            }
            D(!1);
            v();
            var b = m();
            b.empty();
            a(document).trigger(e.STOP_EXTERNAL_REGISTRATION)
        },
        M = function() {
            a(document).on(e.START_EXTERNAL_REGISTRATION, function(a, b) {
                if (!b) {
                    return
                }
                if (b.url) {
                    J(b.url)
                }
                if (b.proxyid) {
                    K(b.proxyid)
                }
            });
            var b = k();
            b.click(function(a) {
                a.preventDefault();
                F()
            });
            b.keypress(function(a) {
                if (!a.metaKey && !a.shiftKey && !a.altKey && !a.ctrlKey) {
                    if (a.keyCode == h.ENTER || a.keyCode == h.SPACE) {
                        a.preventDefault();
                        F()
                    }
                }
            });
            window.triggerExternalRegistrationComplete = function(b) {
                var d = a.Deferred(),
                    f = {
                        message: "",
                        error: !1
                    };
                if ("success" == b.status) {
                    i.get_string("successfullycreatedtooltype", "mod_lti").done(function(a) {
                        f.message = a
                    }).fail(c.exception);
                    d.done(function() {
                        L();
                        a(document).trigger(e.REGISTRATION_FEEDBACK, f);
                        a(document).trigger(e.NEW_TOOL_TYPE)
                    }).fail(c.exception);
                    if (B()) {
                        var h = y();
                        g.getFromToolProxyId(h).done(function(a) {
                            if (a && a.length) {
                                var b = a[0];
                                if (b.hascapabilitygroups) {
                                    I(b).always(function() {
                                        d.resolve()
                                    })
                                } else {
                                    d.resolve()
                                }
                            } else {
                                d.resolve()
                            }
                        }).fail(function() {
                            d.resolve()
                        })
                    }
                } else {
                    f.message = b.error;
                    f.error = !0;
                    d.done(function() {
                        F().always(function() {
                            a(document).trigger(e.REGISTRATION_FEEDBACK, f)
                        })
                    }).fail(c.exception);
                    d.resolve()
                }
                return d
            }
        };
    return {
        init: function init() {
            M()
        }
    }
});
define("mod_lti/contentitem_return", ["jquery"], function(a) {
    return {
        init: function init(b) {
            a(window).ready(function() {
                if (window != top) {
                    parent.processContentItemReturnData(b)
                } else {
                    window.processContentItemReturnData(b)
                }
            })
        }
    }
});
define("mod_lti/cartridge_registration_form", ["jquery", "core/ajax", "core/notification", "mod_lti/tool_type", "mod_lti/events", "mod_lti/keys", "core/str"], function(a, b, c, d, f, g, h) {
    var i = {
            CARTRIDGE_URL: "#cartridge-url",
            CONSUMER_KEY: "#registration-key",
            SHARED_SECRET: "#registration-secret",
            REGISTRATION_FORM: "#cartridge-registration-form",
            REGISTRATION_SUBMIT_BUTTON: "#cartridge-registration-submit",
            REGISTRATION_CANCEL_BUTTON: "#cartridge-registration-cancel"
        },
        j = function() {
            return a(i.REGISTRATION_FORM).attr("data-cartridge-url")
        },
        k = function() {
            return a(i.REGISTRATION_SUBMIT_BUTTON)
        },
        l = function() {
            return a(i.REGISTRATION_CANCEL_BUTTON)
        },
        m = function() {
            return a(i.CONSUMER_KEY).val()
        },
        n = function() {
            return a(i.SHARED_SECRET).val()
        },
        o = function() {
            k().addClass("loading")
        },
        p = function() {
            k().removeClass("loading")
        },
        q = function() {
            return k().hasClass("loading")
        },
        r = function() {
            if (q()) {
                return !1
            }
            var b = j();
            if ("" === b) {
                return !1
            }
            o();
            var e = m(),
                g = n(),
                i = d.create({
                    cartridgeurl: b,
                    key: e,
                    secret: g
                });
            i.done(function() {
                h.get_string("successfullycreatedtooltype", "mod_lti").done(function(b) {
                    a(document).trigger(f.NEW_TOOL_TYPE);
                    a(document).trigger(f.STOP_CARTRIDGE_REGISTRATION);
                    a(document).trigger(f.REGISTRATION_FEEDBACK, {
                        message: b
                    })
                }).fail(c.exception)
            }).fail(function() {
                h.get_string("failedtocreatetooltype", "mod_lti").done(function(b) {
                    a(document).trigger(f.NEW_TOOL_TYPE);
                    a(document).trigger(f.STOP_CARTRIDGE_REGISTRATION);
                    a(document).trigger(f.REGISTRATION_FEEDBACK, {
                        message: b,
                        error: !0
                    })
                }).fail(c.exception)
            }).always(function() {
                p()
            });
            return i
        },
        s = function() {
            var b = a(i.REGISTRATION_FORM);
            b.submit(function(a) {
                a.preventDefault();
                r()
            });
            var c = l();
            c.click(function(b) {
                b.preventDefault();
                a(document).trigger(f.STOP_CARTRIDGE_REGISTRATION)
            });
            c.keypress(function(a) {
                if (!a.metaKey && !a.shiftKey && !a.altKey && !a.ctrlKey) {
                    if (a.keyCode == g.ENTER || a.keyCode == g.SPACE) {
                        a.preventDefault();
                        c.click()
                    }
                }
            })
        };
    return {
        init: function init() {
            s()
        }
    }
});
define("mod_lti/contentitem", ["jquery", "core/notification", "core/str", "core/templates", "mod_lti/form-field", "core/modal_factory", "core/modal_events"], function(a, b, c, d, e, f, g) {
    var h, i, j = [new e("name", e.TYPES.TEXT, !1, ""), new e("introeditor", e.TYPES.EDITOR, !1, ""), new e("toolurl", e.TYPES.TEXT, !0, ""), new e("securetoolurl", e.TYPES.TEXT, !0, ""), new e("instructorchoiceacceptgrades", e.TYPES.CHECKBOX, !0, !0), new e("instructorchoicesendname", e.TYPES.CHECKBOX, !0, !0), new e("instructorchoicesendemailaddr", e.TYPES.CHECKBOX, !0, !0), new e("instructorcustomparameters", e.TYPES.TEXT, !0, ""), new e("icon", e.TYPES.TEXT, !0, ""), new e("secureicon", e.TYPES.TEXT, !0, ""), new e("launchcontainer", e.TYPES.SELECT, !0, 0), new e("grade_modgrade_point", e.TYPES.TEXT, !1, ""), new e("cmidnumber", e.TYPES.TEXT, !0, "")];
    window.processContentItemReturnData = function(a) {
        if (h) {
            h.hide()
        }
        for (var b in j) {
            var c = j[b],
                d = null;
            if ("undefined" != typeof a[c.name]) {
                d = a[c.name]
            }
            c.setFieldValue(d)
        }
        if (i) {
            i()
        }
    };
    return {
        init: function init(a, e, j) {
            i = j;
            var k = d.render("mod_lti/contentitem", {
                url: a,
                postData: e
            });
            if (h) {
                h.setBody(k);
                h.show();
                return
            }
            c.get_string("selectcontent", "lti").then(function(a) {
                return f.create({
                    title: a,
                    body: k,
                    large: !0
                })
            }).then(function(a) {
                h = a;
                a.getRoot().on(g.hidden, function() {
                    a.setBody("");
                    b.fetchNotifications()
                });
                a.show()
            }).catch(b.exception)
        }
    }
});
define("mod_lti/tool_configure_controller", ["jquery", "core/ajax", "core/notification", "core/templates", "mod_lti/events", "mod_lti/keys", "mod_lti/tool_type", "mod_lti/tool_proxy", "core/str"], function(a, b, c, d, e, f, g, h, i) {
    var j = {
            EXTERNAL_REGISTRATION_CONTAINER: "#external-registration-container",
            EXTERNAL_REGISTRATION_PAGE_CONTAINER: "#external-registration-page-container",
            CARTRIDGE_REGISTRATION_CONTAINER: "#cartridge-registration-container",
            CARTRIDGE_REGISTRATION_FORM: "#cartridge-registration-form",
            ADD_TOOL_FORM: "#add-tool-form",
            TOOL_LIST_CONTAINER: "#tool-list-container",
            TOOL_CREATE_BUTTON: "#tool-create-button",
            REGISTRATION_CHOICE_CONTAINER: "#registration-choice-container",
            TOOL_URL: "#tool-url"
        },
        k = function() {
            return a(j.TOOL_CREATE_BUTTON)
        },
        l = function() {
            return a(j.TOOL_LIST_CONTAINER)
        },
        m = function() {
            return a(j.EXTERNAL_REGISTRATION_CONTAINER)
        },
        n = function() {
            return a(j.CARTRIDGE_REGISTRATION_CONTAINER)
        },
        o = function() {
            return a(j.REGISTRATION_CHOICE_CONTAINER)
        },
        p = function() {
            return a(j.TOOL_URL).val()
        },
        q = function() {
            m().addClass("hidden")
        },
        r = function() {
            n().addClass("hidden")
        },
        s = function() {
            o().addClass("hidden")
        },
        t = function() {
            r();
            s();
            m().removeClass("hidden");
            w(m())
        },
        u = function(a) {
            q();
            s();
            var b = n();
            b.find("input").val("");
            b.removeClass("hidden");
            b.find(j.CARTRIDGE_REGISTRATION_FORM).attr("data-cartridge-url", a);
            w(b)
        },
        v = function() {
            q();
            r();
            o().removeClass("hidden");
            w(o())
        },
        w = function(a) {
            var b = a.children().detach();
            b.appendTo(a)
        },
        x = function() {
            l().addClass("hidden")
        },
        y = function() {
            l().removeClass("hidden")
        },
        z = function(a) {
            var b = a.error ? "error" : "success";
            c.addNotification({
                message: a.message,
                type: b
            })
        },
        A = function(a) {
            a.addClass("loading")
        },
        B = function(a) {
            a.removeClass("loading")
        },
        C = function() {
            var b = a.Deferred(),
                e = l();
            A(e);
            a.when(g.query(), h.query({
                orphanedonly: !0
            })).done(function(a, c) {
                d.render("mod_lti/tool_list", {
                    tools: a,
                    proxies: c
                }).done(function(a, c) {
                    e.empty();
                    e.append(a);
                    d.runTemplateJS(c);
                    b.resolve()
                }).fail(b.reject)
            }).fail(b.reject);
            b.fail(c.exception).always(function() {
                B(e)
            })
        },
        D = function() {
            var b = a.trim(p());
            if ("" === b) {
                return a.Deferred().resolve()
            }
            var d = k();
            A(d);
            var f = g.isCartridge(b);
            f.always(function() {
                B(d)
            });
            f.done(function(c) {
                if (c.iscartridge) {
                    a(j.TOOL_URL).val("");
                    a(document).trigger(e.START_CARTRIDGE_REGISTRATION, b)
                } else {
                    a(document).trigger(e.START_EXTERNAL_REGISTRATION, {
                        url: b
                    })
                }
            });
            f.fail(function() {
                i.get_string("errorbadurl", "mod_lti").done(function(b) {
                    a(document).trigger(e.REGISTRATION_FEEDBACK, {
                        message: b,
                        error: !0
                    })
                }).fail(c.exception)
            });
            return f
        },
        E = function() {
            a(document).on(e.NEW_TOOL_TYPE, function() {
                C()
            });
            a(document).on(e.START_EXTERNAL_REGISTRATION, function() {
                t();
                a(j.TOOL_URL).val("");
                x()
            });
            a(document).on(e.STOP_EXTERNAL_REGISTRATION, function() {
                y();
                v()
            });
            a(document).on(e.START_CARTRIDGE_REGISTRATION, function(a, b) {
                u(b)
            });
            a(document).on(e.STOP_CARTRIDGE_REGISTRATION, function() {
                n().find(j.CARTRIDGE_REGISTRATION_FORM).removeAttr("data-cartridge-url");
                v()
            });
            a(document).on(e.REGISTRATION_FEEDBACK, function(a, b) {
                z(b)
            });
            var b = a(j.ADD_TOOL_FORM);
            b.submit(function(a) {
                a.preventDefault();
                D()
            })
        };
    return {
        init: function init() {
            E();
            C()
        }
    }
});
define("mod_lti/keys", [], function() {
    return {
        ENTER: 13,
        SPACE: 32
    }
});
define("mod_lti/tool_proxy", ["core/ajax", "core/notification"], function(a, b) {
    return {
        query: function query(c) {
            var d = a.call([{
                methodname: "mod_lti_get_tool_proxies",
                args: c || {}
            }])[0];
            d.fail(b.exception);
            return d
        },
        delete: function _delete(c) {
            var d = a.call([{
                methodname: "mod_lti_delete_tool_proxy",
                args: {
                    id: c
                }
            }])[0];
            d.fail(b.exception);
            return d
        },
        create: function create(b) {
            var c = a.call([{
                methodname: "mod_lti_create_tool_proxy",
                args: b
            }])[0];
            return c
        }
    }
});
define("mod_quiz/modal_add_random_question", ["jquery", "core/yui", "core/notification", "core/modal", "core/modal_events", "core/modal_registry", "core/fragment", "core/templates"], function(a, b, c, d, e, f, g, h) {
    var i = !1,
        j = {
            EXISTING_CATEGORY_CONTAINER: "[data-region=\"existing-category-container\"]",
            EXISTING_CATEGORY_FORM_ELEMENT: "#id_existingcategoryheader",
            NEW_CATEGORY_CONTAINER: "[data-region=\"new-category-container\"]",
            NEW_CATEGORY_FORM_ELEMENT: "#id_newcategoryheader",
            TAB_CONTENT: "[data-region=\"tab-content\"]",
            ADD_ON_PAGE_FORM_ELEMENT: "[name=\"addonpage\"]",
            SUBMIT_BUTTON_ELEMENT: "input[type=\"submit\"]",
            CANCEL_BUTTON_ELEMENT: "input[type=\"submit\"][name=\"cancel\"]",
            FORM_HEADER: "legend",
            BUTTON_CONTAINER: ".fitem"
        },
        k = function(a) {
            d.call(this, a);
            this.contextId = null;
            this.addOnPageId = null;
            this.category = null;
            this.returnUrl = null;
            this.cmid = null;
            this.loadedForm = !1
        };
    k.TYPE = "mod_quiz-quiz-add-random-question";
    k.prototype = Object.create(d.prototype);
    k.prototype.constructor = k;
    k.prototype.setContextId = function(a) {
        this.contextId = a
    };
    k.prototype.getContextId = function() {
        return this.contextId
    };
    k.prototype.setAddOnPageId = function(a) {
        this.addOnPageId = a;
        this.getBody().find(j.ADD_ON_PAGE_FORM_ELEMENT).val(a)
    };
    k.prototype.getAddOnPageId = function() {
        return this.addOnPageId
    };
    k.prototype.setCategory = function(a) {
        this.category = a
    };
    k.prototype.getCategory = function() {
        return this.category
    };
    k.prototype.setReturnUrl = function(a) {
        this.returnUrl = a
    };
    k.prototype.getReturnUrl = function() {
        return this.returnUrl
    };
    k.prototype.setCMID = function(a) {
        this.cmid = a
    };
    k.prototype.getCMID = function() {
        return this.cmid
    };
    k.prototype.moveFormElementIntoTab = function(b, c) {
        var d = b.find(j.SUBMIT_BUTTON_ELEMENT),
            e = a("<div class=\"modal-footer mt-1\" data-region=\"footer\"></div>");
        b.find(j.FORM_HEADER).addClass("hidden");
        b.wrap(c);
        d.closest(j.BUTTON_CONTAINER).remove();
        d.appendTo(e);
        e.appendTo(b)
    };
    k.prototype.moveTabsIntoTabContent = function(a) {
        var b = this.getBody().find(j.TAB_CONTENT).empty();
        a.find("[role=\"tabpanel\"]").wrapAll(b)
    };
    k.prototype.moveCancelButtonToTabs = function(a) {
        var b = a.find(j.CANCEL_BUTTON_ELEMENT).addClass("ml-1"),
            c = a.find("[data-region=\"footer\"]");
        b.closest(j.BUTTON_CONTAINER).remove();
        b.clone().appendTo(c)
    };
    k.prototype.loadForm = function() {
        return g.loadFragment("mod_quiz", "add_random_question_form", this.getContextId(), {
            addonpage: this.getAddOnPageId(),
            cat: this.getCategory(),
            returnurl: this.getReturnUrl(),
            cmid: this.getCMID()
        }).then(function(b, c) {
            var d = a(b),
                e = d.find(j.EXISTING_CATEGORY_FORM_ELEMENT),
                f = this.getBody().find(j.EXISTING_CATEGORY_CONTAINER),
                g = d.find(j.NEW_CATEGORY_FORM_ELEMENT),
                i = this.getBody().find(j.NEW_CATEGORY_CONTAINER);
            this.moveFormElementIntoTab(e, f);
            this.moveFormElementIntoTab(g, i);
            this.moveTabsIntoTabContent(d);
            this.moveCancelButtonToTabs(d);
            h.replaceNode(this.getBody().find(j.TAB_CONTENT), d, c)
        }.bind(this)).then(function() {
            b.use("moodle-core-formchangechecker", function() {
                M.core_formchangechecker.reset_form_dirty_state()
            })
        }).fail(c.exception)
    };
    k.prototype.show = function() {
        d.prototype.show.call(this);
        if (!this.loadedForm) {
            this.loadForm();
            this.loadedForm = !0
        }
    };
    if (!i) {
        f.register(k.TYPE, k, "mod_quiz/modal_add_random_question");
        i = !0
    }
    return k
});
define("mod_quiz/preflightcheck", ["jquery", "core/yui"], function(a, b) {
    var c = {
        confirmDialogue: null,
        init: function init(a, d, e, f) {
            var g = a;
            b.use("moodle-core-notification", function() {
                if (b.one(e)) {
                    c.confirmDialogue = new M.core.dialogue({
                        headerContent: d,
                        bodyContent: b.one(e),
                        draggable: !0,
                        visible: !1,
                        center: !0,
                        modal: !0,
                        width: null,
                        extraClasses: ["mod_quiz_preflight_popup"]
                    });
                    b.one(a).on("click", c.displayDialogue);
                    b.one("#id_cancel").on("click", c.hideDialogue);
                    g = c.confirmDialogue.get("boundingBox").one("[name=\"submitbutton\"]")
                }
                if (f) {
                    b.one(g).on("click", c.launchQuizPopup, c, f)
                }
            })
        },
        displayDialogue: function displayDialogue(a) {
            if (a) {
                a.halt()
            }
            c.confirmDialogue.show()
        },
        hideDialogue: function hideDialogue(a) {
            if (a) {
                a.halt()
            }
            c.confirmDialogue.hide(a)
        },
        launchQuizPopup: function launchQuizPopup(a, c) {
            a.halt();
            b.use("moodle-core-formchangechecker", "io-form", function() {
                M.core_formchangechecker.reset_form_dirty_state();
                var d = a.target.ancestor("form");
                window.openpopup(a, {
                    url: d.get("action") + "?" + b.IO.stringify(d).replace(/\bcancel=/, "x="),
                    windowname: "quizpopup",
                    options: c,
                    fullscreen: !0
                })
            })
        }
    };
    return c
});
define("mod_quiz/add_random_question", ["mod_quiz/add_question_modal_launcher", "mod_quiz/modal_add_random_question"], function(a, b) {
    return {
        init: function init(c, d, e, f) {
            a.init(b.TYPE, ".menu [data-action=\"addarandomquestion\"]", c, function(a, b) {
                b.setCategory(d);
                b.setReturnUrl(e);
                b.setCMID(f)
            })
        }
    }
});
define("mod_quiz/random_question_form_preview", ["jquery", "core/ajax", "core/str", "core/notification", "core/templates", "core/paged_content_factory"], function(a, b, c, d, e, f) {
    var g = "mod_quiz/random_question_form_preview_question_list",
        h = {
            LOADING_ICON_CONTAINER: "[data-region=\"overlay-icon-container\"]",
            QUESTION_COUNT_CONTAINER: "[data-region=\"question-count-container\"]",
            QUESTION_LIST_CONTAINER: "[data-region=\"question-list-container\"]"
        },
        i = function(a) {
            a.find(h.LOADING_ICON_CONTAINER).removeClass("hidden")
        },
        j = function(a) {
            a.find(h.LOADING_ICON_CONTAINER).addClass("hidden")
        },
        k = function(a, b) {
            c.get_string("questionsmatchingfilter", "mod_quiz", b).then(function(b) {
                a.find(h.QUESTION_COUNT_CONTAINER).html(b)
            }).fail(d.exception)
        },
        l = function(a, c, d, e, f, g) {
            return b.call([{
                methodname: "core_question_get_random_question_summaries",
                args: {
                    categoryid: a,
                    includesubcategories: c,
                    tagids: d,
                    contextid: e,
                    limit: f,
                    offset: g
                }
            }])[0]
        },
        m = function(a, b, c, h, i, j) {
            return f.createFromAjax(i, 5, function(f) {
                return f.map(function(f) {
                    var i = f.limit,
                        k = f.offset;
                    if (0 == k) {
                        return e.render(g, {
                            questions: j
                        })
                    } else {
                        return l(a, b, c, h, i, k).then(function(a) {
                            var b = a.questions;
                            return e.render(g, {
                                questions: b
                            })
                        }).fail(d.exception)
                    }
                })
            })
        };
    return {
        reload: function reload(b, c, f, g, n) {
            i(b);
            return l(c, f, g, n, 5, 0).then(function(a) {
                var c = a.totalcount;
                k(b, c);
                return a
            }).then(function(b) {
                var d = b.totalcount,
                    e = b.questions;
                if (e.length) {
                    return m(c, f, g, n, d, e)
                } else {
                    return a.Deferred().resolve("", "")
                }
            }).then(function(a, c) {
                var d = b.find(h.QUESTION_LIST_CONTAINER);
                e.replaceNodeContents(d, a, c)
            }).always(function() {
                j(b)
            }).fail(d.exception)
        },
        showLoadingIcon: i,
        hideLoadingIcon: j
    }
});
define("mod_quiz/add_question_modal_launcher", ["jquery", "core/notification", "core/modal_factory"], function(a, b, c) {
    return {
        init: function init(d, e, f, g) {
            var h = a("body");
            return c.create({
                type: d,
                large: !0,
                preShowCallback: function preShowCallback(b, c) {
                    b = a(b);
                    c.setContextId(f);
                    c.setAddOnPageId(b.attr("data-addonpage"));
                    c.setTitle(b.attr("data-header"));
                    if (g) {
                        g(b, c)
                    }
                }
            }, [h, e]).fail(b.exception)
        }
    }
});
define("mod_quiz/modal_quiz_question_bank", ["jquery", "core/yui", "core/notification", "core/modal", "core/modal_events", "core/modal_registry", "core/fragment"], function(a, b, c, d, e, f, g) {
    var h = !1,
        i = {
            ADD_TO_QUIZ_CONTAINER: "td.addtoquizaction",
            ANCHOR: "a[href]",
            PREVIEW_CONTAINER: "td.previewaction",
            SEARCH_OPTIONS: "#advancedsearch",
            DISPLAY_OPTIONS: "#displayoptions",
            ADD_QUESTIONS_FORM: "form[action=\"edit.php\"]"
        },
        j = function(a) {
            d.call(this, a);
            this.contextId = null;
            this.addOnPageId = null
        };
    j.TYPE = "mod_quiz-quiz-question-bank";
    j.prototype = Object.create(d.prototype);
    j.prototype.constructor = j;
    j.prototype.setContextId = function(a) {
        this.contextId = a
    };
    j.prototype.getContextId = function() {
        return this.contextId
    };
    j.prototype.setAddOnPageId = function(a) {
        this.addOnPageId = a
    };
    j.prototype.getAddOnPageId = function() {
        return this.addOnPageId
    };
    j.prototype.show = function() {
        this.reloadBodyContent(window.location.search);
        return d.prototype.show.call(this)
    };
    j.prototype.reloadBodyContent = function(a) {
        var b = g.loadFragment("mod_quiz", "quiz_question_bank", this.getContextId(), {
            querystring: a
        }).fail(c.exception);
        this.setBody(b)
    };
    j.prototype.handleAddToQuizEvent = function(a, b) {
        var c = b.attr("href") + "&addonpage=" + this.getAddOnPageId();
        b.attr("href", c)
    };
    j.prototype.handlePreviewContainerEvent = function(a, b) {
        window.openpopup(a, {
            url: b.attr("href"),
            name: "questionpreview",
            options: ["height=600", "width=800", "top=0", "left=0", "menubar=0", "location=0", "scrollbars", "resizable", "toolbar", "status", "directories=0", "fullscreen=0", "dependent"].join(",")
        })
    };
    j.prototype.handleDisplayOptionFormEvent = function(b) {
        b.stopPropagation();
        b.preventDefault();
        var c = a(b.target).closest(i.DISPLAY_OPTIONS),
            d = "?" + c.serialize();
        this.reloadBodyContent(d)
    };
    j.prototype.registerDisplayOptionListeners = function() {
        this.getModal().on("change", i.DISPLAY_OPTIONS, function(b) {
            var c = a(b.target);
            if (c.attr("aria-autocomplete")) {
                return
            }
            this.handleDisplayOptionFormEvent(b)
        }.bind(this));
        this.getModal().on("submit", i.DISPLAY_OPTIONS, function(a) {
            this.handleDisplayOptionFormEvent(a)
        }.bind(this))
    };
    j.prototype.registerEventListeners = function() {
        d.prototype.registerEventListeners.call(this);
        this.registerDisplayOptionListeners();
        this.getModal().on("submit", i.ADD_QUESTIONS_FORM, function(b) {
            var c = a(b.currentTarget);
            a("<input />").attr("type", "hidden").attr("name", "addonpage").attr("value", this.getAddOnPageId()).appendTo(c)
        }.bind(this));
        this.getModal().on("click", i.ANCHOR, function(b) {
            var c = a(b.currentTarget);
            if (c.closest(i.ADD_TO_QUIZ_CONTAINER).length) {
                this.handleAddToQuizEvent(b, c);
                return
            }
            if (c.closest(i.PREVIEW_CONTAINER).length) {
                this.handlePreviewContainerEvent(b, c);
                return
            }
            if (c.closest(i.SEARCH_OPTIONS).length) {
                return
            }
            b.preventDefault();
            this.reloadBodyContent(c.prop("search"))
        }.bind(this));
        this.getRoot().on(e.bodyRendered, function() {
            b.use("moodle-core-formchangechecker", function() {
                M.core_formchangechecker.reset_form_dirty_state()
            })
        })
    };
    if (!h) {
        f.register(j.TYPE, j, "core/modal");
        h = !0
    }
    return j
});
define("mod_quiz/add_random_form", ["jquery", "mod_quiz/random_question_form_preview"], function(a, b) {
    var c = {
            PREVIEW_CONTAINER: "[data-region=\"random-question-preview-container\"]",
            CATEGORY_FORM_ELEMENT: "[name=\"category\"]",
            SUBCATEGORY_FORM_ELEMENT: "[name=\"includesubcategories\"]",
            TAG_IDS_FORM_ELEMENT: "[name=\"fromtags[]\"]"
        },
        d = function(a) {
            return a.find(c.CATEGORY_FORM_ELEMENT).val()
        },
        e = function(a) {
            var b = d(a),
                c = b.split(",");
            return c[0]
        },
        f = function(a, b) {
            var c = d(a);
            return -1 < b.indexOf(c)
        },
        g = function(a, b) {
            if (f(a, b)) {
                return !0
            } else {
                return a.find(c.SUBCATEGORY_FORM_ELEMENT).is(":checked")
            }
        },
        h = function(a) {
            var b = a.find(c.TAG_IDS_FORM_ELEMENT).val();
            return b.map(function(a) {
                var b = a.split(",");
                return b[0]
            })
        },
        i = function(a, d, f) {
            var i = a.find(c.PREVIEW_CONTAINER);
            b.reload(i, e(a), g(a, f), h(a), d)
        },
        j = function(a) {
            if (0 < a.closest(c.CATEGORY_FORM_ELEMENT).length) {
                return !0
            }
            if (0 < a.closest(c.SUBCATEGORY_FORM_ELEMENT).length) {
                return !0
            }
            if (0 < a.closest(c.TAG_IDS_FORM_ELEMENT).length) {
                return !0
            }
            return !1
        },
        k = function(c, d, e) {
            var f = null;
            c.on("change", function(g) {
                if (!j(a(g.target))) {
                    return
                }
                b.showLoadingIcon(c);
                if (f) {
                    clearTimeout(f)
                }
                f = setTimeout(function() {
                    i(c, d, e)
                }, 2000)
            })
        };
    return {
        init: function init(b, c, d, e) {
            if (!0 == e) {
                var f = a("#" + b);
                i(f, c, d, e);
                k(f, c, d, e)
            }
        }
    }
});
define("mod_quiz/repaginate", ["jquery", "core/modal_factory"], function(a, b) {
    var c = {
        REPAGINATECOMMAND: "#repaginatecommand",
        HEADER: "header",
        BODY: "form"
    };
    return {
        init: function init() {
            b.create({
                title: a(c.REPAGINATECOMMAND).data(c.HEADER),
                body: a(c.REPAGINATECOMMAND).data(c.BODY),
                large: !1
            }, a(c.REPAGINATECOMMAND))
        }
    }
});
define("mod_quiz/quizquestionbank", ["mod_quiz/add_question_modal_launcher", "mod_quiz/modal_quiz_question_bank"], function(a, b) {
    return {
        init: function init(c) {
            a.init(b.TYPE, ".menu [data-action=\"questionbank\"]", c)
        }
    }
});
define("mod_survey/validation", ["jquery", "core/str", "core/modal_factory", "core/notification"], function(a, b, c, d) {
    return {
        ensureRadiosChosen: function ensureRadiosChosen(e) {
            var f = b.get_strings([{
                    key: "error",
                    component: "moodle"
                }, {
                    key: "questionsnotanswered",
                    component: "survey"
                }]).then(function(a) {
                    return c.create({
                        type: c.types.CANCEL,
                        title: a[0],
                        body: a[1]
                    })
                }).catch(d.exception),
                g = a("#" + e);
            g.submit(function(a) {
                if (0 !== g.find("input:radio[data-survey-default=\"true\"]:checked").length) {
                    a.preventDefault();
                    return f.then(function(a) {
                        a.show();
                        return !1
                    })
                }
                return !0
            })
        }
    }
});
define("mod_workshop/modform", ["jquery"], function(a) {
    var e = {
        text: {
            available: null,
            required: null,
            requiredHidden: null
        },
        file: {
            available: null,
            required: null,
            requiredHidden: null
        }
    };

    function b(a, b) {
        if (!a.available.prop("checked")) {
            a.required.prop("disabled", !0);
            a.required.prop("checked", !1);
            if (b.available.prop("checked")) {
                b.required.prop("disabled", !0);
                b.required.prop("checked", !0);
                b.requiredHidden.val(1)
            }
        }
    }

    function c(a) {
        a.required.prop("disabled", !1);
        a.required.prop("checked", !1);
        a.requiredHidden.val(0)
    }

    function d() {
        b(e.file, e.text);
        b(e.text, e.file);
        if (e.text.available.prop("checked") && e.file.available.prop("checked")) {
            c(e.text);
            c(e.file)
        }
    }
    return {
        init: function init() {
            e.text.available = a("#id_submissiontypetextavailable");
            e.text.required = a("#id_submissiontypetextrequired");
            e.text.requiredHidden = a("input[name=\"submissiontypetextrequired\"][type=\"hidden\"]");
            e.file.available = a("#id_submissiontypefileavailable");
            e.file.required = a("#id_submissiontypefilerequired");
            e.file.requiredHidden = a("input[name=\"submissiontypefilerequired\"][type=\"hidden\"]");
            e.text.available.on("change", d);
            e.file.available.on("change", d);
            d()
        }
    }
});
define("mod_workshop/workshopview", ["jquery"], function(a) {
    function b(b) {
        var c = 0;
        b.height("auto");
        b.each(function() {
            var b = a(this).height();
            if (b > c) {
                c = b
            }
        });
        b.height(c)
    }
    return {
        init: function init() {
            var c = a(".path-mod-workshop .userplan dt"),
                d = a(".path-mod-workshop .userplan dd");
            b(c);
            b(d);
            a(window).on("resize", function() {
                b(c);
                b(d)
            })
        }
    }
});
define("enrol_manual/quickenrolment", ["core/templates", "jquery", "core/str", "core/config", "core/notification", "core/modal_factory", "core/modal_events", "core/fragment", "core/pending"], function(a, b, c, d, f, g, h, i, j) {
    var k = {
            COHORTSELECT: "#id_cohortlist",
            TRIGGERBUTTONS: ".enrolusersbutton.enrol_manual_plugin [type='submit']",
            UNWANTEDHIDDENFIELDS: ":input[value='_qf__force_multiselect_submission']"
        },
        l = function(a) {
            this.contextid = a.contextid;
            this.initModal()
        };
    l.prototype.courseid = 0;
    l.prototype.modal = null;
    l.prototype.initModal = function() {
        var a = b(k.TRIGGERBUTTONS);
        b.when(c.get_strings([{
            key: "enroluserscohorts",
            component: "enrol_manual"
        }, {
            key: "enrolusers",
            component: "enrol_manual"
        }]), g.create({
            type: g.types.SAVE_CANCEL,
            large: !0
        }, a)).then(function(a, c) {
            this.modal = c;
            c.setTitle(a[1]);
            c.setSaveButtonText(a[1]);
            c.getRoot().on(h.save, this.submitForm.bind(this));
            c.getRoot().on("submit", "form", this.submitFormAjax.bind(this));
            c.getRoot().on(h.hidden, function() {
                c.setBody("")
            });
            c.getRoot().on(h.shown, function() {
                var d = new j("enrol_manual/quickenrolment:initModal:shown"),
                    e = this.getBody();
                e.then(function(d) {
                    var e = b(d).find(k.COHORTSELECT).length ? 0 : 1;
                    c.setSaveButtonText(a[e])
                }).then(d.resolve).catch(f.exception);
                c.setBody(e)
            }.bind(this))
        }.bind(this)).fail(f.exception)
    };
    l.prototype.submitForm = function(a) {
        a.preventDefault();
        this.modal.getRoot().find("form").submit()
    };
    l.prototype.submitFormAjax = function(a) {
        a.preventDefault();
        var c = this.modal.getRoot().find("form"),
            e = c.find(k.UNWANTEDHIDDENFIELDS);
        e.each(function() {
            b(this).remove()
        });
        var g = c.serialize();
        this.modal.hide();
        var h = d.wwwroot + "/enrol/manual/ajax.php?" + g;
        b.ajax(h, {
            type: "GET",
            processData: !1,
            contentType: "application/json"
        }).then(function(a) {
            if (a.error) {
                f.addNotification({
                    message: a.error,
                    type: "error"
                })
            } else {
                if ("undefined" != typeof window.M.core_formchangechecker) {
                    window.M.core_formchangechecker.reset_form_dirty_state()
                }
                window.location.reload()
            }
        }).fail(f.exception)
    };
    l.prototype.getBody = function() {
        return i.loadFragment("enrol_manual", "enrol_users_form", this.contextid, {}).fail(f.exception)
    };
    l.prototype.getFooter = function() {
        return a.render("enrol_manual/enrol_modal_footer", {})
    };
    return {
        init: function init(a) {
            new l(a)
        }
    }
});
define("enrol_manual/form-potential-user-selector", ["jquery", "core/ajax", "core/templates", "core/str"], function(a, b, c, d) {
    return {
        processResults: function processResults(b, c) {
            var d = [];
            if (a.isArray(c)) {
                a.each(c, function(a, b) {
                    d.push({
                        value: b.id,
                        label: b._label
                    })
                });
                return d
            } else {
                return c
            }
        },
        transport: function transport(e, f, g, h) {
            var i, j = a(e).attr("courseid"),
                k = a(e).attr("userfields").split(",");
            if ("undefined" == typeof j) {
                j = "1"
            }
            var l = a(e).attr("enrolid");
            if ("undefined" == typeof l) {
                l = ""
            }
            var m = parseInt(a(e).attr("perpage"));
            if (isNaN(m)) {
                m = 100
            }
            i = b.call([{
                methodname: "core_enrol_get_potential_users",
                args: {
                    courseid: j,
                    enrolid: l,
                    search: f,
                    searchanywhere: !0,
                    page: 0,
                    perpage: m + 1
                }
            }]);
            i[0].then(function(b) {
                var e = [],
                    f = 0;
                if (b.length <= m) {
                    a.each(b, function(b, d) {
                        var f = d,
                            g = [];
                        a.each(k, function(a, b) {
                            if ("undefined" != typeof d[b] && "" !== d[b]) {
                                f.hasidentity = !0;
                                g.push(d[b])
                            }
                        });
                        f.identity = g.join(", ");
                        e.push(c.render("enrol_manual/form-user-selector-suggestion", f))
                    });
                    return a.when.apply(a.when, e).then(function() {
                        var c = arguments;
                        a.each(b, function(a, b) {
                            b._label = c[f];
                            f++
                        });
                        g(b)
                    })
                } else {
                    return d.get_string("toomanyuserstoshow", "core", ">" + m).then(function(a) {
                        g(a)
                    })
                }
            }).fail(h)
        }
    }
});
define("message_popup/notification_popover_controller", ["jquery", "core/ajax", "core/templates", "core/str", "core/url", "core/notification", "core/custom_interaction_events", "core/popover_region_controller", "message_popup/notification_repository", "message_popup/notification_area_events"], function(a, b, c, d, e, f, g, h, i, j) {
    var k = {
            MARK_ALL_READ_BUTTON: "[data-action=\"mark-all-read\"]",
            ALL_NOTIFICATIONS_CONTAINER: "[data-region=\"all-notifications\"]",
            NOTIFICATION: "[data-region=\"notification-content-item-container\"]",
            UNREAD_NOTIFICATION: "[data-region=\"notification-content-item-container\"].unread",
            NOTIFICATION_LINK: "[data-action=\"content-item-link\"]",
            EMPTY_MESSAGE: "[data-region=\"empty-message\"]",
            COUNT_CONTAINER: "[data-region=\"count-container\"]"
        },
        l = function(a) {
            h.call(this, a);
            this.markAllReadButton = this.root.find(k.MARK_ALL_READ_BUTTON);
            this.unreadCount = 0;
            this.userId = this.root.attr("data-userid");
            this.container = this.root.find(k.ALL_NOTIFICATIONS_CONTAINER);
            this.limit = 20;
            this.offset = 0;
            this.loadedAll = !1;
            this.initialLoad = !1;
            this.unreadCount = this.root.find(k.COUNT_CONTAINER).html()
        };
    l.prototype = Object.create(h.prototype);
    l.prototype.constructor = l;
    l.prototype.updateButtonAriaLabel = function() {
        if (this.isMenuOpen()) {
            d.get_string("hidenotificationwindow", "message").done(function(a) {
                this.menuToggle.attr("aria-label", a)
            }.bind(this))
        } else {
            if (this.unreadCount) {
                d.get_string("shownotificationwindowwithcount", "message", this.unreadCount).done(function(a) {
                    this.menuToggle.attr("aria-label", a)
                }.bind(this))
            } else {
                d.get_string("shownotificationwindownonew", "message").done(function(a) {
                    this.menuToggle.attr("aria-label", a)
                }.bind(this))
            }
        }
    };
    l.prototype.getContent = function() {
        return this.container
    };
    l.prototype.getOffset = function() {
        return this.offset
    };
    l.prototype.incrementOffset = function() {
        this.offset += this.limit
    };
    l.prototype.hasDoneInitialLoad = function() {
        return this.initialLoad
    };
    l.prototype.hasLoadedAllContent = function() {
        return this.loadedAll
    };
    l.prototype.setLoadedAllContent = function(a) {
        this.loadedAll = a
    };
    l.prototype.renderUnreadCount = function() {
        var a = this.root.find(k.COUNT_CONTAINER);
        if (this.unreadCount) {
            a.text(this.unreadCount);
            a.removeClass("hidden")
        } else {
            a.addClass("hidden")
        }
    };
    l.prototype.hideUnreadCount = function() {
        this.root.find(k.COUNT_CONTAINER).addClass("hidden")
    };
    l.prototype.getNotificationElement = function(a) {
        var b = this.root.find(k.NOTIFICATION + "[data-id=\"" + a + "\"]");
        return 1 == b.length ? b : null
    };
    l.prototype.renderNotifications = function(b, d) {
        var f = [];
        a.each(b, function(a, b) {
            var d = this.getOffset() - this.limit;
            b.viewmoreurl = e.relativeUrl("/message/output/popup/notifications.php", {
                notificationid: b.id,
                offset: d
            });
            var g = {
                notificationid: b.id
            };
            b.contexturl = e.relativeUrl("message/output/popup/mark_notification_read.php", g);
            var h = c.render("message_popup/notification_content_item", b).then(function(a, b) {
                return {
                    html: a,
                    js: b
                }
            });
            f.push(h)
        }.bind(this));
        return a.when.apply(a, f).then(function() {
            a.each(arguments, function(a, b) {
                d.append(b.html);
                c.runTemplateJS(b.js)
            })
        })
    };
    l.prototype.loadMoreNotifications = function() {
        if (this.isLoading || this.hasLoadedAllContent()) {
            return a.Deferred().resolve()
        }
        this.startLoading();
        var b = {
                limit: this.limit,
                offset: this.getOffset(),
                useridto: this.userId
            },
            c = this.getContent();
        return i.query(b).then(function(a) {
            var b = a.notifications;
            this.unreadCount = a.unreadcount;
            this.setLoadedAllContent(!b.length || b.length < this.limit);
            this.initialLoad = !0;
            this.updateButtonAriaLabel();
            if (b.length) {
                this.incrementOffset();
                return this.renderNotifications(b, c)
            }
            return !1
        }.bind(this)).always(function() {
            this.stopLoading()
        }.bind(this))
    };
    l.prototype.markAllAsRead = function() {
        this.markAllReadButton.addClass("loading");
        return i.markAllAsRead({
            useridto: this.userId
        }).then(function() {
            this.unreadCount = 0;
            this.root.find(k.UNREAD_NOTIFICATION).removeClass("unread")
        }.bind(this)).always(function() {
            this.markAllReadButton.removeClass("loading")
        }.bind(this))
    };
    l.prototype.registerEventListeners = function() {
        g.define(this.root, [g.events.activate]);
        this.root.on(g.events.activate, k.MARK_ALL_READ_BUTTON, function(a, b) {
            this.markAllAsRead();
            a.stopPropagation();
            b.originalEvent.preventDefault()
        }.bind(this));
        this.root.on(g.events.activate, k.NOTIFICATION_LINK, function(b) {
            var c = a(b.target).closest(k.NOTIFICATION);
            if (c.hasClass("unread")) {
                this.unreadCount--;
                c.removeClass("unread")
            }
            b.stopPropagation()
        }.bind(this));
        this.root.on(this.events().menuOpened, function() {
            this.hideUnreadCount();
            this.updateButtonAriaLabel();
            if (!this.hasDoneInitialLoad()) {
                this.loadMoreNotifications()
            }
        }.bind(this));
        this.root.on(this.events().menuClosed, function() {
            this.renderUnreadCount();
            this.updateButtonAriaLabel()
        }.bind(this));
        this.root.on(this.events().startLoading, function() {
            this.getContent().attr("aria-busy", "true")
        }.bind(this));
        this.root.on(this.events().stopLoading, function() {
            this.getContent().attr("aria-busy", "false")
        }.bind(this));
        this.getContentContainer().on(g.events.scrollBottom, function() {
            if (!this.isLoading && !this.hasLoadedAllContent()) {
                this.loadMoreNotifications()
            }
        }.bind(this));
        g.define(this.getContentContainer(), [g.events.scrollLock]);
        a(document).on(j.notificationShown, function(a, b) {
            if (!b.read) {
                var c = this.getNotificationElement(b.id);
                if (c) {
                    c.removeClass("unread")
                }
                this.unreadCount--;
                this.renderUnreadCount()
            }
        }.bind(this))
    };
    return l
});
define("message_popup/notification_repository", ["core/ajax", "core/notification"], function(a, b) {
    return {
        query: function query(c) {
            if ("undefined" == typeof c.limit) {
                c.limit = 20
            }
            if ("undefined" == typeof c.offset) {
                c.offset = 0
            }
            var d = a.call([{
                methodname: "message_popup_get_popup_notifications",
                args: c
            }])[0];
            d.fail(b.exception);
            return d
        },
        countUnread: function countUnread(c) {
            var d = a.call([{
                methodname: "message_popup_get_unread_popup_notification_count",
                args: c
            }])[0];
            d.fail(b.exception);
            return d
        },
        markAllAsRead: function markAllAsRead(c) {
            var d = a.call([{
                methodname: "core_message_mark_all_notifications_as_read",
                args: c
            }])[0];
            d.fail(b.exception);
            return d
        },
        markAsRead: function markAsRead(c, d) {
            var e = {
                notificationid: c
            };
            if (d) {
                e.timeread = d
            }
            var f = a.call([{
                methodname: "core_message_mark_notification_read",
                args: e
            }])[0];
            f.fail(b.exception);
            return f
        }
    }
});
define("message_popup/notification_area_content_area", ["jquery", "core/templates", "core/notification", "core/custom_interaction_events", "message_popup/notification_repository", "message_popup/notification_area_events"], function(a, b, c, d, e, f) {
    var g = {
            CONTAINER: "[data-region=\"notification-area\"]",
            CONTENT: "[data-region=\"content\"]",
            HEADER: "[data-region=\"header\"]",
            FOOTER: "[data-region=\"footer\"]",
            TOGGLE_MODE: "[data-action=\"toggle-mode\"]"
        },
        h = {
            HEADER: "message_popup/notification_area_content_area_header",
            CONTENT: "message_popup/notification_area_content_area_content",
            FOOTER: "message_popup/notification_area_content_area_footer"
        },
        i = function(b, c) {
            this.root = a(b);
            this.container = this.root.closest(g.CONTAINER);
            this.userId = c;
            this.header = this.root.find(g.HEADER);
            this.content = this.root.find(g.CONTENT);
            this.footer = this.root.find(g.FOOTER);
            this.registerEventListeners()
        };
    i.prototype.getRoot = function() {
        return this.root
    };
    i.prototype.getContainer = function() {
        return this.container
    };
    i.prototype.getUserId = function() {
        return this.userId
    };
    i.prototype.getHeader = function() {
        return this.header
    };
    i.prototype.getContent = function() {
        return this.content
    };
    i.prototype.getFooter = function() {
        return this.footer
    };
    i.prototype.show = function() {
        this.getContainer().addClass("show-content-area")
    };
    i.prototype.hide = function() {
        this.getContainer().removeClass("show-content-area")
    };
    i.prototype.setHeaderHTML = function(a) {
        this.getHeader().empty().html(a)
    };
    i.prototype.setContentHTML = function(a) {
        this.getContent().empty().html(a)
    };
    i.prototype.setFooterHTML = function(a) {
        this.getFooter().empty().html(a)
    };
    i.prototype.showNotification = function(c) {
        var d = b.render(h.HEADER, c).done(function(a) {
                this.setHeaderHTML(a)
            }.bind(this)),
            e = b.render(h.CONTENT, c).done(function(a) {
                this.setContentHTML(a)
            }.bind(this)),
            g = b.render(h.FOOTER, c).done(function(a) {
                this.setFooterHTML(a)
            }.bind(this));
        return a.when(d, e, g).done(function() {
            this.show();
            this.getContainer().trigger(f.notificationShown, [c])
        }.bind(this))
    };
    i.prototype.registerEventListeners = function() {
        d.define(this.getRoot(), [d.events.activate]);
        this.getRoot().on(d.events.activate, g.VIEW_TOGGLE, function() {
            this.hide()
        }.bind(this));
        this.getContainer().on(f.showNotification, function(a, b) {
            this.showNotification(b)
        }.bind(this))
    };
    return i
});
define("message_popup/notification_area_events", [], function() {
    return {
        showNotification: "notification-area-events:showNotification",
        notificationShown: "notification-area-events:notificationShown"
    }
});

function _typeof(a) {
    if ("function" == typeof Symbol && "symbol" == typeof Symbol.iterator) {
        _typeof = function(a) {
            return typeof a
        }
    } else {
        _typeof = function(a) {
            return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
        }
    }
    return _typeof(a)
}
define("message_popup/notification_area_control_area", ["jquery", "core/templates", "core/notification", "core/custom_interaction_events", "message_popup/notification_repository", "message_popup/notification_area_events"], function(a, b, c, d, e, f) {
    var g = {
            CONTAINER: "[data-region=\"notification-area\"]",
            CONTENT: "[data-region=\"content\"]",
            NOTIFICATION: "[data-region=\"notification-content-item-container\"]",
            CAN_RECEIVE_FOCUS: "input:not([type=\"hidden\"]), a[href], button, textarea, select, [tabindex]"
        },
        h = {
            NOTIFICATION: "message_popup/notification_content_item"
        },
        i = function(b, c) {
            this.root = a(b);
            this.container = this.root.closest(g.CONTAINER);
            this.userId = c;
            this.content = this.root.find(g.CONTENT);
            this.offset = 0;
            this.limit = 20;
            this.initialLoad = !1;
            this.isLoading = !1;
            this.loadedAll = !1;
            this.notifications = {};
            this.registerEventListeners()
        };
    i.prototype.getRoot = function() {
        return this.root
    };
    i.prototype.getContainer = function() {
        return this.container
    };
    i.prototype.getUserId = function() {
        return this.userId
    };
    i.prototype.getContent = function() {
        return this.content
    };
    i.prototype.getOffset = function() {
        return this.offset
    };
    i.prototype.getLimit = function() {
        return this.limit
    };
    i.prototype.setOffset = function(a) {
        this.offset = a
    };
    i.prototype.setLimit = function(a) {
        this.limit = a
    };
    i.prototype.incrementOffset = function() {
        this.offset += this.limit
    };
    i.prototype.startLoading = function() {
        this.isLoading = !0;
        this.getRoot().addClass("loading")
    };
    i.prototype.stopLoading = function() {
        this.isLoading = !1;
        this.getRoot().removeClass("loading")
    };
    i.prototype.hasDoneInitialLoad = function() {
        return this.initialLoad
    };
    i.prototype.hasLoadedAllContent = function() {
        return this.loadedAll
    };
    i.prototype.setLoadedAllContent = function(a) {
        this.loadedAll = a
    };
    i.prototype.setCacheNotification = function(a) {
        this.notifications[a.id] = a
    };
    i.prototype.getCacheNotification = function(a) {
        return this.notifications[a]
    };
    i.prototype.getNotificationElement = function(a) {
        var b = this.getRoot().find(g.NOTIFICATION + "[data-id=\"" + a + "\"]");
        return 1 == b.length ? b : null
    };
    i.prototype.scrollNotificationIntoView = function(a) {
        var b = a.position(),
            c = this.getRoot(),
            d = b.top - c.scrollTop();
        if (d > c.innerHeight()) {
            var e = a.outerHeight();
            e = 4 * e;
            var f = b.top - e;
            c.scrollTop(f)
        }
    };
    i.prototype.showNotification = function(b) {
        if ("object" !== _typeof(b)) {
            b = this.getNotificationElement(b)
        }
        if (b && b.length) {
            this.getRoot().find(g.NOTIFICATION).removeClass("selected");
            b.addClass("selected").find(g.CAN_RECEIVE_FOCUS).focus();
            var c = b.attr("data-id"),
                d = this.getCacheNotification(c);
            this.scrollNotificationIntoView(b);
            this.getContainer().trigger(f.showNotification, [a.extend({}, d)])
        }
    };
    i.prototype.markNotificationAsRead = function(a) {
        return e.markAsRead(a.attr("data-id")).done(function() {
            a.removeClass("unread")
        })
    };
    i.prototype.renderNotifications = function(c) {
        var d = [],
            e = this.getContent();
        a.each(c, function(a, c) {
            var e = c.contexturl;
            delete c.contexturl;
            var f = b.render(h.NOTIFICATION, c).then(function(a, b) {
                c.contexturl = e;
                this.setCacheNotification(c);
                return {
                    html: a,
                    js: b
                }
            }.bind(this));
            d.push(f)
        }.bind(this));
        return a.when.apply(a, d).then(function() {
            a.each(arguments, function(a, c) {
                e.append(c.html);
                b.runTemplateJS(c.js)
            })
        })
    };
    i.prototype.loadMoreNotifications = function() {
        if (this.isLoading || this.hasLoadedAllContent()) {
            return a.Deferred().resolve()
        }
        this.startLoading();
        var b = {
            limit: this.getLimit(),
            offset: this.getOffset(),
            useridto: this.getUserId()
        };
        if (!this.initialLoad) {
            b.limit = this.getOffset() + this.getLimit();
            b.offset = 0
        }
        var c = e.query(b).then(function(a) {
            var b = a.notifications;
            this.unreadCount = a.unreadcount;
            this.setLoadedAllContent(!b.length || b.length < this.getLimit());
            this.initialLoad = !0;
            if (b.length) {
                this.incrementOffset();
                return this.renderNotifications(b)
            }
            return !1
        }.bind(this)).always(function() {
            this.stopLoading()
        }.bind(this));
        return c
    };
    i.prototype.registerEventListeners = function() {
        d.define(this.getRoot(), [d.events.activate, d.events.scrollBottom, d.events.scrollLock, d.events.up, d.events.down]);
        this.getRoot().on(d.events.scrollBottom, function() {
            this.loadMoreNotifications()
        }.bind(this));
        this.getRoot().on(d.events.activate, g.NOTIFICATION, function(b) {
            var c = a(b.target).closest(g.NOTIFICATION);
            this.showNotification(c)
        }.bind(this));
        this.getRoot().on(d.events.up, g.NOTIFICATION, function(b, c) {
            var d = a(b.target).closest(g.NOTIFICATION);
            this.showNotification(d.prev());
            c.originalEvent.preventDefault()
        }.bind(this));
        this.getRoot().on(d.events.down, g.NOTIFICATION, function(b, c) {
            var d = a(b.target).closest(g.NOTIFICATION);
            this.showNotification(d.next());
            c.originalEvent.preventDefault()
        }.bind(this));
        this.getContainer().on(f.notificationShown, function(a, b) {
            if (!b.read) {
                var c = this.getNotificationElement(b.id);
                if (c) {
                    this.markNotificationAsRead(c)
                }
                var d = this.getCacheNotification(b.id);
                if (d) {
                    d.read = !0
                }
            }
        }.bind(this))
    };
    return i
});
define("block_myoverview/main", ["jquery", "block_myoverview/view", "block_myoverview/view_nav"], function(a, b, c) {
    return {
        init: function init(d) {
            d = a(d);
            c.init(d);
            b.init(d)
        }
    }
});
define("block_myoverview/view", ["jquery", "block_myoverview/repository", "core/paged_content_factory", "core/pubsub", "core/custom_interaction_events", "core/notification", "core/templates", "core_course/events", "block_myoverview/selectors", "core/paged_content_events"], function(a, b, c, d, e, f, g, h, i, j) {
    var k = {
            COURSE_REGION: "[data-region=\"course-view-content\"]",
            ACTION_HIDE_COURSE: "[data-action=\"hide-course\"]",
            ACTION_SHOW_COURSE: "[data-action=\"show-course\"]",
            ACTION_ADD_FAVOURITE: "[data-action=\"add-favourite\"]",
            ACTION_REMOVE_FAVOURITE: "[data-action=\"remove-favourite\"]",
            FAVOURITE_ICON: "[data-region=\"favourite-icon\"]",
            ICON_IS_FAVOURITE: "[data-region=\"is-favourite\"]",
            ICON_NOT_FAVOURITE: "[data-region=\"not-favourite\"]",
            PAGED_CONTENT_CONTAINER: "[data-region=\"page-container\"]"
        },
        l = {
            COURSES_CARDS: "block_myoverview/view-cards",
            COURSES_LIST: "block_myoverview/view-list",
            COURSES_SUMMARY: "block_myoverview/view-summary",
            NOCOURSES: "core_course/no-courses"
        },
        m = {
            GROUPING_ALLINCLUDINGHIDDEN: "allincludinghidden",
            GROUPING_ALL: "all",
            GROUPING_INPROGRESS: "inprogress",
            GROUPING_FUTURE: "future",
            GROUPING_PAST: "past",
            GROUPING_FAVOURITES: "favourites",
            GROUPING_HIDDEN: "hidden"
        },
        n = [12, 24, 48, 96, 0],
        o = [],
        p = 0,
        q = 0,
        r = 0,
        s = null,
        t = function(a) {
            var b = a.find(i.courseView.region);
            return {
                display: b.attr("data-display"),
                grouping: b.attr("data-grouping"),
                sort: b.attr("data-sort"),
                displaycategories: b.attr("data-displaycategories"),
                customfieldname: b.attr("data-customfieldname"),
                customfieldvalue: b.attr("data-customfieldvalue")
            }
        },
        u = {
            ignoreControlWhileLoading: !0,
            controlPlacementBottom: !0,
            persistentLimitKey: "block_myoverview_user_paging_preference"
        },
        v = function(a, c) {
            return b.getEnrolledCoursesByTimeline({
                offset: p,
                limit: c,
                classification: a.grouping,
                sort: a.sort,
                customfieldname: a.customfieldname,
                customfieldvalue: a.customfieldvalue
            })
        },
        w = function(a, b) {
            return a.find(k.FAVOURITE_ICON + "[data-course-id=\"" + b + "\"]")
        },
        x = function(a, b) {
            return a.find("[data-region=\"paged-content-page\"][data-page=\"" + b + "\"]")
        },
        y = function(a) {
            return a.attr("data-course-id")
        },
        z = function(a, b) {
            var c = w(a, b),
                d = c.find(k.ICON_IS_FAVOURITE);
            d.addClass("hidden");
            d.attr("aria-hidden", !0);
            var e = c.find(k.ICON_NOT_FAVOURITE);
            e.removeClass("hidden");
            e.attr("aria-hidden", !1)
        },
        A = function(a, b) {
            var c = w(a, b),
                d = c.find(k.ICON_IS_FAVOURITE);
            d.removeClass("hidden");
            d.attr("aria-hidden", !1);
            var e = c.find(k.ICON_NOT_FAVOURITE);
            e.addClass("hidden");
            e.attr("aria-hidden", !0)
        },
        B = function(a, b) {
            return a.find("[data-action=\"add-favourite\"][data-course-id=\"" + b + "\"]")
        },
        C = function(a, b) {
            return a.find("[data-action=\"remove-favourite\"][data-course-id=\"" + b + "\"]")
        },
        D = function(a, b) {
            var c = C(a, b),
                e = B(a, b);
            L(b, !0).then(function(g) {
                if (g) {
                    d.publish(h.favourited, b);
                    c.removeClass("hidden");
                    e.addClass("hidden");
                    A(a, b)
                } else {
                    f.alert("Starring course failed", "Could not change favourite state")
                }
            }).catch(f.exception)
        },
        E = function(a, b) {
            var c = C(a, b),
                e = B(a, b);
            L(b, !1).then(function(g) {
                if (g) {
                    d.publish(h.unfavorited, b);
                    c.addClass("hidden");
                    e.removeClass("hidden");
                    z(a, b)
                } else {
                    f.alert("Starring course failed", "Could not change favourite state")
                }
            }).catch(f.exception)
        },
        F = function(a, b) {
            return a.find("[data-action=\"hide-course\"][data-course-id=\"" + b + "\"]")
        },
        G = function(a, b) {
            return a.find("[data-action=\"show-course\"][data-course-id=\"" + b + "\"]")
        },
        H = function(a, b) {
            var c = F(a, b),
                d = G(a, b),
                e = t(a);
            J(b, !0);
            if (e.grouping != m.GROUPING_ALLINCLUDINGHIDDEN) {
                K(a, b)
            }
            c.addClass("hidden");
            d.removeClass("hidden")
        },
        I = function(a, b) {
            var c = F(a, b),
                d = G(a, b),
                e = t(a);
            J(b, null);
            if (e.grouping != m.GROUPING_ALLINCLUDINGHIDDEN) {
                K(a, b)
            }
            c.removeClass("hidden");
            d.addClass("hidden")
        },
        J = function(a, c) {
            if (!1 === c) {
                c = null
            }
            return b.updateUserPreferences({
                preferences: [{
                    type: "block_myoverview_hidden_course_" + a,
                    value: c
                }]
            })
        },
        K = function(b, d) {
            var e = b.find("[data-region=\"paging-bar\"]"),
                h = parseInt(e.attr("data-active-page-number")),
                i = o[h],
                j = i.courses.reduce(function(a, b) {
                    if (d != b.id) {
                        a.push(b)
                    }
                    return a
                }, []);
            if (o[h + 1] != void 0) {
                var k = o[h + 1].courses.slice(0, 1);
                o.forEach(function(b, c) {
                    if (c > h) {
                        var d = [];
                        if (o[c + 1] != void 0) {
                            d = o[c + 1].courses.slice(0, 1)
                        }
                        o[c].courses = a.merge(o[c].courses.slice(1), d)
                    }
                });
                j = a.merge(j, k)
            }
            if (q == h + 1 && 0 == o[h + 1].courses.length) {
                var l = b.find("[data-region=\"paged-content-container\"]");
                c.resetLastPageNumber(a(l).attr("id"), h)
            }
            o[h].courses = j;
            p--;
            var m = x(b, h);
            M(b, o[h]).then(function(a, b) {
                return g.replaceNodeContents(m, a, b)
            }).catch(f.exception);
            o.forEach(function(a, c) {
                if (c > h) {
                    var d = x(b, c);
                    d.remove()
                }
            })
        },
        L = function(a, c) {
            return b.setFavouriteCourses({
                courses: [{
                    id: a,
                    favourite: c
                }]
            }).then(function(b) {
                if (0 == b.warnings.length) {
                    o.forEach(function(b) {
                        b.courses.forEach(function(d, e) {
                            if (d.id == a) {
                                b.courses[e].isfavourite = c
                            }
                        })
                    });
                    return !0
                } else {
                    return !1
                }
            }).catch(f.exception)
        },
        M = function(a, b) {
            var c = t(a),
                d = "";
            if ("card" == c.display) {
                d = l.COURSES_CARDS
            } else if ("list" == c.display) {
                d = l.COURSES_LIST
            } else {
                d = l.COURSES_SUMMARY
            }
            b.courses = b.courses.map(function(a) {
                a.showcoursecategory = "on" == c.displaycategories ? !0 : !1;
                return a
            });
            if (b.courses.length) {
                return g.render(d, {
                    courses: b.courses
                })
            } else {
                var e = a.find(i.courseView.region).attr("data-nocoursesimg");
                return g.render(l.NOCOURSES, {
                    nocoursesimg: e
                })
            }
        },
        N = function(a) {
            this.find(i.courseView.region).attr("data-paging", a)
        },
        O = function(a, b) {
            var c = b + j.SET_ITEMS_PER_PAGE_LIMIT;
            d.subscribe(c, N.bind(a))
        },
        P = function(b) {
            s = "block_myoverview_" + b.attr("id") + "_" + Math.random();
            var d = parseInt(b.find(i.courseView.region).attr("data-paging"), 10),
                e = n.map(function(a) {
                    var b = !1;
                    if (a == d) {
                        b = !0
                    }
                    return {
                        value: a,
                        active: b
                    }
                }),
                h = parseInt(b.find(i.courseView.region).attr("data-totalcoursecount"), 10);
            if (h) {
                e = e.filter(function(a) {
                    return a.value < h
                })
            }
            var j = t(b),
                k = a.extend({}, u);
            k.eventNamespace = s;
            var l = c.createWithLimit(e, function(c, d) {
                var e = [];
                c.forEach(function(c) {
                    var g = c.pageNumber,
                        h = 0 < c.limit ? c.limit : 0;
                    if (r != h) {
                        o = [];
                        p = 0;
                        q = 0
                    }
                    if (q == g) {
                        d.allItemsLoaded(q);
                        e.push(M(b, o[g]));
                        return
                    }
                    r = h;
                    if (o[g + 1] == void 0) {
                        if (o[g] == void 0) {
                            h *= 2
                        }
                    }
                    var i = v(j, h).then(function(e) {
                        var f = e.courses,
                            h = 0,
                            i = [];
                        if (o[g] != void 0) {
                            i = o[g].courses;
                            var j = i.length;
                            if (j < c.limit) {
                                h = c.limit - j;
                                i = a.merge(o[g].courses, f.slice(0, h))
                            }
                        } else {
                            h = c.limit;
                            i = 0 < c.limit ? f.slice(0, c.limit) : f
                        }
                        o[g] = {
                            courses: i
                        };
                        var k = h ? f.slice(h, f.length) : [];
                        if (k.length) {
                            o[g + 1] = {
                                courses: k
                            }
                        }
                        if (o[g].courses.length < c.limit || !k.length) {
                            q = g;
                            d.allItemsLoaded(g)
                        } else if (o[g + 1] != void 0 && o[g + 1].courses.length < c.limit) {
                            q = g + 1
                        }
                        p = e.nextoffset;
                        return M(b, o[g])
                    }).catch(f.exception);
                    e.push(i)
                });
                return e
            }, k);
            l.then(function(a, c) {
                O(b, s);
                return g.replaceNodeContents(b.find(i.courseView.region), a, c)
            }).catch(f.exception)
        },
        Q = function(b) {
            e.define(b, [e.events.activate]);
            b.on(e.events.activate, k.ACTION_ADD_FAVOURITE, function(c, d) {
                var e = a(c.target).closest(k.ACTION_ADD_FAVOURITE),
                    f = y(e);
                D(b, f);
                d.originalEvent.preventDefault()
            });
            b.on(e.events.activate, k.ACTION_REMOVE_FAVOURITE, function(c, d) {
                var e = a(c.target).closest(k.ACTION_REMOVE_FAVOURITE),
                    f = y(e);
                E(b, f);
                d.originalEvent.preventDefault()
            });
            b.on(e.events.activate, k.FAVOURITE_ICON, function(a, b) {
                b.originalEvent.preventDefault()
            });
            b.on(e.events.activate, k.ACTION_HIDE_COURSE, function(c, d) {
                var e = a(c.target).closest(k.ACTION_HIDE_COURSE),
                    f = y(e);
                H(b, f);
                d.originalEvent.preventDefault()
            });
            b.on(e.events.activate, k.ACTION_SHOW_COURSE, function(c, d) {
                var e = a(c.target).closest(k.ACTION_SHOW_COURSE),
                    f = y(e);
                I(b, f);
                d.originalEvent.preventDefault()
            })
        },
        R = function(b) {
            b = a(b);
            o = [];
            q = 0;
            p = 0;
            P(b);
            if (!b.attr("data-init")) {
                Q(b);
                b.attr("data-init", !0)
            }
        },
        S = function(a) {
            if (0 < o.length) {
                o.forEach(function(b, c) {
                    var d = x(a, c);
                    M(a, b).then(function(a, b) {
                        return g.replaceNodeContents(d, a, b)
                    }).catch(f.exception)
                })
            } else {
                R(a)
            }
        };
    return {
        init: R,
        reset: S
    }
});
define("block_myoverview/view_nav", ["jquery", "core/custom_interaction_events", "block_myoverview/repository", "block_myoverview/view", "block_myoverview/selectors"], function(a, b, c, d, f) {
    var g = {
            FILTERS: "[data-region=\"filter\"]",
            FILTER_OPTION: "[data-filter]",
            DISPLAY_OPTION: "[data-display-option]"
        },
        h = function(a, b) {
            var d = null;
            if ("display" == a) {
                d = "block_myoverview_user_view_preference"
            } else if ("sort" == a) {
                d = "block_myoverview_user_sort_preference"
            } else if ("customfieldvalue" == a) {
                d = "block_myoverview_user_grouping_customfieldvalue_preference"
            } else {
                d = "block_myoverview_user_grouping_preference"
            }
            c.updateUserPreferences({
                preferences: [{
                    type: d,
                    value: b
                }]
            })
        },
        i = function(c) {
            var e = c.find(g.FILTERS);
            b.define(e, [b.events.activate]);
            e.on(b.events.activate, g.FILTER_OPTION, function(b, e) {
                var g = a(b.target);
                if (g.hasClass("active")) {
                    return
                }
                var i = g.attr("data-filter"),
                    j = g.attr("data-pref"),
                    k = g.attr("data-customfieldvalue");
                c.find(f.courseView.region).attr("data-" + i, g.attr("data-value"));
                h(i, j);
                if (k) {
                    c.find(f.courseView.region).attr("data-customfieldvalue", k);
                    h("customfieldvalue", k)
                }
                d.init(c);
                e.originalEvent.preventDefault()
            });
            b.define(e, [b.events.activate]);
            e.on(b.events.activate, g.DISPLAY_OPTION, function(b, e) {
                var g = a(b.target);
                if (g.hasClass("active")) {
                    return
                }
                var i = g.attr("data-display-option"),
                    j = g.attr("data-pref");
                c.find(f.courseView.region).attr("data-display", g.attr("data-value"));
                h(i, j);
                d.reset(c);
                e.originalEvent.preventDefault()
            })
        };
    return {
        init: function init(b) {
            b = a(b);
            i(b)
        }
    }
});
define("block_myoverview/selectors", [], function() {
    return {
        courseView: {
            region: "[data-region=\"courses-view\"]",
            regionContent: "[data-region=\"course-view-content\"]"
        }
    }
});
define("block_myoverview/repository", ["core/ajax", "core/notification"], function(a, b) {
    return {
        getEnrolledCoursesByTimeline: function getEnrolledCoursesByTimeline(b) {
            var c = a.call([{
                methodname: "core_course_get_enrolled_courses_by_timeline_classification",
                args: b
            }])[0];
            return c
        },
        setFavouriteCourses: function setFavouriteCourses(b) {
            var c = a.call([{
                methodname: "core_course_set_favourite_courses",
                args: b
            }])[0];
            return c
        },
        updateUserPreferences: function updateUserPreferences(c) {
            a.call([{
                methodname: "core_user_update_user_preferences",
                args: c
            }])[0].fail(b.exception)
        }
    }
});
define("block_navigation/site_admin_loader", ["jquery", "core/ajax", "core/config", "block_navigation/ajax_response_renderer"], function(a, b, c, d) {
    var e = c.wwwroot + "/lib/ajax/getsiteadminbranch.php";
    return {
        load: function load(b) {
            b = a(b);
            var f = a.Deferred(),
                g = {
                    type: 71,
                    sesskey: c.sesskey
                };
            a.ajax(e, {
                type: "POST",
                dataType: "json",
                data: g
            }).done(function(a) {
                d.render(b, a);
                f.resolve()
            });
            return f
        }
    }
});
define("block_navigation/navblock", ["jquery", "core/tree"], function(a, b) {
    return {
        init: function init(a) {
            var c = new b(".block_navigation .block_tree");
            c.finishExpandingGroup = function(c) {
                b.prototype.finishExpandingGroup.call(this, c);
                Y.use("moodle-core-event", function() {
                    Y.Global.fire(M.core.globalEvents.BLOCK_CONTENT_UPDATED, {
                        instanceid: a
                    })
                })
            };
            c.collapseGroup = function(c) {
                b.prototype.collapseGroup.call(this, c);
                Y.use("moodle-core-event", function() {
                    Y.Global.fire(M.core.globalEvents.BLOCK_CONTENT_UPDATED, {
                        instanceid: a
                    })
                })
            }
        }
    }
});

function _typeof(a) {
    if ("function" == typeof Symbol && "symbol" == typeof Symbol.iterator) {
        _typeof = function(a) {
            return typeof a
        }
    } else {
        _typeof = function(a) {
            return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
        }
    }
    return _typeof(a)
}
define("block_navigation/ajax_response_renderer", ["jquery", "core/templates", "core/notification", "core/url"], function(a, b, c, d) {
    var f = {
        ACTIVITY: 40,
        RESOURCE: 50
    };

    function e(g, h) {
        var i = a("<ul></ul>");
        i.attr("role", "group");
        i.attr("aria-hidden", !0);
        a.each(h, function(g, h) {
            if ("object" !== _typeof(h)) {
                return
            }
            var j = a("<li></li>"),
                k = a("<p></p>"),
                l = h.id || h.key + "_tree_item",
                m = null,
                n = h.expandable || h.haschildren ? !0 : !1;
            k.addClass("tree_item");
            k.attr("id", l);
            k.attr("role", "treeitem");
            k.attr("tabindex", "-1");
            if (h.requiresajaxloading) {
                k.attr("data-requires-ajax", !0);
                k.attr("data-node-id", h.id);
                k.attr("data-node-key", h.key);
                k.attr("data-node-type", h.type)
            }
            if (n) {
                j.addClass("collapsed contains_branch");
                k.attr("aria-expanded", !1);
                k.addClass("branch")
            }
            var o = null;
            if (h.link) {
                var p = a("<a title=\"" + h.title + "\" href=\"" + h.link + "\"></a>");
                o = p;
                p.append("<span class=\"item-content-wrap\">" + h.name + "</span>");
                if (h.hidden) {
                    p.addClass("dimmed")
                }
                k.append(p)
            } else {
                var q = a("<span></span>");
                o = q;
                q.append("<span class=\"item-content-wrap\">" + h.name + "</span>");
                if (h.hidden) {
                    q.addClass("dimmed")
                }
                k.append(q)
            }
            if (h.icon && (!n || h.type === f.ACTIVITY || h.type === f.RESOURCE)) {
                j.addClass("item_with_icon");
                k.addClass("hasicon");
                if (h.type === f.ACTIVITY || h.type === f.RESOURCE) {
                    m = a("<img/>");
                    m.attr("alt", h.icon.alt);
                    m.attr("title", h.icon.title);
                    m.attr("src", d.imageUrl(h.icon.pix, h.icon.component));
                    a.each(h.icon.classes, function(a, b) {
                        m.addClass(b)
                    });
                    o.prepend(m)
                } else {
                    if ("moodle" == h.icon.component) {
                        h.icon.component = "core"
                    }
                    b.renderPix(h.icon.pix, h.icon.component, h.icon.title).then(function(a) {
                        o.prepend(a)
                    }).catch(c.exception)
                }
            }
            j.append(k);
            i.append(j);
            if (h.children && h.children.length) {
                e(k, h.children)
            } else if (n && !h.requiresajaxloading) {
                j.removeClass("contains_branch");
                k.addClass("emptybranch")
            }
        });
        g.parent().append(i);
        var j = g.attr("id") + "_group";
        i.attr("id", j);
        g.attr("aria-owns", j);
        g.attr("role", "treeitem")
    }
    return {
        render: function render(a, b) {
            if (b.children && b.children.length) {
                e(a, b.children);
                var c = a.children("[role='treeitem']").first(),
                    d = a.find("#" + c.attr("aria-owns"));
                c.attr("aria-expanded", !0);
                d.attr("aria-hidden", !1)
            } else {
                if (a.parent().hasClass("contains_branch")) {
                    a.parent().removeClass("contains_branch");
                    a.addClass("emptybranch")
                }
            }
        }
    }
});
define("block_navigation/nav_loader", ["jquery", "core/ajax", "core/config", "block_navigation/ajax_response_renderer"], function(a, b, c, d) {
    var f = c.wwwroot + "/lib/ajax/getnavbranch.php";

    function e(a) {
        return a.closest("[data-block]").attr("data-instanceid")
    }
    return {
        load: function load(b) {
            b = a(b);
            var g = a.Deferred(),
                h = {
                    elementid: b.attr("data-node-id"),
                    id: b.attr("data-node-key"),
                    type: b.attr("data-node-type"),
                    sesskey: c.sesskey,
                    instance: e(b)
                };
            a.ajax(f, {
                type: "POST",
                dataType: "json",
                data: h
            }).done(function(a) {
                d.render(b, a);
                g.resolve()
            });
            return g
        }
    }
});
define("block_online_users/change_user_visibility", ["jquery", "core/ajax", "core/str", "core/notification"], function(a, b, c, d) {
    var e = {
            CHANGE_VISIBILITY_LINK: "#change-user-visibility",
            CHANGE_VISIBILITY_ICON: "#change-user-visibility .icon"
        },
        f = function(a, c) {
            var e = "show" == a ? 1 : 0;
            b.call([{
                methodname: "core_user_set_user_preferences",
                args: {
                    preferences: [{
                        name: "block_online_users_uservisibility",
                        value: e,
                        userid: c
                    }]
                }
            }])[0].then(function(b) {
                if (b.saved) {
                    var c = g(a);
                    h(c);
                    i(c)
                }
            }).catch(d.exception)
        },
        g = function(a) {
            return "show" == a ? "hide" : "show"
        },
        h = function(b) {
            k(b).then(function(c) {
                a(e.CHANGE_VISIBILITY_LINK).attr({
                    "data-action": b,
                    title: c
                })
            }).catch(d.exception)
        },
        i = function(b) {
            var c = a(e.CHANGE_VISIBILITY_ICON);
            k(b).then(function(d) {
                a(c).attr({
                    title: d,
                    "aria-label": d
                });
                if (c.is("img")) {
                    a(c).attr({
                        src: M.util.image_url("t/" + b),
                        alt: d
                    })
                } else {
                    a(c).addClass(j(b));
                    a(c).removeClass(j(g(b)))
                }
            }).catch(d.exception)
        },
        j = function(a) {
            return "show" == a ? "fa-eye-slash" : "fa-eye"
        },
        k = function(a) {
            return c.get_string("online_status:" + a, "block_online_users")
        };
    return {
        init: function init() {
            a(e.CHANGE_VISIBILITY_LINK).on("click", function(b) {
                b.preventDefault();
                var c = a(this).attr("data-action"),
                    d = a(this).attr("data-userid");
                f(c, d)
            })
        }
    }
});
define("block_recentlyaccessedcourses/main", ["jquery", "core/custom_interaction_events", "core/notification", "core/pubsub", "core/paged_content_paging_bar", "core/templates", "core_course/events", "core_course/repository"], function(a, b, c, d, e, f, g, h) {
    var i = {
            BLOCK_CONTAINER: "[data-region=\"recentlyaccessedcourses\"]",
            CARD_CONTAINER: "[data-region=\"card-deck\"]",
            COURSE_IS_FAVOURITE: "[data-region=\"is-favourite\"]",
            CONTENT: "[data-region=\"view-content\"]",
            EMPTY_MESSAGE: "[data-region=\"empty-message\"]",
            LOADING_PLACEHOLDER: "[data-region=\"loading-placeholder\"]",
            PAGING_BAR: "[data-region=\"paging-bar\"]",
            PAGING_BAR_NEXT: "[data-control=\"next\"]",
            PAGING_BAR_PREVIOUS: "[data-control=\"previous\"]"
        },
        j = !1,
        k = [],
        l = null,
        m = null,
        n = 0,
        o = 1,
        p = function(a) {
            a.find(i.EMPTY_MESSAGE).removeClass("hidden");
            a.find(i.LOADING_PLACEHOLDER).addClass("hidden");
            a.find(i.CONTENT).addClass("hidden")
        },
        q = function(a) {
            a.find(i.CONTENT).removeClass("hidden");
            a.find(i.EMPTY_MESSAGE).addClass("hidden");
            a.find(i.LOADING_PLACEHOLDER).addClass("hidden")
        },
        r = function(a) {
            var b = a.find(i.PAGING_BAR);
            b.css("opacity", 1);
            b.css("visibility", "visible");
            b.attr("aria-hidden", "false")
        },
        s = function(a) {
            var b = a.find(i.PAGING_BAR);
            b.css("opacity", 0);
            b.css("visibility", "hidden");
            b.attr("aria-hidden", "true")
        },
        t = function(a, b) {
            k.forEach(function(a) {
                if (a.attr("data-course-id") == b) {
                    a.find(i.COURSE_IS_FAVOURITE).removeClass("hidden")
                }
            })
        },
        u = function(a, b) {
            k.forEach(function(a) {
                if (a.attr("data-course-id") == b) {
                    a.find(i.COURSE_IS_FAVOURITE).addClass("hidden")
                }
            })
        },
        v = function(b) {
            var d = a(i.BLOCK_CONTAINER).data("displaycoursecategory"),
                e = b.map(function(a) {
                    a.showcoursecategory = d;
                    return f.render("block_recentlyaccessedcourses/course-card", a)
                });
            return a.when.apply(null, e).then(function() {
                var b = [];
                e.forEach(function(d) {
                    d.then(function(c) {
                        b.push(a(c))
                    }).catch(c.exception)
                });
                return b
            })
        },
        w = function(a) {
            return h.getLastAccessedCourses(a, 10).then(function(a) {
                return v(a)
            })
        },
        x = function(a) {
            var b = a.find(i.CONTENT).find(i.CARD_CONTAINER),
                c = parseFloat(a.css("width")),
                d = k.length,
                f = 0;
            if (!m) {
                b.html(k[0]);
                m = k[0].outerWidth(!0)
            }
            o = Math.floor(c / m);
            if (n + o < d) {
                f = n
            } else {
                var g = n + o - d;
                f = n - g;
                f = 0 <= f ? f : 0
            }
            var h = k.slice(f, f + o),
                j = h.reduce(function(a, b) {
                    return a + b.attr("data-course-id")
                }, "");
            if (k.length > h.length) {
                b.addClass("justify-content-center");
                b.removeClass("justify-content-start")
            } else {
                b.removeClass("justify-content-center");
                b.addClass("justify-content-start")
            }
            if (l != j) {
                var p = a.find(e.rootSelector);
                b.html(h);
                l = j;
                if (o >= k.length) {
                    s(a)
                } else {
                    r(a);
                    if (0 === n) {
                        e.disablePreviousControlButtons(p)
                    } else {
                        e.enablePreviousControlButtons(p)
                    }
                    if (n + o >= k.length) {
                        e.disableNextControlButtons(p)
                    } else {
                        e.enableNextControlButtons(p)
                    }
                }
            }
        },
        y = function(c) {
            var e = null,
                f = !1;
            d.subscribe(g.favourited, function(a) {
                t(c, a)
            });
            d.subscribe(g.unfavorited, function(a) {
                u(c, a)
            });
            d.subscribe("nav-drawer-toggle-start", function() {
                if (!j || !k.length || f) {
                    return
                }
                f = !0;
                var a = 0,
                    b = function() {
                        setTimeout(function() {
                            x(c);
                            a++;
                            if (5 > a && f) {
                                b()
                            }
                        }, 100)
                    };
                b(c)
            });
            d.subscribe("nav-drawer-toggle-end", function() {
                f = !1
            });
            a(window).on("resize", function() {
                if (!j || !k.length) {
                    return
                }
                if (!e) {
                    e = setTimeout(function() {
                        e = null;
                        x(c)
                    }, 66)
                }
            });
            b.define(c, [b.events.activate]);
            c.on(b.events.activate, i.PAGING_BAR_NEXT, function(b, d) {
                var e = a(b.target).closest(i.PAGING_BAR_NEXT);
                if (!e.hasClass("disabled")) {
                    n = n + o;
                    x(c)
                }
                d.originalEvent.preventDefault()
            });
            c.on(b.events.activate, i.PAGING_BAR_PREVIOUS, function(b, d) {
                var e = a(b.target).closest(i.PAGING_BAR_PREVIOUS);
                if (!e.hasClass("disabled")) {
                    n = n - o;
                    n = 0 > n ? 0 : n;
                    x(c)
                }
                d.originalEvent.preventDefault()
            })
        };
    return {
        init: function init(b, d) {
            d = a(d);
            y(d);
            w(b).then(function(a) {
                k = a;
                j = !0;
                if (k.length) {
                    q(d);
                    x(d)
                } else {
                    p(d)
                }
            }).catch(c.exception)
        }
    }
});
define("block_recentlyaccesseditems/main", ["jquery", "block_recentlyaccesseditems/repository", "core/templates", "core/notification"], function(a, b, c, d) {
    var e = {
            CARDDECK_CONTAINER: "[data-region=\"recentlyaccesseditems-view\"]",
            CARDDECK: "[data-region=\"recentlyaccesseditems-view-content\"]"
        },
        f = function(a) {
            return b.getRecentItems(a)
        },
        g = function(a, b) {
            if (0 < b.length) {
                return c.render("block_recentlyaccesseditems/view-cards", {
                    items: b
                })
            } else {
                var d = a.attr("data-noitemsimgurl");
                return c.render("block_recentlyaccesseditems/no-items", {
                    noitemsimgurl: d
                })
            }
        };
    return {
        init: function init(b) {
            b = a(b);
            var h = b.find(e.CARDDECK_CONTAINER),
                i = b.find(e.CARDDECK),
                j = f(9);
            j.then(function(a) {
                var b = g(h, a);
                b.then(function(a, b) {
                    return c.replaceNodeContents(i, a, b)
                }).catch(d.exception);
                return j
            }).catch(d.exception)
        }
    }
});
define("block_recentlyaccesseditems/repository", ["core/ajax"], function(a) {
    return {
        getRecentItems: function getRecentItems(b) {
            var c = {};
            if ("undefined" != typeof b) {
                c.limit = b
            }
            return a.call([{
                methodname: "block_recentlyaccesseditems_get_recent_items",
                args: c
            }])[0]
        }
    }
});
define("block_settings/settingsblock", ["jquery", "core/tree"], function(a, b) {
    return {
        init: function init(a, c) {
            var d = new b(".block_settings .block_tree");
            if (c) {
                var e = d.treeRoot.find("#" + c),
                    f = e.children("a").first();
                f.replaceWith("<span tabindex=\"0\">" + f.html() + "</span>")
            }
            d.finishExpandingGroup = function(c) {
                b.prototype.finishExpandingGroup.call(this, c);
                Y.use("moodle-core-event", function() {
                    Y.Global.fire(M.core.globalEvents.BLOCK_CONTENT_UPDATED, {
                        instanceid: a
                    })
                })
            };
            d.collapseGroup = function(c) {
                b.prototype.collapseGroup.call(this, c);
                Y.use("moodle-core-event", function() {
                    Y.Global.fire(M.core.globalEvents.BLOCK_CONTENT_UPDATED, {
                        instanceid: a
                    })
                })
            }
        }
    }
});
define("block_starredcourses/main", ["jquery", "core/notification", "block_starredcourses/repository", "core/pubsub", "core/templates", "core_course/events"], function(a, b, c, d, e, f) {
    var g = {
            BLOCK_CONTAINER: "[data-region=\"starred-courses\"]",
            STARRED_COURSES_REGION_VIEW: "[data-region=\"starred-courses-view\"]",
            STARRED_COURSES_REGION: "[data-region=\"starred-courses-view-content\"]"
        },
        h = function(a, b) {
            if (0 < b.length) {
                return e.render("core_course/view-cards", {
                    courses: b
                })
            } else {
                var c = a.find(g.STARRED_COURSES_REGION_VIEW).attr("data-nocoursesimg");
                return e.render("block_starredcourses/no-courses", {
                    nocoursesimg: c
                })
            }
        },
        i = function(d) {
            var f = d.find(g.STARRED_COURSES_REGION);
            return c.getStarredCourses({
                limit: 0,
                offset: 0
            }).then(function(b) {
                var c = a(g.BLOCK_CONTAINER).data("displaycoursecategory");
                b = b.map(function(a) {
                    a.showcoursecategory = c;
                    return a
                });
                return h(d, b)
            }).then(function(a, b) {
                return e.replaceNodeContents(f, a, b)
            }).catch(b.exception)
        },
        j = function(a) {
            d.subscribe(f.favourited, function() {
                i(a)
            });
            d.subscribe(f.unfavorited, function() {
                i(a)
            })
        };
    return {
        init: function init(b) {
            b = a(b);
            j(b);
            i(b)
        }
    }
});
define("block_starredcourses/repository", ["jquery", "core/ajax", "core/notification"], function(a, b, c) {
    return {
        getStarredCourses: function getStarredCourses(a) {
            var d = b.call([{
                methodname: "block_starredcourses_get_starred_courses",
                args: a
            }])[0];
            d.fail(c.exception);
            return d
        }
    }
});
define("block_timeline/event_list", ["jquery", "core/notification", "core/templates", "core/paged_content_factory", "core/str", "core/user_date", "block_timeline/calendar_events_repository"], function(a, b, c, d, e, f, g) {
    var h = {
            EMPTY_MESSAGE: "[data-region=\"empty-message\"]",
            ROOT: "[data-region=\"event-list-container\"]",
            EVENT_LIST_CONTENT: "[data-region=\"event-list-content\"]",
            EVENT_LIST_LOADING_PLACEHOLDER: "[data-region=\"event-list-loading-placeholder\"]"
        },
        i = {
            EVENT_LIST_CONTENT: "block_timeline/event-list-content"
        },
        j = {
            ignoreControlWhileLoading: !0,
            controlPlacementBottom: !0,
            ariaLabels: {
                itemsperpagecomponents: "ariaeventlistpagelimit, block_timeline"
            }
        },
        k = function(a) {
            a.find(h.EVENT_LIST_CONTENT).addClass("hidden");
            a.find(h.EMPTY_MESSAGE).removeClass("hidden")
        },
        l = function(a) {
            a.find(h.EVENT_LIST_CONTENT).removeClass("hidden");
            a.find(h.EMPTY_MESSAGE).addClass("hidden")
        },
        m = function(a) {
            a.find(h.EVENT_LIST_CONTENT).empty()
        },
        n = function(a, b) {
            var c = {},
                d = {
                    eventsbyday: []
                };
            a.forEach(function(a) {
                var d = f.getUserMidnightForTimestamp(a.timesort, b);
                if (c[d]) {
                    c[d].push(a)
                } else {
                    c[d] = [a]
                }
            });
            Object.keys(c).forEach(function(a) {
                var e = c[a];
                d.eventsbyday.push({
                    past: a < b,
                    dayTimestamp: a,
                    events: e
                })
            });
            return d
        },
        o = function(a, b) {
            var d = n(a, b),
                e = i.EVENT_LIST_CONTENT;
            return c.render(e, d)
        },
        p = function(a, b, c, d, e, f) {
            var h = d != void 0 ? a + d * 86400 : !1,
                i = {
                    starttime: a + c * 86400,
                    limit: b
                };
            if (e) {
                i.aftereventid = e
            }
            if (h) {
                i.endtime = h
            }
            if (f) {
                i.courseid = f;
                return g.queryByCourse(i)
            } else {
                return g.queryByTime(i)
            }
        },
        q = function(a, b, c, d, e, g, h, i) {
            var j = a.pageNumber,
                k = a.limit,
                l = j;
            while (!d.hasOwnProperty(l)) {
                l--
            }
            var m = d[l],
                n = null;
            if (e && e.hasOwnProperty(j)) {
                n = e[j]
            } else {
                n = p(c, k + 1, h, i, m, g)
            }
            return n.then(function(a) {
                if (!a.events.length) {
                    b.allItemsLoaded(j);
                    return []
                }
                var d = a.events.filter(function(a) {
                        if ("open" == a.eventtype || "opensubmission" == a.eventtype) {
                            var b = f.getUserMidnightForTimestamp(a.timesort, c);
                            return b > c
                        }
                        return !0
                    }),
                    e = d.length <= k;
                if (e) {
                    b.allItemsLoaded(j)
                } else {
                    d.pop()
                }
                return d
            })
        },
        r = function(c, f, g, h, i, k, l, m, n) {
            var p = {
                    1: 0
                },
                r = !1,
                s = a.extend({}, j, n);
            return e.get_string("ariaeventlistpagelimit", "block_timeline", a.isArray(c) ? c[0].value : c).then(function(a) {
                s.ariaLabels.itemsperpage = a;
                s.ariaLabels.paginationnav = m;
                return a
            }).then(function() {
                return d.createWithLimit(c, function(c, d) {
                    var e = [];
                    c.forEach(function(a) {
                        var c = a.pageNumber,
                            h = q(a, d, g, p, f, i, k, l).then(function(a) {
                                if (a.length) {
                                    r = !0;
                                    var b = a[a.length - 1].id;
                                    p[c + 1] = b;
                                    return o(a, g)
                                } else {
                                    return a
                                }
                            }).catch(b.exception);
                        e.push(h)
                    });
                    a.when.apply(a, e).then(function() {
                        h.resolve(r)
                    }).catch(function() {
                        h.resolve(r)
                    });
                    return e
                }, s)
            })
        };
    return {
        init: function init(d, e, f, g, i) {
            d = a(d);
            var j = a.Deferred(),
                n = d.find(h.EVENT_LIST_CONTENT),
                o = d.find(h.EVENT_LIST_LOADING_PLACEHOLDER),
                p = d.attr("data-course-id"),
                q = parseInt(d.attr("data-days-offset"), 10),
                s = d.attr("data-days-limit"),
                t = parseInt(d.attr("data-midnight"), 10);
            m(d);
            l(d);
            o.removeClass("hidden");
            if (s != void 0) {
                s = parseInt(s, 10)
            }
            return r(e, f, t, j, p, q, s, g, i).then(function(b, e) {
                b = a(b);
                b.addClass("hidden");
                c.replaceNodeContents(n, b, e);
                j.then(function(a) {
                    b.removeClass("hidden");
                    o.addClass("hidden");
                    if (!a) {
                        k(d)
                    }
                    return a
                }).catch(function() {
                    return !1
                });
                return b
            }).catch(b.exception)
        },
        rootSelector: h.ROOT
    }
});
define("block_timeline/main", ["jquery", "block_timeline/view_nav", "block_timeline/view"], function(a, b, c) {
    var d = {
        TIMELINE_VIEW: "[data-region=\"timeline-view\"]"
    };
    return {
        init: function init(e) {
            e = a(e);
            var f = e.find(d.TIMELINE_VIEW);
            b.init(e, f);
            c.init(f)
        }
    }
});
define("block_timeline/view", ["jquery", "block_timeline/view_dates", "block_timeline/view_courses"], function(a, b, c) {
    var d = {
        TIMELINE_DATES_VIEW: "[data-region=\"view-dates\"]",
        TIMELINE_COURSES_VIEW: "[data-region=\"view-courses\"]"
    };
    return {
        init: function init(e) {
            e = a(e);
            var f = e.find(d.TIMELINE_DATES_VIEW),
                g = e.find(d.TIMELINE_COURSES_VIEW);
            b.init(f);
            c.init(g)
        },
        reset: function reset(a) {
            var e = a.find(d.TIMELINE_DATES_VIEW),
                f = a.find(d.TIMELINE_COURSES_VIEW);
            b.reset(e);
            c.reset(f)
        },
        shown: function shown(a) {
            var e = a.find(d.TIMELINE_DATES_VIEW),
                f = a.find(d.TIMELINE_COURSES_VIEW);
            if (e.hasClass("active")) {
                b.shown(e)
            } else {
                c.shown(f)
            }
        }
    }
});
define("block_timeline/calendar_events_repository", ["jquery", "core/ajax", "core/notification"], function(a, b, c) {
    return {
        queryByTime: function queryByTime(a) {
            if (!a.hasOwnProperty("limit")) {
                a.limit = 20
            }
            a.limitnum = a.limit;
            delete a.limit;
            if (a.hasOwnProperty("starttime")) {
                a.timesortfrom = a.starttime;
                delete a.starttime
            }
            if (a.hasOwnProperty("endtime")) {
                a.timesortto = a.endtime;
                delete a.endtime
            }
            a.limittononsuspendedevents = !0;
            var d = b.call([{
                methodname: "core_calendar_get_action_events_by_timesort",
                args: a
            }])[0];
            d.fail(c.exception);
            return d
        },
        queryByCourse: function queryByCourse(a) {
            if (!a.hasOwnProperty("limit")) {
                a.limit = 20
            }
            a.limitnum = a.limit;
            delete a.limit;
            if (a.hasOwnProperty("starttime")) {
                a.timesortfrom = a.starttime;
                delete a.starttime
            }
            if (a.hasOwnProperty("endtime")) {
                a.timesortto = a.endtime;
                delete a.endtime
            }
            var d = b.call([{
                methodname: "core_calendar_get_action_events_by_course",
                args: a
            }])[0];
            d.fail(c.exception);
            return d
        },
        queryByCourses: function queryByCourses(a) {
            if (!a.hasOwnProperty("limit")) {
                a.limit = 10
            }
            a.limitnum = a.limit;
            delete a.limit;
            if (a.hasOwnProperty("starttime")) {
                a.timesortfrom = a.starttime;
                delete a.starttime
            }
            if (a.hasOwnProperty("endtime")) {
                a.timesortto = a.endtime;
                delete a.endtime
            }
            var d = b.call([{
                methodname: "core_calendar_get_action_events_by_courses",
                args: a
            }])[0];
            d.fail(c.exception);
            return d
        }
    }
});
define("block_timeline/view_nav", ["jquery", "core/custom_interaction_events", "block_timeline/view", "core/ajax", "core/notification"], function(a, b, c, d, e) {
    var f = {
            TIMELINE_DAY_FILTER: "[data-region=\"day-filter\"]",
            TIMELINE_DAY_FILTER_OPTION: "[data-from]",
            TIMELINE_VIEW_SELECTOR: "[data-region=\"view-selector\"]",
            DATA_DAYS_OFFSET: "[data-days-offset]",
            DATA_DAYS_LIMIT: "[data-days-limit]"
        },
        g = function(a, b) {
            d.call([{
                methodname: "core_user_update_user_preferences",
                args: {
                    preferences: [{
                        type: a,
                        value: b
                    }]
                }
            }])[0].fail(e.exception)
        },
        h = function(d, h) {
            var i = d.find(f.TIMELINE_DAY_FILTER);
            b.define(i, [b.events.activate]);
            i.on(b.events.activate, f.TIMELINE_DAY_FILTER_OPTION, function(b, e) {
                var i = a(b.currentTarget).data("filtername");
                g("block_timeline_user_filter_preference", i);
                var j = a(b.target).closest(f.TIMELINE_DAY_FILTER_OPTION);
                if (j.hasClass("active")) {
                    return
                }
                var k = j.attr("data-from"),
                    l = j.attr("data-to"),
                    m = d.find(f.DATA_DAYS_OFFSET);
                m.attr("data-days-offset", k);
                if (l != void 0) {
                    m.attr("data-days-limit", l)
                } else {
                    m.removeAttr("data-days-limit")
                }
                c.reset(h);
                e.originalEvent.preventDefault()
            })
        },
        i = function(d, e) {
            var h = d.find(f.TIMELINE_VIEW_SELECTOR);
            h.on("shown shown.bs.tab", function() {
                c.shown(e)
            });
            b.define(h, [b.events.activate]);
            h.on(b.events.activate, "[data-toggle='tab']", function(b) {
                var c = a(b.currentTarget).data("filtername");
                g("block_timeline_user_sort_preference", c)
            })
        };
    return {
        init: function init(b, c) {
            b = a(b);
            h(b, c);
            i(b, c)
        }
    }
});
define("block_timeline/view_dates", ["jquery", "core/str", "block_timeline/event_list", "core/pubsub", "core/paged_content_events"], function(a, b, c, d, e) {
    var f = {
            EVENT_LIST_CONTAINER: "[data-region=\"event-list-container\"]"
        },
        g = [5, 10, 25],
        h = function(a) {
            var b = parseInt(a.data("limit"), 10),
                c = !1,
                d = g.map(function(a) {
                    if (b == a) {
                        c = !0
                    }
                    return {
                        value: a,
                        active: b == a
                    }
                });
            if (!c) {
                d[0].active = !0
            }
            return d
        },
        i = function(b, c) {
            var f = c + e.SET_ITEMS_PER_PAGE_LIMIT;
            d.subscribe(f, function(c) {
                a(b).data("limit", c)
            })
        },
        j = function(d) {
            var e = d.find(f.EVENT_LIST_CONTAINER),
                g = a(e).attr("id") + "user_block_timeline" + Math.random();
            i(d, g);
            var j = h(d),
                k = {
                    persistentLimitKey: "block_timeline_user_limit_preference",
                    eventNamespace: g
                };
            b.get_string("ariaeventlistpaginationnavdates", "block_timeline").then(function(a) {
                c.init(e, j, {}, a, k);
                return a
            }).catch(function() {
                c.init(e, j, {}, "", k)
            })
        };
    return {
        init: function init(b) {
            b = a(b);
            if (b.hasClass("active")) {
                j(b);
                b.data("seen", !0)
            }
        },
        reset: function reset(a) {
            a.removeAttr("data-seen");
            if (a.hasClass("active")) {
                j(a);
                a.data("seen", !0)
            }
        },
        shown: function shown(a) {
            if (!a.data("seen")) {
                j(a);
                a.data("seen", !0)
            }
        }
    }
});
define("block_timeline/view_courses", ["jquery", "core/notification", "core/custom_interaction_events", "core/str", "core/templates", "block_timeline/event_list", "core_course/repository", "block_timeline/calendar_events_repository"], function(a, b, c, d, e, f, g, h) {
    var i = {
            MORE_COURSES_BUTTON: "[data-action=\"more-courses\"]",
            MORE_COURSES_BUTTON_CONTAINER: "[data-region=\"more-courses-button-container\"]",
            NO_COURSES_EMPTY_MESSAGE: "[data-region=\"no-courses-empty-message\"]",
            COURSES_LIST: "[data-region=\"courses-list\"]",
            COURSE_ITEMS_LOADING_PLACEHOLDER: "[data-region=\"course-items-loading-placeholder\"]",
            COURSE_EVENTS_CONTAINER: "[data-region=\"course-events-container\"]",
            COURSE_NAME: "[data-region=\"course-name\"]",
            LOADING_ICON: ".loading-icon"
        },
        j = {
            COURSE_ITEMS: "block_timeline/course-items",
            LOADING_ICON: "core/loading"
        },
        k = 5,
        l = 86400,
        m = function(a) {
            a.find(i.COURSE_ITEMS_LOADING_PLACEHOLDER).addClass("hidden")
        },
        n = function(a) {
            a.find(i.MORE_COURSES_BUTTON_CONTAINER).addClass("hidden")
        },
        o = function(a) {
            a.find(i.MORE_COURSES_BUTTON_CONTAINER).removeClass("hidden")
        },
        p = function(a) {
            var b = a.find(i.MORE_COURSES_BUTTON);
            b.prop("disabled", !0);
            e.render(j.LOADING_ICON, {}).then(function(a) {
                b.append(a);
                return a
            }).catch(function() {
                return !1
            })
        },
        q = function(a) {
            var b = a.find(i.MORE_COURSES_BUTTON);
            b.prop("disabled", !1);
            b.find(i.LOADING_ICON).remove()
        },
        r = function(a) {
            a.find(i.NO_COURSES_EMPTY_MESSAGE).removeClass("hidden")
        },
        s = function(a, b) {
            var c = a.find(i.COURSES_LIST);
            e.appendNodeContents(c, b, "")
        },
        t = function(a) {
            return 0 < a.find(i.COURSE_EVENTS_CONTAINER).length
        },
        u = function(a) {
            return parseInt(a.attr("data-offset"), 10)
        },
        v = function(a, b) {
            a.attr("data-offset", b)
        },
        w = function(a) {
            return parseInt(a.attr("data-limit"), 10)
        },
        x = function(a) {
            return parseInt(a.attr("data-days-offset"), 10)
        },
        y = function(a) {
            var b = a.attr("data-days-limit");
            return b != void 0 ? parseInt(b, 10) : void 0
        },
        z = function(a) {
            return parseInt(a.attr("data-midnight"), 10)
        },
        A = function(a) {
            var b = z(a),
                c = x(a);
            return b + c * l
        },
        B = function(a) {
            var b = z(a),
                c = y(a);
            return c != void 0 ? b + c * l : !1
        },
        C = function(a, b, c, d) {
            var e = {
                courseids: a,
                starttime: b,
                limit: c
            };
            if (d) {
                e.endtime = d
            }
            return h.queryByCourses(e)
        },
        D = function(a) {
            return a.data("last-event-load-time")
        },
        E = function(a, b) {
            a.data("last-event-load-time", b)
        },
        F = function(a, b) {
            return D(a) > b
        },
        G = function(a, b, c) {
            var d = a.map(function(a) {
                return a.id
            });
            return C(d, b, k + 1, c)
        },
        H = function(a, b, c, d, f, g) {
            return e.render(j.COURSE_ITEMS, {
                courses: a,
                midnight: c,
                hasdaysoffset: !0,
                hasdayslimit: f != void 0,
                daysoffset: d,
                dayslimit: f,
                nodayslimit: f == void 0,
                urls: {
                    noevents: g
                }
            }).then(function(a) {
                m(b);
                if (a) {
                    s(b, a)
                } else {
                    if (!t(b)) {
                        r(b)
                    }
                }
                return a
            }).then(function(c) {
                if (a.length < 2) {
                    n(b)
                } else {
                    o(b)
                }
                return c
            }).catch(function() {
                m(b)
            })
        },
        I = function(c) {
            var e = u(c),
                h = w(c);
            return g.getEnrolledCoursesByTimelineClassification("inprogress", h, e, "fullname asc").then(function(b) {
                var e = Date.now(),
                    g = b.courses,
                    h = b.nextoffset,
                    i = x(c),
                    j = y(c),
                    l = z(c),
                    m = A(c),
                    n = B(c),
                    o = c.attr("data-no-events-url");
                v(c, h);
                var p = G(g, m, n),
                    q = H(g, c, l, i, j, o);
                return a.when(p, q).then(function(b) {
                    if (F(c, e)) {
                        return b
                    }
                    g.forEach(function(e) {
                        var g = e.id,
                            h = [],
                            i = c.find("[data-region=\"course-events-container\"][data-course-id=\"" + g + "\"]"),
                            j = i.find(f.rootSelector),
                            l = b.groupedbycourse.filter(function(a) {
                                return a.courseid == g
                            });
                        if (l.length) {
                            h = l[0].events
                        }
                        var m = a.Deferred().resolve({
                            events: h
                        }).promise();
                        d.get_string("ariaeventlistpaginationnavcourses", "block_timeline", e.fullnamedisplay).then(function(a) {
                            f.init(j, k, {
                                1: m
                            }, a);
                            return a
                        }).catch(function() {
                            f.init(j, k, {
                                1: m
                            })
                        })
                    });
                    return b
                })
            }).catch(b.exception)
        },
        J = function(c) {
            var e = Date.now(),
                g = A(c),
                h = B(c),
                j = c.find(i.COURSE_EVENTS_CONTAINER),
                l = j.map(function() {
                    return a(this).attr("data-course-id")
                }).get();
            E(c, e);
            return C(l, g, k + 1, h).then(function(b) {
                if (F(c, e)) {
                    return b
                }
                j.each(function(c, e) {
                    e = a(e);
                    var g = e.attr("data-course-id"),
                        h = e.find(i.COURSE_NAME).text(),
                        j = e.find(f.rootSelector),
                        l = a.Deferred(),
                        m = [],
                        n = b.groupedbycourse.filter(function(a) {
                            return a.courseid == g
                        });
                    if (n.length) {
                        m = n[0].events
                    }
                    l.resolve({
                        events: m
                    });
                    d.get_string("ariaeventlistpaginationnavcourses", "block_timeline", h).then(function(a) {
                        f.init(j, k, {
                            1: l.promise()
                        }, a);
                        return a
                    }).catch(function() {
                        f.init(j, k, {
                            1: l.promise()
                        })
                    })
                });
                return b
            }).catch(b.exception)
        },
        K = function(a) {
            c.define(a, [c.events.activate]);
            a.on(c.events.activate, i.MORE_COURSES_BUTTON, function(b, c) {
                p(a);
                I(a).then(function() {
                    q(a)
                }).catch(function() {
                    q(a)
                });
                if (c) {
                    c.originalEvent.preventDefault();
                    c.originalEvent.stopPropagation()
                }
                b.stopPropagation()
            })
        },
        L = function(a) {
            if (!a.attr("data-seen")) {
                if (t(a)) {
                    J(a)
                } else {
                    I(a)
                }
                a.attr("data-seen", !0)
            }
        };
    return {
        init: function init(b) {
            b = a(b);
            E(b, Date.now());
            if (b.hasClass("active")) {
                I(b);
                b.attr("data-seen", !0)
            }
            K(b)
        },
        reset: function reset(a) {
            a.removeAttr("data-seen");
            if (a.hasClass("active")) {
                L(a)
            }
        },
        shown: L
    }
});
define("media_videojs/loader", ["jquery", "core/event"], function(a, b) {
    var c, d = function(b, d) {
        d.find(".mediaplugin_videojs").addBack(".mediaplugin_videojs").find("audio, video").each(function() {
            var b = a(this).attr("id"),
                d = a(this).data("setup-lazy"),
                e = ["media_videojs/video-lazy"];
            if (d.techOrder && -1 !== d.techOrder.indexOf("youtube")) {
                e.push("media_videojs/Youtube-lazy")
            }
            if (d.techOrder && -1 !== d.techOrder.indexOf("flash")) {
                e.push("media_videojs/videojs-flash-lazy")
            }
            require(e, function(a) {
                if (c) {
                    c(a);
                    c = null
                }
                a(b, d)
            })
        })
    };
    return {
        setUp: function setUp(e) {
            c = e;
            d(null, a("body"));
            b.getLegacyEvents().done(function(b) {
                a(document).on(b.FILTER_CONTENT_UPDATED, d)
            })
        }
    }
});
define("media_videojs/document", [], function() {
    return document
});
define("media_videojs/window", [], function() {
    return window
});
! function a(b, c, d) {
    function e(g, h) {
        if (!c[g]) {
            if (!b[g]) {
                var i = "function" == typeof require && require;
                if (!h && i) return i(g, !0);
                if (f) return f(g, !0);
                var j = new Error("Cannot find module '" + g + "'");
                throw j.code = "MODULE_NOT_FOUND", j
            }
            var k = c[g] = {
                exports: {}
            };
            b[g][0].call(k.exports, function(a) {
                var c = b[g][1][a];
                return e(c ? c : a)
            }, k, k.exports, a, b, c, d)
        }
        return c[g].exports
    }
    for (var f = "function" == typeof require && require, g = 0; g < d.length; g++) e(d[g]);
    return e
}({
    1: [function(a, b, c) {
        ! function(c, d) {
            "use strict";
            var e = c.document,
                f = a("./src/utils/get-by-class"),
                g = a("./src/utils/extend"),
                h = a("./src/utils/index-of"),
                i = a("./src/utils/events"),
                j = a("./src/utils/to-string"),
                k = a("./src/utils/natural-sort"),
                l = a("./src/utils/classes"),
                m = a("./src/utils/get-attribute"),
                n = a("./src/utils/to-array"),
                o = function(b, c, p) {
                    var q, r = this,
                        s = a("./src/item")(r),
                        t = a("./src/add-async")(r);
                    q = {
                        start: function() {
                            r.listClass = "list", r.searchClass = "search", r.sortClass = "sort", r.page = 1e4, r.i = 1, r.items = [], r.visibleItems = [], r.matchingItems = [], r.searched = !1, r.filtered = !1, r.searchColumns = d, r.handlers = {
                                updated: []
                            }, r.plugins = {}, r.valueNames = [], r.utils = {
                                getByClass: f,
                                extend: g,
                                indexOf: h,
                                events: i,
                                toString: j,
                                naturalSort: k,
                                classes: l,
                                getAttribute: m,
                                toArray: n
                            }, r.utils.extend(r, c), r.listContainer = "string" == typeof b ? e.getElementById(b) : b, r.listContainer && (r.list = f(r.listContainer, r.listClass, !0), r.parse = a("./src/parse")(r), r.templater = a("./src/templater")(r), r.search = a("./src/search")(r), r.filter = a("./src/filter")(r), r.sort = a("./src/sort")(r), this.handlers(), this.items(), r.update(), this.plugins())
                        },
                        handlers: function() {
                            for (var a in r.handlers) r[a] && r.on(a, r[a])
                        },
                        items: function() {
                            r.parse(r.list), p !== d && r.add(p)
                        },
                        plugins: function() {
                            for (var a = 0; a < r.plugins.length; a++) {
                                var b = r.plugins[a];
                                r[b.name] = b, b.init(r, o)
                            }
                        }
                    }, this.reIndex = function() {
                        r.items = [], r.visibleItems = [], r.matchingItems = [], r.searched = !1, r.filtered = !1, r.parse(r.list)
                    }, this.toJSON = function() {
                        for (var a = [], b = 0, c = r.items.length; b < c; b++) a.push(r.items[b].values());
                        return a
                    }, this.add = function(a, b) {
                        if (0 !== a.length) {
                            if (b) return void t(a, b);
                            var c = [],
                                e = !1;
                            a[0] === d && (a = [a]);
                            for (var f = 0, g = a.length; f < g; f++) {
                                var h = null;
                                e = r.items.length > r.page, h = new s(a[f], d, e), r.items.push(h), c.push(h)
                            }
                            return r.update(), c
                        }
                    }, this.show = function(a, b) {
                        return this.i = a, this.page = b, r.update(), r
                    }, this.remove = function(a, b, c) {
                        for (var d = 0, e = 0, f = r.items.length; e < f; e++) r.items[e].values()[a] == b && (r.templater.remove(r.items[e], c), r.items.splice(e, 1), f--, e--, d++);
                        return r.update(), d
                    }, this.get = function(a, b) {
                        for (var c = [], d = 0, e = r.items.length; d < e; d++) {
                            var f = r.items[d];
                            f.values()[a] == b && c.push(f)
                        }
                        return c
                    }, this.size = function() {
                        return r.items.length
                    }, this.clear = function() {
                        return r.templater.clear(), r.items = [], r
                    }, this.on = function(a, b) {
                        return r.handlers[a].push(b), r
                    }, this.off = function(a, b) {
                        var c = r.handlers[a],
                            d = h(c, b);
                        return d > -1 && c.splice(d, 1), r
                    }, this.trigger = function(a) {
                        for (var b = r.handlers[a].length; b--;) r.handlers[a][b](r);
                        return r
                    }, this.reset = {
                        filter: function() {
                            for (var a = r.items, b = a.length; b--;) a[b].filtered = !1;
                            return r
                        },
                        search: function() {
                            for (var a = r.items, b = a.length; b--;) a[b].found = !1;
                            return r
                        }
                    }, this.update = function() {
                        var a = r.items,
                            b = a.length;
                        r.visibleItems = [], r.matchingItems = [], r.templater.clear();
                        for (var c = 0; c < b; c++) a[c].matching() && r.matchingItems.length + 1 >= r.i && r.visibleItems.length < r.page ? (a[c].show(), r.visibleItems.push(a[c]), r.matchingItems.push(a[c])) : a[c].matching() ? (r.matchingItems.push(a[c]), a[c].hide()) : a[c].hide();
                        return r.trigger("updated"), r
                    }, q.start()
                };
            "function" == typeof define && define.amd && define('filter_oembed/list', function() {
                return o
            }), b.exports = o, c.List = o
        }(window)
    }, {
        "./src/add-async": 2,
        "./src/filter": 3,
        "./src/item": 4,
        "./src/parse": 5,
        "./src/search": 6,
        "./src/sort": 7,
        "./src/templater": 8,
        "./src/utils/classes": 9,
        "./src/utils/events": 10,
        "./src/utils/extend": 11,
        "./src/utils/get-attribute": 12,
        "./src/utils/get-by-class": 13,
        "./src/utils/index-of": 14,
        "./src/utils/natural-sort": 15,
        "./src/utils/to-array": 16,
        "./src/utils/to-string": 17
    }],
    2: [function(a, b, c) {
        b.exports = function(a) {
            var b = function(c, d, e) {
                var f = c.splice(0, 50);
                e = e || [], e = e.concat(a.add(f)), c.length > 0 ? setTimeout(function() {
                    b(c, d, e)
                }, 1) : (a.update(), d(e))
            };
            return b
        }
    }, {}],
    3: [function(a, b, c) {
        b.exports = function(a) {
            return a.handlers.filterStart = a.handlers.filterStart || [], a.handlers.filterComplete = a.handlers.filterComplete || [],
                function(b) {
                    if (a.trigger("filterStart"), a.i = 1, a.reset.filter(), void 0 === b) a.filtered = !1;
                    else {
                        a.filtered = !0;
                        for (var c = a.items, d = 0, e = c.length; d < e; d++) {
                            var f = c[d];
                            b(f) ? f.filtered = !0 : f.filtered = !1
                        }
                    }
                    return a.update(), a.trigger("filterComplete"), a.visibleItems
                }
        }
    }, {}],
    4: [function(a, b, c) {
        b.exports = function(a) {
            return function(b, c, d) {
                var e = this;
                this._values = {}, this.found = !1, this.filtered = !1;
                var f = function(b, c, d) {
                    if (void 0 === c) d ? e.values(b, d) : e.values(b);
                    else {
                        e.elm = c;
                        var f = a.templater.get(e, b);
                        e.values(f)
                    }
                };
                this.values = function(b, c) {
                    if (void 0 === b) return e._values;
                    for (var d in b) e._values[d] = b[d];
                    c !== !0 && a.templater.set(e, e.values())
                }, this.show = function() {
                    a.templater.show(e)
                }, this.hide = function() {
                    a.templater.hide(e)
                }, this.matching = function() {
                    return a.filtered && a.searched && e.found && e.filtered || a.filtered && !a.searched && e.filtered || !a.filtered && a.searched && e.found || !a.filtered && !a.searched
                }, this.visible = function() {
                    return !(!e.elm || e.elm.parentNode != a.list)
                }, f(b, c, d)
            }
        }
    }, {}],
    5: [function(a, b, c) {
        b.exports = function(b) {
            var c = a("./item")(b),
                d = function(a) {
                    for (var b = a.childNodes, c = [], d = 0, e = b.length; d < e; d++) void 0 === b[d].data && c.push(b[d]);
                    return c
                },
                e = function(a, d) {
                    for (var e = 0, f = a.length; e < f; e++) b.items.push(new c(d, a[e]))
                },
                f = function(a, c) {
                    var d = a.splice(0, 50);
                    e(d, c), a.length > 0 ? setTimeout(function() {
                        f(a, c)
                    }, 1) : (b.update(), b.trigger("parseComplete"))
                };
            return b.handlers.parseComplete = b.handlers.parseComplete || [],
                function() {
                    var a = d(b.list),
                        c = b.valueNames;
                    b.indexAsync ? f(a, c) : e(a, c)
                }
        }
    }, {
        "./item": 4
    }],
    6: [function(a, b, c) {
        b.exports = function(a) {
            var b, c, d, e, f = {
                    resetList: function() {
                        a.i = 1, a.templater.clear(), e = void 0
                    },
                    setOptions: function(a) {
                        2 == a.length && a[1] instanceof Array ? c = a[1] : 2 == a.length && "function" == typeof a[1] ? e = a[1] : 3 == a.length && (c = a[1], e = a[2])
                    },
                    setColumns: function() {
                        0 !== a.items.length && void 0 === c && (c = void 0 === a.searchColumns ? f.toArray(a.items[0].values()) : a.searchColumns)
                    },
                    setSearchString: function(b) {
                        b = a.utils.toString(b).toLowerCase(), b = b.replace(/[-[\]{}()*+?.,\\^$|#]/g, "\\$&"), d = b
                    },
                    toArray: function(a) {
                        var b = [];
                        for (var c in a) b.push(c);
                        return b
                    }
                },
                g = {
                    list: function() {
                        for (var b = 0, c = a.items.length; b < c; b++) g.item(a.items[b])
                    },
                    item: function(a) {
                        a.found = !1;
                        for (var b = 0, d = c.length; b < d; b++)
                            if (g.values(a.values(), c[b])) return void(a.found = !0)
                    },
                    values: function(c, e) {
                        return !!(c.hasOwnProperty(e) && (b = a.utils.toString(c[e]).toLowerCase(), "" !== d && b.search(d) > -1))
                    },
                    reset: function() {
                        a.reset.search(), a.searched = !1
                    }
                },
                h = function(b) {
                    return a.trigger("searchStart"), f.resetList(), f.setSearchString(b), f.setOptions(arguments), f.setColumns(), "" === d ? g.reset() : (a.searched = !0, e ? e(d, c) : g.list()), a.update(), a.trigger("searchComplete"), a.visibleItems
                };
            return a.handlers.searchStart = a.handlers.searchStart || [], a.handlers.searchComplete = a.handlers.searchComplete || [], a.utils.events.bind(a.utils.getByClass(a.listContainer, a.searchClass), "keyup", function(b) {
                var c = b.target || b.srcElement,
                    d = "" === c.value && !a.searched;
                d || h(c.value)
            }), a.utils.events.bind(a.utils.getByClass(a.listContainer, a.searchClass), "input", function(a) {
                var b = a.target || a.srcElement;
                "" === b.value && h("")
            }), h
        }
    }, {}],
    7: [function(a, b, c) {
        b.exports = function(a) {
            a.sortFunction = a.sortFunction || function(b, c, d) {
                return d.desc = "desc" == d.order, a.utils.naturalSort(b.values()[d.valueName], c.values()[d.valueName], d)
            };
            var b = {
                    els: void 0,
                    clear: function() {
                        for (var c = 0, d = b.els.length; c < d; c++) a.utils.classes(b.els[c]).remove("asc"), a.utils.classes(b.els[c]).remove("desc")
                    },
                    getOrder: function(b) {
                        var c = a.utils.getAttribute(b, "data-order");
                        return "asc" == c || "desc" == c ? c : a.utils.classes(b).has("desc") ? "asc" : a.utils.classes(b).has("asc") ? "desc" : "asc"
                    },
                    getInSensitive: function(b, c) {
                        var d = a.utils.getAttribute(b, "data-insensitive");
                        "false" === d ? c.insensitive = !1 : c.insensitive = !0
                    },
                    setOrder: function(c) {
                        for (var d = 0, e = b.els.length; d < e; d++) {
                            var f = b.els[d];
                            if (a.utils.getAttribute(f, "data-sort") === c.valueName) {
                                var g = a.utils.getAttribute(f, "data-order");
                                "asc" == g || "desc" == g ? g == c.order && a.utils.classes(f).add(c.order) : a.utils.classes(f).add(c.order)
                            }
                        }
                    }
                },
                c = function() {
                    a.trigger("sortStart");
                    var c = {},
                        d = arguments[0].currentTarget || arguments[0].srcElement || void 0;
                    d ? (c.valueName = a.utils.getAttribute(d, "data-sort"), b.getInSensitive(d, c), c.order = b.getOrder(d)) : (c = arguments[1] || c, c.valueName = arguments[0], c.order = c.order || "asc", c.insensitive = "undefined" == typeof c.insensitive || c.insensitive), b.clear(), b.setOrder(c), c.sortFunction = c.sortFunction || a.sortFunction, a.items.sort(function(a, b) {
                        var d = "desc" === c.order ? -1 : 1;
                        return c.sortFunction(a, b, c) * d
                    }), a.update(), a.trigger("sortComplete")
                };
            return a.handlers.sortStart = a.handlers.sortStart || [], a.handlers.sortComplete = a.handlers.sortComplete || [], b.els = a.utils.getByClass(a.listContainer, a.sortClass), a.utils.events.bind(b.els, "click", c), a.on("searchStart", b.clear), a.on("filterStart", b.clear), c
        }
    }, {}],
    8: [function(a, b, c) {
        var d = function(a) {
            var b, c = this,
                d = function() {
                    b = c.getItemSource(a.item), b = c.clearSourceItem(b, a.valueNames)
                };
            this.clearSourceItem = function(b, c) {
                for (var d = 0, e = c.length; d < e; d++) {
                    var f;
                    if (c[d].data)
                        for (var g = 0, h = c[d].data.length; g < h; g++) b.setAttribute("data-" + c[d].data[g], "");
                    else c[d].attr && c[d].name ? (f = a.utils.getByClass(b, c[d].name, !0), f && f.setAttribute(c[d].attr, "")) : (f = a.utils.getByClass(b, c[d], !0), f && (f.innerHTML = ""));
                    f = void 0
                }
                return b
            }, this.getItemSource = function(b) {
                if (void 0 === b) {
                    for (var c = a.list.childNodes, d = 0, e = c.length; d < e; d++)
                        if (void 0 === c[d].data) return c[d].cloneNode(!0)
                } else {
                    if (/^tr[\s>]/.exec(b)) {
                        var f = document.createElement("table");
                        return f.innerHTML = b, f.firstChild
                    }
                    if (b.indexOf("<") !== -1) {
                        var g = document.createElement("div");
                        return g.innerHTML = b, g.firstChild
                    }
                    var h = document.getElementById(a.item);
                    if (h) return h
                }
                throw new Error("The list need to have at list one item on init otherwise you'll have to add a template.")
            }, this.get = function(b, d) {
                c.create(b);
                for (var e = {}, f = 0, g = d.length; f < g; f++) {
                    var h;
                    if (d[f].data)
                        for (var i = 0, j = d[f].data.length; i < j; i++) e[d[f].data[i]] = a.utils.getAttribute(b.elm, "data-" + d[f].data[i]);
                    else d[f].attr && d[f].name ? (h = a.utils.getByClass(b.elm, d[f].name, !0), e[d[f].name] = h ? a.utils.getAttribute(h, d[f].attr) : "") : (h = a.utils.getByClass(b.elm, d[f], !0), e[d[f]] = h ? h.innerHTML : "");
                    h = void 0
                }
                return e
            }, this.set = function(b, d) {
                var e = function(b) {
                        for (var c = 0, d = a.valueNames.length; c < d; c++)
                            if (a.valueNames[c].data) {
                                for (var e = a.valueNames[c].data, f = 0, g = e.length; f < g; f++)
                                    if (e[f] === b) return {
                                        data: b
                                    }
                            } else {
                                if (a.valueNames[c].attr && a.valueNames[c].name && a.valueNames[c].name == b) return a.valueNames[c];
                                if (a.valueNames[c] === b) return b
                            }
                    },
                    f = function(c, d) {
                        var f, g = e(c);
                        g && (g.data ? b.elm.setAttribute("data-" + g.data, d) : g.attr && g.name ? (f = a.utils.getByClass(b.elm, g.name, !0), f && f.setAttribute(g.attr, d)) : (f = a.utils.getByClass(b.elm, g, !0), f && (f.innerHTML = d)), f = void 0)
                    };
                if (!c.create(b))
                    for (var g in d) d.hasOwnProperty(g) && f(g, d[g])
            }, this.create = function(a) {
                if (void 0 !== a.elm) return !1;
                var d = b.cloneNode(!0);
                return d.removeAttribute("id"), a.elm = d, c.set(a, a.values()), !0
            }, this.remove = function(b) {
                b.elm.parentNode === a.list && a.list.removeChild(b.elm)
            }, this.show = function(b) {
                c.create(b), a.list.appendChild(b.elm)
            }, this.hide = function(b) {
                void 0 !== b.elm && b.elm.parentNode === a.list && a.list.removeChild(b.elm)
            }, this.clear = function() {
                if (a.list.hasChildNodes())
                    for (; a.list.childNodes.length >= 1;) a.list.removeChild(a.list.firstChild)
            }, d()
        };
        b.exports = function(a) {
            return new d(a)
        }
    }, {}],
    9: [function(a, b, c) {
        function d(a) {
            if (!a || !a.nodeType) throw new Error("A DOM element reference is required");
            this.el = a, this.list = a.classList
        }
        var e = a("./index-of"),
            f = /\s+/,
            g = Object.prototype.toString;
        b.exports = function(a) {
            return new d(a)
        }, d.prototype.add = function(a) {
            if (this.list) return this.list.add(a), this;
            var b = this.array(),
                c = e(b, a);
            return ~c || b.push(a), this.el.className = b.join(" "), this
        }, d.prototype.remove = function(a) {
            if ("[object RegExp]" == g.call(a)) return this.removeMatching(a);
            if (this.list) return this.list.remove(a), this;
            var b = this.array(),
                c = e(b, a);
            return ~c && b.splice(c, 1), this.el.className = b.join(" "), this
        }, d.prototype.removeMatching = function(a) {
            for (var b = this.array(), c = 0; c < b.length; c++) a.test(b[c]) && this.remove(b[c]);
            return this
        }, d.prototype.toggle = function(a, b) {
            return this.list ? ("undefined" != typeof b ? b !== this.list.toggle(a, b) && this.list.toggle(a) : this.list.toggle(a), this) : ("undefined" != typeof b ? b ? this.add(a) : this.remove(a) : this.has(a) ? this.remove(a) : this.add(a), this)
        }, d.prototype.array = function() {
            var a = this.el.getAttribute("class") || "",
                b = a.replace(/^\s+|\s+$/g, ""),
                c = b.split(f);
            return "" === c[0] && c.shift(), c
        }, d.prototype.has = d.prototype.contains = function(a) {
            return this.list ? this.list.contains(a) : !!~e(this.array(), a)
        }
    }, {
        "./index-of": 14
    }],
    10: [function(a, b, c) {
        var d = window.addEventListener ? "addEventListener" : "attachEvent",
            e = window.removeEventListener ? "removeEventListener" : "detachEvent",
            f = "addEventListener" !== d ? "on" : "",
            g = a("./to-array");
        c.bind = function(a, b, c, e) {
            a = g(a);
            for (var h = 0; h < a.length; h++) a[h][d](f + b, c, e || !1)
        }, c.unbind = function(a, b, c, d) {
            a = g(a);
            for (var h = 0; h < a.length; h++) a[h][e](f + b, c, d || !1)
        }
    }, {
        "./to-array": 16
    }],
    11: [function(a, b, c) {
        b.exports = function(a) {
            for (var b, c = Array.prototype.slice.call(arguments, 1), d = 0; b = c[d]; d++)
                if (b)
                    for (var e in b) a[e] = b[e];
            return a
        }
    }, {}],
    12: [function(a, b, c) {
        b.exports = function(a, b) {
            var c = a.getAttribute && a.getAttribute(b) || null;
            if (!c)
                for (var d = a.attributes, e = d.length, f = 0; f < e; f++) void 0 !== b[f] && b[f].nodeName === b && (c = b[f].nodeValue);
            return c
        }
    }, {}],
    13: [function(a, b, c) {
        b.exports = function() {
            return document.getElementsByClassName ? function(a, b, c) {
                return c ? a.getElementsByClassName(b)[0] : a.getElementsByClassName(b)
            } : document.querySelector ? function(a, b, c) {
                return b = "." + b, c ? a.querySelector(b) : a.querySelectorAll(b)
            } : function(a, b, c) {
                var d = [],
                    e = "*";
                null === a && (a = document);
                for (var f = a.getElementsByTagName(e), g = f.length, h = new RegExp("(^|\\s)" + b + "(\\s|$)"), i = 0, j = 0; i < g; i++)
                    if (h.test(f[i].className)) {
                        if (c) return f[i];
                        d[j] = f[i], j++
                    }
                return d
            }
        }()
    }, {}],
    14: [function(a, b, c) {
        var d = [].indexOf;
        b.exports = function(a, b) {
            if (d) return a.indexOf(b);
            for (var c = 0; c < a.length; ++c)
                if (a[c] === b) return c;
            return -1
        }
    }, {}],
    15: [function(a, b, c) {
        b.exports = function(a, b, c) {
            var d, e, f = /(^([+\-]?(?:\d*)(?:\.\d*)?(?:[eE][+\-]?\d+)?)?$|^0x[\da-fA-F]+$|\d+)/g,
                g = /^\s+|\s+$/g,
                h = /\s+/g,
                i = /(^([\w ]+,?[\w ]+)?[\w ]+,?[\w ]+\d+:\d+(:\d+)?[\w ]?|^\d{1,4}[\/\-]\d{1,4}[\/\-]\d{1,4}|^\w+, \w+ \d+, \d{4})/,
                j = /^0x[0-9a-f]+$/i,
                k = /^0/,
                l = c || {},
                m = function(a) {
                    return l.insensitive && ("" + a).toLowerCase() || "" + a
                },
                n = m(a) || "",
                o = m(b) || "",
                p = n.replace(f, "\0$1\0").replace(/\0$/, "").replace(/^\0/, "").split("\0"),
                q = o.replace(f, "\0$1\0").replace(/\0$/, "").replace(/^\0/, "").split("\0"),
                r = parseInt(n.match(j), 16) || 1 !== p.length && Date.parse(n),
                s = parseInt(o.match(j), 16) || r && o.match(i) && Date.parse(o) || null,
                t = function(a, b) {
                    return (!a.match(k) || 1 == b) && parseFloat(a) || a.replace(h, " ").replace(g, "") || 0
                };
            if (s) {
                if (r < s) return -1;
                if (r > s) return 1
            }
            for (var u = 0, v = p.length, w = q.length, x = Math.max(v, w); u < x; u++) {
                if (d = t(p[u], v), e = t(q[u], w), isNaN(d) !== isNaN(e)) return isNaN(d) ? 1 : -1;
                if (typeof d != typeof e && (d += "", e += ""), d < e) return -1;
                if (d > e) return 1
            }
            return 0
        }
    }, {}],
    16: [function(a, b, c) {
        function d(a) {
            return "[object Array]" === Object.prototype.toString.call(a)
        }
        b.exports = function(a) {
            if ("undefined" == typeof a) return [];
            if (null === a) return [null];
            if (a === window) return [window];
            if ("string" == typeof a) return [a];
            if (d(a)) return a;
            if ("number" != typeof a.length) return [a];
            if ("function" == typeof a && a instanceof Function) return [a];
            for (var b = [], c = 0; c < a.length; c++)(Object.prototype.hasOwnProperty.call(a, c) || c in a) && b.push(a[c]);
            return b.length ? b : []
        }
    }, {}],
    17: [function(a, b, c) {
        b.exports = function(a) {
            return a = void 0 === a ? "" : a, a = null === a ? "" : a, a = a.toString()
        }
    }, {}]
}, {}, [1]);
define('filter_oembed/responsivecontent', ["jquery"], function(a) {
    var b = function() {
        this.apply = function(b) {
            if (!b) {
                var c = ".oembed-content:not(.oembed-responsive) > *:not(video):first-child,";
                c += " .oembed-card:not(.oembed-processed)", b = a(c)
            }
            a(b).each(function() {
                var b = a(this).parent();
                if (!b.hasClass("oembed-responsive")) {
                    var c, d, e;
                    e = this.getAttribute("data-aspect-ratio"), null !== e && "0" !== e || (c = this.width || this.offsetWidth, d = this.height || this.offsetHeight, (c.indexOf("%") > -1 && d.indexOf("%") == -1 || c.indexOf("%") == -1 && d.indexOf("%") > -1) && (a(this).parent().attr("data-card-width") && a(this).parent().attr("data-card-height") ? (c = a(this).parent().attr("data-card-width"), d = a(this).parent().attr("data-card-height")) : (c = this.offsetWidth, d = this.offsetHeight)), c = parseInt(c), d = parseInt(d), e = d / c, this.setAttribute("data-aspect-ratio", e));
                    var f = this.tagName.toLowerCase();
                    "iframe" === f && (a(this).removeAttr("width"), a(this).removeAttr("height")), c = parseInt(this.offsetWidth);
                    var g = {
                        width: "100%"
                    };
                    if (a(this).css(g), !b.find(".oembed-responsive-pad").length) {
                        var h = 100 * e,
                            i = '<div class="oembed-responsive-pad" style="padding-top:' + h + '%"></div>';
                        b.append(i)
                    }
                    b.addClass("oembed-responsive")
                }
            })
        }
    };
    return new b
});
define('filter_oembed/manageproviders', ["jquery", "core/notification", "core/ajax", "core/templates", "core/fragment", "core/str", "filter_oembed/list"], function(a, b, c, d, e, f, g) {
    return {
        prevEditId: null,
        reloadRow: function(e, f, g, h) {
            g = g ? g : "reload", c.call([{
                methodname: "filter_oembed_provider_manage",
                args: {
                    pid: e,
                    action: g
                },
                done: function(b) {
                    d.render("filter_oembed/managementpagerow", b.providermodel).done(function(b) {
                        a(f).replaceWith(b), f = a("#oembed-display-providers_" + e), "function" == typeof h && h(f)
                    })
                },
                fail: function(a) {
                    b.exception(a)
                }
            }], !0, !0)
        },
        reloadProviders: function(e) {
            c.call([{
                methodname: "filter_oembed_providers",
                args: {
                    scope: "all"
                },
                done: function(b) {
                    d.render("filter_oembed/managementpage", b).done(function(b) {
                        var c = a(a.parseHTML(b)).html();
                        a("#providermanagement").html(c), "function" == typeof e && e()
                    })
                },
                fail: function(a) {
                    b.exception(a)
                }
            }], !0, !0)
        },
        listenEnableDisable: function() {
            var b = this;
            a("#providermanagement").on("click", ".oembed-provider-actions .filter-oembed-visibility", function(c) {
                c.preventDefault();
                var d = a(this).parents("tr")[0],
                    e = a(d).data("pid"),
                    f = !a(d).hasClass("dimmed_text"),
                    g = f ? "disable" : "enable";
                b.reloadRow(e, d, g)
            })
        },
        listenDelete: function() {
            var d = function(d) {
                var e = a(d).data("pid");
                c.call([{
                    methodname: "filter_oembed_provider_manage",
                    args: {
                        pid: e,
                        action: "delete"
                    },
                    done: function() {
                        a(d).remove()
                    },
                    fail: function(a) {
                        b.exception(a)
                    }
                }], !0, !0)
            };
            a("#providermanagement").on("click", ".oembed-provider-actions .filter-oembed-delete", function(c) {
                c.preventDefault();
                var e = a(this).parents("tr")[0],
                    g = a(a(this).parents("td").find(".list-providername")[0]).text();
                f.get_strings([{
                    key: "deleteprovidertitle",
                    component: "filter_oembed"
                }, {
                    key: "deleteproviderconfirm",
                    component: "filter_oembed",
                    param: g
                }, {
                    key: "ok",
                    component: "core"
                }, {
                    key: "cancel",
                    component: "core"
                }]).done(function(a) {
                    var c = a[0],
                        f = a[1],
                        g = a[2],
                        h = a[3];
                    b.confirm(c, f, g, h, function() {
                        d(e)
                    })
                })
            })
        },
        listenEdit: function() {
            var b = this,
                c = function(b) {
                    var c = "#oembed-display-providers_" + b;
                    a(c).removeClass("oembed-provider-editing"), a(c + " form").remove(), a(c + " td div.alert").remove()
                },
                f = function(b, c, f) {
                    var g, h = new RegExp("(?:course-)(\\S)"),
                        i = h.exec(a("body").attr("class")),
                        j = parseInt(i[1]);
                    g = c ? {
                        formdata: c,
                        pid: b
                    } : {
                        pid: b
                    }, e.loadFragment("filter_oembed", "provider", j, g).done(function(c, e) {
                        a("#oembed-display-providers_" + b).addClass("oembed-provider-editing"), d.replaceNodeContents(a("#oembed-display-providers_" + b + " .oembed-provider-details"), c, e), "function" == typeof f && f()
                    })
                };
            a("#providermanagement").on("click", ".oembed-provider-actions .filter-oembed-edit", function(d) {
                d.preventDefault();
                var e = a(this).parents("tr")[0],
                    g = a(e).data("pid");
                null !== b.prevEditId && (c(b.prevEditId), c(g)), b.prevEditId = g, f(g)
            }), a("#providermanagement").on("click", ".oembed-provider-details form #id_submitbutton", function(d) {
                d.preventDefault();
                var e = a(this).parents("tr")[0],
                    g = a(e).data("pid"),
                    h = a(this).parents("form")[0],
                    i = a(h).find('input[name="source"]').val();
                a(h).trigger("save-form-state");
                var j = a(h).serialize();
                f(g, j, function() {
                    var d = "#oembed-display-providers_" + g + " .oembed-provider-details",
                        f = d + " div.alert-success",
                        h = a(f);
                    if (h.length) {
                        var j = h[0].outerHTML;
                        if (c(g), i.indexOf("download::") > -1) {
                            var k = d + " .js-oembed-newprovider",
                                l = a(k);
                            l.length && (g = l.data("newproviderid"))
                        }
                        var m = function() {
                            var b = a("#oembed-display-providers_" + g + " td");
                            a(b).append(j), a(b).find(" div.alert-success").attr("tabindex", -1), a(b).find(" div.alert-success").focus()
                        };
                        i.indexOf("download::") > -1 ? b.reloadProviders(m) : b.reloadRow(g, e, "reload", m)
                    }
                })
            }), a("#providermanagement").on("click", ".oembed-provider-details form #id_cancel", function(b) {
                b.preventDefault();
                var d = a(this).parents("tr")[0];
                c(a(d).data("pid"))
            })
        },
        init: function() {
            var a = {
                valueNames: ["list-providername"]
            };
            new g("providermanagement", a), this.listenEnableDisable(), this.listenDelete(), this.listenEdit()
        }
    }
});
define('filter_oembed/preloader', ["jquery"], function(a) {
    return {
        apply: function() {
            a(".oembed-card-play").on("click", function() {
                var b = a(this).parent(".oembed-card"),
                    c = a(b.data("embed")),
                    d = a(b).width(),
                    e = a(b).height();
                if (a(c).find("iframe").length) {
                    var f = a(a(c).find("iframe")[0]),
                        g = f.attr("src"),
                        h = g.indexOf("?") > -1 ? "&" : "?";
                    g += h + "autoplay=1", g += "&auto_play=1", f.attr("src", g)
                }
                c.attr("data-card-width", d), c.attr("data-card-height", e), b.parent(".oembed-card-container").replaceWith(c)
            })
        }
    }
});
define('filter_oembed/oembed', ["jquery", "filter_oembed/preloader", "filter_oembed/responsivecontent"], function(a, b, c) {
    return {
        init: function() {
            var d = function() {
                var b = function(b) {
                        return !!b.className && a(b).is(".oembed-content, .oembed-card-container")
                    },
                    d = new MutationObserver(function(d) {
                        d.forEach(function(d) {
                            for (var e in d.addedNodes) {
                                var f = d.addedNodes[e];
                                b(f) && c.apply(a(f).find("> *:not(video):first-child, .oembed-card"))
                            }
                        })
                    }),
                    e = {
                        attributes: !0,
                        childList: !0,
                        characterData: !0,
                        subtree: !0
                    },
                    f = document.body;
                d.observe(f, e)
            };
            d(), a(document).ready(function() {
                b.apply(), c.apply()
            })
        }
    }
});
define("filter_poodll/anim_words", ["jquery", "core/log", "filter_poodll/speech_poodll"], function(a, b, c) {
    "use strict";
    b.debug("anim_words: initialising");
    return {
        analyser: null,
        cvs: null,
        cvsctx: null,
        speechrec: null,
        enabled: !1,
        drawparams: {
            textColor: "#0",
            wavColor: "#0",
            font: "14px Comic Sans MS",
            textAlign: "center"
        },
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        init: function init(a, b) {
            this.cvs = b;
            this.cvsctx = b.getContext("2d");
            this.analyser = a;
            this.speechrec = c.clone();
            this.speechrec.init("en-US")
        },
        setDrawParam: function setDrawParam(a, b) {
            this.drawparams[a] = b
        },
        clear: function clear() {
            this.cvsctx.clearRect(0, 0, this.cvs.width, this.cvs.height);
            this.enabled = !1;
            this.speechrec.stop()
        },
        start: function start() {
            this.enabled = !0;
            var a = this;
            this.analyser.core.fftSize = 2048;
            var b = this.analyser.core.fftSize,
                c = new Uint8Array(b),
                d = this.cvs.width,
                e = this.cvs.height;
            this.cvsctx.clearRect(0, 0, d, this.ceight);
            var f = ["..", "..", "..", "..", "..", "..", "..", ".."];
            this.speechrec.oninterimspeechcapture = function(a) {
                var b = a.split(" ");
                f = f.concat(b)
            };
            this.speechrec.start();
            var g = function() {
                if (!a.enabled) {
                    return
                }
                var h = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame,
                    j = h(g);
                a.analyser.core.getByteTimeDomainData(c);
                a.cvsctx.clearRect(0, 0, d, e);
                a.cvsctx.lineWidth = 2;
                a.cvsctx.strokeStyle = a.drawparams.wavColor;
                a.cvsctx.beginPath();
                for (var k = 0, l = 0; l < b; l++) {
                    var m = c[l] / 128,
                        n = m * e / 2;
                    if (0 == l) {
                        a.cvsctx.moveTo(k, n)
                    } else {
                        a.cvsctx.lineTo(k, n)
                    }
                    k += 1 * d / b
                }
                a.cvsctx.lineTo(d, e / 2);
                a.cvsctx.stroke();
                a.cvsctx.font = a.drawparams.font;
                a.cvsctx.fillStyle = a.drawparams.textColor;
                a.cvsctx.textAlign = a.drawparams.textAlign;
                var o = e / 4;
                for (l = 1; 9 > l; l++) {
                    a.cvsctx.fillText(f[f.length - l], d / 4 * (l % 4) + d / 8, 5 > l ? o : 3 * o)
                }
            };
            g()
        }
    }
});
define("filter_poodll/dlg_errordisplay", ["jquery", "core/log", "filter_poodll/dlg_poodll"], function(a, b, c) {
    b.debug("Error display dialog: initialising");
    return {
        dlg: null,
        instanceprops: null,
        dlgbox: null,
        init: function init(a) {
            this.dlg = c.clone();
            this.dlg.setHeader("Error");
            this.instanceprops = a
        },
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        fetch_dialogue_box: function fetch_dialogue_box() {
            return this.dlg.fetch_dialogue_box("errors")
        },
        set_dialogue_box: function set_dialogue_box(a) {
            this.dlgbox = a;
            this.dlg.set_dialogue_box(a)
        },
        open: function open(a) {
            var b = this,
                c = this.instanceprops,
                d = "<div class=\"filter_poodll_errordisplay\">",
                e = a;
            if (a.name) {
                e = M.util.get_string("recui_media" + a.name.toLowerCase(), "filter_poodll")
            }
            d += "<span>" + e + "</span>";
            d += "</div>";
            b.dlg.setContent(d);
            b.registerEvents();
            b.dlg.open()
        },
        registerEvents: function registerEvents() {}
    }
});
define("filter_poodll/util_dragdrop", ["jquery", "jqueryui", "core/log"], function(a, b, c) {
    "use strict";
    c.debug("Poodll util drag drop: initialising");
    return {
        theelement: !1,
        uploadfunction: !1,
        uploader: !1,
        started: !1,
        filebutton: !1,
        init: function init(a, b, d) {
            this.theelement = a;
            this.uploadfunction = b;
            this.uploader = d.uploader;
            this.filebutton = d.controlbar.filebutton;
            if (this.supports_dragdrop(a)) {
                c.debug("registering drag drop");
                this.register_dragdrop();
                this.do_visuals()
            } else {
                c.debug("drag drop not supported")
            }
        },
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        supports_dragdrop: function supports_dragdrop(a) {
            return "draggable" in a || "ondragstart" in a && "ondrop" in a
        },
        do_visuals: function do_visuals() {
            this.theelement.addClass("poodll-can-do-drag-drop")
        },
        turnoff_dragdrop: function turnoff_dragdrop() {
            if (!this.theelement) {
                return
            }
            this.theelement.removeClass("poodll-can-do-drag-drop");
            this.theelement.removeClass("is-poodll-drag-over");
            this.theelement.off("drag dragstart dragend dragover dragenter dragleave drop");
            this.theelement.on("drag dragstart dragend dragover dragenter dragleave drop", function(a) {
                a.preventDefault();
                a.stopPropagation()
            })
        },
        register_dragdrop: function register_dragdrop() {
            var a = this;
            this.theelement.on("drag dragstart dragend dragover dragenter dragleave drop", function(b) {
                b.preventDefault();
                b.stopPropagation();
                if (a.started) {}
            }).on("dragover dragenter", function() {
                a.theelement.addClass("is-poodll-drag-over")
            }).on("dragleave dragend drop", function() {
                a.theelement.removeClass("is-poodll-drag-over")
            }).on("drop", function(b) {
                if (a.started) {
                    return
                }
                var c = b.originalEvent.dataTransfer.files;
                a.uploadfunction(c, a.uploader);
                a.turnoff_dragdrop();
                a.filebutton.off("change");
                a.filebutton.attr("disabled", !0);
                a.started = !0
            })
        }
    }
});
define("filter_poodll/poodll_warningmediaskin", ["jquery", "jqueryui", "core/log", "filter_poodll/utils_amd"], function(a, b, c) {
    "use strict";
    c.debug("PoodLL Warning Media skin: initialising");
    return {
        instanceprops: null,
        pmr: null,
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        init: function init(a, b) {
            this.instanceprops = a;
            this.pmr = b
        },
        fetch_status_bar: function fetch_status_bar() {
            return ""
        },
        fetch_preview_audio: function fetch_preview_audio() {
            return ""
        },
        fetch_preview_video: function fetch_preview_video() {
            return ""
        },
        fetch_resource_audio: function fetch_resource_audio() {
            return ""
        },
        fetch_resource_video: function fetch_resource_video() {
            return ""
        },
        fetch_uploader_skin: function fetch_uploader_skin() {
            return !1
        },
        handle_timer_update: function handle_timer_update() {},
        onUploadSuccess: function onUploadSuccess() {},
        onUploadFailure: function onUploadFailure() {},
        onMediaSuccess_video: function onMediaSuccess_video() {},
        onMediaSuccess_audio: function onMediaSuccess_audio() {},
        insert_controlbar_video: function insert_controlbar_video(a, b, c, d) {
            var e = this.prepare_controlbar(a, b, c, d, "video");
            return e
        },
        insert_controlbar_audio: function insert_controlbar_audio(a, b, c, d) {
            var e = this.prepare_controlbar(a, b, c, d, "audio");
            return e
        },
        register_controlbar_events_video: function register_controlbar_events_video(a, b) {
            return this.register_events(b)
        },
        register_controlbar_events_audio: function register_controlbar_events_audio(a, b) {
            return this.register_events(b)
        },
        fetch_instance_props: function fetch_instance_props() {
            return this.instanceprops
        },
        prepare_controlbar: function prepare_controlbar(b, c, d, e, f) {
            var g = this.fetch_instance_props();
            switch (f) {
                case "audio":
                case "video":
                default:
                    var h = M.util.get_string("recui_unsupportedbrowser", "filter_poodll");
            }
            var i = g.config.media_skin_style,
                j = "video" == f ? "poodll_mediarecorder_video" : "poodll_mediarecorder_audio",
                k = "<div class=\"poodll_mediarecorderholder_warning " + j + "\" id=\"holder_" + c + "\">";
            k += "<div class=\"poodll_mediarecorderbox_warning\" id=\"" + c + "\">";
            k += "<div class=\"style-holder " + i + "\">";
            k += "<div class=\"poodll_mediarecorderbox_warning_message " + i + "\">" + h + "</div>";
            k += "</div></div></div>";
            a(b).prepend(k);
            return {}
        },
        register_events: function register_events() {}
    }
});
define("filter_poodll/poodll_readaloudmediaskin", ["jquery", "jqueryui", "core/log", "filter_poodll/utils_amd", "filter_poodll/upskin_radial", "filter_poodll/anim_hwave_mic", "filter_poodll/dlg_devicesettings"], function(a, b, c, d, e, f, g) {
    "use strict";
    c.debug("PoodLL Read Aloud Skin: initialising");
    return {
        instanceprops: null,
        pmr: null,
        devsettings: null,
        therecanim: null,
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        init: function init(a, b) {
            this.instanceprops = a;
            this.pmr = b;
            this.devsettings = g.clone();
            this.devsettings.init(b, a)
        },
        fetch_instanceprops: function fetch_instanceprops() {
            return this.instanceprops
        },
        onUploadSuccess: function onUploadSuccess(b) {
            a("#" + b + " > .poodll_save-recording").hide();
            a("#" + b + " > .poodll_savedsuccessfully").show()
        },
        onUploadFailure: function onUploadFailure() {},
        fetch_status_bar: function fetch_status_bar(a) {
            return "<div class=\"poodll_status_" + a + "\" width=\"320\" height=\"50\">00:00:00</div>"
        },
        fetch_preview_audio: function fetch_preview_audio(a) {
            return "<audio class=\"poodll_preview_" + a + " hide\"></audio>"
        },
        fetch_preview_video: function fetch_preview_video(a) {
            return this.fetch_preview_audio(a)
        },
        fetch_resource_audio: function fetch_resource_audio(a) {
            return "<audio class=\"poodll_resourceplayer_" + a + " hide\" ></audio>"
        },
        fetch_resource_video: function fetch_resource_video(a) {
            return this.fetch_resource_audio(a)
        },
        onMediaError: function onMediaError(a) {
            console.error("media error", a)
        },
        onMediaSuccess_video: function onMediaSuccess_video(a) {
            this.fetch_instanceprops(a);
            this.set_visual_mode("recordingmode", a)
        },
        onMediaSuccess_audio: function onMediaSuccess_audio(a) {
            var b = this.fetch_instanceprops(a);
            b.controlbar.preview.attr("src", null);
            b.uploader.Output("");
            this.therecanim.start();
            b.timer.reset();
            b.timer.start();
            this.update_status(a);
            this.set_visual_mode("recordingmode", a)
        },
        handle_timer_update: function handle_timer_update(a) {
            var b = this.fetch_instanceprops(a);
            b.controlbar.status.html(b.timer.fetch_display_time());
            if (0 == b.timer.seconds && 0 < b.timer.initseconds) {
                b.controlbar.stopbutton.click()
            }
        },
        update_status: function update_status(a) {
            var b = this.fetch_instanceprops(a);
            b.controlbar.status.html(b.timer.fetch_display_time())
        },
        fetch_uploader_skin: function fetch_uploader_skin(a, b) {
            var c = this.fetch_instanceprops(a),
                d = e.clone();
            d.init(c.config, b, c.controlbar.playcanvas, c.controlbar.status);
            return d
        },
        set_visual_mode: function set_visual_mode(a, b) {
            var c = this,
                d = this.fetch_instanceprops(b);
            switch (a) {
                case "startmode":
                    d.controlbar.status.hide();
                    c.disable_button(d.controlbar.startbutton);
                    c.enable_button(d.controlbar.testbutton);
                    c.disable_button(d.controlbar.stopbutton);
                    c.therecanim.clear();
                    break;
                case "readymode":
                    d.controlbar.status.hide();
                    c.enable_button(d.controlbar.startbutton);
                    c.disable_button(d.controlbar.testbutton);
                    c.disable_button(d.controlbar.stopbutton);
                    c.therecanim.clear();
                    break;
                case "recordingmode":
                    if ("1" == d.config.allowearlyexit && d.timer.enabled) {
                        c.enable_button(d.controlbar.stopbutton)
                    }
                    c.disable_button(d.controlbar.startbutton);
                    d.controlbar.status.hide();
                    break;
                case "aftermode":
                    c.disable_button(d.controlbar.startbutton);
                    c.disable_button(d.controlbar.stopbutton);
                    d.controlbar.status.show();
                    break;
            }
        },
        insert_controlbar_video: function insert_controlbar_video(a, b, c, d) {
            return this.prepare_controlbar_audio(a, b, c, d)
        },
        insert_controlbar_audio: function insert_controlbar_audio(a, b, c, d) {
            var e = this.prepare_controlbar(a, b, c, d, "audio");
            return e
        },
        prepare_controlbar: function prepare_controlbar(b, c, d) {
            var e = this.fetch_instanceprops(c),
                f = e.config.media_skin_style,
                g = this.pmr.fetch_strings(),
                h = M.util.get_string("recui_startactivity", "filter_poodll"),
                i = M.util.get_string("recui_testmic", "filter_poodll"),
                j = M.util.get_string("recui_stop", "filter_poodll"),
                k = this.fetch_status_bar("readaloud"),
                l = "<div class=\"poodll_mediarecorderholder_readaloud " + "poodll_mediarecorder_audio" + "\" id=\"holder_" + c + "\">";
            l += "<div class=\"poodll_mediarecorderbox_readaloud\" id=\"" + c + "\">";
            l += this.devsettings.fetch_dialogue_box();
            l += e.downloaddialog.fetch_dialogue_box();
            l += e.errordialog.fetch_dialogue_box();
            l += "<div class=\"style-holder " + f + "\">";
            l += d, l += "<div class=\"settingsicon\" id=\"settingsicon_" + c + "\"><button type=\"button\" class=\"btn btn-info btn-lg\" data-toggle=\"modal\" data-target=\"#myModal\"><i class=\"fa fa-cogs\" aria-hidden=\"true\"></i></button></div>";
            l += "<canvas id=\"" + c + "_playcanvas\" width=\"250\" height=\"120\"></canvas>";
            l += "<button type=\"button\" class=\"poodll_mediarecorder_button_readaloud poodll_start-recording_readaloud\">" + h + "</button>";
            l += "<button type=\"button\" class=\"poodll_mediarecorder_button_readaloud poodll_test-recording_readaloud\">" + i + "</button>";
            l += "<button type=\"button\" class=\"poodll_mediarecorder_button_readaloud poodll_stop-recording_readaloud\">" + j + "</button>";
            l += k, l += "</div></div></div>";
            a(b).prepend(l);
            var m = {
                settingsdialog: a("#" + c + " .poodll_dialogue_box_settings"),
                downloaddialog: a("#" + c + " .poodll_dialogue_box_download"),
                errorsdialog: a("#" + c + " .poodll_dialogue_box_errors"),
                settingsicon: a("#" + c + " .settingsicon"),
                status: a("#" + c + " .poodll_status_readaloud"),
                preview: a("#" + c + " .poodll_preview_readaloud"),
                startbutton: a("#" + c + " .poodll_start-recording_readaloud"),
                testbutton: a("#" + c + " .poodll_test-recording_readaloud"),
                stopbutton: a("#" + c + " .poodll_stop-recording_readaloud"),
                playcanvas: a("#" + c + "_playcanvas")
            };
            e.downloaddialog.set_dialogue_box(m.downloaddialog);
            e.errordialog.set_dialogue_box(m.errorsdialog);
            this.devsettings.set_dialogue_box(m.settingsdialog);
            return m
        },
        register_controlbar_events_video: function register_controlbar_events_video(a, b) {
            return this.register_controlbar_events_audio(a, b)
        },
        register_controlbar_events_audio: function register_controlbar_events_audio(a, b) {
            var c = this,
                d = this.pmr,
                e = this.fetch_instanceprops(b);
            e.config.recanim = "hwave_mic";
            var g = f.clone();
            c.therecanim = g;
            g.init(e.audioanalyser, e.controlbar.playcanvas.get(0));
            this.set_visual_mode("startmode", b);
            e.controlbar.testbutton.click(function() {
                e.config.hermes.disable();
                e.timer.disable();
                d.do_start_audio(e, a);
                setTimeout(function testover() {
                    d.do_stop_audio(e);
                    g.clear();
                    if (g.sounddetected) {
                        c.set_visual_mode("readymode", b)
                    }
                }, 4e3)
            });
            e.controlbar.settingsicon.click(function() {
                if (!c.uploaded) {
                    c.devsettings.open()
                } else {
                    e.downloaddialog.open()
                }
            });
            e.controlbar.startbutton.click(function() {
                e.config.hermes.enable();
                e.timer.enable();
                d.do_start_audio(e, a)
            });
            e.controlbar.stopbutton.click(function() {
                d.do_stop_audio(e);
                g.clear();
                e.timer.stop();
                c.update_status(b);
                var a = function() {
                    if (e.blobs && 0 < e.blobs.length) {
                        d.do_save_audio(e);
                        e.uploaded = !0;
                        c.disable_button(e.controlbar.startbutton)
                    } else {
                        setTimeout(a, 200)
                    }
                };
                setTimeout(a, 200);
                c.set_visual_mode("aftermode", b)
            });
            window.onbeforeunload = function() {}
        },
        enable_button: function enable_button(b) {
            a(b).attr("disabled", !1);
            a(b).removeClass("pmr_disabled")
        },
        disable_button: function disable_button(b) {
            a(b).attr("disabled", !0);
            a(b).addClass("pmr_disabled")
        }
    }
});
define("filter_poodll/msr_plain", ["jquery", "core/log", "filter_poodll/utils_amd"], function(a, b, c) {
    "use strict";
    b.debug("PoodLL Plain Recorder: initialising");
    return {
        timeout: 0,
        mediaRecorder: null,
        mediaStream: null,
        audioctx: null,
        msr: null,
        mediaType: null,
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        init: function init(a, b, c, d) {
            this.msr = a;
            this.mediaStream = b;
            this.audioctx = c;
            this.mediaType = d
        },
        start: function start(a) {
            var d = this;
            if (!this.mimeType && "video" == this.mediaType) {
                this.mimeType = "video/webm"
            }
            if ("audio" == this.mediaType) {
                if (this.mediaStream.getVideoTracks().length && this.mediaStream.getAudioTracks().length) {
                    var e;
                    if (!!navigator.mozGetUserMedia) {
                        e = new MediaStream;
                        e.addTrack(this.mediaStream.getAudioTracks()[0])
                    } else {
                        e = new MediaStream(this.mediaStream.getAudioTracks())
                    }
                    this.mediaStream = e
                }
            }
            if ("audio" == this.mediaType) {
                this.mimeType = c.is_chrome() ? "audio/webm" : "audio/ogg"
            }
            var f = {
                mimeType: this.mimeType
            };
            try {
                this.mediaRecorder = new MediaRecorder(this.mediaStream, f)
            } catch (a) {
                this.mediaRecorder = new MediaRecorder(this.mediaStream)
            }
            if ("canRecordMimeType" in this.mediaRecorder && !1 === this.mediaRecorder.canRecordMimeType(this.mimeType)) {
                b.debug("MediaRecorder API seems unable to record mimeType:" + this.mimeType)
            }
            this.mediaRecorder.ignoreMutedMedia = this.ignoreMutedMedia || !1;
            this.mediaRecorder.ondataavailable = function(a) {
                if (!a.data || !a.data.size) {
                    return
                }
                var b = d.getNativeBlob ? a.data : new Blob([a.data], {
                    type: d.mimeType || "video/webm"
                });
                d.msr.ondataavailable(b)
            };
            this.mediaRecorder.onerror = function(a) {
                if ("InvalidState" === a.name) {
                    b.debug("The MediaRecorder is not in a state in which the proposed operation is allowed to be executed.")
                } else if ("OutOfMemory" === a.name) {
                    b.debug("The UA has exhaused the available memory. User agents SHOULD provide as much additional information as possible in the message attribute.")
                } else if ("IllegalStreamModification" === a.name) {
                    b.debug("A modification to the stream has occurred that makes it impossible to continue recording. An example would be the addition of a Track while recording is occurring. User agents SHOULD provide as much additional information as possible in the message attribute.")
                } else if ("OtherRecordingError" === a.name) {
                    b.debug("Used for an fatal error other than those listed above. User agents SHOULD provide as much additional information as possible in the message attribute.")
                } else if ("GenericError" === a.name) {
                    b.debug("The UA cannot provide the codec or recording option that has been requested.", a)
                } else {
                    b.debug("MediaRecorder Error", a)
                }
                if (!!d.mediaRecorder && "inactive" !== d.mediaRecorder.state && "stopped" !== d.mediaRecorder.state) {
                    d.mediaRecorder.stop()
                }
            };
            var g = this.audioctx.createMediaStreamSource(this.mediaStream);
            g.connect(this.msr.audioanalyser.core);
            try {
                d.mediaRecorder.start(a)
            } catch (a) {
                d.mediaRecorder = null
            }
        },
        stop: function stop() {
            if (!this.mediaRecorder) {
                return
            }
            if ("recording" === this.mediaRecorder.state) {
                this.mediaRecorder.stop()
            }
        },
        pause: function pause() {
            if (!this.mediaRecorder) {
                return
            }
            if ("recording" === this.mediaRecorder.state) {
                this.mediaRecorder.pause()
            }
        },
        resume: function resume() {
            if (!this.mediaRecorder) {
                return
            }
            if ("paused" === this.mediaRecorder.state) {
                this.mediaRecorder.resume()
            }
        },
        clearRecordedData: function clearRecordedData() {
            if (!this.mediaRecorder) {
                return
            }
            this.pause();
            this.stop()
        },
        isMediaStreamActive: function isMediaStreamActive() {
            if ("active" in this.mediaStream) {
                if (!this.mediaStream.active) {
                    return !1
                }
            } else if ("ended" in this.mediaStream) {
                if (this.mediaStream.ended) {
                    return !1
                }
            }
            return !0
        },
        looper: function looper() {
            if (!this.mediaRecorder) {
                return
            }
            if (!1 === this.isMediaStreamActive()) {
                this.stop();
                return
            }
            setTimeout(this.looper, 1e3)
        }
    }
});
define("filter_poodll/speech_browser", ["jquery", "core/log"], function(a, b) {
    "use strict";
    b.debug("speech_browser: initialising");
    return {
        recognition: null,
        recognizing: !1,
        ignore_onend: !1,
        final_transcript: "",
        start_timestamp: 0,
        lang: "en-US",
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        init: function init(a) {
            var b = b || webkitSpeechRecognition;
            this.recognition = new b;
            this.recognition.continuous = !0;
            this.recognition.interimResults = !0;
            this.lang = a ? a : "en-US";
            this.register_events()
        },
        set_grammar: function set_grammar(a) {
            var b = b || webkitSpeechGrammarList;
            if (b) {
                var c = new b;
                c.addFromString(a, 1);
                this.recognition.grammars = c
            }
        },
        start: function start() {
            if (this.recognizing) {
                return
            }
            this.recognizing = !0;
            this.final_transcript = "";
            this.recognition.lang = this.lang;
            this.recognition.start();
            this.ignore_onend = !1;
            this.start_timestamp = Date.now()
        },
        stop: function stop() {
            this.recognizing = !1;
            this.recognition.stop()
        },
        register_events: function register_events() {
            var a = this.recognition,
                c = this;
            a.onstart = function() {
                c.recognizing = !0
            };
            a.onerror = function(a) {
                if ("no-speech" == a.error) {
                    b.debug("info_no_speech");
                    c.ignore_onend = !0
                }
                if ("audio-capture" == a.error) {
                    b.debug("info_no_microphone");
                    c.ignore_onend = !0
                }
                if ("not-allowed" == a.error) {
                    if (100 > a.timeStamp - c.start_timestamp) {
                        b.debug("info_blocked")
                    } else {
                        b.debug("info_denied")
                    }
                    c.ignore_onend = !0
                }
            };
            a.onend = function() {
                if (!1 == c.recognizing) {
                    return
                }
                if (c.ignore_onend) {
                    c.recognizing = !1
                } else {
                    a.start()
                }
            };
            a.onresult = function(a) {
                for (var b = "", d = a.resultIndex; d < a.results.length; ++d) {
                    if (a.results[d].isFinal) {
                        c.final_transcript += a.results[d][0].transcript;
                        c.onfinalspeechcapture(c.final_transcript);
                        c.final_transcript = ""
                    } else {
                        b += a.results[d][0].transcript;
                        c.oninterimspeechcapture(b)
                    }
                }
            }
        },
        onfinalspeechcapture: function onfinalspeechcapture(a) {
            b.debug(a)
        },
        oninterimspeechcapture: function oninterimspeechcapture() {}
    }
});
define("filter_poodll/anim_progress_bar_fresh", ["jquery", "core/log"], function(a, b) {
    "use strict";
    b.debug("Bar Progress: initialising");
    return {
        waveroot: null,
        playcanvas: null,
        context: null,
        startx: null,
        starty: null,
        barwidth: null,
        barheight: null,
        enabled: !1,
        drawparams: {
            barColor: "#6DDC6F",
            textColor: "#fff",
            font: "12px Arial",
            textAlign: "center"
        },
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        init: function init(a) {
            this.playcanvas = a.get(0);
            this.startx = 0;
            this.starty = 0;
            this.barwidth = this.playcanvas.width;
            this.barheight = this.playcanvas.height;
            this.context = this.playcanvas.getContext("2d")
        },
        test: function test(a) {
            var b = a,
                c = b.core.fftSize,
                d = new Uint8Array(c);
            console.log(b)
        },
        readyBars: function readyBars() {
            var b = a(".poodll_fresh_wave"),
                c = a("<div class=\"poodll_fresh_progress_bar\"><span></span></div>"),
                d = b.width() / 4;
            d.toFixed();
            b.empty();
            for (var e = 0; e < d; e++) {
                var f = a("<div class=\"poodll_fresh_point\"><div class=\"poodll_fresh_stick\" style=\"height: 8px\"></div></div>");
                b.append(f)
            }
            b.append(c)
        },
        playBars: function playBars(b, c) {
            var d = this;
            console.log(b, c, d.fetchCurrent());
            var e = a(".poodll_fresh_wave"),
                f = a(".poodll_fresh_progress_bar"),
                g = e.width() / 4;
            e.attr("data-ct", b).attr("data-duration", c);
            g.toFixed();
            var h = document.querySelectorAll(".poodll_fresh_point");
            console.log(h);
            for (var j = 0; j < g; j++) {
                if (h[j].children[0]) {
                    h[j].children[0].style.height = "4px"
                }
            }
            var k = function() {
                for (var a = [], b = 0, c; b < g; b++) {
                    c = Math.floor(50 * Math.random() + 4);
                    a.push(c);
                    var e = a[b] || 4;
                    h[b].children[0].style.height = e + "px"
                }
                f.css("left", 100 * d.fetchCurrent() + "%");
                var j = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;
                if (1 > d.fetchCurrent()) {
                    console.log(d.fetchCurrent());
                    j(k)
                }
            };
            k()
        },
        pauseBars: function pauseBars() {},
        setDrawParam: function setDrawParam(a, b) {
            this.drawparams[a] = b
        },
        clear: function clear() {
            this.context.clearRect(this.startx, this.starty, this.barwidth, this.barheight)
        },
        fetchCurrent: function fetchCurrent() {
            return 0
        },
        stop: function stop() {
            this.enabled = !1;
            this.clear()
        },
        stopthere: function stopthere() {
            this.enabled = !1
        },
        start: function start() {
            this.clear();
            this.enabled = !0;
            var a = this;
            this.context.textAlign = this.drawparams.textAlign;
            this.context.font = this.drawparams.font;
            var b = this.drawparams.textColor,
                c = function() {
                    if (!a.enabled) {
                        return
                    }
                    a.clear();
                    a.context.fillStyle = a.drawparams.barColor;
                    a.context.fillRect(a.startx, a.starty, a.fetchCurrent() * a.barwidth, a.barheight);
                    var b = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;
                    b(c)
                };
            c()
        }
    }
});
define("filter_poodll/audioanalyser", ["jquery", "core/log"], function(a, b) {
    "use strict";
    b.debug("audioanalyser: initialising");
    return {
        acontext: null,
        core: null,
        freq_data: null,
        wav_data: null,
        theinterval: null,
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        clear: function clear() {
            clearInterval(this.theinterval);
            this.theinterval = null
        },
        init: function init(a) {
            if (this.theinterval) {
                this.clear()
            }
            this.acontext = a;
            this.core = this.acontext.createAnalyser()
        },
        start: function start() {
            if (this.theinterval) {
                this.clear()
            }
            var a = this.core.frequencyBinCount;
            this.freq_data = new Uint8Array(a);
            this.wav_data = new Uint8Array(a);
            var b = this;
            this.theinterval = setInterval(function() {
                b.process_recent_data(b)
            }, 2e3)
        },
        process_recent_data: function process_recent_data(a) {
            a.core.getByteTimeDomainData(a.wav_data);
            a.wav_event(a.wav_data);
            a.core.getByteFrequencyData(a.freq_data);
            a.freq_event(a.freq_data)
        },
        wav_event: function wav_event() {},
        freq_event: function freq_event() {}
    }
});
define("filter_poodll/template_presets_amd", ["jquery", "core/log"], function(a, b) {
    "use strict";
    b.debug("Filter Poodll Presets initialising");
    return {
        presetdata: !1,
        dataitems: ["name", "key", "version", "instructions", "showatto", "showplayers", "requirecss", "requirejs", "shim", "defaults", "amd", "body", "bodyend", "script", "style", "dataset", "datasetvars", "alternate", "alternateend"],
        fetchcontrols: function fetchcontrols(a) {
            var b = {
                name: document.getElementById("id_s_filter_poodll_templatename_" + a),
                key: document.getElementById("id_s_filter_poodll_templatekey_" + a),
                version: document.getElementById("id_s_filter_poodll_templateversion_" + a),
                instructions: document.getElementById("id_s_filter_poodll_templateinstructions_" + a),
                showatto: document.getElementById("id_s_filter_poodll_template_showatto_" + a),
                showplayers: document.getElementById("id_s_filter_poodll_template_showplayers_" + a),
                requirecss: document.getElementById("id_s_filter_poodll_templaterequire_css_" + a),
                requirejs: document.getElementById("id_s_filter_poodll_templaterequire_js_" + a),
                shim: document.getElementById("id_s_filter_poodll_templaterequire_js_shim_" + a),
                defaults: document.getElementById("id_s_filter_poodll_templatedefaults_" + a),
                amd: document.getElementById("id_s_filter_poodll_template_amd_" + a),
                body: document.getElementById("id_s_filter_poodll_template_" + a),
                bodyend: document.getElementById("id_s_filter_poodll_templateend_" + a),
                script: document.getElementById("id_s_filter_poodll_templatescript_" + a),
                style: document.getElementById("id_s_filter_poodll_templatestyle_" + a),
                dataset: document.getElementById("id_s_filter_poodll_dataset_" + a),
                datasetvars: document.getElementById("id_s_filter_poodll_datasetvars_" + a),
                alternate: document.getElementById("id_s_filter_poodll_templatealternate_" + a),
                alternateend: document.getElementById("id_s_filter_poodll_templatealternate_end_" + a),
                presetdata: document.getElementById("id_s_filter_poodll_presetdata_" + a)
            };
            return b
        },
        fetchjsonbundle: function fetchjsonbundle(b, c) {
            var d = {};
            a.each(this.dataitems, function(a, b) {
                d[b] = c[b].value
            });
            var e = JSON.stringify(d);
            return e
        },
        exportbundle: function exportbundle(a) {
            var b = this.fetchcontrols(a);
            if ("" == b.key.value) {
                return
            }
            var c = this.fetchjsonbundle(a, b),
                d = document.createElement("a");
            d.setAttribute("href", "data:text/json;charset=utf-8," + encodeURIComponent(c));
            d.setAttribute("download", b.key.value + ".txt");
            if (document.createEvent) {
                var e = document.createEvent("MouseEvents");
                e.initEvent("click", !0, !0);
                d.dispatchEvent(e)
            } else {
                d.click()
            }
        },
        populateform: function populateform(b, c, d) {
            var e = this.fetchcontrols(b);
            if (!c && !d) {
                return
            }
            if (!(0 == c && d)) {
                d = this.presetdata
            }
            a.each(this.dataitems, function(a, b) {
                if (d[c].hasOwnProperty(b)) {
                    if ("cleartemplate" == d[c].key && ("key" == b || "name" == b)) {
                        var f = ""
                    } else {
                        var f = d[c][b]
                    }
                    e[b].value = f
                } else {
                    switch (b) {
                        case "amd":
                        case "showplayers":
                        case "showatto":
                            e[b].value = 0;
                            break;
                        default:
                            e[b].value = "";
                    }
                }
            })
        },
        dopopulate: function dopopulate(a, b) {
            this.populateform(a, 0, Array(b))
        },
        init: function init(b) {
            if (!this.presetdata) {
                var c = "#id_s_filter_poodll_presetdata_" + b.templateindex,
                    d = a(c).get(0);
                this.presetdata = JSON.parse(d.value);
                a(c).remove()
            }
            var e = this;
            a("select[name='filter_poodll/presets']").change(function() {
                debugger;
                e.populateform(b.templateindex, a(this).val())
            });
            var f = "#id_s_filter_poodll_dragdropsquare_" + b.templateindex;
            a(f).on("click", function() {
                e.exportbundle(b.templateindex)
            });
            a(f).on("dragover", function(b) {
                b.preventDefault();
                b.stopPropagation();
                a(this).addClass("filter_poodll_dragging")
            });
            a(f).on("dragleave", function(b) {
                b.preventDefault();
                b.stopPropagation();
                a(this).removeClass("filter_poodll_dragging")
            });
            a(f).on("drop", function(c) {
                c.preventDefault();
                var d = c.originalEvent.dataTransfer.files;
                if (d.length) {
                    var g = d[0];
                    if (g) {
                        var f = new FileReader;
                        f.onload = function(a) {
                            var c = a.target.result,
                                d = JSON.parse(c);
                            if (d.key) {
                                e.dopopulate(b.templateindex, d)
                            }
                        };
                        f.readAsText(g)
                    } else {
                        alert("Failed to load file")
                    }
                }
                a(this).removeClass("filter_poodll_dragging")
            })
        }
    }
});
define("filter_poodll/poodll_readseedmediaskin", ["jquery", "jqueryui", "core/log", "filter_poodll/utils_amd", "filter_poodll/upskin_radial", "filter_poodll/upskin_bar", "filter_poodll/anim_hwave_mic", "filter_poodll/dlg_devicesettings"], function(a, b, c, d, e, f, g, h) {
    "use strict";
    c.debug("PoodLL Read Seed Skin: initialising");
    return {
        instanceprops: null,
        pmr: null,
        devsettings: null,
        therecanim: null,
        buttonmode: null,
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        init: function init(a, b) {
            this.instanceprops = a;
            this.pmr = b;
            this.devsettings = h.clone();
            this.devsettings.init(b, a)
        },
        fetch_instanceprops: function fetch_instanceprops() {
            return this.instanceprops
        },
        onUploadSuccess: function onUploadSuccess(a) {
            this.set_visual_mode("allfinished", a)
        },
        onUploadFailure: function onUploadFailure() {},
        fetch_status_bar: function fetch_status_bar(a) {
            return "<div class=\"poodll_status_" + a + "\" width=\"320\" height=\"50\">00:00:00</div>"
        },
        fetch_preview_audio: function fetch_preview_audio(a) {
            return "<audio class=\"poodll_preview_" + a + " hide\"></audio>"
        },
        fetch_preview_video: function fetch_preview_video(a) {
            return this.fetch_preview_audio(a)
        },
        fetch_resource_audio: function fetch_resource_audio(a) {
            return "<audio class=\"poodll_resourceplayer_" + a + " hide\" ></audio>"
        },
        fetch_resource_video: function fetch_resource_video(a) {
            return this.fetch_resource_audio(a)
        },
        onMediaError: function onMediaError(a) {
            console.error("media error", a)
        },
        onMediaSuccess_video: function onMediaSuccess_video(a) {
            this.fetch_instanceprops(a);
            this.set_visual_mode("startbuttonrecording", a)
        },
        onMediaSuccess_audio: function onMediaSuccess_audio(a) {
            var b = this.fetch_instanceprops(a);
            b.controlbar.preview.attr("src", null);
            b.uploader.Output("");
            this.therecanim.start();
            b.timer.reset();
            b.timer.start();
            this.update_status(a);
            if ("testbuttonrecording" != this.buttonmode) {
                this.set_visual_mode("startbuttonrecording", a)
            }
        },
        handle_timer_update: function handle_timer_update(a) {
            var b = this.fetch_instanceprops(a);
            b.controlbar.status.html(b.timer.fetch_display_time());
            if (0 == b.timer.seconds && 0 < b.timer.initseconds) {
                this.process_recording_stop(a)
            }
        },
        update_status: function update_status(a) {
            var b = this.fetch_instanceprops(a);
            b.controlbar.status.html(b.timer.fetch_display_time())
        },
        fetch_uploader_skin: function fetch_uploader_skin(a, b) {
            var c = this.fetch_instanceprops(a),
                d = f.clone();
            d.init(c.config, b, c.controlbar.playcanvas, c.controlbar.status);
            return d
        },
        set_button_style: function set_button_style(b) {
            a.each(["testbuttonready", "testbuttonrecording", "startbuttonready", "startbuttoncountdown", "startbuttonrecording", "uploading", "allfinished"], function(b, c) {
                a(".poodll_mediarecorderbox_readseed").removeClass("poodll_mediarecorder_readseed_" + c);
                a(".poodll_mediarecorderbox_readseed").removeClass("readseed_canclick")
            });
            a(".poodll_mediarecorderbox_readseed").addClass("poodll_mediarecorder_readseed_" + b);
            if ("testbuttonready" == b || "startbuttonready" == b) {
                a(".poodll_mediarecorderbox_readseed").addClass("readseed_canclick")
            }
        },
        set_visual_mode: function set_visual_mode(a, b) {
            var c = this,
                d = this.fetch_instanceprops(b);
            this.buttonmode = a;
            d.config.hermes.postMessage({
                type: "recorderstatus",
                status: a
            });
            switch (a) {
                case "testbuttonready":
                    d.controlbar.status.hide();
                    d.controlbar.thecaption.text("SPEAK");
                    d.controlbar.thecaption.show();
                    d.controlbar.playcanvas.hide();
                    c.set_button_style(a);
                    break;
                case "testbuttonrecording":
                    d.controlbar.thecaption.hide();
                    d.controlbar.playcanvas.show();
                    c.set_button_style(a);
                    break;
                case "startbuttonready":
                    d.controlbar.thecaption.text("START");
                    d.controlbar.thecaption.show();
                    d.controlbar.playcanvas.hide();
                    c.set_button_style(a);
                    break;
                case "startbuttoncountdown":
                    d.controlbar.thecaption.text("----------");
                    d.controlbar.thecaption.show();
                    d.controlbar.playcanvas.hide();
                    c.set_button_style(a);
                    break;
                case "startbuttonrecording":
                    d.controlbar.playcanvas.show();
                    if ("1" == d.config.allowearlyexit && d.timer.enabled) {
                        var e = M.util.get_string("recui_clicktofinish", "filter_poodll");
                        d.controlbar.thecaption.text(e);
                        d.controlbar.thecaption.show()
                    } else {
                        d.controlbar.thecaption.hide()
                    }
                    c.set_button_style(a);
                    break;
                case "uploading":
                    d.controlbar.thecaption.html("<i class=\"fa fa-spinner fa-spin fa-3x fa-fw\"></i>");
                    d.controlbar.thecaption.show();
                    d.controlbar.playcanvas.hide();
                    c.set_button_style(a);
                    d.controlbar.status.show();
                    break;
                case "allfinished":
                    d.controlbar.thecaption.text("Finished");
                    d.controlbar.thecaption.show();
                    d.controlbar.playcanvas.hide();
                    d.controlbar.status.hide();
                    c.set_button_style(a);
                    break;
            }
        },
        insert_controlbar_video: function insert_controlbar_video(a, b, c, d) {
            return this.prepare_controlbar_audio(a, b, c, d)
        },
        insert_controlbar_audio: function insert_controlbar_audio(a, b, c, d) {
            var e = this.prepare_controlbar(a, b, c, d, "audio");
            return e
        },
        prepare_controlbar: function prepare_controlbar(b, c, d) {
            var e = this.fetch_instanceprops(c),
                f = e.config.media_skin_style,
                g = this.pmr.fetch_strings(),
                h = M.util.get_string("recui_startactivity", "filter_poodll"),
                i = M.util.get_string("recui_testmic", "filter_poodll"),
                j = M.util.get_string("recui_stop", "filter_poodll"),
                k = this.fetch_status_bar("readseed"),
                l = "<div class=\"poodll_mediarecorderholder_readseed " + "poodll_mediarecorder_audio" + "\" id=\"holder_" + c + "\">";
            l += "<div class=\"poodll_mediarecorderbox_readseed\" id=\"" + c + "\">";
            l += this.devsettings.fetch_dialogue_box();
            l += e.downloaddialog.fetch_dialogue_box();
            l += e.errordialog.fetch_dialogue_box();
            l += "<div class=\"style-holder " + f + "\">";
            l += d, l += "<div class=\"settingsicon\" id=\"settingsicon_" + c + "\"><button type=\"button\" class=\"btn btn-info btn-lg\" data-toggle=\"modal\" data-target=\"#myModal\"><i class=\"fa fa-cogs\" aria-hidden=\"true\"></i></button></div>";
            l += "<canvas id=\"" + c + "_playcanvas\" class=\"poodll_mediarecorder_playcanvas_readseed\" width=\"180\" height=\"50\"></canvas>";
            l += "<span id=\"" + c + "_caption\" class=\"poodll_mediarecorder_caption_readseed\"></span>";
            l += "<span id=\"" + c + "_bogusstartbutton\" class=\"poodll_mediarecorder_bogusstartbutton_readseed\"></span>";
            l += "<span id=\"" + c + "_bogusstopbutton\" class=\"poodll_mediarecorder_bogusstopbutton_readseed\"></span>";
            l += k;
            l += "</div></div></div>";
            a(b).prepend(l);
            var m = {
                settingsdialog: a("#" + c + " .poodll_dialogue_box_settings"),
                downloaddialog: a("#" + c + " .poodll_dialogue_box_download"),
                errorsdialog: a("#" + c + " .poodll_dialogue_box_errors"),
                settingsicon: a("#" + c + " .settingsicon"),
                status: a("#" + c + " .poodll_status_readseed"),
                preview: a("#" + c + " .poodll_preview_readseed"),
                bigbutton: a("#" + c + ".poodll_mediarecorderbox_readseed"),
                playcanvas: a("#" + c + "_playcanvas"),
                thecaption: a("#" + c + "_caption"),
                stopbutton: a("#" + c + " .poodll_mediarecorder_bogusstopbutton_readseed"),
                startbutton: a("#" + c + " .poodll_mediarecorder_bogusstartbutton_readseed")
            };
            e.downloaddialog.set_dialogue_box(m.downloaddialog);
            e.errordialog.set_dialogue_box(m.errorsdialog);
            this.devsettings.set_dialogue_box(m.settingsdialog);
            return m
        },
        register_controlbar_events_video: function register_controlbar_events_video(a, b) {
            return this.register_controlbar_events_audio(a, b)
        },
        register_controlbar_events_audio: function register_controlbar_events_audio(b, d) {
            var f = this,
                h = this.pmr,
                i = this.fetch_instanceprops(d);
            i.config.recanim = "hwave_mic";
            var e = g.clone();
            f.therecanim = e;
            e.init(i.audioanalyser, i.controlbar.playcanvas.get(0));
            this.set_visual_mode("testbuttonready", d);
            i.controlbar.bigbutton.click(function(c) {
                if (c.target !== this && !a(c.target).hasClass("poodll_mediarecorder_caption_readseed") && !a(c.target).hasClass("poodll_mediarecorder_playcanvas_readseed")) {
                    return
                }
                switch (f.buttonmode) {
                    case "testbuttonready":
                        var g = {};
                        g.type = "recorderstatus";
                        g.status = "testbuttonrecording";
                        i.config.hermes.postMessage(g);
                        i.config.hermes.disable();
                        i.timer.disable();
                        var j = function() {
                            if (i.mediaRecorder) {
                                h.do_stop_audio(i)
                            }
                            e.clear();
                            i.config.hermes.enable();
                            if (e.sounddetected) {
                                f.set_visual_mode("startbuttonready", d)
                            } else {
                                i.config.hermes.postMessage({
                                    type: "recorderstatus",
                                    status: "testrecordingfailed"
                                });
                                f.set_visual_mode("testbuttonready", d)
                            }
                        };
                        h.do_start_audio(i, b);
                        setTimeout(j, 4e3);
                        f.set_visual_mode("testbuttonrecording", d);
                        break;
                    case "startbuttonready":
                        var k = function() {
                            var a = new Date().getTime(),
                                c = a - l;
                            if (c > m) {
                                i.timer.enable();
                                h.do_start_audio(i, b)
                            } else {
                                var d = !1;
                                if (0 > n && 0 < c) {
                                    d = m / 1e3
                                } else if (1e3 > n && 1e3 < c) {
                                    d = m / 1e3 - 1
                                } else if (2e3 > n && 2e3 < c) {
                                    d = m / 1e3 - 2
                                }
                                if (d) {
                                    var e = {
                                        type: "countdownstatus",
                                        status: d
                                    };
                                    i.config.hermes.postMessage(e)
                                }
                                n = c;
                                setTimeout(k, 100)
                            }
                        };
                        i.config.hermes.enable();
                        f.set_visual_mode("startbuttoncountdown", d);
                        var l = new Date().getTime(),
                            m = 3e3,
                            n = -1;
                        setTimeout(k, 100);
                        break;
                    case "startbuttonrecording":
                        if ("1" == i.config.allowearlyexit && i.timer.enabled) {
                            f.process_recording_stop(d)
                        }
                        break;
                    case "stopbutton":
                        f.process_recording_stop();
                }
            });
            i.controlbar.settingsicon.click(function(a) {
                c.debug("we no proapagato");
                a.stopPropagation();
                if (!f.uploaded) {
                    f.devsettings.open()
                } else {
                    i.downloaddialog.open()
                }
            });
            window.onbeforeunload = function() {}
        },
        process_recording_stop: function process_recording_stop(a) {
            var b = this,
                c = this.pmr,
                d = this.fetch_instanceprops(a),
                e = b.therecanim;
            c.do_stop_audio(d);
            e.clear();
            d.timer.stop();
            b.update_status(a);
            var f = function() {
                if (d.blobs && 0 < d.blobs.length) {
                    c.do_save_audio(d);
                    d.uploaded = !0
                } else {
                    setTimeout(f, 200)
                }
            };
            setTimeout(f, 200);
            b.set_visual_mode("uploading", a)
        },
        enable_button: function enable_button(b) {
            a(b).attr("disabled", !1);
            a(b).removeClass("pmr_disabled")
        },
        disable_button: function disable_button(b) {
            a(b).attr("disabled", !0);
            a(b).addClass("pmr_disabled")
        }
    }
});
define("filter_poodll/dlg_download", ["jquery", "core/log", "filter_poodll/dlg_poodll", "filter_poodll/utils_amd"], function(a, b, c, d) {
    b.debug("download dialog: initialising");
    return {
        dlg: null,
        instanceprops: null,
        pmr: null,
        dlgbox: null,
        init: function init(a, b) {
            this.dlg = c.clone();
            this.dlg.setHeader("Download");
            this.instanceprops = b;
            this.pmr = a
        },
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        fetch_blob_url: function fetch_blob_url() {
            var a = d.simpleConcatenateBlobs(this.instanceprops.blobs, this.instanceprops.blobs[0].type),
                b = URL.createObjectURL(a);
            return b
        },
        fetch_dialogue_box: function fetch_dialogue_box() {
            return this.dlg.fetch_dialogue_box("download")
        },
        set_dialogue_box: function set_dialogue_box(a) {
            this.dlgbox = a;
            this.dlg.set_dialogue_box(a)
        },
        open: function open() {
            var a = this,
                b = this.instanceprops,
                c = "",
                e = new Date().toISOString().replace(/[^0-9]/g, ""),
                f = b.config.mediatype + "_" + e;
            d.doConcatenateBlobs(this.instanceprops.blobs, function(b) {
                switch (b.type) {
                    case "audio/wav":
                    case "audio/pcm":
                        c = ".wav";
                        break;
                    case "audio/ogg":
                        c = ".ogg";
                        break;
                    case "audio/webm":
                    case "video/webm":
                        c = ".webm";
                        break;
                    default:
                        var d = b.type.split("/");
                        if (1 < d.length) {
                            c = "." + d[1]
                        }
                }
                f = f + c;
                var e = URL.createObjectURL(b),
                    g = M.util.get_string("recui_downloadfile", "filter_poodll"),
                    h = "<div class=\"filter_poodll_dlgdownload_content\">";
                h += "<a href=\"" + e + "\" download=\"" + f + "\" class=\"btn btn-secondary\">" + g + "</a>";
                h += "</div>";
                a.dlg.setContent(h);
                a.registerEvents();
                a.dlg.open()
            })
        },
        registerEvents: function registerEvents() {}
    }
});
define("filter_poodll/speech_poodll", ["jquery", "core/log", "filter_poodll/speech_browser"], function(a, b, c) {
    "use strict";
    b.debug("speech_poodll: initialising");
    return {
        recognizer: null,
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        supports_browser: function supports_browser() {
            return "webkitSpeechRecognition" in window || "SpeechRecognition" in window
        },
        init: function init(a) {
            if ("webkitSpeechRecognition" in window || "SpeechRecognition" in window) {
                this.recognizer = c.clone();
                this.recognizer.init(a)
            } else {
                b.debug("no usable speech recognizer found")
            }
        },
        set_grammar: function set_grammar(a) {
            this.recognizer.set_grammar(a)
        },
        start: function start() {
            if (!this.recognizer) {
                return
            }
            this.recognizer.onfinalspeechcapture = this.onfinalspeechcapture;
            this.recognizer.oninterimspeechcapture = this.oninterimspeechcapture;
            if (this.recognizer) {
                this.recognizer.start()
            }
        },
        stop: function stop() {
            if (!this.recognizer) {
                return
            }
            if (this.recognizer) {
                this.recognizer.stop()
            }
        },
        onfinalspeechcapture: function onfinalspeechcapture(a) {
            if (!this.recognizer) {
                return
            }
            b.debug("final:" + a)
        },
        oninterimspeechcapture: function oninterimspeechcapture(a) {
            if (!this.recognizer) {
                return
            }
            b.debug("interim:" + a)
        }
    }
});
define("filter_poodll/msr_poodll", ["jquery", "core/log", "filter_poodll/utils_amd", "filter_poodll/msr_stereoaudio", "filter_poodll/msr_plain"], function(a, b, c, d, e) {
    "use strict";
    b.debug("PoodLL MS Recorder: initialising");
    return {
        sampleRate: 48e3,
        mimeType: "audio/wav",
        audioChannels: 1,
        bufferSize: 2048,
        therecorder: null,
        audioctx: null,
        audioanalyser: null,
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        init: function init(a, f, g, h, i) {
            this.audioctx = f;
            this.audioanalyser = g;
            if ("auto" != i) {
                switch (i) {
                    case "stereoaudio":
                        if ("audio" == h) {
                            this.therecorder = d
                        } else {
                            this.therecorder = e
                        }
                        break;
                    case "plain":
                    default:
                        this.therecorder = e;
                }
            } else if (c.has_mediarecorder()) {
                this.therecorder = e;
                b.debug("using plain recorder")
            } else if ("audio" == h) {
                this.therecorder = d;
                b.debug("using stereo recorder")
            }
            if (this.therecorder) {
                this.therecorder.init(this, a, f, h)
            }
        },
        start: function start() {
            this.therecorder.start();
            this.audioanalyser.start()
        },
        stop: function stop() {
            this.therecorder.stop();
            this.audioanalyser.clear()
        },
        pause: function pause() {
            this.therecorder.pause();
            this.audioanalyser.clear()
        },
        resume: function resume() {
            this.therecorder.resume();
            this.audioanalyser.start()
        },
        ondataavailable: function ondataavailable(a) {
            b.debug("ondataavailable:" + a)
        },
        onStartedDrawingNonBlankFrames: function onStartedDrawingNonBlankFrames() {
            b.debug("started drawing non blank frames:")
        },
        onstop: function onstop(a) {
            b.debug(a)
        }
    }
});
define("filter_poodll/poodll_flashsnapshotrecorder", ["jquery", "core/log", "filter_poodll/utils_amd", "filter_poodll/uploader", "filter_poodll/lzloader"], function(a, b, c, d, e) {
    "use strict";
    b.debug("PoodLL Flash Snapshot Recorder: initialising");
    return {
        savebutton: null,
        snapshotdatacontrol: null,
        supports_current_browser: function supports_current_browser(a) {
            var d = c.is_ios(),
                e = c.is_android();
            if (d || !a.flashonandroid && e) {
                return !1
            } else {
                if ("snapshot" != a.mediatype) {
                    return !1
                }
                b.debug("PoodLL Flash Snapshot Recorder: supports this browser");
                return !0
            }
        },
        embed: function embed(b, c) {
            var d = a.parseJSON(c.flashsnapshot_widgetjson);
            e.embed.swf(d)
        }
    }
});
define("filter_poodll/poodll_uploadmediaskin", ["jquery", "jqueryui", "core/log", "filter_poodll/utils_amd", "filter_poodll/upskin_radial", "filter_poodll/util_dragdrop"], function(a, b, c, d, e, f) {
    "use strict";
    c.debug("PoodLL Upload Media skin: initialising");
    return {
        instanceprops: null,
        pmr: null,
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        init: function init(a, b) {
            this.instanceprops = a;
            this.pmr = b
        },
        fetch_status_bar: function fetch_status_bar() {
            return ""
        },
        fetch_preview_audio: function fetch_preview_audio() {
            return ""
        },
        fetch_preview_video: function fetch_preview_video() {
            return ""
        },
        fetch_resource_audio: function fetch_resource_audio() {
            return ""
        },
        fetch_resource_video: function fetch_resource_video() {
            return ""
        },
        fetch_uploader_skin: function fetch_uploader_skin(a, b) {
            var c = this.fetch_instance_props(),
                d = e.clone();
            d.init(c.config, b, c.controlbar.uploadcanvas, c.controlbar.uploadmessages);
            d.setDrawParam("lineWidth", 2);
            d.setDrawParam("font", "14px Arial");
            return d
        },
        handle_timer_update: function handle_timer_update() {},
        onUploadSuccess: function onUploadSuccess(b) {
            a("#" + b + " > .poodll_save-recording").hide();
            a("#" + b + " > .poodll_savedsuccessfully").show()
        },
        onUploadFailure: function onUploadFailure() {},
        onMediaSuccess_video: function onMediaSuccess_video() {},
        onMediaSuccess_audio: function onMediaSuccess_audio() {},
        insert_controlbar_video: function insert_controlbar_video(a, b, c, d) {
            var e = this.prepare_controlbar(a, b, c, d, "video");
            return e
        },
        insert_controlbar_audio: function insert_controlbar_audio(a, b, c, d) {
            var e = this.prepare_controlbar(a, b, c, d, "audio");
            return e
        },
        register_controlbar_events_video: function register_controlbar_events_video(a, b) {
            return this.register_events(b)
        },
        register_controlbar_events_audio: function register_controlbar_events_audio(a, b) {
            return this.register_events(b)
        },
        fetch_instance_props: function fetch_instance_props() {
            return this.instanceprops
        },
        prepare_controlbar: function prepare_controlbar(b, c, e, f, g) {
            var h = this.fetch_instance_props(),
                i = "";
            switch (g) {
                case "video":
                    i = "video/webm,video/ogg,video/mp4,video/x-m4v,video/*";
                    break;
                case "snapshot":
                case "image":
                    i = "image/*";
                case "audio":
                    var j = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;
                    if (j) {
                        i = "video/*"
                    } else {
                        i = "audio/*"
                    }
                default:
                    i = "";
            }
            if (d.is_ios() || d.is_android()) {
                var k = M.util.get_string("recui_recordorchoose", "filter_poodll")
            } else {
                var k = M.util.get_string("recui_choosefile", "filter_poodll")
            }
            var l = h.config.media_skin_style,
                m = "video" == g ? "poodll_mediarecorder_video" : "poodll_mediarecorder_audio",
                n = "<div class=\"poodll_mediarecorderholder_upload " + m + "\" id=\"holder_" + c + "\">";
            n += "<div class=\"poodll_mediarecorderbox_upload\" id=\"" + c + "\">";
            n += h.errordialog.fetch_dialogue_box();
            n += "<div class=\"style-holder " + l + "\">";
            if ("audio" == g) {
                var o = 250,
                    p = 50
            } else {
                var o = 130,
                    p = 210
            }
            n += "<div class=\"poodll_mediarecorder_uploadcanvas_cont_upload\"><canvas id=\"" + c + "_uploadcanvas\" width=\"" + o + "\" height=\"" + p + "\" class=\"poodll_mediarecorder_uploadcanvas_upload\"></canvas></div>";
            n += "<div class=\"p_btn_wrapper\">";
            n += "<input type=\"file\" id=\"" + c + "_poodllfileselect\" name=\"poodllfileselect[]\" accept=\"" + i + "\"/>";
            n += "<button type=\"button\" id=\"" + c + "_p_btn\" class=\"p_btn\">" + k + "</button>";
            n += "</div>";
            n += "<div class=\"poodll_uploadmessages_once\"></div>";
            n += "</div></div></div>";
            a(b).prepend(n);
            var q = {
                errorsdialog: a("#" + c + " .poodll_dialogue_box_errors"),
                filebutton: a("#" + c + "_poodllfileselect"),
                startbutton: a("#" + c + "_p_btn"),
                uploadcanvas: a("#" + c + "_uploadcanvas"),
                uploadmessages: a("#" + c + " .poodll_uploadmessages_once")
            };
            h.errordialog.set_dialogue_box(q.errorsdialog);
            return q
        },
        register_events: function register_events() {
            var a = this,
                b = this.pmr,
                c = this.fetch_instance_props();
            c.config.hermes.enable();
            c.controlbar.filebutton.on("change", function(b) {
                var d = b.target.files || b.dataTransfer.files;
                a.FileSelectHandler(d, c.uploader);
                f.turnoff_dragdrop();
                c.controlbar.filebutton.off("change");
                c.controlbar.filebutton.attr("disabled", !0)
            });
            f.init(c.controlbar.uploadcanvas, this.FileSelectHandler, c)
        },
        FileSelectHandler: function FileSelectHandler(a, b) {
            for (var c = 0, d; d = a[c]; c++) {
                b.uploadBlob(d, d.type)
            }
        }
    }
});
define("filter_poodll/poodll_oncemediaskin", ["jquery", "jqueryui", "core/log", "filter_poodll/utils_amd", "filter_poodll/upskin_radial", "filter_poodll/anim_hwave_mic", "filter_poodll/dlg_devicesettings"], function(a, b, c, d, e, f, g) {
    "use strict";
    c.debug("PoodLL Once Recorder Skin: initialising");
    return {
        instanceprops: null,
        pmr: null,
        devsettings: null,
        therecanim: null,
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        init: function init(a, b) {
            this.instanceprops = a;
            this.pmr = b;
            this.devsettings = g.clone();
            this.devsettings.init(b, a)
        },
        fetch_instanceprops: function fetch_instanceprops() {
            return this.instanceprops
        },
        onUploadSuccess: function onUploadSuccess(b) {
            a("#" + b + " > .poodll_save-recording").hide();
            a("#" + b + " > .poodll_savedsuccessfully").show()
        },
        onUploadFailure: function onUploadFailure() {},
        fetch_status_bar: function fetch_status_bar(a) {
            return "<div class=\"poodll_status_" + a + "\" width=\"320\" height=\"50\">00:00:00</div>"
        },
        fetch_preview_audio: function fetch_preview_audio(a) {
            return "<audio class=\"poodll_preview_" + a + "\" style=\"display: none;\"></audio>"
        },
        fetch_preview_video: function fetch_preview_video(a) {
            return "<video class=\"poodll_preview_" + a + "\" style=\"display: none;\"></video>"
        },
        fetch_resource_audio: function fetch_resource_audio(a) {
            return "<audio class=\"poodll_resourceplayer_" + a + "\" style=\"display: none;\" ></audio>"
        },
        fetch_resource_video: function fetch_resource_video(a) {
            return "<video class=\"poodll_resourceplayer_" + a + "\" style=\"display: none;\"></video>"
        },
        onMediaError: function onMediaError(a) {
            console.error("media error", a)
        },
        onMediaSuccess_video: function onMediaSuccess_video(a) {
            var b = this.fetch_instanceprops();
            b.uploader.Output("");
            b.timer.reset();
            b.timer.start();
            this.update_status(a);
            this.set_visual_mode("recordingmode", a)
        },
        onMediaSuccess_audio: function onMediaSuccess_audio(a) {
            var b = this.fetch_instanceprops();
            b.controlbar.preview.attr("src", null);
            b.uploader.Output("");
            this.therecanim.start();
            b.timer.reset();
            b.timer.start();
            this.update_status(a);
            this.set_visual_mode("recordingmode", a)
        },
        handle_timer_update: function handle_timer_update(a) {
            var b = this.fetch_instanceprops();
            this.therecanim.displaytime = b.timer.fetch_display_time();
            this.update_status(a);
            if (0 == b.timer.seconds && 0 < b.timer.initseconds) {
                b.controlbar.stopbutton.click()
            }
        },
        update_status: function update_status() {
            var a = this.fetch_instanceprops();
            a.controlbar.status.html(a.timer.fetch_display_time())
        },
        fetch_uploader_skin: function fetch_uploader_skin(a, b) {
            var c = this.fetch_instanceprops(),
                d = e.clone();
            d.init(c.config, b, c.controlbar.uploadcanvas, c.controlbar.uploadmessages);
            d.setDrawParam("lineWidth", 2);
            d.setDrawParam("font", "14px Arial");
            return d
        },
        set_visual_mode: function set_visual_mode(a) {
            var b = this,
                c = this.fetch_instanceprops();
            switch (a) {
                case "readymode":
                    c.controlbar.status.show();
                    b.enable_button(c.controlbar.startbutton);
                    b.disable_button(c.controlbar.finishedbutton);
                    b.disable_button(c.controlbar.stopbutton);
                    c.controlbar.uploadcanvas.hide();
                    b.therecanim.setDrawParam("wavColor", "#CCCCCC");
                    b.therecanim.clear();
                    if ("video" == c.config.mediatype) {
                        c.controlbar.playcanvas.hide();
                        c.controlbar.preview.show()
                    } else {
                        c.controlbar.playcanvas.show();
                        c.controlbar.preview.hide()
                    }
                    break;
                case "recordingmode":
                    b.enable_button(c.controlbar.stopbutton);
                    b.disable_button(c.controlbar.startbutton);
                    if ("video" == c.config.mediatype) {
                        c.controlbar.playcanvas.hide();
                        c.controlbar.preview.show()
                    } else {
                        c.controlbar.playcanvas.show();
                        c.controlbar.preview.hide()
                    }
                    c.controlbar.uploadcanvas.hide();
                    b.therecanim.setDrawParam("wavColor", "#FF0000");
                    b.therecanim.clear();
                    c.controlbar.status.show();
                    break;
                case "aftermode":
                    b.disable_button(c.controlbar.startbutton);
                    b.disable_button(c.controlbar.stopbutton);
                    b.therecanim.setDrawParam("wavColor", "#CCCCCC");
                    b.therecanim.clear();
                    c.controlbar.playcanvas.hide();
                    if ("video" == c.config.mediatype) {
                        c.controlbar.preview.hide()
                    }
                    c.controlbar.uploadcanvas.show();
                    c.controlbar.status.show();
                    break;
            }
        },
        insert_controlbar_video: function insert_controlbar_video(a, b, c, d) {
            var e = this.prepare_controlbar(a, b, c, d, "video");
            return e
        },
        insert_controlbar_audio: function insert_controlbar_audio(a, b, c, d) {
            var e = this.prepare_controlbar(a, b, c, d, "audio");
            return e
        },
        prepare_controlbar: function prepare_controlbar(b, c, d, e, f) {
            var g = this.fetch_instanceprops(),
                h = g.config.media_skin_style,
                i = "video" == f ? "poodll_mediarecorder_video" : "poodll_mediarecorder_audio",
                j = this.pmr.fetch_strings(),
                k = j.recui_record,
                l = j.recui_testmic,
                m = j.recui_stop,
                n = this.fetch_status_bar("once"),
                o = "<div class=\"poodll_mediarecorderholder_once " + i + "\" id=\"holder_" + c + "\">";
            o += "<div class=\"poodll_mediarecorderbox_once\" id=\"" + c + "\">";
            o += this.devsettings.fetch_dialogue_box();
            o += g.downloaddialog.fetch_dialogue_box();
            o += g.errordialog.fetch_dialogue_box();
            o += "<div class=\"style-holder " + h + "\">";
            o += d, o += "<div class=\"settingsicon\" id=\"settingsicon_" + c + "\"><button type=\"button\" class=\"btn-poodllsettings\" data-toggle=\"modal\" data-target=\"#myModal\"><i class=\"fa fa-cogs\" aria-hidden=\"true\"></i></button></div>";
            o += "<canvas id=\"" + c + "_playcanvas\" width=\"250\" height=\"50\" class=\"poodll_mediarecorder_playcanvas_once\"></canvas>";
            o += n, o += "<button type=\"button\" class=\"poodll_mediarecorder_button_once poodll_start-recording_once\">" + k + "</button>";
            o += "<button type=\"button\" class=\"poodll_mediarecorder_button_once poodll_stop-recording_once\">" + m + "</button>";
            if ("audio" == f) {
                o += "<canvas id=\"" + c + "_uploadcanvas\" width=\"250\" height=\"50\" class=\"poodll_mediarecorder_uploadcanvas_once\"></canvas>"
            } else {
                o += "<canvas id=\"" + c + "_uploadcanvas\" width=\"130\" height=\"210\" class=\"poodll_mediarecorder_uploadcanvas_once\"></canvas>"
            }
            o += "<div class=\"poodll_uploadmessages_once\"></div>";
            o += "</div></div></div>";
            a(b).prepend(o);
            var p = {
                settingsdialog: a("#" + c + " .poodll_dialogue_box_settings"),
                downloaddialog: a("#" + c + " .poodll_dialogue_box_download"),
                errorsdialog: a("#" + c + " .poodll_dialogue_box_errors"),
                settingsicon: a("#" + c + " .settingsicon"),
                status: a("#" + c + " .poodll_status_once"),
                preview: a("#" + c + " .poodll_preview_once"),
                startbutton: a("#" + c + " .poodll_start-recording_once"),
                stopbutton: a("#" + c + " .poodll_stop-recording_once"),
                playcanvas: a("#" + c + "_playcanvas"),
                uploadcanvas: a("#" + c + "_uploadcanvas"),
                uploadmessages: a("#" + c + " .poodll_uploadmessages_once")
            };
            g.downloaddialog.set_dialogue_box(p.downloaddialog);
            g.errordialog.set_dialogue_box(p.errorsdialog);
            this.devsettings.set_dialogue_box(p.settingsdialog);
            return p
        },
        register_controlbar_events_video: function register_controlbar_events_video(a, b) {
            return this.register_controlbar_events_audio(a, b)
        },
        register_controlbar_events_audio: function register_controlbar_events_audio(a, b) {
            var c = this,
                d = this.pmr,
                e = this.fetch_instanceprops();
            e.config.recanim = "hwave_mic";
            var g = f.clone();
            c.therecanim = g;
            g.init(e.audioanalyser, e.controlbar.playcanvas.get(0));
            this.set_visual_mode("readymode", b);
            e.controlbar.settingsicon.click(function() {
                if (!c.uploaded) {
                    c.devsettings.open()
                } else {
                    e.downloaddialog.open()
                }
            });
            e.controlbar.startbutton.click(function() {
                e.config.hermes.enable();
                e.timer.enable();
                d.do_start_audio(e, a)
            });
            e.controlbar.stopbutton.click(function() {
                d.do_stop_audio(e);
                g.clear();
                e.timer.stop();
                c.update_status(b);
                var a = function() {
                    if (e.blobs && 0 < e.blobs.length) {
                        d.do_save_audio(e);
                        e.uploaded = !0;
                        c.disable_button(e.controlbar.startbutton)
                    } else {
                        setTimeout(a, 200)
                    }
                };
                setTimeout(a, 200);
                c.set_visual_mode("aftermode", b)
            });
            window.onbeforeunload = function() {}
        },
        enable_button: function enable_button(b) {
            a(b).attr("disabled", !1);
            a(b).removeClass("pmr_disabled")
        },
        disable_button: function disable_button(b) {
            a(b).attr("disabled", !0);
            a(b).addClass("pmr_disabled")
        }
    }
});
define("filter_poodll/upskin_plain", ["jquery", "core/log"], function(a, b) {
    "use strict";
    b.debug("upskin_plain: initialising");
    return {
        element: null,
        cvs: null,
        cvsctx: null,
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        init: function init(a, b, c, d) {
            this.config = a;
            this.element = b;
            this.cvs = c;
            this.messagearea = d
        },
        initControls: function initControls() {
            var b = this.config.media_skin_style,
                c = "<div id=\"" + this.config.widgetid + "_progress\" class=\"p_progress x progress_" + b + "\"><p></p></div>";
            c += "<div id=\"" + this.config.widgetid + "_messages\" class=\"p_messages x messages_" + b + "\"></div>";
            a(this.element).append(c)
        },
        initProgressSession: function initProgressSession(b) {
            var c = !1,
                d = a("#" + this.config.widgetid + "_progress");
            if (d.length) {
                var e = d.get(0);
                c = e.firstChild;
                if (null === c) {
                    c = e.appendChild(document.createElement("p"))
                }
                c.className = "";
                c.style.display = "block";
                c.style.backgroundPosition = "100% 0";
                b.upload.addEventListener("progress", function(a) {
                    var b = parseInt(100 - 100 * (a.loaded / a.total));
                    c.style.backgroundPosition = b + "% 0"
                })
            }
        },
        deactivateProgressSession: function deactivateProgressSession() {},
        showMessage: function showMessage(b) {
            var c = a("#" + this.config.widgetid + "_messages");
            c.text(b)
        }
    }
});
define("filter_poodll/upskin_radial", ["jquery", "core/log", "filter_poodll/anim_progress_radial"], function(a, b, c) {
    "use strict";
    b.debug("upskin_bar: initialising");
    return {
        element: null,
        cvs: null,
        percent: 0,
        progressradial: null,
        messagearea: null,
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        init: function init(a, b, d, e) {
            this.config = a;
            this.element = b;
            this.cvs = d;
            this.progressradial = c.clone();
            this.messagearea = e
        },
        setDrawParam: function setDrawParam(a, b) {
            this.progressradial.setDrawParam(a, b)
        },
        initControls: function initControls() {
            var a = this;
            this.progressradial.init(this.cvs, "#93c47d", !0);
            this.progressradial.fetchCurrent = function() {
                return a.percent
            }
        },
        initProgressSession: function initProgressSession(a) {
            var b = this;
            b.percent = 0;
            var c = M.util.get_string("recui_uploading", "filter_poodll");
            a.upload.addEventListener("progress", function(a) {
                if (a.lengthComputable) {
                    b.percent = a.loaded / a.total;
                    b.showMessage(c + "(" + Math.floor(100 * b.percent) + "%)")
                }
            });
            this.progressradial.start()
        },
        deactivateProgressSession: function deactivateProgressSession() {
            this.progressradial.stop();
            b.debug("deactivating session")
        },
        showMessage: function showMessage(a, b) {
            switch (b) {
                case "recui_awaitingconversion":
                    break;
                default:
                    this.messagearea.html(a);
            }
        }
    }
});
define("filter_poodll/uploader", ["jquery", "core/log", "filter_poodll/upskin_plain"], function(a, b, c) {
    "use strict";
    b.debug("Universal Uploader: initialising");
    return {
        config: null,
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        init: function init(a, b, d) {
            this.config = b;
            if (d) {
                this.upskin = d
            } else {
                this.upskin = c.clone();
                this.upskin.init(b, a, !1, !1)
            }
            this.upskin.initControls();
            this.registerEvents()
        },
        registerEvents: function registerEvents() {
            var a = this;
            if (this.config.hermes) {
                this.config.hermes.on("fetch_upload_url", function() {
                    a.fetchNewUploadDetails()
                })
            }
        },
        fetchNewUploadDetails: function fetchNewUploadDetails() {
            var a = new XMLHttpRequest,
                c = this;
            a.onreadystatechange = function() {
                if (4 === this.readyState) {
                    if (200 == a.status) {
                        var d = a.responseText,
                            e = JSON.parse(d);
                        if (e) {
                            if (0 < e.returnCode) {
                                var f = {
                                    id: c.config.id,
                                    type: "error",
                                    code: e.returnCode,
                                    message: e.returnMessage
                                };
                                c.config.hermes.postMessage(f)
                            } else {
                                c.config.allowedURL = e.allowedURL;
                                c.config.posturl = e.postURL;
                                c.config.filename = e.filename;
                                c.config.s3filename = e.s3filename;
                                c.config.s3root = e.s3root;
                                c.config.cloudfilename = e.shortfilename;
                                c.config.cloudroot = e.shortroot
                            }
                        } else {
                            b.debug("error:" + e.message)
                        }
                    } else {
                        b.debug("Not 200 response:" + a.status)
                    }
                }
            };
            var d = "wstoken=" + this.config.wstoken + "&wsfunction=" + "local_cpapi_fetch_upload_details" + "&moodlewsrestformat=" + this.config.moodlewsrestformat + "&mediatype=" + this.config.mediatype + "&parent=" + this.config.parent + "&appid=" + this.config.appid + "&owner=" + this.config.owner + "&region=" + this.config.region + "&expiredays=" + this.config.expiredays + "&transcode=" + this.config.transcode + "&transcoder=" + this.config.transcoder + "&transcribe=" + this.config.transcribe + "&subtitle=" + this.config.subtitle + "&transcribelanguage=" + this.config.language + "&transcribevocab=" + this.config.transcribevocab + "&notificationurl=" + this.config.notificationurl + "&sourcemimetype=" + this.config.sourcemimetype,
                e = M.cfg.wwwroot + "/webservice/rest/server.php";
            a.open("POST", e, !0);
            a.setRequestHeader("Cache-Control", "no-cache");
            a.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
            a.send(d)
        },
        uploadBlob: function uploadBlob(a, b) {
            this.uploadFile(a, b)
        },
        extractFilename: function extractFilename(a) {
            var b = a.indexOf("success<filename>");
            if (1 > b) {
                return !1
            }
            var c = a.indexOf("</filename>"),
                d = a.substring(b + "success<filename>".length, c);
            return d
        },
        fetchFileExtension: function fetchFileExtension(a) {
            var b = "";
            switch (a) {
                case "image/jpeg":
                    b = "jpg";
                    break;
                case "image/png":
                    b = "png";
                    break;
                case "audio/wav":
                    b = "wav";
                    break;
                case "audio/ogg":
                    b = "ogg";
                    break;
                case "video/quicktime":
                    b = "mov";
                    break;
                case "audio/mpeg3":
                    b = "mp3";
                    break;
                case "audio/mp3":
                    b = "mp3";
                    break;
                case "audio/webm":
                    b = "webm";
                    break;
                case "audio/x-mpeg-3":
                    b = "mp3";
                    break;
                case "audio/3gpp":
                    b = "3gpp";
                    break;
                case "video/mpeg3":
                    b = "3gpp";
                    break;
                case "video/mp4":
                    b = "mp4";
                    break;
                case "video/webm":
                    b = "webm";
                    break;
                case "video/ogg":
                    b = "ogg";
                    break;
            }
            return b
        },
        pokeFilename: function pokeFilename(c, d) {
            var e = "";
            if ("undefined" != typeof d.config.updatecontrol && "" !== d.config.updatecontrol) {
                e = a("[id=\"" + d.config.updatecontrol + "\"]")
            }
            if (1 > e.length) {
                e = a("[id=\"" + d.config.updatecontrol + "\"]", window.parent.document)
            }
            if (0 < e.length) {
                e.get(0).value = c
            } else {
                b.debug("upload failed #2");
                d.upskin.showMessage(M.util.get_string("recui_uploaderror", "filter_poodll"), "recui_uploaderror");
                return !1
            }
            e.trigger("change");
            return !0
        },
        alertRecorderSuccess: function alertRecorderSuccess(a) {
            if (this.config.hasOwnProperty("onuploadsuccess")) {
                this.config.onuploadsuccess(a)
            }
        },
        alertRecorderFailure: function alertRecorderFailure(a) {
            if (this.config.hasOwnProperty("onuploadfailure")) {
                this.config.onuploadfailure(a)
            }
        },
        completeAfterProcessing: function completeAfterProcessing(c, d, e) {
            this.upskin.showMessage(M.util.get_string("recui_awaitingconversion", "filter_poodll"), "recui_awaitingconversion");
            if (c.config.iframeembed) {
                d = c.config.s3root + c.config.s3filename
            }
            var f = {
                type: "awaitingprocessing",
                mediaurl: d,
                mediafilename: c.config.s3filename,
                sourcefilename: c.config.sourcefilename,
                sourcemimetype: c.config.sourcemimetype,
                s3root: c.config.s3root,
                id: c.config.id,
                updatecontrol: c.config.updatecontrol
            };
            if (c.config.transcribe) {
                f.transcripturl = d + ".txt";
                f.transcriptfilename = c.config.s3filename + ".txt"
            }
            c.config.hermes.postMessage(f);
            var g = this;
            a.ajax({
                url: c.config.s3root + c.config.s3filename,
                method: "HEAD",
                cache: !1,
                error: function error() {
                    b.debug("403 errors are normal here, till the file arrives back from conversion");
                    setTimeout(function() {
                        g.completeAfterProcessing(c, d, e + 500)
                    }, e)
                },
                success: function success(a, b, f) {
                    switch (f.status) {
                        case 200:
                            g.doUploadCompleteCallback(c, d);
                            break;
                        default:
                            setTimeout(function() {
                                g.completeAfterProcessing(c, d, e + 500)
                            }, e);
                    }
                }
            })
        },
        doUploadCompleteCallback: function doUploadCompleteCallback(a, b) {
            if (a.config.iframeembed) {
                b = a.config.s3root + a.config.s3filename
            }
            var c = [];
            c[0] = a.config.widgetid;
            c[1] = "filesubmitted";
            c[2] = b;
            c[3] = a.config.updatecontrol;
            c[4] = a.config.s3filename;
            this.upskin.showMessage(M.util.get_string("recui_uploadsuccess", "filter_poodll"), "recui_uploadsuccess");
            if (!a.config.iframeembed) {
                if (a.config.callbackjs && "" != a.config.callbackjs) {
                    if ("function" == typeof a.config.callbackjs) {
                        a.config.callbackjs(c)
                    } else {
                        this.executeFunctionByName(a.config.callbackjs, window, c)
                    }
                } else {
                    a.pokeFilename(b, a)
                }
            } else {
                var d = {
                    type: "filesubmitted",
                    mediaurl: a.config.s3root + a.config.s3filename,
                    mediafilename: a.config.s3filename,
                    sourcefilename: a.config.sourcefilename,
                    sourcemimetype: a.config.sourcemimetype,
                    s3root: a.config.s3root,
                    id: a.config.id,
                    updatecontrol: a.config.updatecontrol
                };
                if (a.config.transcribe) {
                    d.transcripturl = a.config.s3root + a.config.s3filename + ".txt";
                    d.transcriptfilename = a.config.s3filename + ".txt"
                }
                a.config.hermes.postMessage(d)
            }
        },
        postProcessUpload: function postProcessUpload(c, d) {
            var e = c.currentTarget;
            if (4 == e.readyState) {
                d.upskin.deactivateProgressSession();
                a(window).off("beforeunload", this.preventPrematureLeaving);
                if (200 == e.status) {
                    var f = d.config.filename;
                    if (!f) {
                        f = d.extractFilename(e.responseText)
                    }
                    if (!f) {
                        b.debug("upload failed #1");
                        b.debug(e);
                        return
                    }
                    if (d.config.iframeembed) {
                        this.completeAfterProcessing(d, f, 1e3)
                    } else {
                        this.doUploadCompleteCallback(d, f)
                    }
                    this.alertRecorderSuccess(d.config.widgetid)
                } else {
                    b.debug("upload failed #3");
                    b.debug(e);
                    d.upskin.showMessage(M.util.get_string("recui_uploaderror", "filter_poodll"), "recui_uploaderror");
                    this.alertRecorderFailure(d.config.widgetid)
                }
            }
        },
        preventPrematureLeaving: function preventPrematureLeaving() {
            return M.util.get_string("recui_waitwaitstilluploading", "filter_poodll")
        },
        uploadFile: function uploadFile(b, c) {
            var d = new XMLHttpRequest,
                e = this.config,
                f = this,
                g = this.fetchFileExtension(c);
            if ("undefined" == typeof e.iframeembed) {
                e.iframeembed = !1
            }
            var h = e.using_s3;
            this.upskin.initProgressSession(d);
            a(window).on("beforeunload", this.preventPrematureLeaving);
            this.upskin.showMessage(M.util.get_string("recui_uploading", "filter_poodll"), "recui_uploading");
            f.config.sourcemimetype = c;
            f.config.sourcefilename = f.config.s3filename;
            d.onreadystatechange = function(a) {
                if (h && 4 === this.readyState) {
                    if (e.iframeembed) {
                        f.update_filenames(f, g)
                    } else {
                        f.postprocess_s3_upload(f)
                    }
                }
                f.postProcessUpload(a, f)
            };
            if (h) {
                d.open("put", e.posturl, !0);
                d.setRequestHeader("Content-Type", "application/octet-stream");
                d.send(b)
            } else {
                if (!(b instanceof Blob)) {
                    var i = "datatype=uploadfile";
                    i += "&paramone=" + encodeURIComponent(b);
                    i += "&paramtwo=" + g;
                    i += "&paramthree=" + e.mediatype;
                    i += "&requestid=" + e.widgetid;
                    i += "&contextid=" + e.p2;
                    i += "&component=" + e.p3;
                    i += "&filearea=" + e.p4;
                    i += "&itemid=" + e.p5;
                    d.open("POST", e.posturl, !0);
                    d.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
                    d.setRequestHeader("Cache-Control", "no-cache");
                    d.send(i)
                } else {
                    var j = new window.FileReader;
                    j.readAsDataURL(b);
                    j.onloadend = function() {
                        var a = j.result,
                            b = "datatype=uploadfile";
                        b += "&paramone=" + encodeURIComponent(a);
                        b += "&paramtwo=" + g;
                        b += "&paramthree=" + e.mediatype;
                        b += "&requestid=" + e.widgetid;
                        b += "&contextid=" + e.p2;
                        b += "&component=" + e.p3;
                        b += "&filearea=" + e.p4;
                        b += "&itemid=" + e.p5;
                        d.open("POST", e.posturl, !0);
                        d.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
                        d.setRequestHeader("Cache-Control", "no-cache");
                        d.send(b)
                    }
                }
            }
        },
        update_filenames: function update_filenames(a, b) {
            var c = a.config;
            switch (c.mediatype) {
                case "audio":
                    a.config.sourcefilename = c.s3filename.replace(".mp3", "." + b);
                    if (!c.transcode) {
                        a.config.s3filename = a.config.sourcefilename;
                        a.config.cloudfilename = a.config.s3filename
                    }
                    break;
                case "video":
                    a.config.sourcefilename = c.s3filename.replace(".mp4", "." + b);
                    if (!c.transcode) {
                        a.config.s3filename = a.config.sourcefilename
                    }
                    break;
            }
        },
        postprocess_s3_upload: function postprocess_s3_upload(a) {
            var b = a.config,
                c = new FormData;
            c.append("datatype", "handles3upload");
            c.append("contextid", b.p2);
            c.append("component", b.p3);
            c.append("filearea", b.p4);
            c.append("itemid", b.p5);
            c.append("filename", b.filename);
            c.append("mediatype", b.mediatype);
            if (!navigator.sendBeacon) {
                navigator.sendBeacon = function(a, b) {
                    window.fetch(a, {
                        method: "POST",
                        body: b,
                        credentials: "include"
                    })
                }
            }
            navigator.sendBeacon(M.cfg.wwwroot + "/filter/poodll/poodllfilelib.php", c)
        },
        executeFunctionByName: function executeFunctionByName(a, b, c) {
            for (var d = a.split("."), e = d.pop(), f = 0; f < d.length; f++) {
                b = b[d[f]]
            }
            return b[e].call(this, c)
        },
        dataURItoBlob: function dataURItoBlob(a, b) {
            for (var c = atob(a.split(",")[1]), d = new ArrayBuffer(c.length), e = new Uint8Array(d), f = 0; f < c.length; f++) {
                e[f] = c.charCodeAt(f)
            }
            return new Blob([d], {
                type: b
            })
        },
        Output: function Output(a) {
            this.upskin.showMessage(a, "recorderskinmsg")
        }
    }
});
define("filter_poodll/drawingboard_amd", ["jquery", "core/log", "filter_poodll/utils_amd", "filter_poodll/uploader", "filter_poodll/drawingboard"], function(a, b, c, d, e) {
    "use strict";
    b.debug("Filter PoodLL: drawingboard.js initialising");
    return {
        instanceprops: [],
        loaddrawingboard: function loaddrawingboard(b) {
            var c = "#amdopts_" + b.recorderid,
                f = a(c).get(0);
            if (f) {
                b = JSON.parse(f.value);
                if (b.bgimage) {
                    var g = "transparent"
                } else {
                    var g = "background";
                    b.bgimage = "#FFF"
                }
                this.config = b;
                a(c).remove()
            }
            var h = "#" + b.recorderid + "drawing-board-id",
                i = new e.Board(b.recorderid + "_drawing-board-id", {
                    recorderid: b.recorderid,
                    size: 3,
                    background: b.bgimage,
                    controls: ["Color", {
                        Size: {
                            type: "auto"
                        }
                    }, {
                        DrawingMode: {
                            filler: !1,
                            eraser: !0,
                            pencil: !0
                        }
                    }, "Navigation"],
                    droppable: !0,
                    webStorage: !1,
                    enlargeYourContainer: !0,
                    eraserColor: g
                });
            b.db = i;
            var j = b.vectordata;
            if (j) {
                if (0 != j.indexOf("{\"shapes\"") && 0 != j.indexOf("{\"colors\"")) {
                    i.history = Y.JSON.parse(j);
                    i.setImg(i.history.values[i.history.position - 1])
                }
            }
            b.uploader = d.clone();
            b.uploader.init(h, b);
            this.instanceprops[b.recorderid] = b;
            this.registerEvents(b.recorderid)
        },
        registerEvents: function registerEvents(b) {
            var d = this.instanceprops[b];
            if (d.autosave) {
                var e = function() {
                        var a = document.getElementById(b + "_messages");
                        if (a) {
                            a.innerHTML = "File has not been saved.";
                            var e = document.getElementById(b + "_btn_upload_whiteboard");
                            e.disabled = !1;
                            var f = c.timeouthandles[b];
                            if (f) {
                                clearTimeout(f)
                            }
                            c.timeouthandles[b] = setTimeout(function() {
                                c.WhiteboardUploadHandler(b, d.db, d, d.uploader)
                            }, d.autosave)
                        }
                    },
                    f = function() {
                        var a = document.getElementById(b + "_messages");
                        if (a) {
                            var e = c.timeouthandles[b];
                            if (e) {
                                clearTimeout(e)
                            }
                            c.timeouthandles[b] = setTimeout(function() {
                                c.WhiteboardUploadHandler(b, d.db, d, d.uploader)
                            }, d.autosave)
                        }
                    };
                d.db.ev.bind("board:startDrawing", e);
                d.db.ev.bind("board:stopDrawing", f);
                d.db.ev.bind("board:reset", f);
                d.db.ev.bind("historyNavigation", f)
            } else {
                var f = function() {
                    var a = document.getElementById(b + "_messages");
                    if (a) {
                        a.innerHTML = "File has not been saved."
                    }
                };
                d.db.ev.bind("board:stopDrawing", f)
            }
            var g = a("#" + b + "_btn_upload_whiteboard");
            if (g) {
                if (d.autosave) {
                    g.click(function() {
                        c.WhiteboardUploadHandler(b, d.db, d, d.uploader)
                    })
                } else {
                    g.click(function() {
                        var a = c.getCvs(b, d.db, d);
                        c.pokeVectorData(b, d.db, d);
                        d.uploader.uploadFile(a.toDataURL(), "image")
                    })
                }
            }
        }
    }
});
define("filter_poodll/anim_progress_bar", ["jquery", "core/log"], function(a, b) {
    "use strict";
    b.debug("Bar Progress: initialising");
    return {
        playcanvas: null,
        context: null,
        startx: null,
        starty: null,
        barwidth: null,
        barheight: null,
        enabled: !1,
        drawparams: {
            barColor: "#C2C2C2",
            textColor: "#0",
            font: "12px Arial",
            textAlign: "center"
        },
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        init: function init(a) {
            this.playcanvas = a.get(0);
            this.startx = 0;
            this.starty = 0;
            this.barwidth = this.playcanvas.width;
            this.barheight = this.playcanvas.height;
            this.context = this.playcanvas.getContext("2d")
        },
        setDrawParam: function setDrawParam(a, b) {
            this.drawparams[a] = b
        },
        clear: function clear() {
            this.context.clearRect(this.startx, this.starty, this.barwidth, this.barheight)
        },
        fetchCurrent: function fetchCurrent() {
            return 0
        },
        stop: function stop() {
            this.enabled = !1;
            this.clear()
        },
        stopthere: function stopthere() {
            this.enabled = !1
        },
        start: function start() {
            this.clear();
            this.enabled = !0;
            var a = this;
            this.context.textAlign = this.drawparams.textAlign;
            this.context.font = this.drawparams.font;
            var b = this.drawparams.textColor,
                c = function() {
                    if (!a.enabled) {
                        return
                    }
                    a.clear();
                    a.context.fillStyle = a.drawparams.barColor;
                    a.context.fillRect(a.startx, a.starty, a.fetchCurrent() * a.barwidth, a.barheight);
                    var b = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;
                    b(c)
                };
            c()
        }
    }
});
define("filter_poodll/poodll_basemediaskin", ["jquery", "jqueryui", "core/log", "filter_poodll/utils_amd", "filter_poodll/dlg_devicesettings", "filter_poodll/anim_progress_bar", "filter_poodll/upskin_bar"], function(a, b, c, d, e, f, g) {
    "use strict";
    c.debug("PoodLL Base Skin: initialising");
    return {
        instanceprops: null,
        pmr: null,
        uploaded: !1,
        devsettings: null,
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        init: function init(a, b) {
            this.instanceprops = a;
            this.pmr = b;
            this.devsettings = e.clone();
            this.devsettings.init(b, a)
        },
        fetch_instanceprops: function fetch_instanceprops() {
            return this.instanceprops
        },
        onUploadSuccess: function onUploadSuccess(b) {
            a("#" + b + " > .poodll_save-recording").hide();
            a("#" + b + " > .poodll_savedsuccessfully").show()
        },
        onUploadFailure: function onUploadFailure() {},
        fetch_status_bar: function fetch_status_bar(a) {
            return "<div class=\"poodll_status_" + a + "\" width=\"100%\" height=\"50\">00:00:00</div>"
        },
        fetch_preview_audio: function fetch_preview_audio(a) {
            return "<audio class=\"poodll_preview_" + a + " playsinline\" style=\"display: none;\" controls></audio>"
        },
        fetch_preview_video: function fetch_preview_video(a) {
            return "<video class=\"poodll_preview_" + a + "\" playsinline ></video>"
        },
        fetch_resource_audio: function fetch_resource_audio(a) {
            return "<audio class=\"poodll_resourceplayer_" + a + "\" style=\"display: none;\" ></audio>"
        },
        fetch_resource_video: function fetch_resource_video(a) {
            return "<video class=\"poodll_resourceplayer_" + a + "\" style=\"display: none;\"></video>"
        },
        fetch_uploader_skin: function fetch_uploader_skin(a, b) {
            var c = this.fetch_instanceprops(a),
                d = g.clone();
            d.init(c.config, b, c.controlbar.progresscanvas, c.controlbar.timer);
            return d
        },
        onMediaError: function onMediaError(a) {
            console.error("media error", a)
        },
        onMediaSuccess_video: function onMediaSuccess_video(a) {
            var b = this.fetch_instanceprops(a);
            b.uploader.Output("");
            this.set_visual_mode("recordmode", a);
            b.controlbar.preview.attr("src", null);
            b.timer.reset();
            b.timer.start();
            this.update_status(a)
        },
        onMediaSuccess_audio: function onMediaSuccess_audio(a) {
            var b = this.fetch_instanceprops(a);
            b.uploader.Output("");
            this.set_visual_mode("recordmode", a);
            b.timer.reset();
            b.timer.start();
            this.update_status(a)
        },
        handle_timer_update: function handle_timer_update(a) {
            var b = this.fetch_instanceprops(a);
            b.controlbar.status.html(b.timer.fetch_display_time());
            if (0 == b.timer.seconds && 0 < b.timer.initseconds) {
                b.controlbar.stopbutton.click()
            }
        },
        update_status: function update_status(a) {
            var b = this.fetch_instanceprops(a);
            b.controlbar.status.html(b.timer.fetch_display_time())
        },
        set_visual_mode: function set_visual_mode(a, b) {
            var c = this,
                d = this.fetch_instanceprops(b);
            switch (a) {
                case "recordmode":
                    d.controlbar.progress.hide();
                    c.disable_button(d.controlbar.startbutton);
                    c.disable_button(d.controlbar.playbutton);
                    d.controlbar.resumebutton.hide();
                    c.enable_button(d.controlbar.stopbutton);
                    c.disable_button(d.controlbar.savebutton);
                    d.controlbar.pausebutton.show();
                    c.enable_button(d.controlbar.pausebutton);
                    d.controlbar.preview.addClass("poodll_recording");
                    d.controlbar.status.addClass("poodll_recording");
                    if ("audio" == d.config.mediatype) {
                        d.controlbar.preview.hide()
                    }
                    d.controlbar.status.show();
                    break;
                case "playingmode":
                    c.disable_button(d.controlbar.playbutton);
                    c.enable_button(d.controlbar.stopbutton);
                    c.disable_button(d.controlbar.startbutton);
                    c.disable_button(d.controlbar.savebutton);
                    d.controlbar.progresscanvas.show();
                    break;
                case "previewmode":
                    c.enable_button(d.controlbar.playbutton);
                    c.disable_button(d.controlbar.pausebutton);
                    c.disable_button(d.controlbar.stopbutton);
                    if (!c.uploaded) {
                        c.enable_button(d.controlbar.startbutton);
                        c.enable_button(d.controlbar.savebutton)
                    }
                    d.controlbar.resumebutton.hide();
                    d.controlbar.pausebutton.show();
                    d.controlbar.preview.removeClass("poodll_recording");
                    d.controlbar.status.removeClass("poodll_recording");
                    d.controlbar.timer.html("00:00:00");
                    d.controlbar.progress.show();
                    d.controlbar.progresscanvas.hide();
                    d.controlbar.status.hide();
                    break;
                case "pausedmode":
                    c.enable_button(d.controlbar.resumebutton);
                    c.enable_button(d.controlbar.savebutton);
                    d.controlbar.preview.removeClass("poodll_recording");
                    d.controlbar.status.removeClass("poodll_recording");
                    break;
                case "uploadingmode":
                    c.disable_button(d.controlbar.startbutton);
                    d.controlbar.progresscanvas.show();
                    break;
            }
        },
        insert_controlbar_video: function insert_controlbar_video(a, b, c, d) {
            var e = this.prepare_controlbar(a, b, c, d, "video");
            return e
        },
        insert_controlbar_audio: function insert_controlbar_audio(a, b, c, d) {
            var e = this.prepare_controlbar(a, b, c, d, "audio");
            return e
        },
        prepare_controlbar: function prepare_controlbar(b, c, d, e, f) {
            var g = this.fetch_instanceprops(c),
                h = g.config.media_skin_style,
                i = "video" == f ? "poodll_mediarecorder_video" : "poodll_mediarecorder_audio",
                j = "poodll_mediarecorder_size_auto";
            switch (g.config.size) {
                case "small":
                    j = "poodll_mediarecorder_size_small";
                    break;
                case "big":
                    j = "poodll_mediarecorder_size_big";
                    break;
                case "auto":
                    j = "poodll_mediarecorder_size_auto";
            }
            var k = this.pmr.fetch_strings(),
                l = g.showupload ? "inline-block" : "none",
                m = "<div class=\"poodll_mediarecorderholder_standard " + i + " " + j + "\" id=\"holder_" + c + "\">";
            m += "<div class=\"poodll_mediarecorderbox_standard\" id=\"" + c + "\">";
            m += this.devsettings.fetch_dialogue_box();
            m += g.downloaddialog.fetch_dialogue_box();
            m += g.errordialog.fetch_dialogue_box();
            m += "<div class=\"style-holder " + h + "\">";
            var n = this.fetch_status_bar("standard");
            m += n;
            m += "<div class=\"hp_slide\" id=\"slide_" + c + "\">";
            m += "<div class=\"hp_timer\"></div>";
            m += "<canvas class=\"hp_range\"></canvas>";
            m += "</div>";
            m += d, m += "<div class=\"settingsicon\" id=\"settingsicon_" + c + "\"><button type=\"button\" class=\"btn btn-info btn-lg\" data-toggle=\"modal\" data-target=\"#myModal\"><i class=\"fa fa-cogs\" aria-hidden=\"true\"></i></button></div>";
            m += "<button type=\"button\" class=\"poodll_mediarecorder_button_standard poodll_start-recording_standard\">" + k.recui_record + "</button>";
            m += "<button type=\"button\" class=\"poodll_mediarecorder_button_standard poodll_stop-recording_standard pmr_disabled\" disabled>" + k.recui_stop + "</button>";
            m += "<button type=\"button\" class=\"poodll_mediarecorder_button_standard poodll_pause-recording_standard pmr_disabled\" disabled>" + k.recui_pause + "</button>";
            m += " <button type=\"button\" class=\"poodll_mediarecorder_button_standard poodll_resume-recording_standard pmr_disabled\" style=\"display: none;\" disabled>" + k.recui_continue + "</button>";
            m += " <button type=\"button\" class=\"poodll_mediarecorder_button_standard poodll_play-recording_standard pmr_disabled\" disabled>" + k.recui_play + "</button>";
            m += "<button type=\"button\" class=\"poodll_save-recording_standard pmr_disabled\" style=\"display: " + l + ";\" disabled>" + k.recui_save + "</button>";
            m += "</div>";
            m += "</div>";
            m += "</div>";
            a(b).prepend(m);
            var o = {
                settingsdialog: a("#" + c + " .poodll_dialogue_box_settings"),
                downloaddialog: a("#" + c + " .poodll_dialogue_box_download"),
                errorsdialog: a("#" + c + " .poodll_dialogue_box_errors"),
                settingsicon: a("#" + c + " .settingsicon"),
                progresscanvas: a("#" + c + " .hp_range"),
                progress: a("#" + c + " .hp_slide"),
                timer: a("#" + c + " .hp_timer"),
                status: a("#" + c + "  .poodll_status_standard"),
                preview: a("#" + c + "  .poodll_preview_standard"),
                startbutton: a("#" + c + "  .poodll_start-recording_standard"),
                stopbutton: a("#" + c + "  .poodll_stop-recording_standard"),
                pausebutton: a("#" + c + "  .poodll_pause-recording_standard"),
                resumebutton: a("#" + c + "  .poodll_resume-recording_standard"),
                playbutton: a("#" + c + "  .poodll_play-recording_standard"),
                savebutton: a("#" + c + "  .poodll_save-recording_standard")
            };
            g.downloaddialog.set_dialogue_box(o.downloaddialog);
            g.errordialog.set_dialogue_box(o.errorsdialog);
            this.devsettings.set_dialogue_box(o.settingsdialog);
            return o
        },
        register_controlbar_events_video: function register_controlbar_events_video(a, b) {
            return this.register_controlbar_events_audio(a, b)
        },
        register_controlbar_events_audio: function register_controlbar_events_audio(b, c) {
            var d = this,
                e = this.pmr,
                g = this.fetch_instanceprops(c),
                h = f.clone();
            h.init(g.controlbar.progresscanvas);
            g.controlbar.settingsicon.click(function() {
                if (!d.uploaded) {
                    d.devsettings.open()
                } else {
                    g.downloaddialog.open()
                }
            });
            g.controlbar.startbutton.click(function() {
                e.do_start_audio(g, b)
            });
            g.controlbar.stopbutton.click(function() {
                var a = g.controlbar.preview;
                if (a && a.get(0)) {
                    a.get(0).pause()
                }
                e.do_stop_audio(g);
                g.timer.stop();
                g.timer.reset();
                d.update_status(c);
                h.stop();
                d.set_visual_mode("previewmode", c)
            });
            g.controlbar.pausebutton.click(function() {
                this.disabled = !0;
                a(this).hide();
                g.controlbar.resumebutton.show();
                e.do_pause_audio(g);
                g.timer.pause();
                d.update_status(c);
                d.set_visual_mode("pausedmode", c)
            });
            g.controlbar.resumebutton.click(function() {
                e.do_resume_audio(g);
                g.timer.resume();
                d.update_status(c);
                d.set_visual_mode("recordmode", c)
            });
            g.controlbar.playbutton.click(function() {
                g.controlbar.preview.on("timeupdate", function() {
                    if (!this.paused) {
                        var a = this.currentTime;
                        g.controlbar.timer.html(g.timer.fetch_display_time(a))
                    }
                });
                var a = g.controlbar.preview.get(0);
                e.do_play_audio(g, a);
                d.set_visual_mode("playingmode", c);
                h.clear();
                h.fetchCurrent = function() {
                    var a = g.controlbar.preview.prop("currentTime"),
                        b = g.controlbar.preview.prop("duration");
                    if (!isFinite(b)) {
                        b = g.timer.finalseconds
                    }
                    return a / b
                };
                h.start()
            });
            g.controlbar.savebutton.click(function() {
                d.disable_button(this);
                if (g.blobs && 0 < g.blobs.length) {
                    e.do_save_audio(g);
                    d.uploaded = !0;
                    d.set_visual_mode("uploadingmode", c)
                } else {
                    g.uploader.Output(M.util.get_string("recui_nothingtosaveerror", "filter_poodll"))
                }
                return !1
            });
            window.onbeforeunload = function() {
                d.enable_button(g.controlbar.startbutton);
                var a = g.controlbar.preview;
                if (a && a.get(0)) {
                    a.get(0).pause()
                }
            }
        },
        enable_button: function enable_button(b) {
            a(b).attr("disabled", !1);
            a(b).removeClass("pmr_disabled")
        },
        disable_button: function disable_button(b) {
            a(b).attr("disabled", !0);
            a(b).addClass("pmr_disabled")
        }
    }
});
define("filter_poodll/responsiveiframe", ["jquery", "core/log"], function(a, b) {
    "use strict";
    b.debug("responsive iframe initialising");
    return {
        defheight: 150,
        defwidth: 300,
        init: function init(b) {
            var c = a("#" + b.iframeid);
            if (0 == c.length) {
                c = a("#" + b.iframeid, window.parent.document)
            }
            if (0 < c.length) {
                var d = {
                    currentheight: this.defheight,
                    currentwidth: this.defwidth,
                    theiframe: c,
                    thisref: this
                };
                this._iframeResize(d)
            }
        },
        _iframeResize: function _iframeResize(a) {
            var b = a.theiframe;
            if (!b || 1 > b.length) {
                return
            }
            var c = b[0].contentWindow.document.body.scrollHeight,
                d = b[0].contentWindow.document.body.scrollWidth;
            if (c != a.currentheight || d != a.currentwidth) {
                b.attr("height", c + "px");
                b.attr("width", d + "px")
            }
            a.currentheight = c;
            a.currentwidth = d;
            setTimeout(a.thisref._iframeResize, 100, a)
        }
    }
});
define('filter_poodll/msr_whammy', ["jquery", "core/log", "filter_poodll/msr_helper_whammy"], function(a, b, c) {
    "use strict";
    return b.debug("PoodLL MSR Whammy: initialising"), {
        timeout: 0,
        mediaRecorder: null,
        mediaStream: null,
        msr: null,
        audioctx: null,
        mediaType: "video",
        clone: function() {
            return a.extend(!0, {}, this)
        },
        init: function(a, b, c, d) {
            this.msr = a, this.mediaStream = b, this.audioctx = c, this.mediaType = d
        },
        start: function(a, b) {
            a = a || 1e3;
            var d = this;
            this.mediaRecorder = c.clone(), this.mediaRecorder.init(this.msr, this.mediaStream, this.audioctx), this.mediaRecorder.record(), this.timeout = setInterval(function() {
                d.mediaRecorder.requestData()
            }, a)
        },
        stop: function() {
            this.mediaRecorder && (this.mediaRecorder.stop(), clearTimeout(this.timeout))
        },
        clearOldRecordedFrames: function() {
            this.mediaRecorder && this.mediaRecorder.clearOldRecordedFrames()
        },
        pause: function() {
            this.mediaRecorder && this.mediaRecorder.pause()
        },
        resume: function() {
            this.mediaRecorder && this.mediaRecorder.resume()
        },
        ondataavailable: function(a) {
            b.debug("ondataavailable:" + a)
        },
        onstop: function(a) {
            b.debug(a)
        }
    }
});
define("filter_poodll/upskin_bar", ["jquery", "core/log", "filter_poodll/anim_progress_bar"], function(a, b, c) {
    "use strict";
    b.debug("upskin_bar: initialising");
    return {
        element: null,
        cvs: null,
        percent: 0,
        progressbar: null,
        messagearea: null,
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        init: function init(a, b, d, e) {
            this.config = a;
            this.element = b;
            this.cvs = d;
            this.progressbar = c.clone();
            this.messagearea = e
        },
        initControls: function initControls() {
            var a = this;
            this.progressbar.init(this.cvs, "#BCCCCC");
            this.progressbar.fetchCurrent = function() {
                return a.percent
            }
        },
        initProgressSession: function initProgressSession(a) {
            var b = this;
            b.percent = 0;
            var c = M.util.get_string("recui_uploading", "filter_poodll");
            a.upload.addEventListener("progress", function(a) {
                if (a.lengthComputable) {
                    b.percent = a.loaded / a.total;
                    b.showMessage(c + "(" + Math.floor(100 * b.percent) + "%)")
                }
            });
            this.progressbar.start()
        },
        deactivateProgressSession: function deactivateProgressSession() {
            this.progressbar.stopthere();
            b.debug("deactivating session")
        },
        showMessage: function showMessage(a) {
            this.messagearea.html(a)
        }
    }
});
define("filter_poodll/poodll_mediarecorder", ["jquery", "core/log", "filter_poodll/utils_amd", "filter_poodll/adapter", "filter_poodll/uploader", "filter_poodll/hermes", "filter_poodll/timer", "filter_poodll/audioanalyser", "filter_poodll/msr_poodll", "filter_poodll/dlg_errordisplay", "filter_poodll/dlg_download", "filter_poodll/speech_poodll", "filter_poodll/poodll_mediaskins"], function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
    "use strict";
    b.debug("PoodLL Media Recorder: initialising");
    return {
        instanceprops: [],
        skins: [],
        laststream: [],
        fetch_instanceprops: function fetch_instanceprops(a) {
            return this.instanceprops[a]
        },
        fetch_skin: function fetch_skin(a) {
            return this.skins[a]
        },
        is_ios: function is_ios() {
            return c.is_ios()
        },
        supports_current_browser: function supports_current_browser(a) {
            var d = 0 == M.cfg.wwwroot.indexOf("https:") || 0 == M.cfg.wwwroot.indexOf("http://localhost");
            if (!d) {
                return !1
            }
            if ("audio" != a.mediatype && "video" != a.mediatype) {
                return !1
            }
            var e = c.can_html5_record(a.mediatype);
            if (e) {
                b.debug("PoodLL Media Recorder: supports this browser")
            }
            return e
        },
        xxxxsupports_current_browser: function xxxxsupports_current_browser(a) {
            if ("audio" != a.mediatype && "video" != a.mediatype) {
                return !1
            }
            var d = 0 == M.cfg.wwwroot.indexOf("https:") || 0 == M.cfg.wwwroot.indexOf("http://localhost");
            if (d && navigator && navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
                var e = !1;
                switch (a.mediatype) {
                    case "audio":
                        if (c.is_safari() && !c.is_ios() && !a.html5ondsafari) {
                            e = !1
                        } else {
                            e = !0
                        }
                        break;
                    case "video":
                        var f = -1 !== c.is_edge() && (!!navigator.msSaveBlob || !!navigator.msSaveOrOpenBlob),
                            g = c.is_safari();
                        if (!f && !g) {
                            e = !0
                        }
                }
                if (e) {
                    b.debug("PoodLL Media Recorder: supports this browser")
                }
                return e
            } else {
                return !1
            }
        },
        embed: function embed(a, c) {
            var d = this,
                h = "filter_poodll_controlbar_" + c.widgetid;
            this.init_instance_props(h);
            var i = this.fetch_instanceprops(h);
            i.config = c;
            i.controlbarid = h;
            if (c.hideupload) {
                i.showupload = !1
            } else {
                i.showupload = !0
            }
            i.timeinterval = c.media_timeinterval;
            i.audiomimetype = c.media_audiomimetype;
            i.videorecordertype = c.media_videorecordertype;
            i.videocaptureheight = c.media_videocaptureheight;
            i.errordialog = j.clone();
            i.errordialog.init(i);
            i.downloaddialog = k.clone();
            i.downloaddialog.init(this, i);
            i.config.hermes = f.clone();
            i.config.hermes.init(c.id, c.allowedURL, c.iframeembed);
            var l = this.init_skin(h, i.config.media_skin, i);
            if (c.speechevents && i.speechrec.supports_browser()) {
                if (!c.language) {
                    c.language = "en-US"
                }
                i.speechrec.init(i.config.language);
                i.speechrec.onfinalspeechcapture = function(a) {
                    i.config.hermes.postMessage({
                        type: "speech",
                        capturedspeech: a
                    });
                    if (l.hasOwnProperty("onfinalspeechcapture")) {
                        l.onfinalspeechcapture(a)
                    }
                }
            }
            i.config.onuploadsuccess = function(a) {
                d.onUploadSuccess(a, l)
            };
            i.config.onuploadfailure = function(a) {
                d.onUploadFailure(a, l)
            };
            switch (c.mediatype) {
                case "audio":
                    var m = l.fetch_preview_audio(c.media_skin),
                        n = l.fetch_resource_audio(c.media_skin);
                    i.controlbar = this.fetch_controlbar_audio(a, h, m, n);
                    i.uploader = e.clone();
                    var o = l.fetch_uploader_skin(i.controlbarid, a);
                    i.uploader.init(a, c, o);
                    this.register_events_audio(h);
                    if ("upload" == i.config.media_skin || "warning" == i.config.media_skin) {
                        break
                    }
                    navigator.mediaDevices.getUserMedia({
                        audio: !0
                    }).then(function() {
                        b.debug("successfully forced permissions and got user media")
                    }).catch(function(a) {
                        b.debug("location 9998");
                        b.debug(a);
                        i.errordialog.open(a)
                    });
                    break;
                case "video":
                    var m = l.fetch_preview_video(c.media_skin),
                        n = l.fetch_resource_video(c.media_skin);
                    i.controlbar = this.fetch_controlbar_video(a, h, m, n);
                    i.uploader = e.clone();
                    var o = l.fetch_uploader_skin(i.controlbarid, a);
                    i.uploader.init(a, c, o);
                    this.register_events_video(h);
                    if ("upload" == i.config.media_skin || "warning" == i.config.media_skin) {
                        break
                    }
                    navigator.mediaDevices.getUserMedia({
                        audio: !0,
                        video: !0
                    }).then(function(a) {
                        d.restream_preview_video_player(h, a)
                    }).catch(function(a) {
                        b.debug("location 9999");
                        b.debug(a)
                    });
                    break;
            }
            i.timer = g.clone();
            i.timer.init(i.config.timelimit, function() {
                l.handle_timer_update(h)
            });
            l.handle_timer_update(h);
            return l
        },
        init_instance_props: function init_instance_props(a) {
            this.instanceprops[a] = {};
            this.instanceprops[a].recorded_index = 0;
            this.instanceprops[a].mediaRecorder = null;
            this.instanceprops[a].blobs = [];
            this.instanceprops[a].timeinterval = 5e3;
            this.instanceprops[a].audiomimetype = "audio/webm";
            this.instanceprops[a].videorecordertype = "auto";
            this.instanceprops[a].videocapturewidth = 320;
            this.instanceprops[a].videocaptureheight = 240;
            this.instanceprops[a].controlbar = "";
            this.instanceprops[a].previewvolume = 1;
            this.instanceprops[a].timer = {};
            this.instanceprops[a].timer = {};
            this.instanceprops[a].showupload = !0;
            this.instanceprops[a].uploader = {};
            this.instanceprops[a].uploaded = !1;
            this.instanceprops[a].useraudiodeviceid = !1;
            this.instanceprops[a].uservideodeviceid = !1;
            this.instanceprops[a].devices = [];
            var c = window.AudioContext || window.webkitAudioContext || !1;
            if ("undefined" == typeof window.poodllmediarecorder_actx) {
                var d = new c;
                window.poodllmediarecorder_actx = d;
                window.poodllmediarecorder_actx_cnt = 1
            } else if (6 == window.poodllmediarecorder_actx_cnt) {
                var d = window.poodllmediarecorder_actx;
                b.debug("More than 6 contexts, reusing first one. visualizations might go weird")
            } else {
                var d = new c;
                window.poodllmediarecorder_actx_cnt += 1
            }
            this.instanceprops[a].audioctx = d;
            var e = h.clone();
            e.init(d);
            this.instanceprops[a].audioanalyser = e;
            this.instanceprops[a].previewstillcold = !0;
            this.instanceprops[a].speechrec = l.clone()
        },
        init_skin: function init_skin(a, b, c) {
            this.skins[a] = m.fetch_skin_clone(b);
            this.skins[a].init(c, this);
            return this.skins[a]
        },
        onUploadSuccess: function onUploadSuccess(a, c) {
            b.debug("from poodllmediarecorder: uploadsuccess");
            c.onUploadSuccess("filter_poodll_controlbar_" + a)
        },
        onUploadFailure: function onUploadFailure(a, c) {
            b.debug("from poodllmediarecorder: uploadfailure");
            c.onUploadFailure("filter_poodll_controlbar_" + a);
            c.fetch_instanceprops().downloaddialog.open(c.pmr, c.instanceprops)
        },
        onMediaError: function onMediaError(a, c) {
            c.errordialog.open(a);
            b.error("media error", a)
        },
        captureUserMedia: function captureUserMedia(a, b, c) {
            navigator.mediaDevices.getUserMedia(a).then(b).catch(c)
        },
        warmup_context: function warmup_context(a) {
            var b = a.audioctx;
            if ("suspended" == b.state) {
                b.resume()
            }
            var c = b.createBuffer(1, 1, 22050),
                d = b.createBufferSource();
            d.buffer = c;
            d.connect(b.destination);
            d.start(0)
        },
        warmup_preview: function warmup_preview(a) {
            var c = a.controlbar.preview;
            if (a.previewstillcold && c && c.get(0)) {
                var d = a.controlbar.preview[0].play();
                if (d !== void 0) {
                    d.then(function() {}).catch(function(a) {
                        b.debug(a)
                    })
                }
                a.previewstillcold = !1
            }
        },
        do_start_audio: function do_start_audio(a, b) {
            var c = this;
            this.warmup_context(a);
            this.warmup_preview(a);
            a.blobs = [];
            switch (a.config.mediatype) {
                case "audio":
                    var d = this.fetch_audio_constraints(a);
                    break;
                case "video":
                    var d = this.fetch_video_constraints(a);
            }
            this.tidy_old_stream(a.controlbarid);
            this.captureUserMedia(d, b, function(b) {
                c.onMediaError(b, a)
            })
        },
        do_start_video: function do_start_video() {},
        do_stopplay_audio: function do_stopplay_audio(a, b) {
            b.pause()
        },
        do_play_audio: function do_play_audio(d, e) {
            if (d.blobs && 0 < d.blobs.length) {
                b.debug("playing type:" + d.blobs[0].type);
                c.doConcatenateBlobs(d.blobs, function(a) {
                    var b = URL.createObjectURL(a);
                    e.src = b;
                    e.controls = !0;
                    e.volume = d.previewvolume;
                    e.play()
                });
                a(e).bind("ended", function() {
                    d.controlbar.stopbutton.click()
                })
            }
        },
        do_play_video: function do_play_video() {},
        do_save_audio: function do_save_audio(a) {
            if (a.blobs && 0 < a.blobs.length) {
                c.doConcatenateBlobs(a.blobs, function(b) {
                    a.uploader.uploadBlob(b, a.blobs[0].type)
                });
                a.uploaded = !0;
                a.controlbar.startbutton.attr("disabled", !0)
            }
        },
        do_save_video: function do_save_video() {},
        do_stop_audio: function do_stop_audio(a) {
            a.mediaRecorder.resume();
            a.mediaRecorder.stop();
            if (a.config.speechevents && a.speechrec.supports_browser()) {
                a.speechrec.stop()
            }
            a.config.hermes.postMessage({
                type: "recording",
                action: "stopped"
            })
        },
        do_stop_video: function do_stop_video() {},
        do_pause_audio: function do_pause_audio(a) {
            a.mediaRecorder.resume();
            a.mediaRecorder.pause()
        },
        do_pause_video: function do_pause_video() {},
        do_resume_audio: function do_resume_audio(a) {
            a.mediaRecorder.resume()
        },
        do_resume_video: function do_resume_video() {},
        fetch_video_constraints: function fetch_video_constraints(a) {
            var b = {
                audio: !c.is_opera() && !c.is_edge(),
                video: !0
            };
            if (a.uservideodeviceid) {
                var d = a.uservideodeviceid.valueOf(),
                    e = {
                        deviceId: d ? {
                            exact: d
                        } : void 0
                    };
                b.video = e
            }
            if (a.useraudiodeviceid) {
                var f = a.useraudiodeviceid.valueOf(),
                    e = {
                        deviceId: f ? {
                            exact: f
                        } : void 0
                    };
                b.audio = e
            }
            return b
        },
        fetch_audio_constraints: function fetch_audio_constraints(a) {
            var b = {
                audio: !0
            };
            if (c.is_safari() && !a.useraudiodeviceid && !1) {
                a.audiomimetype = "audio/wav"
            }
            if (c.is_safari() && !a.useraudiodeviceid) {
                a.audiomimetype = "audio/wav"
            }
            if (a.useraudiodeviceid) {
                var d = {
                    deviceId: a.useraudiodeviceid
                };
                b.audio = d
            }
            return b
        },
        register_events_audio: function register_events_audio(a) {
            var b = this,
                c = this.fetch_instanceprops(a),
                d = this.skins[a];
            d.register_controlbar_events_audio(function onMediaSuccess(e) {
                b.laststream[a] = e;
                var f = "auto";
                if (c.config.hasOwnProperty("encoder")) {
                    f = c.config.encoder
                }
                c.mediaRecorder = i;
                c.mediaRecorder.init(e, c.audioctx, c.audioanalyser, c.config.mediatype, f);
                c.mediaRecorder.mimeType = c.audiomimetype;
                c.mediaRecorder.audioChannels = 1;
                c.mediaRecorder.start(c.timeinterval, c.audioctx);
                c.mediaRecorder.ondataavailable = function(a) {
                    c.blobs.push(a)
                };
                c.config.hermes.postMessage({
                    type: "recording",
                    action: "started"
                });
                if (c.config.speechevents && c.speechrec.supports_browser()) {
                    c.speechrec.start()
                }
                d.onMediaSuccess_audio(a)
            }, a)
        },
        register_events_video: function register_events_video(a) {
            var b = this,
                c = this.fetch_instanceprops(a),
                d = this.skins[a];
            d.register_controlbar_events_video(function onMediaSuccess(e) {
                b.restream_preview_video_player(a, e);
                var f = "auto";
                if (c.config.hasOwnProperty("encoder")) {
                    f = c.config.encoder
                }
                c.mediaRecorder = i;
                c.mediaRecorder.init(e, c.audioctx, c.audioanalyser, c.config.mediatype, f);
                if ("mediarec" === c.videorecordertype) {
                    c.mediaRecorder.recorderType = MediaRecorderWrapper
                }
                c.mediaRecorder.videoWidth = c.videocapturewidth;
                c.mediaRecorder.videoHeight = c.videocaptureheight;
                c.mediaRecorder.start(c.timeinterval);
                c.mediaRecorder.ondataavailable = function(a) {
                    c.blobs.push(a)
                };
                c.config.hermes.postMessage({
                    type: "recording",
                    action: "started"
                });
                if (c.config.speechevents && c.speechrec.supports_browser()) {
                    c.speechrec.start()
                }
                d.onMediaSuccess_video(a)
            }, a)
        },
        tidy_old_stream: function tidy_old_stream(a) {
            if (this.laststream[a]) {
                this.laststream[a].getTracks().forEach(function(a) {
                    a.stop()
                })
            }
        },
        restream_preview_video_player: function restream_preview_video_player(a, b) {
            this.laststream[a] = b;
            this.init_video_preview(a);
            if (c.is_android()) {
                navigator.mediaDevices.enumerateDevices()
            }
        },
        init_video_preview: function init_video_preview(a) {
            var c = this.fetch_instanceprops(a),
                d = c.controlbar.preview[0];
            d.srcObject = this.laststream[a];
            d.controls = !1;
            d.volume = 0;
            var e = d.play();
            if (e !== void 0) {
                e.then(function() {}).catch(function(a) {
                    b.debug("location: init_video_preview");
                    b.debug(a)
                })
            }
        },
        update_status: function update_status(a) {
            var b = this.fetch_instanceprops(a);
            b.controlbar.status.html(b.timer.fetch_display_time())
        },
        fetch_controlbar_audio: function fetch_controlbar_audio(a, b, c, d) {
            var e = this.fetch_instanceprops(b),
                f = this.fetch_skin(b),
                g = f.insert_controlbar_audio(a, b, c, d);
            return g
        },
        fetch_controlbar_video: function fetch_controlbar_video(a, b, c, d) {
            var e = this.fetch_instanceprops(b),
                f = this.fetch_skin(b),
                g = f.insert_controlbar_video(a, b, c, d);
            return g
        },
        fetch_strings: function fetch_strings() {
            var b = [];
            a.each(["record", "play", "pause", "continue", "stop", "save", "restart", "testmic", "upload", "recordagain", "readytorecord", "downloadfile"], function(a, c) {
                b["recui_" + c] = M.util.get_string("recui_" + c, "filter_poodll");
                if (1 < b["recui_" + c].indexOf(",filter_poodll]]") || "" == b["recui_" + c]) {
                    b["recui_" + c] = c
                }
            });
            return b
        }
    }
});
define('filter_poodll/radialprogress', ["jquery", "core/log"], function(a, b) {
    "use strict";
    return b.debug("Radial Progress: initialising"), {
        playcanvas: null,
        context: null,
        x: null,
        y: null,
        currenttime: 0,
        enabled: !1,
        clone: function() {
            return a.extend(!0, {}, this)
        },
        init: function(a) {
            this.playcanvas = a.get(0), this.x = this.playcanvas.width / 2, this.y = this.playcanvas.height / 2, this.context = this.playcanvas.getContext("2d"), this.context.lineWidth = 10, this.context.strokeStyle = "#ad2323", this.context.setLineDash([15, 5]), this.context.shadowOffsetX = 0, this.context.shadowOffsetY = 0, this.context.shadowBlur = 10, this.context.shadowColor = "#fff"
        },
        clear: function() {
            this.context.clearRect(0, 0, this.playcanvas.width, this.playcanvas.height)
        },
        fetchCurrent: function() {
            return 0
        },
        stop: function() {
            this.enabled = !1, this.clear()
        },
        start: function() {
            this.clear(), this.enabled = !0;
            var a = this,
                b = function() {
                    if (a.enabled) {
                        var c = 65,
                            d = !1,
                            e = 2 * Math.PI,
                            f = Math.PI / 2;
                        a.context.beginPath(), a.context.arc(a.x, a.y, c, -f, e * a.fetchCurrent() - f, d), a.context.stroke();
                        var g = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;
                        g(b)
                    }
                };
            b()
        }
    }
});
define("filter_poodll/msr_helper_stereoaudio", ["jquery", "core/log"], function(a, b) {
    "use strict";
    b.debug("PoodLL Stereo Audio Recorder Helper: initialising");
    return {
        scriptprocessornode: null,
        requestDataInvoked: !1,
        recordingLength: 0,
        isPaused: !1,
        deviceSampleRate: 48e3,
        leftchannel: [],
        rightchannel: [],
        recording: !1,
        volume: null,
        audioInput: null,
        context: null,
        sampleRate: 0,
        mimeType: 0,
        isPCM: !1,
        numChannels: 1,
        msr: null,
        audioctx: null,
        mediaStream: null,
        volumeGainNode: null,
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        init: function init(a, b, c) {
            this.msr = a;
            this.audioctx = c;
            this.mediaStream = b;
            this.deviceSampleRate = c.sampleRate;
            this.sampleRate = a.sampleRate || this.deviceSampleRate;
            this.mimeType = a.mimeType || "audio/wav";
            this.isPCM = -1 < this.mimeType.indexOf("audio/pcm");
            this.numChannels = a.audioChannels || 2;
            this.misc()
        },
        misc: function misc() {
            var a = this,
                b = this.audioctx;
            this.volumeGainNode = b.createGain();
            var c = this.volumeGainNode;
            this.audioInput = b.createMediaStreamSource(this.mediaStream);
            var d = this.audioInput;
            d.connect(c);
            var e = this.msr.bufferSize || 2048;
            if (0 === this.msr.bufferSize) {
                e = 0
            }
            var f = null;
            if (b.createJavaScriptNode) {
                f = b.createJavaScriptNode(e, this.numChannels, this.numChannels)
            } else if (b.createScriptProcessor) {
                f = b.createScriptProcessor(e, this.numChannels, this.numChannels)
            } else {
                throw "WebAudio API has no support on this browser."
            }
            this.bufferSize = f.bufferSize;
            this.requestDataInvoked = !1;
            this.scriptprocessornode = f;
            if (1 === this.numChannels) {
                console.debug("All right-channels are skipped.")
            }
            this.isPaused = !1;
            f.onaudioprocess = function(b) {
                if (!a.recording || a.requestDataInvoked || a.isPaused) {
                    return
                }
                var c = b.inputBuffer.getChannelData(0);
                a.leftchannel.push(new Float32Array(c));
                if (2 === a.numChannels) {
                    var d = b.inputBuffer.getChannelData(1);
                    a.rightchannel.push(new Float32Array(d))
                }
                a.recordingLength += a.bufferSize
            };
            c.connect(this.msr.audioanalyser.core);
            this.msr.audioanalyser.core.connect(f);
            f.connect(b.destination)
        },
        record: function record() {
            this.recording = !0;
            this.leftchannel.length = this.rightchannel.length = 0;
            this.recordingLength = 0
        },
        requestData: function requestData() {
            if (this.isPaused) {
                return
            }
            if (0 === this.recordingLength) {
                this.requestDataInvoked = !1;
                return
            }
            this.requestDataInvoked = !0;
            var a = this.leftchannel.slice(0),
                b = this.rightchannel.slice(0),
                c = this.recordingLength;
            this.leftchannel.length = this.rightchannel.length = [];
            this.recordingLength = 0;
            this.requestDataInvoked = !1;
            var d = this.mergeBuffers(a, c),
                e = d;
            if (2 === this.numChannels) {
                var f = this.mergeBuffers(b, c);
                this.interleaved = this.interleave(d, f)
            }
            if (this.isPCM) {
                var g = new Blob([this.convertoFloat32ToInt16(e)], {
                    type: "audio/pcm"
                });
                this.msr.ondataavailable(g);
                return
            }
            var h = new ArrayBuffer(44 + 2 * e.length),
                j = new DataView(h);
            this.writeUTFBytes(j, 0, "RIFF");
            j.setUint32(4, 44 + 2 * e.length - 8, !0);
            this.writeUTFBytes(j, 8, "WAVE");
            this.writeUTFBytes(j, 12, "fmt ");
            j.setUint32(16, 16, !0);
            j.setUint16(20, 1, !0);
            j.setUint16(22, this.numChannels, !0);
            j.setUint32(24, this.sampleRate, !0);
            j.setUint32(28, 2 * (this.sampleRate * this.numChannels), !0);
            j.setUint16(32, 2 * this.numChannels, !0);
            j.setUint16(34, 16, !0);
            this.writeUTFBytes(j, 36, "data");
            j.setUint32(40, 2 * e.length, !0);
            for (var k = e.length, l = 44, m = 0; m < k; m++) {
                j.setInt16(l, e[m] * (32767 * 1), !0);
                l += 2
            }
            var g = new Blob([j], {
                type: "audio/wav"
            });
            this.msr.ondataavailable(g)
        },
        stop: function stop() {
            this.recording = !1;
            this.requestData();
            this.audioInput.disconnect()
        },
        interleave: function interleave(a, b) {
            for (var c = a.length + b.length, d = new Float32Array(c), e = 0, f = 0; f < c;) {
                d[f++] = a[e];
                d[f++] = b[e];
                e++
            }
            return d
        },
        mergeBuffers: function mergeBuffers(a, b) {
            for (var c = new Float32Array(b), d = 0, e = a.length, f = 0, g; f < e; f++) {
                g = a[f];
                c.set(g, d);
                d += g.length
            }
            return c
        },
        writeUTFBytes: function writeUTFBytes(a, b, c) {
            for (var d = c.length, e = 0; e < d; e++) {
                a.setUint8(b + e, c.charCodeAt(e))
            }
        },
        convertoFloat32ToInt16: function convertoFloat32ToInt16(a) {
            var b = a.length,
                c = new Int16Array(b);
            while (b--) {
                c[b] = 65535 * a[b]
            }
            return c.buffer
        },
        pause: function pause() {
            this.isPaused = !0
        },
        resume: function resume() {
            this.isPaused = !1
        }
    }
});
define("filter_poodll/hermes", ["jquery", "core/log"], function(a, b) {
    "use strict";
    b.debug("Hermes (the messenger) initialising");
    return {
        allowedURL: "",
        id: "",
        iframeembed: !1,
        enabled: !1,
        eventListeners: !1,
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        init: function init(a, b, c) {
            this.allowedURL = b;
            this.id = a;
            this.iframeembed = c;
            this.enabled = !0;
            this.eventListeners = [];
            this.registerEvents()
        },
        disable: function disable() {
            this.enabled = !1
        },
        enable: function enable() {
            this.enabled = !0
        },
        on: function on(a, b) {
            var c = {};
            c.type = a;
            c.handler = b;
            this.eventListeners.push(c)
        },
        sendEvent: function sendEvent(a) {
            for (var b = 0; b < this.eventListeners.length; b++) {
                if (a.type == this.eventListeners[b].type) {
                    this.eventListeners[b].handler(a)
                }
            }
        },
        postMessage: function postMessage(a) {
            if (!this.enabled) {
                return
            }
            if (!a.hasOwnProperty("type")) {
                b.debug("All message objects must have at least the \"type\" property");
                return
            }
            if (this.iframeembed) {
                a.id = this.id;
                window.parent.postMessage(a, this.allowedURL)
            }
        },
        registerEvents: function registerEvents() {
            var a = this;
            window.addEventListener("message", function(b) {
                if (null == a.allowedURL || 0 !== a.allowedURL.indexOf(b.origin)) {
                    return
                }
                var c = b.data;
                if (c && c.hasOwnProperty("id") && c.id == a.id && c.hasOwnProperty("type")) {
                    a.sendEvent(b.data)
                }
            })
        }
    }
});
define("filter_poodll/poodll_burntrosemediaskin", ["jquery", "core/log", "filter_poodll/utils_amd"], function(a, b) {
    "use strict";
    b.debug("PoodLL Burnt Rose Skin: initialising");
    return {
        instanceprops: null,
        pmr: null,
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        init: function init(a, b) {
            this.instanceprops = a;
            this.pmr = b
        },
        fetch_instanceprops: function fetch_instanceprops() {
            return this.instanceprops
        },
        onUploadSuccess: function onUploadSuccess(c) {
            b.debug("from poodllmediarecorder: uploadsuccess");
            var d = "filter_poodll_controlbar_" + c;
            a("#" + d + " > .poodll_save-recording").hide();
            a("#" + d + " > .poodll_savedsuccessfully").show()
        },
        onUploadFailure: function onUploadFailure() {
            b.debug("from poodllmediarecorder: uploadfailure")
        },
        fetch_status_bar: function fetch_status_bar(a) {
            return "<div class=\"poodll_status_" + a + "\" width=\"320\" height=\"50\">00:00:00</div>"
        },
        fetch_preview_audio: function fetch_preview_audio(a) {
            return "<audio class=\"poodll_preview_" + a + " hide\" controls></audio>"
        },
        fetch_preview_video: function fetch_preview_video(a) {
            return "<video class=\"poodll_preview_" + a + "\" width=\"320\" height=\"240\"></video>"
        },
        fetch_resource_audio: function fetch_resource_audio(a) {
            return "<audio class=\"poodll_resourceplayer_" + a + " hide\" ></audio>"
        },
        fetch_resource_video: function fetch_resource_video(a) {
            return "<video class=\"poodll_resourceplayer_" + a + " hide\" ></video>"
        },
        onMediaError: function onMediaError(a) {
            console.error("media error", a)
        },
        onMediaSuccess_video: function onMediaSuccess_video(a) {
            var b = this.fetch_instanceprops(a);
            b.controlbar.stopbutton.attr("disabled", !1);
            b.controlbar.pausebutton.attr("disabled", !1);
            b.controlbar.savebutton.attr("disabled", !1)
        },
        onMediaSuccess_audio: function onMediaSuccess_audio(a) {
            var b = this.fetch_instanceprops(a);
            b.controlbar.preview.attr("src", null);
            b.controlbar.stopbutton.attr("disabled", !1);
            b.controlbar.pausebutton.attr("disabled", !1);
            b.controlbar.savebutton.attr("disabled", !1)
        },
        handle_timer_update: function handle_timer_update(a) {
            var b = this.fetch_instanceprops(a);
            b.controlbar.status.html(b.timer.fetch_display_time());
            if (0 == b.timer.seconds && 0 < b.timer.initseconds) {
                b.controlbar.stopbutton.click()
            }
        },
        update_status: function update_status(a) {
            var b = this.fetch_instanceprops(a);
            b.controlbar.status.html(b.timer.fetch_display_time())
        },
        set_visual_mode: function set_visual_mode(a, b) {
            var c = this,
                d = this.fetch_instanceprops(b);
            switch (a) {
                case "recordmode":
                    d.controlbar.preview.addClass("poodll_recording");
                    d.controlbar.status.addClass("poodll_recording");
                    if ("audio" == d.config.mediatype) {
                        d.controlbar.preview.addClass("hide")
                    }
                    d.controlbar.status.removeClass("hide");
                    break;
                case "previewmode":
                    d.controlbar.preview.removeClass("poodll_recording");
                    d.controlbar.status.removeClass("poodll_recording");
                    break;
                case "pausedmode":
                    d.controlbar.preview.removeClass("poodll_recording");
                    d.controlbar.status.removeClass("poodll_recording");
                    break;
            }
        },
        insert_controlbar_audio: function insert_controlbar_audio(b, c, d) {
            var e = this.fetch_instanceprops(c),
                f = e.config.media_skin_style,
                g = "poodll_mediarecorder_size_auto";
            switch (e.config.size) {
                case "small":
                    g = "poodll_mediarecorder_size_small";
                    break;
                case "big":
                    g = "poodll_mediarecorder_size_big";
                    break;
                case "auto":
                    g = "poodll_mediarecorder_size_auto";
            }
            var h = "<div class=\"poodll_mediarecorderbox_burntrose " + f + " " + g + "\" id=\"" + c + "\">",
                i = this.fetch_status_bar("burntrose");
            h += i, h += d, h += "<span class=\"poodll_start-recording\" title=\"" + M.util.get_string("recui_record", "filter_poodll") + "\"></span>";
            h += "<span class=\"poodll_stop-recording hide\" title=\"" + M.util.get_string("recui_stop", "filter_poodll") + "\"></span>";
            h += "<span class=\"poodll_pause-recording hide\" title=\"" + M.util.get_string("recui_pause", "filter_poodll") + "\"></span>";
            h += " <span class=\"poodll_resume-recording hide\"title=\"" + M.util.get_string("recui_continue", "filter_poodll") + "\" ></span>";
            h += " <span class=\"poodll_play-recording\" ></span>";
            h += " <span class=\"poodll_playsave hide\" title=\"" + M.util.get_string("recui_play", "filter_poodll") + "\" ></span>";
            h += " <span class=\"poodll_mic\" ></span>";
            h += " <span class=\"poodll_recmic hide\" ></span>";
            h += " <span class=\"poodll_resume_mic hide\" ></span>";
            h += "<span class=\"poodll_savebtn\" ></span>";
            h += "<span class=\"poodll_save-recording_burntrose hide\" title=\"" + M.util.get_string("recui_save", "filter_poodll") + "\" ></span>";
            h += "<span class=\"poodll_savedsuccessfully hide\"></span>";
            h += "</div>";
            a(b).prepend(h);
            var j = {
                status: a("#" + c + " .poodll_status_burntrose"),
                preview: a("#" + c + " .poodll_preview_burntrose"),
                startbutton: a("#" + c + " .poodll_start-recording"),
                stopbutton: a("#" + c + "  .poodll_stop-recording"),
                pausebutton: a("#" + c + " .poodll_pause-recording"),
                resumebutton: a("#" + c + " .poodll_resume-recording"),
                play1: a("#" + c + " .poodll_play-recording"),
                playbutton: a("#" + c + " > .poodll_playsave"),
                save1: a("#" + c + " .poodll_savebtn"),
                savebutton: a("#" + c + " .poodll_save-recording_burntrose"),
                savesuccess: a("#" + c + " .poodll_savedsuccessfully"),
                playermic: a("#" + c + " .poodll_mic"),
                recordmic: a("#" + c + " .poodll_recmic"),
                resumemic: a("#" + c + " .poodll_resume_mic")
            };
            return j
        },
        insert_controlbar_video: function insert_controlbar_video(b, c, d) {
            var e = this.fetch_instanceprops(c),
                f = e.config.media_skin_style,
                g = "poodll_mediarecorder_size_auto";
            switch (e.config.size) {
                case "small":
                    g = "poodll_mediarecorder_size_small";
                    break;
                case "big":
                    g = "poodll_mediarecorder_size_big";
                    break;
                case "auto":
                    g = "poodll_mediarecorder_size_auto";
            }
            var h = "<div class=\"poodll_mediavideobox " + f + " " + g + "\" id=\"" + c + "\">",
                i = this.fetch_status_bar("burntrose");
            h += i, h += d, h += "<div class=\"poodll_mediavideobox2\" id=\"" + c + "\">";
            h += "<span class=\"poodll_start-recording\" title=\"" + M.util.get_string("recui_record", "filter_poodll") + "\"></span>";
            h += "<span class=\"poodll_stop-recording hide\" title=\"" + M.util.get_string("recui_stop", "filter_poodll") + "\"></span>";
            h += "<span class=\"poodll_pause-recording hide\" title=\"" + M.util.get_string("recui_pause", "filter_poodll") + "\" ></span>";
            h += " <span class=\"poodll_resume-recording hide\" title=\"" + M.util.get_string("recui_continue", "filter_poodll") + "\"></span>";
            h += " <span class=\"poodll_play-recording\" ></span>";
            h += " <span class=\"poodll_playsave hide\" title=\"" + M.util.get_string("recui_play", "filter_poodll") + "\"></span>";
            h += " <span class=\"poodll_mic hide\" ></span>";
            h += " <span class=\"poodll_recmic hide\" ></span>";
            h += " <span class=\"poodll_resume_mic hide\" ></span>";
            h += "<span class=\"poodll_savebtn \"title=\"" + M.util.get_string("recui_save", "filter_poodll") + "\" ></span>";
            h += "<span class=\"poodll_save-recording_burntrose hide \"title=\"" + M.util.get_string("recui_save", "filter_poodll") + "\" ></span>";
            h += "<span class=\"poodll_savedsuccessfully hide\" ></span>";
            h += "</div>";
            h += "</div>";
            a(b).prepend(h);
            var j = {
                status: a("#" + c + " > .poodll_status_burntrose"),
                preview: a("#" + c + " > .poodll_preview_burntrose"),
                startbutton: a("#" + c + " > .poodll_start-recording"),
                stopbutton: a("#" + c + " > .poodll_stop-recording"),
                pausebutton: a("#" + c + " > .poodll_pause-recording"),
                resumebutton: a("#" + c + " > .poodll_resume-recording"),
                play1: a("#" + c + " > .poodll_play-recording"),
                playbutton: a("#" + c + " > .poodll_playsave"),
                save1: a("#" + c + " > .poodll_savebtn"),
                savebutton: a("#" + c + " > .poodll_save-recording_burntrose"),
                savesuccess: a("#" + c + " > .poodll_savedsuccessfully"),
                playermic: a("#" + c + "> .poodll_mic"),
                recordmic: a("#" + c + "> .poodll_recmic"),
                resumemic: a("#" + c + "> .poodll_resume_mic")
            };
            return j
        },
        register_controlbar_events_video: function register_controlbar_events_video(a, b) {
            return this.register_controlbar_events_audio(a, b)
        },
        register_controlbar_events_audio: function register_controlbar_events_audio(b, c) {
            var d = this,
                e = this.pmr,
                f = this.fetch_instanceprops(c);
            f.controlbar.startbutton.click(function() {
                this.disabled = !1;
                a("#" + f.config.widgetid + "_messages").text("");
                e.do_start_audio(f, b);
                f.controlbar.playermic.hide();
                f.controlbar.recordmic.show();
                f.controlbar.playbutton.hide();
                f.controlbar.play1.hide();
                f.controlbar.pausebutton.show();
                f.controlbar.pausebutton.attr("disabled", !1);
                f.controlbar.startbutton.hide();
                f.controlbar.stopbutton.show();
                f.controlbar.stopbutton.attr("disabled", !1);
                f.controlbar.savebutton.hide();
                f.controlbar.savesuccess.hide();
                f.controlbar.save1.show();
                d.set_visual_mode("recordmode", c);
                f.timer.reset();
                f.timer.start();
                d.update_status(c)
            });
            f.controlbar.stopbutton.click(function() {
                this.disabled = !1;
                f.controlbar.stopbutton.hide();
                f.controlbar.startbutton.show();
                f.controlbar.startbutton.attr("disabled", !1);
                f.controlbar.resumebutton.hide();
                f.controlbar.pausebutton.hide();
                f.controlbar.play1.hide();
                f.controlbar.playbutton.show();
                f.controlbar.save1.hide();
                f.controlbar.savesuccess.hide();
                f.controlbar.savebutton.show();
                f.controlbar.resumemic.hide();
                f.controlbar.recordmic.hide();
                f.controlbar.playermic.show();
                e.do_stop_audio(f);
                var a = f.controlbar.preview;
                if (a && a.get(0)) {
                    a.get(0).pause()
                }
                d.set_visual_mode("previewmode", c);
                f.timer.stop();
                d.update_status(c);
                if (!f.uploaded) {
                    f.controlbar.startbutton.attr("disabled", !1)
                }
            });
            f.controlbar.pausebutton.click(function() {
                this.disabled = !0;
                a(this).hide();
                f.controlbar.resumebutton.show();
                e.do_pause_audio(f);
                f.controlbar.resumebutton.attr("disabled", !1);
                d.set_visual_mode("pausedmode", c);
                f.timer.pause();
                d.update_status(c);
                f.controlbar.recordmic.hide();
                f.controlbar.resumemic.show()
            });
            f.controlbar.resumebutton.click(function() {
                this.disabled = !0;
                a(this).hide();
                f.controlbar.pausebutton.show();
                e.do_resume_audio(f);
                f.controlbar.pausebutton.attr("disabled", !1);
                d.set_visual_mode("recordmode", c);
                f.timer.resume();
                d.update_status(c);
                f.controlbar.resumemic.hide();
                f.controlbar.recordmic.show()
            });
            f.controlbar.playbutton.click(function() {
                this.disabled = !1;
                var a = f.controlbar.preview.get(0);
                if (0 < a.currentTime && !a.paused) {
                    a.pause();
                    a.currentTime = 0;
                    return
                }
                e.do_play_audio(f, a);
                f.controlbar.startbutton.show()
            });
            f.controlbar.savebutton.click(function() {
                this.disabled = !1;
                if (f.blobs && 0 < f.blobs.length) {
                    e.do_save_audio(f);
                    f.uploaded = !0;
                    f.controlbar.startbutton.attr("disabled", !0)
                } else {
                    f.uploader.Output(M.util.get_string("recui_nothingtosaveerror", "filter_poodll"))
                }
                return !1
            });
            window.onbeforeunload = function() {
                f.controlbar.startbutton.attr("disabled", !1);
                var a = f.controlbar.preview;
                if (a && a.get(0)) {
                    a.get(0).pause()
                }
            }
        }
    }
});
define('filter_poodll/speech_awstranscribe', ["jquery", "core/log"], function(a, b) {
    "use strict";
    return b.debug("speech_awstranscribe: initialising"), {
        recognition: null,
        recognizing: !1,
        ignore_onend: !1,
        final_transcript: "",
        start_timestamp: 0,
        lang: "en-US",
        clone: function() {
            return a.extend(!0, {}, this)
        },
        init: function(a) {
            var b = b || webkitSpeechRecognition;
            this.recognition = new b, this.recognition.continuous = !0, this.recognition.interimResults = !0, this.lang = a ? a : "en-US", this.register_events()
        },
        set_grammar: function(a) {
            var b = b || webkitSpeechGrammarList;
            if (b) {
                var c = new b;
                c.addFromString(a, 1), this.recognition.grammars = c
            }
        },
        start: function() {
            this.recognizing || (this.recognizing = !0, this.final_transcript = "", this.recognition.lang = this.lang, this.recognition.start(), this.ignore_onend = !1, this.start_timestamp = Date.now())
        },
        stop: function() {
            this.recognizing = !1, this.recognition.stop()
        },
        register_events: function() {
            var a = this.recognition,
                c = this;
            a.onstart = function() {
                c.recognizing = !0
            }, a.onerror = function(a) {
                "no-speech" == a.error && (b.debug("info_no_speech"), c.ignore_onend = !0), "audio-capture" == a.error && (b.debug("info_no_microphone"), c.ignore_onend = !0), "not-allowed" == a.error && (a.timeStamp - c.start_timestamp < 100 ? b.debug("info_blocked") : b.debug("info_denied"), c.ignore_onend = !0)
            }, a.onend = function() {
                0 != c.recognizing && (c.ignore_onend ? c.recognizing = !1 : a.start())
            }, a.onresult = function(a) {
                for (var b = "", d = a.resultIndex; d < a.results.length; ++d) a.results[d].isFinal ? (c.final_transcript += a.results[d][0].transcript, c.onfinalspeechcapture(c.final_transcript), c.final_transcript = "") : (b += a.results[d][0].transcript, c.oninterimspeechcapture(b))
            }
        },
        onfinalspeechcapture: function(a) {
            b.debug(a)
        },
        oninterimspeechcapture: function(a) {},
        streamAudioToWebSocket: function(a) {
            micStream = new mic, micStream.setStream(a);
            var b = createPresignedUrl();
            socket = new WebSocket(b), socket.binaryType = "arraybuffer", socket.onopen = function() {
                micStream.on("data", function(a) {
                    var b = convertAudioToBinaryMessage(a);
                    socket.OPEN && socket.send(b)
                })
            }, wireSocketEvents()
        },
        wireSocketEvents: function() {
            socket.onmessage = function(a) {
                var b = eventStreamMarshaller.unmarshall(Buffer(a.data)),
                    c = JSON.parse(String.fromCharCode.apply(String, b.body));
                "event" === b.headers[":message-type"].value ? handleEventStreamMessage(c) : (transcribeException = !0, showError(c.Message), toggleStartStop())
            }, socket.onerror = function() {
                socketError = !0, showError("WebSocket connection error. Try again."), toggleStartStop()
            }, socket.onclose = function(a) {
                micStream.stop(), socketError || transcribeException || (1e3 != a.code && showError("</i><strong>Streaming Exception</strong><br>" + a.reason), toggleStartStop())
            }
        },
        handleEventStreamMessage: function(b) {
            var c = b.Transcript.Results;
            if (c.length > 0 && c[0].Alternatives.length > 0) {
                var d = c[0].Alternatives[0].Transcript;
                d = decodeURIComponent(escape(d)), a("#transcript").val(transcription + d + "\n"), c[0].IsPartial || (a("#transcript").scrollTop(a("#transcript")[0].scrollHeight), transcription += d + "\n")
            }
        },
        convertAudioToBinaryMessage: function(a) {
            var b = mic.toRaw(a);
            if (null != b) {
                var c = audioUtils.downsampleBuffer(b, sampleRate),
                    d = audioUtils.pcmEncode(c),
                    e = getAudioEventMessage(Buffer.from(d)),
                    f = eventStreamMarshaller.marshall(e);
                return f
            }
        },
        getAudioEventMessage: function(a) {
            return {
                headers: {
                    ":message-type": {
                        type: "string",
                        value: "event"
                    },
                    ":event-type": {
                        type: "string",
                        value: "AudioEvent"
                    }
                },
                body: a
            }
        },
        createPresignedUrl: function() {
            var b = "transcribestreaming." + region + ".amazonaws.com:8443";
            return v4.createPresignedURL("GET", b, "/stream-transcription-websocket", "transcribe", crypto.createHash("sha256").update("", "utf8").digest("hex"), {
                key: a("#access_id").val(),
                secret: a("#secret_key").val(),
                protocol: "wss",
                expires: 15,
                region: region,
                query: "language-code=" + languageCode + "&media-encoding=pcm&sample-rate=" + sampleRate
            })
        },
        closeSocket: function() {
            if (socket.OPEN) {
                micStream.stop();
                var a = getAudioEventMessage(Buffer.from(new Buffer([]))),
                    b = eventStreamMarshaller.marshall(a);
                socket.send(b)
            }
        }
    }
});
define("filter_poodll/poodll_splitmediaskin", ["jquery", "core/log", "filter_poodll/utils_amd", "filter_poodll/upskin_bar"], function(a, b, c, d) {
    "use strict";
    b.debug("PoodLL split Skin: initialising");
    return {
        instanceprops: null,
        pmr: null,
        uploaded: !1,
        recorded: !1,
        played: !1,
        mustResetResourcePlayer: !1,
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        init: function init(a, b) {
            this.instanceprops = a;
            this.pmr = b
        },
        fetch_instanceprops: function fetch_instanceprops() {
            return this.instanceprops
        },
        onUploadSuccess: function onUploadSuccess(b) {
            a("#" + b + " > .poodll_save-recording").hide();
            a("#" + b + " > .poodll_savedsuccessfully").show()
        },
        onUploadFailure: function onUploadFailure() {},
        fetch_status_bar: function fetch_status_bar(a) {
            return "<div class=\"poodll_status_" + a + "\"></div>"
        },
        fetch_preview_audio: function fetch_preview_audio(a) {
            return "<audio class=\"poodll_checkplayer_" + a + " hide\" controls></audio>"
        },
        fetch_preview_video: function fetch_preview_video(a) {
            return "<video class=\"poodll_checkplayer_" + a + "\" width=\"320\" height=\"240\"></video>"
        },
        fetch_resource_audio: function fetch_resource_audio(a) {
            return "<audio class=\"poodll_resourceplayer_" + a + " hide\" src=\"@@RESOURCEURL@@\" playsinline controls></audio>"
        },
        fetch_resource_video: function fetch_resource_video(a) {
            return "<video class=\"poodll_resourceplayer_" + a + " hide\" src=\"@@RESOURCEURL@@\" ></video>"
        },
        fetch_uploader_skin: function fetch_uploader_skin(a, b) {
            var c = this.fetch_instanceprops(a),
                e = d.clone();
            e.init(c.config, b, c.controlbar.split_progresscanvas, c.controlbar.status);
            return e
        },
        onMediaError: function onMediaError(a) {
            console.error("media error", a)
        },
        onMediaSuccess_video: function onMediaSuccess_video(a) {
            var b = this.fetch_instanceprops(a);
            b.controlbar.stopbutton.attr("disabled", !1);
            b.controlbar.savebutton.attr("disabled", !1)
        },
        onMediaSuccess_audio: function onMediaSuccess_audio(a) {
            var b = this.fetch_instanceprops(a);
            b.controlbar.checkplayer.attr("src", null);
            b.controlbar.stopbutton.attr("disabled", !1);
            b.controlbar.savebutton.attr("disabled", !1)
        },
        handle_timer_update: function handle_timer_update(a) {
            if (!this.played && !this.recorded) {
                return
            }
            var b = this.fetch_instanceprops(a),
                c = M.util.get_string("recui_recording", "filter_poodll");
            this.update_status(a, c + b.timer.fetch_display_time());
            if (0 == b.timer.seconds && 0 < b.timer.initseconds) {
                b.controlbar.stopbutton.click()
            }
        },
        update_status: function update_status(a, b) {
            var c = this.fetch_instanceprops(a);
            c.controlbar.status.html(b)
        },
        set_visual_mode: function set_visual_mode(a, b) {
            var c = this;
            switch (a) {
                case "recordingmode":
                    c.disable_button(b.controlbar.resourceplaybutton);
                    b.controlbar.resourceplaybutton.empty();
                    b.controlbar.resourceplaybutton.html("<span class=\"fa fa-microphone fa-3x\"></span>");
                    b.controlbar.resourceplaybutton.addClass("poodll_mediarecorderholder_split_recordcolor");
                    b.controlbar.status.addClass("poodll_mediarecorderholder_split_recordcolor");
                    c.handle_timer_update(b.controlbarid);
                    c.enable_button(b.controlbar.stopbutton);
                    break;
                case "resourceplayingmode":
                    c.disable_button(b.controlbar.resourceplaybutton);
                    c.disable_button(b.controlbar.stopbutton);
                    break;
                case "neverrecordedmode":
                    b.controlbar.resourceplaybutton.empty();
                    b.controlbar.resourceplaybutton.html("<p style=\"margin-bottom: 0px; font-size: 24px;\">Start</p>");
                    c.enable_button(b.controlbar.resourceplaybutton);
                    c.disable_button(b.controlbar.stopbutton);
                    this.update_status(b.controlbarid, M.util.get_string("recui_ready", "filter_poodll"));
                    break;
                case "allstoppedmode":
                    c.disable_button(b.controlbar.resourceplaybutton);
                    c.disable_button(b.controlbar.stopbutton);
                    b.controlbar.resourceplaybutton.empty();
                    b.controlbar.resourceplaybutton.html("<span class=\"fa fa-check fa-3x\"></span>");
                    b.controlbar.resourceplaybutton.removeClass("poodll_mediarecorderholder_split_recordcolor");
                    b.controlbar.status.removeClass("poodll_mediarecorderholder_split_recordcolor");
                    this.update_status(b.controlbarid, M.util.get_string("recui_finished", "filter_poodll"));
                    break;
            }
        },
        insert_controlbar_video: function insert_controlbar_video(a, b, c, d) {
            var e = this.prepare_controlbar(a, b, c, d, "video");
            return e
        },
        insert_controlbar_audio: function insert_controlbar_audio(a, b, c, d) {
            var e = this.prepare_controlbar(a, b, c, d, "audio");
            return e
        },
        prepare_controlbar: function prepare_controlbar(b, c, d, e, f) {
            var g = this.fetch_instanceprops(c),
                h = g.config.media_skin_style,
                i = "video" == f ? "poodll_mediarecorder_video" : "poodll_mediarecorder_audio";
            e = e.replace("@@RESOURCEURL@@", g.config.resource);
            var j = this.pmr.fetch_strings(),
                k = "<div class=\"poodll_mediarecorderholder_split " + i + "\" id=\"holder_" + c + "\">";
            k += "<div class=\"poodll_mediarecorderbox_split\" id=\"" + c + "\">";
            k += "<div class=\"style-holder " + h + "\">";
            k += d, k += e, k += "<button type=\"button\" class=\"poodll_mediarecorder_button_split poodll_start-recording_split hide\"><span class=\"fa fa-microphone fa-3x\"></span></button>";
            k += " <button type=\"button\" class=\"poodll_mediarecorder_button_split poodll_playback-recording_split hide\"><span class=\"fa fa-play-circle fa-3x\"></span></button>";
            k += " <button type=\"button\" class=\"poodll_mediarecorder_button_split poodll_stopplayback-recording_split hide\"><span class=\"fa fa-stop-circle fa-3x\"></span></button>";
            k += "<button type=\"button\" class=\"poodll_save-recording_split pmr_disabled hide\">" + j.recui_save + "</button></div>";
            k += "<div class=\"poodll_mediarecorderholder_split\"><button type=\"button\" class=\"poodll_mediarecorder_button_split poodll_stop-recording_split pmr_disabled\" disabled><p style=\"margin-bottom: 0px;font-size: 24px;\">Submit</p></button></div>";
            k += "<div class=\"poodll_statusholder_split\" >";
            k += "<canvas class=\"split_range\"></canvas>";
            var l = this.fetch_status_bar("split");
            k += l;
            k += "</div>";
            k += "</div></div></div>";
            a(b).append(k);
            a(".qtext").prepend("<hr />");
            a(".qtext").prepend("<div class=\"poodll_mediarecorderholder_split poodll_mediarecorder_split_topsplit\"><button type=\"button\" class=\"poodll_mediarecorder_button_split poodll_play-resource_split\"><p style=\"margin-bottom: 0px; font-size: 24px;\">Start</p></button></div>");
            var m = {
                split_progresscanvas: a("#" + c + " .split_range"),
                marker: a("#" + c + "  .marker"),
                resourceplayer: a("#" + c + "  .poodll_resourceplayer_split"),
                checkplayer: a("#" + c + "  .poodll_checkplayer_split"),
                stopbutton: a("#" + c + "  .poodll_stop-recording_split"),
                resourcestopbutton: a("#" + c + "  .poodll_stop-resource_split"),
                startbutton: a("#" + c + "  .poodll_start-recording_split"),
                playbackbutton: a("#" + c + "  .poodll_playback-recording_split"),
                stopplaybackbutton: a("#" + c + "  .poodll_stopplayback-recording_split"),
                savebutton: a("#" + c + "  .poodll_save-recording_split"),
                resourceplaybutton: a(".poodll_mediarecorder_button_split.poodll_play-resource_split"),
                status: a(".poodll_status_split")
            };
            return m
        },
        register_controlbar_events_video: function register_controlbar_events_video(a, b) {
            return this.register_controlbar_events_audio(a, b)
        },
        do_callback: function do_callback(b) {
            switch (b[1]) {
                case "filesubmitted":
                    var c = document.getElementById(b[3]);
                    if (null == c) {
                        c = parent.document.getElementById(b[3])
                    }
                    if (c) {
                        c.value = b[2]
                    }
                    a("#responseform input[name=next]").attr("disabled", !1);
            }
        },
        register_controlbar_events_audio: function register_controlbar_events_audio(b, c) {
            var d = this,
                e = this.pmr,
                f = this.fetch_instanceprops(c);
            this.set_visual_mode("neverrecordedmode", f);
            f.config.callbackjs = d.do_callback;
            a("#responseform input[name=next]").attr("disabled", !0);
            f.controlbar.startbutton.click(function() {
                e.do_start_audio(f, b);
                d.recorded = !0;
                f.timer.reset();
                f.timer.start();
                d.set_visual_mode("recordingmode", f)
            });
            f.controlbar.stopbutton.click(function() {
                d.do_stop_resource(f);
                e.do_stop_audio(f);
                d.disable_button(this);
                setTimeout(function() {
                    f.controlbar.savebutton.click()
                }, 100);
                f.timer.stop();
                d.set_visual_mode("allstoppedmode", f)
            });
            f.controlbar.resourceplaybutton.click(function() {
                navigator.mediaDevices.getUserMedia({
                    audio: !0
                }).then(function() {
                    f.controlbar.startbutton.trigger("click");
                    d.played = !0;
                    if ("" != f.config.resource) {
                        d.do_play_resource(f)
                    }
                }).catch(function(a) {
                    alert(a)
                })
            });
            f.controlbar.resourcestopbutton.click(function() {
                d.do_stop_resource(f);
                if (d.recorded) {
                    d.set_visual_mode("allstoppedmode", f)
                } else {
                    d.set_visual_mode("neverrecordedmode", f)
                }
            });
            f.controlbar.savebutton.click(function() {
                d.disable_button(this);
                if (f.blobs && 0 < f.blobs.length) {
                    e.do_save_audio(f);
                    d.uploaded = !0;
                    d.disable_button(f.controlbar.startbutton)
                } else {
                    f.uploader.Output(M.util.get_string("recui_nothingtosaveerror", "filter_poodll"))
                }
                return !1
            })
        },
        set_completion: function set_completion(a, b) {
            var c = b.controlbar.completioncheck
        },
        do_stop_resource: function do_stop_resource(a) {
            console.log("stopped the resource");
            var b = a.controlbar.resourceplayer.get(0);
            b.pause();
            b.currentTime = 0;
            if (a.mustResetResourcePlayer) {
                a.mustResetResourcePlayer = !1;
                b.src = a.config.resource;
                b.load()
            }
        },
        do_play_resource: function do_play_resource(a) {
            var b = a.controlbar.resourceplayer.get(0);
            b.play();
            b.currentTime = 0
        },
        enable_button: function enable_button(b) {
            a(b).attr("disabled", !1);
            a(b).removeClass("pmr_disabled")
        },
        disable_button: function disable_button(b) {
            a(b).attr("disabled", !0);
            a(b).addClass("pmr_disabled")
        }
    }
});
define("filter_poodll/msr_stereoaudio", ["jquery", "core/log", "filter_poodll/msr_helper_stereoaudio"], function(a, b, c) {
    "use strict";
    b.debug("PoodLL Recorder: initialising");
    return {
        timeout: 0,
        mediaRecorder: null,
        mediaStream: null,
        msr: null,
        mediaType: "audio",
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        init: function init(a, b, c, d) {
            this.msr = a;
            this.mediaStream = b;
            this.audioctx = c;
            this.mediaType = d
        },
        start: function start(a) {
            a = a || 1e3;
            var b = this;
            this.mediaRecorder = c.clone();
            this.mediaRecorder.init(this.msr, this.mediaStream, this.audioctx);
            this.mediaRecorder.record();
            this.timeout = setInterval(function() {
                b.mediaRecorder.requestData()
            }, a)
        },
        stop: function stop() {
            if (this.mediaRecorder) {
                this.mediaRecorder.stop();
                clearTimeout(this.timeout)
            }
        },
        pause: function pause() {
            if (!this.mediaRecorder) {
                return
            }
            this.mediaRecorder.pause()
        },
        resume: function resume() {
            if (!this.mediaRecorder) {
                return
            }
            this.mediaRecorder.resume()
        },
        ondataavailable: function ondataavailable(a) {
            b.debug("ondataavailable:" + a)
        },
        onstop: function onstop(a) {
            b.debug(a)
        }
    }
});
define("filter_poodll/anim_hwave", ["jquery", "core/log"], function(a, b) {
    "use strict";
    b.debug("anim_horizontal_wave: initialising");
    return {
        analyser: null,
        cvs: null,
        cvsctx: null,
        drawparams: {
            wavColor: "#0",
            barColor: "#ad2323",
            shadowOffsetX: 0,
            shadowOffsetY: 0,
            shadowBlur: 10,
            shadowColor: "#fff",
            font: "18px Arial",
            textAlign: "center",
            textBaseline: "middle"
        },
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        init: function init(a, b) {
            this.cvs = b;
            this.cvsctx = b.getContext("2d");
            this.analyser = a;
            this.clear()
        },
        setDrawParam: function setDrawParam(a, b) {
            this.drawparams[a] = b
        },
        clear: function clear() {
            this.cvsctx.clearRect(0, 0, this.cvs.width, this.cvs.height);
            this.cvsctx.lineWidth = 2;
            this.cvsctx.strokeStyle = this.drawparams.wavColor;
            this.cvsctx.beginPath();
            this.cvsctx.moveTo(0, this.cvs.height / 2);
            this.cvsctx.lineTo(this.cvs.width, this.cvs.height / 2);
            this.cvsctx.stroke()
        },
        start: function start() {
            this.analyser.core.fftSize = 2048;
            var a = this.analyser.core.fftSize,
                b = new Uint8Array(a),
                c = this.cvs.width,
                d = this.cvs.height,
                e = this.cvsctx,
                f = this.analyser;
            this.clear();
            var g = this,
                h = function() {
                    requestAnimationFrame(h);
                    if (!f.theinterval) {
                        return
                    }
                    f.core.getByteTimeDomainData(b);
                    e.clearRect(0, 0, c, d);
                    e.lineWidth = 2;
                    e.strokeStyle = g.drawparams.wavColor;
                    e.beginPath();
                    for (var j = 0, k = 0; k < a; k++) {
                        var l = b[k] / 128,
                            m = l * d / 2;
                        if (0 == k) {
                            e.moveTo(j, m)
                        } else {
                            e.lineTo(j, m)
                        }
                        j += 1 * c / a
                    }
                    e.lineTo(c, d / 2);
                    e.stroke()
                };
            h()
        }
    }
});
define("filter_poodll/poodll_bmrmediaskin", ["jquery", "jqueryui", "core/log", "filter_poodll/utils_amd", "filter_poodll/dlg_devicesettings", "filter_poodll/anim_progress_bar", "filter_poodll/upskin_bar"], function(a, b, c, d, e, f, g) {
    "use strict";
    c.debug("PoodLL BMR Skin: initialising");
    return {
        instanceprops: null,
        pmr: null,
        uploaded: !1,
        devsettings: null,
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        init: function init(a, b) {
            this.instanceprops = a;
            this.pmr = b;
            this.devsettings = e.clone();
            this.devsettings.init(b, a)
        },
        fetch_instanceprops: function fetch_instanceprops() {
            return this.instanceprops
        },
        onUploadSuccess: function onUploadSuccess(b) {
            a("#" + b + " > .poodll_save-recording").hide();
            a("#" + b + " > .poodll_savedsuccessfully").show()
        },
        onUploadFailure: function onUploadFailure() {},
        fetch_status_bar: function fetch_status_bar(a) {
            return "<div class=\"poodll_status_" + a + "\">00:00:00</div>"
        },
        fetch_preview_audio: function fetch_preview_audio(a) {
            return "<audio class=\"poodll_preview_" + a + " hide\" controls></audio>"
        },
        fetch_preview_video: function fetch_preview_video(a) {
            return "<video class=\"poodll_preview_" + a + "\"></video>"
        },
        fetch_resource_audio: function fetch_resource_audio() {
            return ""
        },
        fetch_resource_video: function fetch_resource_video() {
            return ""
        },
        fetch_uploader_skin: function fetch_uploader_skin(a, b) {
            var c = this.fetch_instanceprops(a),
                d = g.clone();
            d.init(c.config, b, c.controlbar.bmr_progresscanvas, c.controlbar.status);
            return d
        },
        onMediaError: function onMediaError(a) {
            console.error("media error", a)
        },
        onMediaSuccess_video: function onMediaSuccess_video(a) {
            var b = this.fetch_instanceprops(a);
            b.uploader.Output("");
            this.set_visual_mode("recordmode", a);
            b.timer.reset();
            b.timer.start();
            this.update_status(a)
        },
        onMediaSuccess_audio: function onMediaSuccess_audio(a) {
            var b = this.fetch_instanceprops(a);
            b.uploader.Output("");
            b.controlbar.preview.attr("src", null);
            this.set_visual_mode("recordmode", a);
            b.timer.reset();
            b.timer.start();
            this.update_status(a)
        },
        handle_timer_update: function handle_timer_update(a) {
            var b = this.fetch_instanceprops(a);
            b.controlbar.status.html(b.timer.fetch_display_time());
            if (0 == b.timer.seconds && 0 < b.timer.initseconds) {
                b.controlbar.stopbutton.click()
            }
        },
        update_status: function update_status(a) {
            var b = this.fetch_instanceprops(a);
            b.controlbar.status.html(b.timer.fetch_display_time())
        },
        set_visual_mode: function set_visual_mode(a, b) {
            var c = this,
                d = this.fetch_instanceprops(b);
            this.visualmode = a;
            switch (a) {
                case "recordmode":
                    c.disable_button(d.controlbar.startbutton);
                    c.show_element(d.controlbar.startbutton);
                    c.hide_element(d.controlbar.bmr_progresscanvas);
                    c.enable_button(d.controlbar.pausebutton);
                    c.show_element(d.controlbar.pausebutton);
                    c.disable_button(d.controlbar.playbutton);
                    c.hide_element(d.controlbar.resumebutton);
                    c.enable_button(d.controlbar.stopbutton);
                    c.disable_button(d.controlbar.savebutton);
                    d.controlbar.preview.addClass("poodll_recording");
                    d.controlbar.status.addClass("poodll_recording");
                    if ("audio" == d.config.mediatype) {
                        c.hide_element(d.controlbar.preview)
                    }
                    break;
                case "previewmode":
                    c.disable_button(d.controlbar.stopbutton);
                    c.enable_button(d.controlbar.playbutton);
                    c.disable_button(d.controlbar.pausebutton);
                    c.enable_button(d.controlbar.savebutton);
                    d.controlbar.status.html(d.timer.fetch_display_time(d.timer.finalSeconds));
                    c.show_element(d.controlbar.startbutton);
                    c.disable_button(d.controlbar.resumebutton);
                    c.hide_element(d.controlbar.resumebutton);
                    c.hide_element(d.controlbar.bmr_progresscanvas);
                    if (!c.uploaded) {
                        c.enable_button(d.controlbar.startbutton);
                        c.enable_button(d.controlbar.savebutton)
                    }
                    c.show_element(d.controlbar.pausebutton);
                    d.controlbar.preview.removeClass("poodll_recording");
                    d.controlbar.status.removeClass("poodll_recording");
                    if ("audio" == d.config.mediatype) {
                        c.show_element(d.controlbar.preview)
                    }
                    c.enable_button(d.controlbar.playbutton);
                    break;
                case "playmode":
                    d.controlbar.status.html("00:00:00");
                    c.disable_button(d.controlbar.playbutton);
                    c.enable_button(d.controlbar.stopbutton);
                    c.disable_button(d.controlbar.startbutton);
                    c.disable_button(d.controlbar.resumebutton);
                    c.disable_button(d.controlbar.playbutton);
                    c.show_element(d.controlbar.bmr_progresscanvas);
                    c.show_element(d.controlbar.startbutton);
                    c.hide_element(d.controlbar.resumebutton);
                    break;
                case "pausedmode":
                    c.disable_button(d.controlbar.pausebutton);
                    c.hide_element(d.controlbar.startbutton);
                    c.show_element(d.controlbar.resumebutton);
                    c.enable_button(d.controlbar.resumebutton);
                    c.enable_button(d.controlbar.savebutton);
                    d.controlbar.preview.removeClass("poodll_recording");
                    d.controlbar.status.removeClass("poodll_recording");
                    break;
                case "uploadmode":
                    c.disable_button(d.controlbar.savebutton);
                    c.disable_button(d.controlbar.startbutton);
                    c.show_element(d.controlbar.bmr_progresscanvas);
                    break;
            }
        },
        insert_controlbar_video: function insert_controlbar_video(a, b, c, d) {
            var e = this.prepare_controlbar(a, b, c, d, "video");
            return e
        },
        insert_controlbar_audio: function insert_controlbar_audio(a, b, c, d) {
            var e = this.prepare_controlbar(a, b, c, d, "audio");
            return e
        },
        prepare_controlbar: function prepare_controlbar(b, c, d, e, f) {
            var g = this.fetch_instanceprops(c),
                h = g.config.media_skin_style,
                i = "poodll_mediarecorder_size_auto";
            switch (g.config.size) {
                case "small":
                    i = "poodll_mediarecorder_size_small";
                    break;
                case "big":
                    i = "poodll_mediarecorder_size_big";
                    break;
                case "auto":
                    i = "poodll_mediarecorder_size_auto";
            }
            var j = this.pmr.fetch_strings(),
                k = g.showupload ? "" : "hide",
                l = "video" == f ? "fa-video-camera" : "fa-microphone",
                m = "video" == f ? "poodll_mediarecorder_video" : "poodll_mediarecorder_audio",
                n = "<div class=\"poodll_mediarecorderholder_bmr poodll_videorecorderholder_bmr " + m + " " + i + "\" id=\"holder_" + c + "\">";
            n += "<div class=\"poodll_mediarecorderbox_bmr\" id=\"" + c + "\">";
            n += "<audio style=\"display: none !important;\" class=\"poodll-alert-recording\" id=\"" + c + "\"><source src=\"https://poodll.com/wp-content/themes/Poodll-Theme/images/ding.mp3\" type=\"audio/mpeg\"></audio>";
            n += "<div class=\"style-holder " + h + "\">";
            n += "<div class=\"poodll_statusholder_bmr\" >";
            n += "<canvas class=\"bmr_range\"></canvas>";
            var o = this.fetch_status_bar("bmr");
            n += o;
            n += "</div>";
            n += d, n += "<div class=\"settingsicon\" id=\"settingsicon_" + c + "\"><button type=\"button\" class=\"btn btn-info btn-lg\" data-toggle=\"modal\" data-target=\"#myModal\"><i class=\"fa fa-cogs\" aria-hidden=\"true\"></i></button></div>";
            n += "<button type=\"button\" class=\"poodll_mediarecorder_button_bmr poodll_start-recording_bmr\"><i class=\"fa " + l + "\" aria-hidden=\"true\"></i></button>";
            n += " <button type=\"button\" class=\"poodll_mediarecorder_button_bmr poodll_resume-recording_bmr bmr_disabled hide\" disabled><i class=\"fa " + l + "\" aria-hidden=\"true\"></i></button>";
            n += "<button type=\"button\" class=\"poodll_mediarecorder_button_bmr poodll_stop-recording_bmr bmr_disabled\" disabled><i class=\"fa fa-stop\" aria-hidden=\"true\"></i></button>";
            n += "<button type=\"button\" class=\"poodll_mediarecorder_button_bmr poodll_pause-recording_bmr bmr_disabled\" disabled><i class=\"fa fa-pause\" aria-hidden=\"true\"></i></button>";
            n += " <button type=\"button\" class=\"poodll_mediarecorder_button_bmr poodll_play-recording_bmr bmr_disabled\" disabled><i class=\"fa fa-play\" aria-hidden=\"true\"></i></button>";
            n += "<button type=\"button\" class=\"poodll_save-recording_bmr " + k + "\" disabled>" + j.recui_save + "</button>";
            n += "</div>";
            n += this.devsettings.fetch_dialogue_box();
            n += g.downloaddialog.fetch_dialogue_box();
            n += g.errordialog.fetch_dialogue_box();
            n += "</div>";
            n += "</div>";
            a(b).prepend(n);
            var p = {
                poodll_recording_alert: a("#" + c + " .poodll-alert-recording"),
                bmr_progresscanvas: a("#" + c + " .bmr_range"),
                settingsdialog: a("#" + c + " .poodll_dialogue_box_settings"),
                downloaddialog: a("#" + c + " .poodll_dialogue_box_download"),
                errorsdialog: a("#" + c + " .poodll_dialogue_box_errors"),
                settingsicon: a("#" + c + " .settingsicon"),
                status: a("#" + c + " .poodll_status_bmr"),
                preview: a("#" + c + " .poodll_preview_bmr"),
                startbutton: a("#" + c + " .poodll_start-recording_bmr"),
                stopbutton: a("#" + c + " .poodll_stop-recording_bmr"),
                pausebutton: a("#" + c + " .poodll_pause-recording_bmr"),
                resumebutton: a("#" + c + " .poodll_resume-recording_bmr"),
                playbutton: a("#" + c + " .poodll_play-recording_bmr"),
                savebutton: a("#" + c + " .poodll_save-recording_bmr")
            };
            g.downloaddialog.set_dialogue_box(p.downloaddialog);
            g.errordialog.set_dialogue_box(p.errorsdialog);
            this.devsettings.set_dialogue_box(p.settingsdialog);
            return p
        },
        register_controlbar_events_video: function register_controlbar_events_video(a, b) {
            return this.register_controlbar_events_audio(a, b)
        },
        register_controlbar_events_audio: function register_controlbar_events_audio(a, b) {
            var c = this,
                d = this.pmr,
                e = this.fetch_instanceprops(b);
            e.controlbar.settingsicon.click(function() {
                if (!c.uploaded) {
                    c.devsettings.open()
                } else {
                    e.downloaddialog.open()
                }
            });
            var g = f.clone();
            g.init(e.controlbar.bmr_progresscanvas);
            e.controlbar.startbutton.click(function() {
                d.do_start_audio(e, a)
            });
            e.controlbar.stopbutton.click(function() {
                d.do_stop_audio(e);
                var a = e.controlbar.preview;
                if (a && a.get(0)) {
                    a.get(0).pause()
                }
                e.timer.stop();
                c.update_status(b);
                c.set_visual_mode("previewmode", b)
            });
            e.controlbar.pausebutton.click(function() {
                d.do_pause_audio(e);
                e.timer.pause();
                c.update_status(b);
                c.set_visual_mode("pausedmode", b)
            });
            e.controlbar.resumebutton.click(function() {
                d.do_resume_audio(e);
                e.timer.resume();
                c.update_status(b);
                c.set_visual_mode("recordmode", b)
            });
            e.controlbar.preview.on("timeupdate", function() {
                if ("playmode" != c.visualmode) {
                    return
                }
                var a = this.currentTime;
                e.controlbar.status.html(e.timer.fetch_display_time(a))
            });
            e.controlbar.playbutton.click(function() {
                var a = e.controlbar.preview.get(0);
                d.do_play_audio(e, a);
                c.set_visual_mode("playmode", b);
                g.clear();
                g.fetchCurrent = function() {
                    var a = e.controlbar.preview.prop("currentTime"),
                        b = e.controlbar.preview.prop("duration");
                    if (!isFinite(b)) {
                        b = e.timer.finalseconds
                    }
                    return a / b
                };
                g.start()
            });
            e.controlbar.savebutton.click(function() {
                if (e.blobs && 0 < e.blobs.length) {
                    c.set_visual_mode("uploadmode", b);
                    d.do_save_audio(e);
                    c.uploaded = !0
                } else {
                    e.uploader.Output(M.util.get_string("recui_nothingtosaveerror", "filter_poodll"))
                }
                return !1
            });
            window.onbeforeunload = function() {
                c.enable_button(e.controlbar.startbutton);
                var a = e.controlbar.preview;
                if (a && a.get(0)) {
                    a.get(0).pause();
                    a.get(0).controls = !1
                }
            }
        },
        show_element: function show_element(b) {
            a(b).removeClass("hide");
            a(b).show()
        },
        hide_element: function hide_element(b) {
            a(b).addClass("hide");
            a(b).hide()
        },
        enable_button: function enable_button(b) {
            a(b).attr("disabled", !1);
            a(b).removeClass("bmr_disabled")
        },
        disable_button: function disable_button(b) {
            a(b).attr("disabled", !0);
            a(b).addClass("bmr_disabled")
        }
    }
});
define("filter_poodll/poodll_uploadrecorder", ["jquery", "core/log", "filter_poodll/uploader"], function(a, b, c) {
    "use strict";
    b.debug("PoodLL Upload Recorder: initialising");
    return {
        config: null,
        instanceprops: [],
        fetch_instance_props: function fetch_instance_props(a) {
            return this.instanceprops[a]
        },
        init_instance_props: function init_instance_props(a) {
            this.instanceprops[a] = {
                config: null,
                uploader: null
            }
        },
        supports_current_browser: function supports_current_browser() {
            return !0
        },
        embed: function embed(a, b) {
            this.init_instance_props(b.widgetid);
            var d = this.fetch_instance_props(b.widgetid);
            d.config = b;
            d.uploader = c.clone();
            d.uploader.init(a, b);
            this.insert_controls(a, b.widgetid);
            this.register_events(b.widgetid)
        },
        insert_controls: function insert_controls(b, c) {
            var d = this.fetch_instance_props(c),
                e = "",
                f = d.config;
            switch (f.mediatype) {
                case "video":
                    e = "video/*";
                    break;
                case "snapshot":
                case "image":
                    e = "image/*";
                case "audio":
                    var g = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;
                    if (g) {
                        e = "video/*"
                    } else {
                        e = "audio/*"
                    }
                default:
                    e = "";
            }
            var h = "<div class=\"p_btn_wrapper\">";
            h += "<input type=\"file\" id=\"" + f.widgetid + "_poodllfileselect\" name=\"poodllfileselect[]\" accept=\"" + e + "\"/>";
            h += "<button type=\"button\" class=\"p_btn\">" + M.util.get_string("recui_recordorchoose", "filter_poodll") + "</button>";
            h += "</div>";
            a(b).prepend(h)
        },
        register_events: function register_events(b) {
            var c = this;
            a("#" + b + "_poodllfileselect").on("change", function(a) {
                c.FileSelectHandler(a, b)
            })
        },
        FileSelectHandler: function FileSelectHandler(a, b) {
            for (var c = this.fetch_instance_props(b), d = a.target.files || a.dataTransfer.files, e = 0, f; f = d[e]; e++) {
                c.uploader.uploadBlob(f, f.type)
            }
        },
        ParseFile: function ParseFile(a, b) {
            var c = this.fetch_instance_props(b),
                d = "",
                e = new FileReader;
            e.onloadend = function(b) {
                d = b.target.result;
                c.uploader.uploadFile(d, a.type)
            };
            e.readAsDataURL(a)
        }
    }
});

function _typeof(e) {
    if ("function" == typeof Symbol && "symbol" == typeof Symbol.iterator) {
        _typeof = function(e) {
            return typeof e
        }
    } else {
        _typeof = function(e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        }
    }
    return _typeof(e)
}(function(e) {
    if ("object" === ("undefined" == typeof exports ? "undefined" : _typeof(exports)) && "undefined" != typeof module) {
        module.exports = e()
    } else if ("function" == typeof define && define.amd) {
        define("filter_poodll/adapter", [], e)
    } else {
        var t;
        if ("undefined" != typeof window) {
            t = window
        } else if ("undefined" != typeof global) {
            t = global
        } else if ("undefined" != typeof self) {
            t = self
        } else {
            t = this
        }
        t.adapter = e()
    }
})(function() {
    return function c(d, e, t) {
        function r(i, o) {
            if (!e[i]) {
                if (!d[i]) {
                    var s = "function" == typeof require && require;
                    if (!o && s) return s(i, !0);
                    if (n) return n(i, !0);
                    var a = new Error("Cannot find module '" + i + "'");
                    throw a.code = "MODULE_NOT_FOUND", a
                }
                var p = e[i] = {
                    exports: {}
                };
                d[i][0].call(p.exports, function(t) {
                    var e = d[i][1][t];
                    return r(e ? e : t)
                }, p, p.exports, c, d, e, t)
            }
            return e[i].exports
        }
        for (var n = "function" == typeof require && require, a = 0; a < t.length; a++) {
            r(t[a])
        }
        return r
    }({
        1: [function(e, t) {
            'use strict';
            var d = e("sdp");

            function r(e) {
                return {
                    inboundrtp: "inbound-rtp",
                    outboundrtp: "outbound-rtp",
                    candidatepair: "candidate-pair",
                    localcandidate: "local-candidate",
                    remotecandidate: "remote-candidate"
                }[e.type] || e.type
            }

            function a(e, t, r, a, n) {
                var i = d.writeRtpDescription(e.kind, t);
                i += d.writeIceParameters(e.iceGatherer.getLocalParameters());
                i += d.writeDtlsParameters(e.dtlsTransport.getLocalParameters(), "offer" === r ? "actpass" : n || "active");
                i += "a=mid:" + e.mid + "\r\n";
                if (e.rtpSender && e.rtpReceiver) {
                    i += "a=sendrecv\r\n"
                } else if (e.rtpSender) {
                    i += "a=sendonly\r\n"
                } else if (e.rtpReceiver) {
                    i += "a=recvonly\r\n"
                } else {
                    i += "a=inactive\r\n"
                }
                if (e.rtpSender) {
                    var o = e.rtpSender._initialTrackId || e.rtpSender.track.id;
                    e.rtpSender._initialTrackId = o;
                    var s = "msid:" + (a ? a.id : "-") + " " + o + "\r\n";
                    i += "a=" + s;
                    i += "a=ssrc:" + e.sendEncodingParameters[0].ssrc + " " + s;
                    if (e.sendEncodingParameters[0].rtx) {
                        i += "a=ssrc:" + e.sendEncodingParameters[0].rtx.ssrc + " " + s;
                        i += "a=ssrc-group:FID " + e.sendEncodingParameters[0].ssrc + " " + e.sendEncodingParameters[0].rtx.ssrc + "\r\n"
                    }
                }
                i += "a=ssrc:" + e.sendEncodingParameters[0].ssrc + " cname:" + d.localCName + "\r\n";
                if (e.rtpSender && e.sendEncodingParameters[0].rtx) {
                    i += "a=ssrc:" + e.sendEncodingParameters[0].rtx.ssrc + " cname:" + d.localCName + "\r\n"
                }
                return i
            }

            function n(e, t) {
                var r = !1;
                e = JSON.parse(JSON.stringify(e));
                return e.filter(function(e) {
                    if (e && (e.urls || e.url)) {
                        var a = e.urls || e.url;
                        if (e.url && !e.urls) {
                            console.warn("RTCIceServer.url is deprecated! Use urls instead.")
                        }
                        var n = "string" == typeof a;
                        if (n) {
                            a = [a]
                        }
                        a = a.filter(function(e) {
                            var a = 0 === e.indexOf("turn:") && -1 !== e.indexOf("transport=udp") && -1 === e.indexOf("turn:[") && !r;
                            if (a) {
                                r = !0;
                                return !0
                            }
                            return 0 === e.indexOf("stun:") && 14393 <= t && -1 === e.indexOf("?transport=udp")
                        });
                        delete e.url;
                        e.urls = n ? a[0] : a;
                        return !!a.length
                    }
                })
            }

            function i(e, t) {
                var r = {
                        codecs: [],
                        headerExtensions: [],
                        fecMechanisms: []
                    },
                    a = function(e, t) {
                        e = parseInt(e, 10);
                        for (var r = 0; r < t.length; r++) {
                            if (t[r].payloadType === e || t[r].preferredPayloadType === e) {
                                return t[r]
                            }
                        }
                    },
                    n = function(e, t, r, n) {
                        var i = a(e.parameters.apt, r),
                            o = a(t.parameters.apt, n);
                        return i && o && i.name.toLowerCase() === o.name.toLowerCase()
                    };
                e.codecs.forEach(function(a) {
                    for (var o = 0, s; o < t.codecs.length; o++) {
                        s = t.codecs[o];
                        if (a.name.toLowerCase() === s.name.toLowerCase() && a.clockRate === s.clockRate) {
                            if ("rtx" === a.name.toLowerCase() && a.parameters && s.parameters.apt) {
                                if (!n(a, s, e.codecs, t.codecs)) {
                                    continue
                                }
                            }
                            s = JSON.parse(JSON.stringify(s));
                            s.numChannels = Math.min(a.numChannels, s.numChannels);
                            r.codecs.push(s);
                            s.rtcpFeedback = s.rtcpFeedback.filter(function(e) {
                                for (var t = 0; t < a.rtcpFeedback.length; t++) {
                                    if (a.rtcpFeedback[t].type === e.type && a.rtcpFeedback[t].parameter === e.parameter) {
                                        return !0
                                    }
                                }
                                return !1
                            });
                            break
                        }
                    }
                });
                e.headerExtensions.forEach(function(e) {
                    for (var a = 0, n; a < t.headerExtensions.length; a++) {
                        n = t.headerExtensions[a];
                        if (e.uri === n.uri) {
                            r.headerExtensions.push(n);
                            break
                        }
                    }
                });
                return r
            }

            function o(e, t, r) {
                return -1 !== {
                    offer: {
                        setLocalDescription: ["stable", "have-local-offer"],
                        setRemoteDescription: ["stable", "have-remote-offer"]
                    },
                    answer: {
                        setLocalDescription: ["have-remote-offer", "have-local-pranswer"],
                        setRemoteDescription: ["have-local-offer", "have-remote-pranswer"]
                    }
                }[t][e].indexOf(r)
            }

            function s(e, t) {
                var r = e.getRemoteCandidates().find(function(e) {
                    return t.foundation === e.foundation && t.ip === e.ip && t.port === e.port && t.priority === e.priority && t.protocol === e.protocol && t.type === e.type
                });
                if (!r) {
                    e.addRemoteCandidate(t)
                }
                return !r
            }

            function c(t, r) {
                var a = new Error(r);
                a.name = t;
                a.code = {
                    NotSupportedError: 9,
                    InvalidStateError: 11,
                    InvalidAccessError: 15,
                    TypeError: void 0,
                    OperationError: void 0
                }[t];
                return a
            }
            t.exports = function(e, t) {
                function p(t, r) {
                    r.addTrack(t);
                    r.dispatchEvent(new e.MediaStreamTrackEvent("addtrack", {
                        track: t
                    }))
                }

                function m(t, r) {
                    r.removeTrack(t);
                    r.dispatchEvent(new e.MediaStreamTrackEvent("removetrack", {
                        track: t
                    }))
                }

                function l(t, r, a, n) {
                    var i = new Event("track");
                    i.track = r;
                    i.receiver = a;
                    i.transceiver = {
                        receiver: a
                    };
                    i.streams = n;
                    e.setTimeout(function() {
                        t._dispatchEvent("track", i)
                    })
                }
                var h = function(r) {
                    var a = this,
                        o = document.createDocumentFragment();
                    ["addEventListener", "removeEventListener", "dispatchEvent"].forEach(function(e) {
                        a[e] = o[e].bind(o)
                    });
                    this.canTrickleIceCandidates = null;
                    this.needNegotiation = !1;
                    this.localStreams = [];
                    this.remoteStreams = [];
                    this.localDescription = null;
                    this.remoteDescription = null;
                    this.signalingState = "stable";
                    this.iceConnectionState = "new";
                    this.connectionState = "new";
                    this.iceGatheringState = "new";
                    r = JSON.parse(JSON.stringify(r || {}));
                    this.usingBundle = "max-bundle" === r.bundlePolicy;
                    if ("negotiate" === r.rtcpMuxPolicy) {
                        throw c("NotSupportedError", "rtcpMuxPolicy 'negotiate' is not supported")
                    } else if (!r.rtcpMuxPolicy) {
                        r.rtcpMuxPolicy = "require"
                    }
                    switch (r.iceTransportPolicy) {
                        case "all":
                        case "relay":
                            break;
                        default:
                            r.iceTransportPolicy = "all";
                            break;
                    }
                    switch (r.bundlePolicy) {
                        case "balanced":
                        case "max-compat":
                        case "max-bundle":
                            break;
                        default:
                            r.bundlePolicy = "balanced";
                            break;
                    }
                    r.iceServers = n(r.iceServers || [], t);
                    this._iceGatherers = [];
                    if (r.iceCandidatePoolSize) {
                        for (var s = r.iceCandidatePoolSize; 0 < s; s--) {
                            this._iceGatherers.push(new e.RTCIceGatherer({
                                iceServers: r.iceServers,
                                gatherPolicy: r.iceTransportPolicy
                            }))
                        }
                    } else {
                        r.iceCandidatePoolSize = 0
                    }
                    this._config = r;
                    this.transceivers = [];
                    this._sdpSessionId = d.generateSessionId();
                    this._sdpSessionVersion = 0;
                    this._dtlsRole = void 0;
                    this._isClosed = !1
                };
                h.prototype.onicecandidate = null;
                h.prototype.onaddstream = null;
                h.prototype.ontrack = null;
                h.prototype.onremovestream = null;
                h.prototype.onsignalingstatechange = null;
                h.prototype.oniceconnectionstatechange = null;
                h.prototype.onconnectionstatechange = null;
                h.prototype.onicegatheringstatechange = null;
                h.prototype.onnegotiationneeded = null;
                h.prototype.ondatachannel = null;
                h.prototype._dispatchEvent = function(e, t) {
                    if (this._isClosed) {
                        return
                    }
                    this.dispatchEvent(t);
                    if ("function" == typeof this["on" + e]) {
                        this["on" + e](t)
                    }
                };
                h.prototype._emitGatheringStateChange = function() {
                    var e = new Event("icegatheringstatechange");
                    this._dispatchEvent("icegatheringstatechange", e)
                };
                h.prototype.getConfiguration = function() {
                    return this._config
                };
                h.prototype.getLocalStreams = function() {
                    return this.localStreams
                };
                h.prototype.getRemoteStreams = function() {
                    return this.remoteStreams
                };
                h.prototype._createTransceiver = function(e, t) {
                    var r = 0 < this.transceivers.length,
                        a = {
                            track: null,
                            iceGatherer: null,
                            iceTransport: null,
                            dtlsTransport: null,
                            localCapabilities: null,
                            remoteCapabilities: null,
                            rtpSender: null,
                            rtpReceiver: null,
                            kind: e,
                            mid: null,
                            sendEncodingParameters: null,
                            recvEncodingParameters: null,
                            stream: null,
                            associatedRemoteMediaStreams: [],
                            wantReceive: !0
                        };
                    if (this.usingBundle && r) {
                        a.iceTransport = this.transceivers[0].iceTransport;
                        a.dtlsTransport = this.transceivers[0].dtlsTransport
                    } else {
                        var n = this._createIceAndDtlsTransports();
                        a.iceTransport = n.iceTransport;
                        a.dtlsTransport = n.dtlsTransport
                    }
                    if (!t) {
                        this.transceivers.push(a)
                    }
                    return a
                };
                h.prototype.addTrack = function(t, r) {
                    if (this._isClosed) {
                        throw c("InvalidStateError", "Attempted to call addTrack on a closed peerconnection.")
                    }
                    var a = this.transceivers.find(function(e) {
                        return e.track === t
                    });
                    if (a) {
                        throw c("InvalidAccessError", "Track already exists.")
                    }
                    for (var n, o = 0; o < this.transceivers.length; o++) {
                        if (!this.transceivers[o].track && this.transceivers[o].kind === t.kind) {
                            n = this.transceivers[o]
                        }
                    }
                    if (!n) {
                        n = this._createTransceiver(t.kind)
                    }
                    this._maybeFireNegotiationNeeded();
                    if (-1 === this.localStreams.indexOf(r)) {
                        this.localStreams.push(r)
                    }
                    n.track = t;
                    n.stream = r;
                    n.rtpSender = new e.RTCRtpSender(t, n.dtlsTransport);
                    return n.rtpSender
                };
                h.prototype.addStream = function(e) {
                    var r = this;
                    if (15025 <= t) {
                        e.getTracks().forEach(function(t) {
                            r.addTrack(t, e)
                        })
                    } else {
                        var a = e.clone();
                        e.getTracks().forEach(function(e, t) {
                            var r = a.getTracks()[t];
                            e.addEventListener("enabled", function(e) {
                                r.enabled = e.enabled
                            })
                        });
                        a.getTracks().forEach(function(e) {
                            r.addTrack(e, a)
                        })
                    }
                };
                h.prototype.removeTrack = function(r) {
                    if (this._isClosed) {
                        throw c("InvalidStateError", "Attempted to call removeTrack on a closed peerconnection.")
                    }
                    if (!(r instanceof e.RTCRtpSender)) {
                        throw new TypeError("Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender.")
                    }
                    var a = this.transceivers.find(function(e) {
                        return e.rtpSender === r
                    });
                    if (!a) {
                        throw c("InvalidAccessError", "Sender was not created by this connection.")
                    }
                    var n = a.stream;
                    a.rtpSender.stop();
                    a.rtpSender = null;
                    a.track = null;
                    a.stream = null;
                    var i = this.transceivers.map(function(e) {
                        return e.stream
                    });
                    if (-1 === i.indexOf(n) && -1 < this.localStreams.indexOf(n)) {
                        this.localStreams.splice(this.localStreams.indexOf(n), 1)
                    }
                    this._maybeFireNegotiationNeeded()
                };
                h.prototype.removeStream = function(e) {
                    var t = this;
                    e.getTracks().forEach(function(e) {
                        var r = t.getSenders().find(function(t) {
                            return t.track === e
                        });
                        if (r) {
                            t.removeTrack(r)
                        }
                    })
                };
                h.prototype.getSenders = function() {
                    return this.transceivers.filter(function(e) {
                        return !!e.rtpSender
                    }).map(function(e) {
                        return e.rtpSender
                    })
                };
                h.prototype.getReceivers = function() {
                    return this.transceivers.filter(function(e) {
                        return !!e.rtpReceiver
                    }).map(function(e) {
                        return e.rtpReceiver
                    })
                };
                h.prototype._createIceGatherer = function(t, r) {
                    var a = this;
                    if (r && 0 < t) {
                        return this.transceivers[0].iceGatherer
                    } else if (this._iceGatherers.length) {
                        return this._iceGatherers.shift()
                    }
                    var n = new e.RTCIceGatherer({
                        iceServers: this._config.iceServers,
                        gatherPolicy: this._config.iceTransportPolicy
                    });
                    Object.defineProperty(n, "state", {
                        value: "new",
                        writable: !0
                    });
                    this.transceivers[t].bufferedCandidateEvents = [];
                    this.transceivers[t].bufferCandidates = function(e) {
                        var r = !e.candidate || 0 === Object.keys(e.candidate).length;
                        n.state = r ? "completed" : "gathering";
                        if (null !== a.transceivers[t].bufferedCandidateEvents) {
                            a.transceivers[t].bufferedCandidateEvents.push(e)
                        }
                    };
                    n.addEventListener("localcandidate", this.transceivers[t].bufferCandidates);
                    return n
                };
                h.prototype._gather = function(t, r) {
                    var a = this,
                        n = this.transceivers[r].iceGatherer;
                    if (n.onlocalcandidate) {
                        return
                    }
                    var i = this.transceivers[r].bufferedCandidateEvents;
                    this.transceivers[r].bufferedCandidateEvents = null;
                    n.removeEventListener("localcandidate", this.transceivers[r].bufferCandidates);
                    n.onlocalcandidate = function(e) {
                        if (a.usingBundle && 0 < r) {
                            return
                        }
                        var i = new Event("icecandidate");
                        i.candidate = {
                            sdpMid: t,
                            sdpMLineIndex: r
                        };
                        var o = e.candidate,
                            s = !o || 0 === Object.keys(o).length;
                        if (s) {
                            if ("new" === n.state || "gathering" === n.state) {
                                n.state = "completed"
                            }
                        } else {
                            if ("new" === n.state) {
                                n.state = "gathering"
                            }
                            o.component = 1;
                            o.ufrag = n.getLocalParameters().usernameFragment;
                            var c = d.writeCandidate(o);
                            i.candidate = Object.assign(i.candidate, d.parseCandidate(c));
                            i.candidate.candidate = c;
                            i.candidate.toJSON = function() {
                                return {
                                    candidate: i.candidate.candidate,
                                    sdpMid: i.candidate.sdpMid,
                                    sdpMLineIndex: i.candidate.sdpMLineIndex,
                                    usernameFragment: i.candidate.usernameFragment
                                }
                            }
                        }
                        var p = d.getMediaSections(a.localDescription.sdp);
                        if (!s) {
                            p[i.candidate.sdpMLineIndex] += "a=" + i.candidate.candidate + "\r\n"
                        } else {
                            p[i.candidate.sdpMLineIndex] += "a=end-of-candidates\r\n"
                        }
                        a.localDescription.sdp = d.getDescription(a.localDescription.sdp) + p.join("");
                        var m = a.transceivers.every(function(e) {
                            return e.iceGatherer && "completed" === e.iceGatherer.state
                        });
                        if ("gathering" !== a.iceGatheringState) {
                            a.iceGatheringState = "gathering";
                            a._emitGatheringStateChange()
                        }
                        if (!s) {
                            a._dispatchEvent("icecandidate", i)
                        }
                        if (m) {
                            a._dispatchEvent("icecandidate", new Event("icecandidate"));
                            a.iceGatheringState = "complete";
                            a._emitGatheringStateChange()
                        }
                    };
                    e.setTimeout(function() {
                        i.forEach(function(t) {
                            n.onlocalcandidate(t)
                        })
                    }, 0)
                };
                h.prototype._createIceAndDtlsTransports = function() {
                    var t = this,
                        r = new e.RTCIceTransport(null);
                    r.onicestatechange = function() {
                        t._updateIceConnectionState();
                        t._updateConnectionState()
                    };
                    var a = new e.RTCDtlsTransport(r);
                    a.ondtlsstatechange = function() {
                        t._updateConnectionState()
                    };
                    a.onerror = function() {
                        Object.defineProperty(a, "state", {
                            value: "failed",
                            writable: !0
                        });
                        t._updateConnectionState()
                    };
                    return {
                        iceTransport: r,
                        dtlsTransport: a
                    }
                };
                h.prototype._disposeIceAndDtlsTransports = function(e) {
                    var t = this.transceivers[e].iceGatherer;
                    if (t) {
                        delete t.onlocalcandidate;
                        delete this.transceivers[e].iceGatherer
                    }
                    var r = this.transceivers[e].iceTransport;
                    if (r) {
                        delete r.onicestatechange;
                        delete this.transceivers[e].iceTransport
                    }
                    var a = this.transceivers[e].dtlsTransport;
                    if (a) {
                        delete a.ondtlsstatechange;
                        delete a.onerror;
                        delete this.transceivers[e].dtlsTransport
                    }
                };
                h.prototype._transceive = function(e, r, a) {
                    var n = i(e.localCapabilities, e.remoteCapabilities);
                    if (r && e.rtpSender) {
                        n.encodings = e.sendEncodingParameters;
                        n.rtcp = {
                            cname: d.localCName,
                            compound: e.rtcpParameters.compound
                        };
                        if (e.recvEncodingParameters.length) {
                            n.rtcp.ssrc = e.recvEncodingParameters[0].ssrc
                        }
                        e.rtpSender.send(n)
                    }
                    if (a && e.rtpReceiver && 0 < n.codecs.length) {
                        if ("video" === e.kind && e.recvEncodingParameters && 15019 > t) {
                            e.recvEncodingParameters.forEach(function(e) {
                                delete e.rtx
                            })
                        }
                        if (e.recvEncodingParameters.length) {
                            n.encodings = e.recvEncodingParameters
                        } else {
                            n.encodings = [{}]
                        }
                        n.rtcp = {
                            compound: e.rtcpParameters.compound
                        };
                        if (e.rtcpParameters.cname) {
                            n.rtcp.cname = e.rtcpParameters.cname
                        }
                        if (e.sendEncodingParameters.length) {
                            n.rtcp.ssrc = e.sendEncodingParameters[0].ssrc
                        }
                        e.rtpReceiver.receive(n)
                    }
                };
                h.prototype.setLocalDescription = function(e) {
                    var t = this;
                    if (-1 === ["offer", "answer"].indexOf(e.type)) {
                        return Promise.reject(c("TypeError", "Unsupported type \"" + e.type + "\""))
                    }
                    if (!o("setLocalDescription", e.type, t.signalingState) || t._isClosed) {
                        return Promise.reject(c("InvalidStateError", "Can not set local " + e.type + " in state " + t.signalingState))
                    }
                    var r, a;
                    if ("offer" === e.type) {
                        r = d.splitSections(e.sdp);
                        a = r.shift();
                        r.forEach(function(e, r) {
                            var a = d.parseRtpParameters(e);
                            t.transceivers[r].localCapabilities = a
                        });
                        t.transceivers.forEach(function(e, r) {
                            t._gather(e.mid, r)
                        })
                    } else if ("answer" === e.type) {
                        r = d.splitSections(t.remoteDescription.sdp);
                        a = r.shift();
                        var n = 0 < d.matchPrefix(a, "a=ice-lite").length;
                        r.forEach(function(e, r) {
                            var o = t.transceivers[r],
                                s = o.iceGatherer,
                                c = o.iceTransport,
                                p = o.dtlsTransport,
                                m = o.localCapabilities,
                                l = o.remoteCapabilities,
                                h = d.isRejected(e) && 0 === d.matchPrefix(e, "a=bundle-only").length;
                            if (!h && !o.rejected) {
                                var g = d.getIceParameters(e, a),
                                    f = d.getDtlsParameters(e, a);
                                if (n) {
                                    f.role = "server"
                                }
                                if (!t.usingBundle || 0 === r) {
                                    t._gather(o.mid, r);
                                    if ("new" === c.state) {
                                        c.start(s, g, n ? "controlling" : "controlled")
                                    }
                                    if ("new" === p.state) {
                                        p.start(f)
                                    }
                                }
                                var C = i(m, l);
                                t._transceive(o, 0 < C.codecs.length, !1)
                            }
                        })
                    }
                    t.localDescription = {
                        type: e.type,
                        sdp: e.sdp
                    };
                    if ("offer" === e.type) {
                        t._updateSignalingState("have-local-offer")
                    } else {
                        t._updateSignalingState("stable")
                    }
                    return Promise.resolve()
                };
                h.prototype.setRemoteDescription = function(r) {
                    var a = this;
                    if (-1 === ["offer", "answer"].indexOf(r.type)) {
                        return Promise.reject(c("TypeError", "Unsupported type \"" + r.type + "\""))
                    }
                    if (!o("setRemoteDescription", r.type, a.signalingState) || a._isClosed) {
                        return Promise.reject(c("InvalidStateError", "Can not set remote " + r.type + " in state " + a.signalingState))
                    }
                    var n = {};
                    a.remoteStreams.forEach(function(e) {
                        n[e.id] = e
                    });
                    var i = [],
                        h = d.splitSections(r.sdp),
                        g = h.shift(),
                        f = 0 < d.matchPrefix(g, "a=ice-lite").length,
                        C = 0 < d.matchPrefix(g, "a=group:BUNDLE ").length;
                    a.usingBundle = C;
                    var v = d.matchPrefix(g, "a=ice-options:")[0];
                    if (v) {
                        a.canTrickleIceCandidates = 0 <= v.substr(14).split(" ").indexOf("trickle")
                    } else {
                        a.canTrickleIceCandidates = !1
                    }
                    h.forEach(function(o, c) {
                        var l = d.splitLines(o),
                            h = d.getKind(o),
                            v = d.isRejected(o) && 0 === d.matchPrefix(o, "a=bundle-only").length,
                            y = l[0].substr(2).split(" ")[2],
                            u = d.getDirection(o, g),
                            T = d.parseMsid(o),
                            S = d.getMid(o) || d.generateIdentifier();
                        if ("application" === h && "DTLS/SCTP" === y || v) {
                            a.transceivers[c] = {
                                mid: S,
                                kind: h,
                                rejected: !0
                            };
                            return
                        }
                        if (!v && a.transceivers[c] && a.transceivers[c].rejected) {
                            a.transceivers[c] = a._createTransceiver(h, !0)
                        }
                        var R, P, E, k, b, _, x, M, L, I = d.parseRtpParameters(o),
                            D, w;
                        if (!v) {
                            D = d.getIceParameters(o, g);
                            w = d.getDtlsParameters(o, g);
                            w.role = "client"
                        }
                        x = d.parseRtpEncodingParameters(o);
                        var j = d.parseRtcpParameters(o),
                            O = 0 < d.matchPrefix(o, "a=end-of-candidates", g).length,
                            A = d.matchPrefix(o, "a=candidate:").map(function(e) {
                                return d.parseCandidate(e)
                            }).filter(function(e) {
                                return 1 === e.component
                            });
                        if (("offer" === r.type || "answer" === r.type) && !v && C && 0 < c && a.transceivers[c]) {
                            a._disposeIceAndDtlsTransports(c);
                            a.transceivers[c].iceGatherer = a.transceivers[0].iceGatherer;
                            a.transceivers[c].iceTransport = a.transceivers[0].iceTransport;
                            a.transceivers[c].dtlsTransport = a.transceivers[0].dtlsTransport;
                            if (a.transceivers[c].rtpSender) {
                                a.transceivers[c].rtpSender.setTransport(a.transceivers[0].dtlsTransport)
                            }
                            if (a.transceivers[c].rtpReceiver) {
                                a.transceivers[c].rtpReceiver.setTransport(a.transceivers[0].dtlsTransport)
                            }
                        }
                        if ("offer" === r.type && !v) {
                            R = a.transceivers[c] || a._createTransceiver(h);
                            R.mid = S;
                            if (!R.iceGatherer) {
                                R.iceGatherer = a._createIceGatherer(c, C)
                            }
                            if (A.length && "new" === R.iceTransport.state) {
                                if (O && (!C || 0 === c)) {
                                    R.iceTransport.setRemoteCandidates(A)
                                } else {
                                    A.forEach(function(e) {
                                        s(R.iceTransport, e)
                                    })
                                }
                            }
                            M = e.RTCRtpReceiver.getCapabilities(h);
                            if (15019 > t) {
                                M.codecs = M.codecs.filter(function(e) {
                                    return "rtx" !== e.name
                                })
                            }
                            _ = R.sendEncodingParameters || [{
                                ssrc: 1001 * (2 * c + 2)
                            }];
                            var U = !1;
                            if ("sendrecv" === u || "sendonly" === u) {
                                U = !R.rtpReceiver;
                                b = R.rtpReceiver || new e.RTCRtpReceiver(R.dtlsTransport, h);
                                if (U) {
                                    var G;
                                    L = b.track;
                                    if (T && "-" === T.stream) {} else if (T) {
                                        if (!n[T.stream]) {
                                            n[T.stream] = new e.MediaStream;
                                            Object.defineProperty(n[T.stream], "id", {
                                                get: function get() {
                                                    return T.stream
                                                }
                                            })
                                        }
                                        Object.defineProperty(L, "id", {
                                            get: function get() {
                                                return T.track
                                            }
                                        });
                                        G = n[T.stream]
                                    } else {
                                        if (!n.default) {
                                            n.default = new e.MediaStream
                                        }
                                        G = n.default
                                    }
                                    if (G) {
                                        p(L, G);
                                        R.associatedRemoteMediaStreams.push(G)
                                    }
                                    i.push([L, b, G])
                                }
                            } else if (R.rtpReceiver && R.rtpReceiver.track) {
                                R.associatedRemoteMediaStreams.forEach(function(e) {
                                    var t = e.getTracks().find(function(e) {
                                        return e.id === R.rtpReceiver.track.id
                                    });
                                    if (t) {
                                        m(t, e)
                                    }
                                });
                                R.associatedRemoteMediaStreams = []
                            }
                            R.localCapabilities = M;
                            R.remoteCapabilities = I;
                            R.rtpReceiver = b;
                            R.rtcpParameters = j;
                            R.sendEncodingParameters = _;
                            R.recvEncodingParameters = x;
                            a._transceive(a.transceivers[c], !1, U)
                        } else if ("answer" === r.type && !v) {
                            R = a.transceivers[c];
                            P = R.iceGatherer;
                            E = R.iceTransport;
                            k = R.dtlsTransport;
                            b = R.rtpReceiver;
                            _ = R.sendEncodingParameters;
                            M = R.localCapabilities;
                            a.transceivers[c].recvEncodingParameters = x;
                            a.transceivers[c].remoteCapabilities = I;
                            a.transceivers[c].rtcpParameters = j;
                            if (A.length && "new" === E.state) {
                                if ((f || O) && (!C || 0 === c)) {
                                    E.setRemoteCandidates(A)
                                } else {
                                    A.forEach(function(e) {
                                        s(R.iceTransport, e)
                                    })
                                }
                            }
                            if (!C || 0 === c) {
                                if ("new" === E.state) {
                                    E.start(P, D, "controlling")
                                }
                                if ("new" === k.state) {
                                    k.start(w)
                                }
                            }
                            a._transceive(R, "sendrecv" === u || "recvonly" === u, "sendrecv" === u || "sendonly" === u);
                            if (b && ("sendrecv" === u || "sendonly" === u)) {
                                L = b.track;
                                if (T) {
                                    if (!n[T.stream]) {
                                        n[T.stream] = new e.MediaStream
                                    }
                                    p(L, n[T.stream]);
                                    i.push([L, b, n[T.stream]])
                                } else {
                                    if (!n.default) {
                                        n.default = new e.MediaStream
                                    }
                                    p(L, n.default);
                                    i.push([L, b, n.default])
                                }
                            } else {
                                delete R.rtpReceiver
                            }
                        }
                    });
                    if (a._dtlsRole === void 0) {
                        a._dtlsRole = "offer" === r.type ? "active" : "passive"
                    }
                    a.remoteDescription = {
                        type: r.type,
                        sdp: r.sdp
                    };
                    if ("offer" === r.type) {
                        a._updateSignalingState("have-remote-offer")
                    } else {
                        a._updateSignalingState("stable")
                    }
                    Object.keys(n).forEach(function(t) {
                        var r = n[t];
                        if (r.getTracks().length) {
                            if (-1 === a.remoteStreams.indexOf(r)) {
                                a.remoteStreams.push(r);
                                var o = new Event("addstream");
                                o.stream = r;
                                e.setTimeout(function() {
                                    a._dispatchEvent("addstream", o)
                                })
                            }
                            i.forEach(function(e) {
                                var t = e[0],
                                    n = e[1];
                                if (r.id !== e[2].id) {
                                    return
                                }
                                l(a, t, n, [r])
                            })
                        }
                    });
                    i.forEach(function(e) {
                        if (e[2]) {
                            return
                        }
                        l(a, e[0], e[1], [])
                    });
                    e.setTimeout(function() {
                        if (!(a && a.transceivers)) {
                            return
                        }
                        a.transceivers.forEach(function(e) {
                            if (e.iceTransport && "new" === e.iceTransport.state && 0 < e.iceTransport.getRemoteCandidates().length) {
                                console.warn("Timeout for addRemoteCandidate. Consider sending an end-of-candidates notification");
                                e.iceTransport.addRemoteCandidate({})
                            }
                        })
                    }, 4e3);
                    return Promise.resolve()
                };
                h.prototype.close = function() {
                    this.transceivers.forEach(function(e) {
                        if (e.iceTransport) {
                            e.iceTransport.stop()
                        }
                        if (e.dtlsTransport) {
                            e.dtlsTransport.stop()
                        }
                        if (e.rtpSender) {
                            e.rtpSender.stop()
                        }
                        if (e.rtpReceiver) {
                            e.rtpReceiver.stop()
                        }
                    });
                    this._isClosed = !0;
                    this._updateSignalingState("closed")
                };
                h.prototype._updateSignalingState = function(e) {
                    this.signalingState = e;
                    var t = new Event("signalingstatechange");
                    this._dispatchEvent("signalingstatechange", t)
                };
                h.prototype._maybeFireNegotiationNeeded = function() {
                    var t = this;
                    if ("stable" !== this.signalingState || !0 === this.needNegotiation) {
                        return
                    }
                    this.needNegotiation = !0;
                    e.setTimeout(function() {
                        if (t.needNegotiation) {
                            t.needNegotiation = !1;
                            var e = new Event("negotiationneeded");
                            t._dispatchEvent("negotiationneeded", e)
                        }
                    }, 0)
                };
                h.prototype._updateIceConnectionState = function() {
                    var e, t = {
                        new: 0,
                        closed: 0,
                        checking: 0,
                        connected: 0,
                        completed: 0,
                        disconnected: 0,
                        failed: 0
                    };
                    this.transceivers.forEach(function(e) {
                        t[e.iceTransport.state]++
                    });
                    e = "new";
                    if (0 < t.failed) {
                        e = "failed"
                    } else if (0 < t.checking) {
                        e = "checking"
                    } else if (0 < t.disconnected) {
                        e = "disconnected"
                    } else if (0 < t.new) {
                        e = "new"
                    } else if (0 < t.connected) {
                        e = "connected"
                    } else if (0 < t.completed) {
                        e = "completed"
                    }
                    if (e !== this.iceConnectionState) {
                        this.iceConnectionState = e;
                        var r = new Event("iceconnectionstatechange");
                        this._dispatchEvent("iceconnectionstatechange", r)
                    }
                };
                h.prototype._updateConnectionState = function() {
                    var e, t = {
                        new: 0,
                        closed: 0,
                        connecting: 0,
                        connected: 0,
                        completed: 0,
                        disconnected: 0,
                        failed: 0
                    };
                    this.transceivers.forEach(function(e) {
                        t[e.iceTransport.state]++;
                        t[e.dtlsTransport.state]++
                    });
                    t.connected += t.completed;
                    e = "new";
                    if (0 < t.failed) {
                        e = "failed"
                    } else if (0 < t.connecting) {
                        e = "connecting"
                    } else if (0 < t.disconnected) {
                        e = "disconnected"
                    } else if (0 < t.new) {
                        e = "new"
                    } else if (0 < t.connected) {
                        e = "connected"
                    }
                    if (e !== this.connectionState) {
                        this.connectionState = e;
                        var r = new Event("connectionstatechange");
                        this._dispatchEvent("connectionstatechange", r)
                    }
                };
                h.prototype.createOffer = function() {
                    var r = this;
                    if (r._isClosed) {
                        return Promise.reject(c("InvalidStateError", "Can not call createOffer after close"))
                    }
                    var n = r.transceivers.filter(function(e) {
                            return "audio" === e.kind
                        }).length,
                        i = r.transceivers.filter(function(e) {
                            return "video" === e.kind
                        }).length,
                        o = arguments[0];
                    if (o) {
                        if (o.mandatory || o.optional) {
                            throw new TypeError("Legacy mandatory/optional constraints not supported.")
                        }
                        if (o.offerToReceiveAudio !== void 0) {
                            if (!0 === o.offerToReceiveAudio) {
                                n = 1
                            } else if (!1 === o.offerToReceiveAudio) {
                                n = 0
                            } else {
                                n = o.offerToReceiveAudio
                            }
                        }
                        if (o.offerToReceiveVideo !== void 0) {
                            if (!0 === o.offerToReceiveVideo) {
                                i = 1
                            } else if (!1 === o.offerToReceiveVideo) {
                                i = 0
                            } else {
                                i = o.offerToReceiveVideo
                            }
                        }
                    }
                    r.transceivers.forEach(function(e) {
                        if ("audio" === e.kind) {
                            n--;
                            if (0 > n) {
                                e.wantReceive = !1
                            }
                        } else if ("video" === e.kind) {
                            i--;
                            if (0 > i) {
                                e.wantReceive = !1
                            }
                        }
                    });
                    while (0 < n || 0 < i) {
                        if (0 < n) {
                            r._createTransceiver("audio");
                            n--
                        }
                        if (0 < i) {
                            r._createTransceiver("video");
                            i--
                        }
                    }
                    var s = d.writeSessionBoilerplate(r._sdpSessionId, r._sdpSessionVersion++);
                    r.transceivers.forEach(function(a, n) {
                        var i = a.track,
                            o = a.kind,
                            s = a.mid || d.generateIdentifier();
                        a.mid = s;
                        if (!a.iceGatherer) {
                            a.iceGatherer = r._createIceGatherer(n, r.usingBundle)
                        }
                        var c = e.RTCRtpSender.getCapabilities(o);
                        if (15019 > t) {
                            c.codecs = c.codecs.filter(function(e) {
                                return "rtx" !== e.name
                            })
                        }
                        c.codecs.forEach(function(e) {
                            if ("H264" === e.name && e.parameters["level-asymmetry-allowed"] === void 0) {
                                e.parameters["level-asymmetry-allowed"] = "1"
                            }
                            if (a.remoteCapabilities && a.remoteCapabilities.codecs) {
                                a.remoteCapabilities.codecs.forEach(function(t) {
                                    if (e.name.toLowerCase() === t.name.toLowerCase() && e.clockRate === t.clockRate) {
                                        e.preferredPayloadType = t.payloadType
                                    }
                                })
                            }
                        });
                        c.headerExtensions.forEach(function(e) {
                            var t = a.remoteCapabilities && a.remoteCapabilities.headerExtensions || [];
                            t.forEach(function(t) {
                                if (e.uri === t.uri) {
                                    e.id = t.id
                                }
                            })
                        });
                        var p = a.sendEncodingParameters || [{
                            ssrc: 1001 * (2 * n + 1)
                        }];
                        if (i) {
                            if (15019 <= t && "video" === o && !p[0].rtx) {
                                p[0].rtx = {
                                    ssrc: p[0].ssrc + 1
                                }
                            }
                        }
                        if (a.wantReceive) {
                            a.rtpReceiver = new e.RTCRtpReceiver(a.dtlsTransport, o)
                        }
                        a.localCapabilities = c;
                        a.sendEncodingParameters = p
                    });
                    if ("max-compat" !== r._config.bundlePolicy) {
                        s += "a=group:BUNDLE " + r.transceivers.map(function(e) {
                            return e.mid
                        }).join(" ") + "\r\n"
                    }
                    s += "a=ice-options:trickle\r\n";
                    r.transceivers.forEach(function(e, t) {
                        s += a(e, e.localCapabilities, "offer", e.stream, r._dtlsRole);
                        s += "a=rtcp-rsize\r\n";
                        if (e.iceGatherer && "new" !== r.iceGatheringState && (0 === t || !r.usingBundle)) {
                            e.iceGatherer.getLocalCandidates().forEach(function(e) {
                                e.component = 1;
                                s += "a=" + d.writeCandidate(e) + "\r\n"
                            });
                            if ("completed" === e.iceGatherer.state) {
                                s += "a=end-of-candidates\r\n"
                            }
                        }
                    });
                    var p = new e.RTCSessionDescription({
                        type: "offer",
                        sdp: s
                    });
                    return Promise.resolve(p)
                };
                h.prototype.createAnswer = function() {
                    var r = this;
                    if (r._isClosed) {
                        return Promise.reject(c("InvalidStateError", "Can not call createAnswer after close"))
                    }
                    if (!("have-remote-offer" === r.signalingState || "have-local-pranswer" === r.signalingState)) {
                        return Promise.reject(c("InvalidStateError", "Can not call createAnswer in signalingState " + r.signalingState))
                    }
                    var n = d.writeSessionBoilerplate(r._sdpSessionId, r._sdpSessionVersion++);
                    if (r.usingBundle) {
                        n += "a=group:BUNDLE " + r.transceivers.map(function(e) {
                            return e.mid
                        }).join(" ") + "\r\n"
                    }
                    var o = d.getMediaSections(r.remoteDescription.sdp).length;
                    r.transceivers.forEach(function(e, s) {
                        if (s + 1 > o) {
                            return
                        }
                        if (e.rejected) {
                            if ("application" === e.kind) {
                                n += "m=application 0 DTLS/SCTP 5000\r\n"
                            } else if ("audio" === e.kind) {
                                n += "m=audio 0 UDP/TLS/RTP/SAVPF 0\r\na=rtpmap:0 PCMU/8000\r\n"
                            } else if ("video" === e.kind) {
                                n += "m=video 0 UDP/TLS/RTP/SAVPF 120\r\na=rtpmap:120 VP8/90000\r\n"
                            }
                            n += "c=IN IP4 0.0.0.0\r\na=inactive\r\na=mid:" + e.mid + "\r\n";
                            return
                        }
                        if (e.stream) {
                            var c;
                            if ("audio" === e.kind) {
                                c = e.stream.getAudioTracks()[0]
                            } else if ("video" === e.kind) {
                                c = e.stream.getVideoTracks()[0]
                            }
                            if (c) {
                                if (15019 <= t && "video" === e.kind && !e.sendEncodingParameters[0].rtx) {
                                    e.sendEncodingParameters[0].rtx = {
                                        ssrc: e.sendEncodingParameters[0].ssrc + 1
                                    }
                                }
                            }
                        }
                        var d = i(e.localCapabilities, e.remoteCapabilities),
                            p = d.codecs.filter(function(e) {
                                return "rtx" === e.name.toLowerCase()
                            }).length;
                        if (!p && e.sendEncodingParameters[0].rtx) {
                            delete e.sendEncodingParameters[0].rtx
                        }
                        n += a(e, d, "answer", e.stream, r._dtlsRole);
                        if (e.rtcpParameters && e.rtcpParameters.reducedSize) {
                            n += "a=rtcp-rsize\r\n"
                        }
                    });
                    var s = new e.RTCSessionDescription({
                        type: "answer",
                        sdp: n
                    });
                    return Promise.resolve(s)
                };
                h.prototype.addIceCandidate = function(e) {
                    var t = this,
                        r;
                    if (e && !(e.sdpMLineIndex !== void 0 || e.sdpMid)) {
                        return Promise.reject(new TypeError("sdpMLineIndex or sdpMid required"))
                    }
                    return new Promise(function(a, n) {
                        if (!t.remoteDescription) {
                            return n(c("InvalidStateError", "Can not add ICE candidate without a remote description"))
                        } else if (!e || "" === e.candidate) {
                            for (var o = 0; o < t.transceivers.length; o++) {
                                if (t.transceivers[o].rejected) {
                                    continue
                                }
                                t.transceivers[o].iceTransport.addRemoteCandidate({});
                                r = d.getMediaSections(t.remoteDescription.sdp);
                                r[o] += "a=end-of-candidates\r\n";
                                t.remoteDescription.sdp = d.getDescription(t.remoteDescription.sdp) + r.join("");
                                if (t.usingBundle) {
                                    break
                                }
                            }
                        } else {
                            var p = e.sdpMLineIndex;
                            if (e.sdpMid) {
                                for (var m = 0; m < t.transceivers.length; m++) {
                                    if (t.transceivers[m].mid === e.sdpMid) {
                                        p = m;
                                        break
                                    }
                                }
                            }
                            var l = t.transceivers[p];
                            if (l) {
                                if (l.rejected) {
                                    return a()
                                }
                                var h = 0 < Object.keys(e.candidate).length ? d.parseCandidate(e.candidate) : {};
                                if ("tcp" === h.protocol && (0 === h.port || 9 === h.port)) {
                                    return a()
                                }
                                if (h.component && 1 !== h.component) {
                                    return a()
                                }
                                if (0 === p || 0 < p && l.iceTransport !== t.transceivers[0].iceTransport) {
                                    if (!s(l.iceTransport, h)) {
                                        return n(c("OperationError", "Can not add ICE candidate"))
                                    }
                                }
                                var g = e.candidate.trim();
                                if (0 === g.indexOf("a=")) {
                                    g = g.substr(2)
                                }
                                r = d.getMediaSections(t.remoteDescription.sdp);
                                r[p] += "a=" + (h.type ? g : "end-of-candidates") + "\r\n";
                                t.remoteDescription.sdp = d.getDescription(t.remoteDescription.sdp) + r.join("")
                            } else {
                                return n(c("OperationError", "Can not add ICE candidate"))
                            }
                        }
                        a()
                    })
                };
                h.prototype.getStats = function(t) {
                    if (t && t instanceof e.MediaStreamTrack) {
                        var r = null;
                        this.transceivers.forEach(function(e) {
                            if (e.rtpSender && e.rtpSender.track === t) {
                                r = e.rtpSender
                            } else if (e.rtpReceiver && e.rtpReceiver.track === t) {
                                r = e.rtpReceiver
                            }
                        });
                        if (!r) {
                            throw c("InvalidAccessError", "Invalid selector.")
                        }
                        return r.getStats()
                    }
                    var a = [];
                    this.transceivers.forEach(function(e) {
                        ["rtpSender", "rtpReceiver", "iceGatherer", "iceTransport", "dtlsTransport"].forEach(function(t) {
                            if (e[t]) {
                                a.push(e[t].getStats())
                            }
                        })
                    });
                    return Promise.all(a).then(function(e) {
                        var t = new Map;
                        e.forEach(function(e) {
                            e.forEach(function(e) {
                                t.set(e.id, e)
                            })
                        });
                        return t
                    })
                };
                ["RTCRtpSender", "RTCRtpReceiver", "RTCIceGatherer", "RTCIceTransport", "RTCDtlsTransport"].forEach(function(t) {
                    var a = e[t];
                    if (a && a.prototype && a.prototype.getStats) {
                        var n = a.prototype.getStats;
                        a.prototype.getStats = function() {
                            return n.apply(this).then(function(e) {
                                var t = new Map;
                                Object.keys(e).forEach(function(a) {
                                    e[a].type = r(e[a]);
                                    t.set(a, e[a])
                                });
                                return t
                            })
                        }
                    }
                });
                var g = ["createOffer", "createAnswer"];
                g.forEach(function(e) {
                    var t = h.prototype[e];
                    h.prototype[e] = function() {
                        var e = arguments;
                        if ("function" == typeof e[0] || "function" == typeof e[1]) {
                            return t.apply(this, [arguments[2]]).then(function(t) {
                                if ("function" == typeof e[0]) {
                                    e[0].apply(null, [t])
                                }
                            }, function(t) {
                                if ("function" == typeof e[1]) {
                                    e[1].apply(null, [t])
                                }
                            })
                        }
                        return t.apply(this, arguments)
                    }
                });
                g = ["setLocalDescription", "setRemoteDescription", "addIceCandidate"];
                g.forEach(function(e) {
                    var t = h.prototype[e];
                    h.prototype[e] = function() {
                        var e = arguments;
                        if ("function" == typeof e[1] || "function" == typeof e[2]) {
                            return t.apply(this, arguments).then(function() {
                                if ("function" == typeof e[1]) {
                                    e[1].apply(null)
                                }
                            }, function(t) {
                                if ("function" == typeof e[2]) {
                                    e[2].apply(null, [t])
                                }
                            })
                        }
                        return t.apply(this, arguments)
                    }
                });
                ["getStats"].forEach(function(e) {
                    var t = h.prototype[e];
                    h.prototype[e] = function() {
                        var e = arguments;
                        if ("function" == typeof e[1]) {
                            return t.apply(this, arguments).then(function() {
                                if ("function" == typeof e[1]) {
                                    e[1].apply(null)
                                }
                            })
                        }
                        return t.apply(this, arguments)
                    }
                });
                return h
            }
        }, {
            sdp: 2
        }],
        2: [function(e, t) {
            'use strict';
            var r = {
                generateIdentifier: function() {
                    return Math.random().toString(36).substr(2, 10)
                }
            };
            r.localCName = r.generateIdentifier();
            r.splitLines = function(e) {
                return e.trim().split("\n").map(function(e) {
                    return e.trim()
                })
            };
            r.splitSections = function(e) {
                var t = e.split("\nm=");
                return t.map(function(e, t) {
                    return (0 < t ? "m=" + e : e).trim() + "\r\n"
                })
            };
            r.getDescription = function(e) {
                var t = r.splitSections(e);
                return t && t[0]
            };
            r.getMediaSections = function(e) {
                var t = r.splitSections(e);
                t.shift();
                return t
            };
            r.matchPrefix = function(e, t) {
                return r.splitLines(e).filter(function(e) {
                    return 0 === e.indexOf(t)
                })
            };
            r.parseCandidate = function(e) {
                var t;
                if (0 === e.indexOf("a=candidate:")) {
                    t = e.substring(12).split(" ")
                } else {
                    t = e.substring(10).split(" ")
                }
                for (var r = {
                        foundation: t[0],
                        component: parseInt(t[1], 10),
                        protocol: t[2].toLowerCase(),
                        priority: parseInt(t[3], 10),
                        ip: t[4],
                        port: parseInt(t[5], 10),
                        type: t[7]
                    }, a = 8; a < t.length; a += 2) {
                    switch (t[a]) {
                        case "raddr":
                            r.relatedAddress = t[a + 1];
                            break;
                        case "rport":
                            r.relatedPort = parseInt(t[a + 1], 10);
                            break;
                        case "tcptype":
                            r.tcpType = t[a + 1];
                            break;
                        case "ufrag":
                            r.ufrag = t[a + 1];
                            r.usernameFragment = t[a + 1];
                            break;
                        default:
                            r[t[a]] = t[a + 1];
                            break;
                    }
                }
                return r
            };
            r.writeCandidate = function(e) {
                var t = [e.foundation, e.component, e.protocol.toUpperCase(), e.priority, e.ip, e.port],
                    r = e.type;
                t.push("typ");
                t.push(r);
                if ("host" !== r && e.relatedAddress && e.relatedPort) {
                    t.push("raddr");
                    t.push(e.relatedAddress);
                    t.push("rport");
                    t.push(e.relatedPort)
                }
                if (e.tcpType && "tcp" === e.protocol.toLowerCase()) {
                    t.push("tcptype");
                    t.push(e.tcpType)
                }
                if (e.usernameFragment || e.ufrag) {
                    t.push("ufrag");
                    t.push(e.usernameFragment || e.ufrag)
                }
                return "candidate:" + t.join(" ")
            };
            r.parseIceOptions = function(e) {
                return e.substr(14).split(" ")
            };
            r.parseRtpMap = function(e) {
                var t = e.substr(9).split(" "),
                    r = {
                        payloadType: parseInt(t.shift(), 10)
                    };
                t = t[0].split("/");
                r.name = t[0];
                r.clockRate = parseInt(t[1], 10);
                r.channels = 3 === t.length ? parseInt(t[2], 10) : 1;
                r.numChannels = r.channels;
                return r
            };
            r.writeRtpMap = function(e) {
                var t = e.payloadType;
                if (e.preferredPayloadType !== void 0) {
                    t = e.preferredPayloadType
                }
                var r = e.channels || e.numChannels || 1;
                return "a=rtpmap:" + t + " " + e.name + "/" + e.clockRate + (1 !== r ? "/" + r : "") + "\r\n"
            };
            r.parseExtmap = function(e) {
                var t = e.substr(9).split(" ");
                return {
                    id: parseInt(t[0], 10),
                    direction: 0 < t[0].indexOf("/") ? t[0].split("/")[1] : "sendrecv",
                    uri: t[1]
                }
            };
            r.writeExtmap = function(e) {
                return "a=extmap:" + (e.id || e.preferredId) + (e.direction && "sendrecv" !== e.direction ? "/" + e.direction : "") + " " + e.uri + "\r\n"
            };
            r.parseFmtp = function(e) {
                for (var t = {}, r, a = e.substr(e.indexOf(" ") + 1).split(";"), n = 0; n < a.length; n++) {
                    r = a[n].trim().split("=");
                    t[r[0].trim()] = r[1]
                }
                return t
            };
            r.writeFmtp = function(e) {
                var t = "",
                    r = e.payloadType;
                if (e.preferredPayloadType !== void 0) {
                    r = e.preferredPayloadType
                }
                if (e.parameters && Object.keys(e.parameters).length) {
                    var a = [];
                    Object.keys(e.parameters).forEach(function(t) {
                        if (e.parameters[t]) {
                            a.push(t + "=" + e.parameters[t])
                        } else {
                            a.push(t)
                        }
                    });
                    t += "a=fmtp:" + r + " " + a.join(";") + "\r\n"
                }
                return t
            };
            r.parseRtcpFb = function(e) {
                var t = e.substr(e.indexOf(" ") + 1).split(" ");
                return {
                    type: t.shift(),
                    parameter: t.join(" ")
                }
            };
            r.writeRtcpFb = function(e) {
                var t = "",
                    r = e.payloadType;
                if (e.preferredPayloadType !== void 0) {
                    r = e.preferredPayloadType
                }
                if (e.rtcpFeedback && e.rtcpFeedback.length) {
                    e.rtcpFeedback.forEach(function(e) {
                        t += "a=rtcp-fb:" + r + " " + e.type + (e.parameter && e.parameter.length ? " " + e.parameter : "") + "\r\n"
                    })
                }
                return t
            };
            r.parseSsrcMedia = function(e) {
                var t = e.indexOf(" "),
                    r = {
                        ssrc: parseInt(e.substr(7, t - 7), 10)
                    },
                    a = e.indexOf(":", t);
                if (-1 < a) {
                    r.attribute = e.substr(t + 1, a - t - 1);
                    r.value = e.substr(a + 1)
                } else {
                    r.attribute = e.substr(t + 1)
                }
                return r
            };
            r.getMid = function(e) {
                var t = r.matchPrefix(e, "a=mid:")[0];
                if (t) {
                    return t.substr(6)
                }
            };
            r.parseFingerprint = function(e) {
                var t = e.substr(14).split(" ");
                return {
                    algorithm: t[0].toLowerCase(),
                    value: t[1]
                }
            };
            r.getDtlsParameters = function(e, t) {
                var a = r.matchPrefix(e + t, "a=fingerprint:");
                return {
                    role: "auto",
                    fingerprints: a.map(r.parseFingerprint)
                }
            };
            r.writeDtlsParameters = function(e, t) {
                var r = "a=setup:" + t + "\r\n";
                e.fingerprints.forEach(function(e) {
                    r += "a=fingerprint:" + e.algorithm + " " + e.value + "\r\n"
                });
                return r
            };
            r.getIceParameters = function(e, t) {
                var a = r.splitLines(e);
                a = a.concat(r.splitLines(t));
                var n = {
                    usernameFragment: a.filter(function(e) {
                        return 0 === e.indexOf("a=ice-ufrag:")
                    })[0].substr(12),
                    password: a.filter(function(e) {
                        return 0 === e.indexOf("a=ice-pwd:")
                    })[0].substr(10)
                };
                return n
            };
            r.writeIceParameters = function(e) {
                return "a=ice-ufrag:" + e.usernameFragment + "\r\na=ice-pwd:" + e.password + "\r\n"
            };
            r.parseRtpParameters = function(e) {
                for (var t = {
                        codecs: [],
                        headerExtensions: [],
                        fecMechanisms: [],
                        rtcp: []
                    }, a = r.splitLines(e), n = a[0].split(" "), o = 3; o < n.length; o++) {
                    var s = n[o],
                        c = r.matchPrefix(e, "a=rtpmap:" + s + " ")[0];
                    if (c) {
                        var d = r.parseRtpMap(c),
                            p = r.matchPrefix(e, "a=fmtp:" + s + " ");
                        d.parameters = p.length ? r.parseFmtp(p[0]) : {};
                        d.rtcpFeedback = r.matchPrefix(e, "a=rtcp-fb:" + s + " ").map(r.parseRtcpFb);
                        t.codecs.push(d);
                        switch (d.name.toUpperCase()) {
                            case "RED":
                            case "ULPFEC":
                                t.fecMechanisms.push(d.name.toUpperCase());
                                break;
                            default:
                                break;
                        }
                    }
                }
                r.matchPrefix(e, "a=extmap:").forEach(function(e) {
                    t.headerExtensions.push(r.parseExtmap(e))
                });
                return t
            };
            r.writeRtpDescription = function(e, t) {
                var a = "";
                a += "m=" + e + " ";
                a += 0 < t.codecs.length ? "9" : "0";
                a += " UDP/TLS/RTP/SAVPF ";
                a += t.codecs.map(function(e) {
                    if (e.preferredPayloadType !== void 0) {
                        return e.preferredPayloadType
                    }
                    return e.payloadType
                }).join(" ") + "\r\n";
                a += "c=IN IP4 0.0.0.0\r\n";
                a += "a=rtcp:9 IN IP4 0.0.0.0\r\n";
                t.codecs.forEach(function(e) {
                    a += r.writeRtpMap(e);
                    a += r.writeFmtp(e);
                    a += r.writeRtcpFb(e)
                });
                var n = 0;
                t.codecs.forEach(function(e) {
                    if (e.maxptime > n) {
                        n = e.maxptime
                    }
                });
                if (0 < n) {
                    a += "a=maxptime:" + n + "\r\n"
                }
                a += "a=rtcp-mux\r\n";
                if (t.headerExtensions) {
                    t.headerExtensions.forEach(function(e) {
                        a += r.writeExtmap(e)
                    })
                }
                return a
            };
            r.parseRtpEncodingParameters = function(e) {
                var t = [],
                    a = r.parseRtpParameters(e),
                    n = -1 !== a.fecMechanisms.indexOf("RED"),
                    i = -1 !== a.fecMechanisms.indexOf("ULPFEC"),
                    o = r.matchPrefix(e, "a=ssrc:").map(function(e) {
                        return r.parseSsrcMedia(e)
                    }).filter(function(e) {
                        return "cname" === e.attribute
                    }),
                    s = 0 < o.length && o[0].ssrc,
                    c, d = r.matchPrefix(e, "a=ssrc-group:FID").map(function(e) {
                        var t = e.substr(17).split(" ");
                        return t.map(function(e) {
                            return parseInt(e, 10)
                        })
                    });
                if (0 < d.length && 1 < d[0].length && d[0][0] === s) {
                    c = d[0][1]
                }
                a.codecs.forEach(function(e) {
                    if ("RTX" === e.name.toUpperCase() && e.parameters.apt) {
                        var r = {
                            ssrc: s,
                            codecPayloadType: parseInt(e.parameters.apt, 10)
                        };
                        if (s && c) {
                            r.rtx = {
                                ssrc: c
                            }
                        }
                        t.push(r);
                        if (n) {
                            r = JSON.parse(JSON.stringify(r));
                            r.fec = {
                                ssrc: c,
                                mechanism: i ? "red+ulpfec" : "red"
                            };
                            t.push(r)
                        }
                    }
                });
                if (0 === t.length && s) {
                    t.push({
                        ssrc: s
                    })
                }
                var p = r.matchPrefix(e, "b=");
                if (p.length) {
                    if (0 === p[0].indexOf("b=TIAS:")) {
                        p = parseInt(p[0].substr(7), 10)
                    } else if (0 === p[0].indexOf("b=AS:")) {
                        p = .95 * (1e3 * parseInt(p[0].substr(5), 10)) - 16000
                    } else {
                        p = void 0
                    }
                    t.forEach(function(e) {
                        e.maxBitrate = p
                    })
                }
                return t
            };
            r.parseRtcpParameters = function(e) {
                var t = {},
                    a = r.matchPrefix(e, "a=ssrc:").map(function(e) {
                        return r.parseSsrcMedia(e)
                    }).filter(function(e) {
                        return "cname" === e.attribute
                    })[0];
                if (a) {
                    t.cname = a.value;
                    t.ssrc = a.ssrc
                }
                var n = r.matchPrefix(e, "a=rtcp-rsize");
                t.reducedSize = 0 < n.length;
                t.compound = 0 === n.length;
                var i = r.matchPrefix(e, "a=rtcp-mux");
                t.mux = 0 < i.length;
                return t
            };
            r.parseMsid = function(e) {
                var t, a = r.matchPrefix(e, "a=msid:");
                if (1 === a.length) {
                    t = a[0].substr(7).split(" ");
                    return {
                        stream: t[0],
                        track: t[1]
                    }
                }
                var n = r.matchPrefix(e, "a=ssrc:").map(function(e) {
                    return r.parseSsrcMedia(e)
                }).filter(function(e) {
                    return "msid" === e.attribute
                });
                if (0 < n.length) {
                    t = n[0].value.split(" ");
                    return {
                        stream: t[0],
                        track: t[1]
                    }
                }
            };
            r.generateSessionId = function() {
                return Math.random().toString().substr(2, 21)
            };
            r.writeSessionBoilerplate = function(e, t) {
                var a, n = t !== void 0 ? t : 2;
                if (e) {
                    a = e
                } else {
                    a = r.generateSessionId()
                }
                return "v=0\r\no=thisisadapterortc " + a + " " + n + " IN IP4 127.0.0.1\r\ns=-\r\nt=0 0\r\n"
            };
            r.writeMediaSection = function(e, t, a, n) {
                var i = r.writeRtpDescription(e.kind, t);
                i += r.writeIceParameters(e.iceGatherer.getLocalParameters());
                i += r.writeDtlsParameters(e.dtlsTransport.getLocalParameters(), "offer" === a ? "actpass" : "active");
                i += "a=mid:" + e.mid + "\r\n";
                if (e.direction) {
                    i += "a=" + e.direction + "\r\n"
                } else if (e.rtpSender && e.rtpReceiver) {
                    i += "a=sendrecv\r\n"
                } else if (e.rtpSender) {
                    i += "a=sendonly\r\n"
                } else if (e.rtpReceiver) {
                    i += "a=recvonly\r\n"
                } else {
                    i += "a=inactive\r\n"
                }
                if (e.rtpSender) {
                    var o = "msid:" + n.id + " " + e.rtpSender.track.id + "\r\n";
                    i += "a=" + o;
                    i += "a=ssrc:" + e.sendEncodingParameters[0].ssrc + " " + o;
                    if (e.sendEncodingParameters[0].rtx) {
                        i += "a=ssrc:" + e.sendEncodingParameters[0].rtx.ssrc + " " + o;
                        i += "a=ssrc-group:FID " + e.sendEncodingParameters[0].ssrc + " " + e.sendEncodingParameters[0].rtx.ssrc + "\r\n"
                    }
                }
                i += "a=ssrc:" + e.sendEncodingParameters[0].ssrc + " cname:" + r.localCName + "\r\n";
                if (e.rtpSender && e.sendEncodingParameters[0].rtx) {
                    i += "a=ssrc:" + e.sendEncodingParameters[0].rtx.ssrc + " cname:" + r.localCName + "\r\n"
                }
                return i
            };
            r.getDirection = function(e, t) {
                for (var a = r.splitLines(e), n = 0; n < a.length; n++) {
                    switch (a[n]) {
                        case "a=sendrecv":
                        case "a=sendonly":
                        case "a=recvonly":
                        case "a=inactive":
                            return a[n].substr(2);
                        default:
                    }
                }
                if (t) {
                    return r.getDirection(t)
                }
                return "sendrecv"
            };
            r.getKind = function(e) {
                var t = r.splitLines(e),
                    a = t[0].split(" ");
                return a[0].substr(2)
            };
            r.isRejected = function(e) {
                return "0" === e.split(" ", 2)[1]
            };
            r.parseMLine = function(e) {
                var t = r.splitLines(e),
                    a = t[0].substr(2).split(" ");
                return {
                    kind: a[0],
                    port: parseInt(a[1], 10),
                    protocol: a[2],
                    fmt: a.slice(3).join(" ")
                }
            };
            r.parseOLine = function(e) {
                var t = r.matchPrefix(e, "o=")[0],
                    a = t.substr(2).split(" ");
                return {
                    username: a[0],
                    sessionId: a[1],
                    sessionVersion: parseInt(a[2], 10),
                    netType: a[3],
                    addressType: a[4],
                    address: a[5]
                }
            };
            if ("object" === _typeof(t)) {
                t.exports = r
            }
        }, {}],
        3: [function(e, t) {
            (function(r) {
                'use strict';
                var a = e("./adapter_factory.js");
                t.exports = a({
                    window: r.window
                })
            }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }, {
            "./adapter_factory.js": 4
        }],
        4: [function(e, t) {
            'use strict';
            var r = e("./utils");
            t.exports = function(t, a) {
                var n = t && t.window,
                    i = {
                        shimChrome: !0,
                        shimFirefox: !0,
                        shimEdge: !0,
                        shimSafari: !0
                    };
                for (var o in a) {
                    if (hasOwnProperty.call(a, o)) {
                        i[o] = a[o]
                    }
                }
                var s = r.log,
                    c = r.detectBrowser(n),
                    d = e("./chrome/chrome_shim") || null,
                    p = e("./edge/edge_shim") || null,
                    m = e("./firefox/firefox_shim") || null,
                    l = e("./safari/safari_shim") || null,
                    h = e("./common_shim") || null,
                    g = {
                        browserDetails: c,
                        commonShim: h,
                        extractVersion: r.extractVersion,
                        disableLog: r.disableLog,
                        disableWarnings: r.disableWarnings
                    };
                switch (c.browser) {
                    case "chrome":
                        if (!d || !d.shimPeerConnection || !i.shimChrome) {
                            s("Chrome shim is not included in this adapter release.");
                            return g
                        }
                        s("adapter.js shimming chrome.");
                        g.browserShim = d;
                        h.shimCreateObjectURL(n);
                        d.shimGetUserMedia(n);
                        d.shimMediaStream(n);
                        d.shimSourceObject(n);
                        d.shimPeerConnection(n);
                        d.shimOnTrack(n);
                        d.shimAddTrackRemoveTrack(n);
                        d.shimGetSendersWithDtmf(n);
                        d.shimSenderReceiverGetStats(n);
                        h.shimRTCIceCandidate(n);
                        h.shimMaxMessageSize(n);
                        h.shimSendThrowTypeError(n);
                        break;
                    case "firefox":
                        if (!m || !m.shimPeerConnection || !i.shimFirefox) {
                            s("Firefox shim is not included in this adapter release.");
                            return g
                        }
                        s("adapter.js shimming firefox.");
                        g.browserShim = m;
                        h.shimCreateObjectURL(n);
                        m.shimGetUserMedia(n);
                        m.shimSourceObject(n);
                        m.shimPeerConnection(n);
                        m.shimOnTrack(n);
                        m.shimRemoveStream(n);
                        m.shimSenderGetStats(n);
                        m.shimReceiverGetStats(n);
                        m.shimRTCDataChannel(n);
                        h.shimRTCIceCandidate(n);
                        h.shimMaxMessageSize(n);
                        h.shimSendThrowTypeError(n);
                        break;
                    case "edge":
                        if (!p || !p.shimPeerConnection || !i.shimEdge) {
                            s("MS edge shim is not included in this adapter release.");
                            return g
                        }
                        s("adapter.js shimming edge.");
                        g.browserShim = p;
                        h.shimCreateObjectURL(n);
                        p.shimGetUserMedia(n);
                        p.shimPeerConnection(n);
                        p.shimReplaceTrack(n);
                        h.shimMaxMessageSize(n);
                        h.shimSendThrowTypeError(n);
                        break;
                    case "safari":
                        if (!l || !i.shimSafari) {
                            s("Safari shim is not included in this adapter release.");
                            return g
                        }
                        s("adapter.js shimming safari.");
                        g.browserShim = l;
                        h.shimCreateObjectURL(n);
                        l.shimRTCIceServerUrls(n);
                        l.shimCallbacksAPI(n);
                        l.shimLocalStreamsAPI(n);
                        l.shimRemoteStreamsAPI(n);
                        l.shimTrackEventTransceiver(n);
                        l.shimGetUserMedia(n);
                        l.shimCreateOfferLegacy(n);
                        h.shimRTCIceCandidate(n);
                        h.shimMaxMessageSize(n);
                        h.shimSendThrowTypeError(n);
                        break;
                    default:
                        s("Unsupported browser!");
                        break;
                }
                return g
            }
        }, {
            "./chrome/chrome_shim": 5,
            "./common_shim": 7,
            "./edge/edge_shim": 8,
            "./firefox/firefox_shim": 11,
            "./safari/safari_shim": 13,
            "./utils": 14
        }],
        5: [function(e, t) {
            'use strict';
            var n = e("../utils.js"),
                i = n.log;

            function r(e, t, a) {
                if (!t || a.has(t.id)) {
                    return
                }
                a.set(t.id, t);
                Object.keys(t).forEach(function(n) {
                    if (n.endsWith("Id")) {
                        r(e, e.get(t[n]), a)
                    } else if (n.endsWith("Ids")) {
                        t[n].forEach(function(t) {
                            r(e, e.get(t), a)
                        })
                    }
                })
            }

            function a(e, t, a) {
                var n = a ? "outbound-rtp" : "inbound-rtp",
                    i = new Map;
                if (null === t) {
                    return i
                }
                var o = [];
                e.forEach(function(e) {
                    if ("track" === e.type && e.trackIdentifier === t.id) {
                        o.push(e)
                    }
                });
                o.forEach(function(t) {
                    e.forEach(function(a) {
                        if (a.type === n && a.trackId === t.id) {
                            r(e, a, i)
                        }
                    })
                });
                return i
            }
            t.exports = {
                shimGetUserMedia: e("./getusermedia"),
                shimMediaStream: function shimMediaStream(e) {
                    e.MediaStream = e.MediaStream || e.webkitMediaStream
                },
                shimOnTrack: function shimOnTrack(t) {
                    if ("object" === _typeof(t) && t.RTCPeerConnection && !("ontrack" in t.RTCPeerConnection.prototype)) {
                        Object.defineProperty(t.RTCPeerConnection.prototype, "ontrack", {
                            get: function get() {
                                return this._ontrack
                            },
                            set: function set(e) {
                                if (this._ontrack) {
                                    this.removeEventListener("track", this._ontrack)
                                }
                                this.addEventListener("track", this._ontrack = e)
                            }
                        });
                        var r = t.RTCPeerConnection.prototype.setRemoteDescription;
                        t.RTCPeerConnection.prototype.setRemoteDescription = function() {
                            var a = this;
                            if (!a._ontrackpoly) {
                                a._ontrackpoly = function(r) {
                                    r.stream.addEventListener("addtrack", function(e) {
                                        var n;
                                        if (t.RTCPeerConnection.prototype.getReceivers) {
                                            n = a.getReceivers().find(function(t) {
                                                return t.track && t.track.id === e.track.id
                                            })
                                        } else {
                                            n = {
                                                track: e.track
                                            }
                                        }
                                        var i = new Event("track");
                                        i.track = e.track;
                                        i.receiver = n;
                                        i.transceiver = {
                                            receiver: n
                                        };
                                        i.streams = [r.stream];
                                        a.dispatchEvent(i)
                                    });
                                    r.stream.getTracks().forEach(function(e) {
                                        var n;
                                        if (t.RTCPeerConnection.prototype.getReceivers) {
                                            n = a.getReceivers().find(function(t) {
                                                return t.track && t.track.id === e.id
                                            })
                                        } else {
                                            n = {
                                                track: e
                                            }
                                        }
                                        var i = new Event("track");
                                        i.track = e;
                                        i.receiver = n;
                                        i.transceiver = {
                                            receiver: n
                                        };
                                        i.streams = [r.stream];
                                        a.dispatchEvent(i)
                                    })
                                };
                                a.addEventListener("addstream", a._ontrackpoly)
                            }
                            return r.apply(a, arguments)
                        }
                    } else if (!("RTCRtpTransceiver" in t)) {
                        n.wrapPeerConnectionEvent(t, "track", function(t) {
                            if (!t.transceiver) {
                                t.transceiver = {
                                    receiver: t.receiver
                                }
                            }
                            return t
                        })
                    }
                },
                shimGetSendersWithDtmf: function shimGetSendersWithDtmf(e) {
                    if ("object" === _typeof(e) && e.RTCPeerConnection && !("getSenders" in e.RTCPeerConnection.prototype) && "createDTMFSender" in e.RTCPeerConnection.prototype) {
                        var t = function(e, t) {
                            return {
                                track: t,
                                get dtmf() {
                                    if (this._dtmf === void 0) {
                                        if ("audio" === t.kind) {
                                            this._dtmf = e.createDTMFSender(t)
                                        } else {
                                            this._dtmf = null
                                        }
                                    }
                                    return this._dtmf
                                },
                                _pc: e
                            }
                        };
                        if (!e.RTCPeerConnection.prototype.getSenders) {
                            e.RTCPeerConnection.prototype.getSenders = function() {
                                this._senders = this._senders || [];
                                return this._senders.slice()
                            };
                            var r = e.RTCPeerConnection.prototype.addTrack;
                            e.RTCPeerConnection.prototype.addTrack = function(e) {
                                var a = this,
                                    n = r.apply(a, arguments);
                                if (!n) {
                                    n = t(a, e);
                                    a._senders.push(n)
                                }
                                return n
                            };
                            var a = e.RTCPeerConnection.prototype.removeTrack;
                            e.RTCPeerConnection.prototype.removeTrack = function(e) {
                                var t = this;
                                a.apply(t, arguments);
                                var r = t._senders.indexOf(e);
                                if (-1 !== r) {
                                    t._senders.splice(r, 1)
                                }
                            }
                        }
                        var n = e.RTCPeerConnection.prototype.addStream;
                        e.RTCPeerConnection.prototype.addStream = function(e) {
                            var r = this;
                            r._senders = r._senders || [];
                            n.apply(r, [e]);
                            e.getTracks().forEach(function(e) {
                                r._senders.push(t(r, e))
                            })
                        };
                        var i = e.RTCPeerConnection.prototype.removeStream;
                        e.RTCPeerConnection.prototype.removeStream = function(e) {
                            var t = this;
                            t._senders = t._senders || [];
                            i.apply(t, [e]);
                            e.getTracks().forEach(function(e) {
                                var r = t._senders.find(function(t) {
                                    return t.track === e
                                });
                                if (r) {
                                    t._senders.splice(t._senders.indexOf(r), 1)
                                }
                            })
                        }
                    } else if ("object" === _typeof(e) && e.RTCPeerConnection && "getSenders" in e.RTCPeerConnection.prototype && "createDTMFSender" in e.RTCPeerConnection.prototype && e.RTCRtpSender && !("dtmf" in e.RTCRtpSender.prototype)) {
                        var o = e.RTCPeerConnection.prototype.getSenders;
                        e.RTCPeerConnection.prototype.getSenders = function() {
                            var e = this,
                                t = o.apply(e, []);
                            t.forEach(function(t) {
                                t._pc = e
                            });
                            return t
                        };
                        Object.defineProperty(e.RTCRtpSender.prototype, "dtmf", {
                            get: function get() {
                                if (this._dtmf === void 0) {
                                    if ("audio" === this.track.kind) {
                                        this._dtmf = this._pc.createDTMFSender(this.track)
                                    } else {
                                        this._dtmf = null
                                    }
                                }
                                return this._dtmf
                            }
                        })
                    }
                },
                shimSenderReceiverGetStats: function shimSenderReceiverGetStats(e) {
                    if (!("object" === _typeof(e) && e.RTCPeerConnection && e.RTCRtpSender && e.RTCRtpReceiver)) {
                        return
                    }
                    if (!("getStats" in e.RTCRtpSender.prototype)) {
                        var t = e.RTCPeerConnection.prototype.getSenders;
                        if (t) {
                            e.RTCPeerConnection.prototype.getSenders = function() {
                                var e = this,
                                    r = t.apply(e, []);
                                r.forEach(function(t) {
                                    t._pc = e
                                });
                                return r
                            }
                        }
                        var r = e.RTCPeerConnection.prototype.addTrack;
                        if (r) {
                            e.RTCPeerConnection.prototype.addTrack = function() {
                                var e = r.apply(this, arguments);
                                e._pc = this;
                                return e
                            }
                        }
                        e.RTCRtpSender.prototype.getStats = function() {
                            var e = this;
                            return this._pc.getStats().then(function(t) {
                                return a(t, e.track, !0)
                            })
                        }
                    }
                    if (!("getStats" in e.RTCRtpReceiver.prototype)) {
                        var i = e.RTCPeerConnection.prototype.getReceivers;
                        if (i) {
                            e.RTCPeerConnection.prototype.getReceivers = function() {
                                var e = this,
                                    t = i.apply(e, []);
                                t.forEach(function(t) {
                                    t._pc = e
                                });
                                return t
                            }
                        }
                        n.wrapPeerConnectionEvent(e, "track", function(t) {
                            t.receiver._pc = t.srcElement;
                            return t
                        });
                        e.RTCRtpReceiver.prototype.getStats = function() {
                            var e = this;
                            return this._pc.getStats().then(function(t) {
                                return a(t, e.track, !1)
                            })
                        }
                    }
                    if (!("getStats" in e.RTCRtpSender.prototype && "getStats" in e.RTCRtpReceiver.prototype)) {
                        return
                    }
                    var o = e.RTCPeerConnection.prototype.getStats;
                    e.RTCPeerConnection.prototype.getStats = function() {
                        var t = this;
                        if (0 < arguments.length && arguments[0] instanceof e.MediaStreamTrack) {
                            var a = arguments[0],
                                n, i, s;
                            t.getSenders().forEach(function(e) {
                                if (e.track === a) {
                                    if (n) {
                                        s = !0
                                    } else {
                                        n = e
                                    }
                                }
                            });
                            t.getReceivers().forEach(function(e) {
                                if (e.track === a) {
                                    if (i) {
                                        s = !0
                                    } else {
                                        i = e
                                    }
                                }
                                return e.track === a
                            });
                            if (s || n && i) {
                                return Promise.reject(new DOMException("There are more than one sender or receiver for the track.", "InvalidAccessError"))
                            } else if (n) {
                                return n.getStats()
                            } else if (i) {
                                return i.getStats()
                            }
                            return Promise.reject(new DOMException("There is no sender or receiver for the track.", "InvalidAccessError"))
                        }
                        return o.apply(t, arguments)
                    }
                },
                shimSourceObject: function shimSourceObject(e) {
                    var t = e && e.URL;
                    if ("object" === _typeof(e)) {
                        if (e.HTMLMediaElement && !("srcObject" in e.HTMLMediaElement.prototype)) {
                            Object.defineProperty(e.HTMLMediaElement.prototype, "srcObject", {
                                get: function get() {
                                    return this._srcObject
                                },
                                set: function set(e) {
                                    var r = this;
                                    this._srcObject = e;
                                    if (this.src) {
                                        t.revokeObjectURL(this.src)
                                    }
                                    if (!e) {
                                        this.src = "";
                                        return
                                    }
                                    this.src = t.createObjectURL(e);
                                    e.addEventListener("addtrack", function() {
                                        if (r.src) {
                                            t.revokeObjectURL(r.src)
                                        }
                                        r.src = t.createObjectURL(e)
                                    });
                                    e.addEventListener("removetrack", function() {
                                        if (r.src) {
                                            t.revokeObjectURL(r.src)
                                        }
                                        r.src = t.createObjectURL(e)
                                    })
                                }
                            })
                        }
                    }
                },
                shimAddTrackRemoveTrackWithNative: function shimAddTrackRemoveTrackWithNative(e) {
                    e.RTCPeerConnection.prototype.getLocalStreams = function() {
                        var e = this;
                        this._shimmedLocalStreams = this._shimmedLocalStreams || {};
                        return Object.keys(this._shimmedLocalStreams).map(function(t) {
                            return e._shimmedLocalStreams[t][0]
                        })
                    };
                    var t = e.RTCPeerConnection.prototype.addTrack;
                    e.RTCPeerConnection.prototype.addTrack = function(e, r) {
                        if (!r) {
                            return t.apply(this, arguments)
                        }
                        this._shimmedLocalStreams = this._shimmedLocalStreams || {};
                        var a = t.apply(this, arguments);
                        if (!this._shimmedLocalStreams[r.id]) {
                            this._shimmedLocalStreams[r.id] = [r, a]
                        } else if (-1 === this._shimmedLocalStreams[r.id].indexOf(a)) {
                            this._shimmedLocalStreams[r.id].push(a)
                        }
                        return a
                    };
                    var r = e.RTCPeerConnection.prototype.addStream;
                    e.RTCPeerConnection.prototype.addStream = function(e) {
                        var t = this;
                        this._shimmedLocalStreams = this._shimmedLocalStreams || {};
                        e.getTracks().forEach(function(e) {
                            var r = t.getSenders().find(function(t) {
                                return t.track === e
                            });
                            if (r) {
                                throw new DOMException("Track already exists.", "InvalidAccessError")
                            }
                        });
                        var a = t.getSenders();
                        r.apply(this, arguments);
                        var n = t.getSenders().filter(function(e) {
                            return -1 === a.indexOf(e)
                        });
                        this._shimmedLocalStreams[e.id] = [e].concat(n)
                    };
                    var a = e.RTCPeerConnection.prototype.removeStream;
                    e.RTCPeerConnection.prototype.removeStream = function(e) {
                        this._shimmedLocalStreams = this._shimmedLocalStreams || {};
                        delete this._shimmedLocalStreams[e.id];
                        return a.apply(this, arguments)
                    };
                    var n = e.RTCPeerConnection.prototype.removeTrack;
                    e.RTCPeerConnection.prototype.removeTrack = function(e) {
                        var t = this;
                        this._shimmedLocalStreams = this._shimmedLocalStreams || {};
                        if (e) {
                            Object.keys(this._shimmedLocalStreams).forEach(function(r) {
                                var a = t._shimmedLocalStreams[r].indexOf(e);
                                if (-1 !== a) {
                                    t._shimmedLocalStreams[r].splice(a, 1)
                                }
                                if (1 === t._shimmedLocalStreams[r].length) {
                                    delete t._shimmedLocalStreams[r]
                                }
                            })
                        }
                        return n.apply(this, arguments)
                    }
                },
                shimAddTrackRemoveTrack: function shimAddTrackRemoveTrack(e) {
                    var a = n.detectBrowser(e);
                    if (e.RTCPeerConnection.prototype.addTrack && 65 <= a.version) {
                        return this.shimAddTrackRemoveTrackWithNative(e)
                    }
                    var i = e.RTCPeerConnection.prototype.getLocalStreams;
                    e.RTCPeerConnection.prototype.getLocalStreams = function() {
                        var e = this,
                            t = i.apply(this);
                        e._reverseStreams = e._reverseStreams || {};
                        return t.map(function(t) {
                            return e._reverseStreams[t.id]
                        })
                    };
                    var o = e.RTCPeerConnection.prototype.addStream;
                    e.RTCPeerConnection.prototype.addStream = function(t) {
                        var r = this;
                        r._streams = r._streams || {};
                        r._reverseStreams = r._reverseStreams || {};
                        t.getTracks().forEach(function(e) {
                            var t = r.getSenders().find(function(t) {
                                return t.track === e
                            });
                            if (t) {
                                throw new DOMException("Track already exists.", "InvalidAccessError")
                            }
                        });
                        if (!r._reverseStreams[t.id]) {
                            var a = new e.MediaStream(t.getTracks());
                            r._streams[t.id] = a;
                            r._reverseStreams[a.id] = t;
                            t = a
                        }
                        o.apply(r, [t])
                    };
                    var s = e.RTCPeerConnection.prototype.removeStream;
                    e.RTCPeerConnection.prototype.removeStream = function(e) {
                        var t = this;
                        t._streams = t._streams || {};
                        t._reverseStreams = t._reverseStreams || {};
                        s.apply(t, [t._streams[e.id] || e]);
                        delete t._reverseStreams[t._streams[e.id] ? t._streams[e.id].id : e.id];
                        delete t._streams[e.id]
                    };
                    e.RTCPeerConnection.prototype.addTrack = function(r, a) {
                        var n = this;
                        if ("closed" === n.signalingState) {
                            throw new DOMException("The RTCPeerConnection's signalingState is 'closed'.", "InvalidStateError")
                        }
                        var t = [].slice.call(arguments, 1);
                        if (1 !== t.length || !t[0].getTracks().find(function(e) {
                                return e === r
                            })) {
                            throw new DOMException("The adapter.js addTrack polyfill only supports a single  stream which is associated with the specified track.", "NotSupportedError")
                        }
                        var i = n.getSenders().find(function(e) {
                            return e.track === r
                        });
                        if (i) {
                            throw new DOMException("Track already exists.", "InvalidAccessError")
                        }
                        n._streams = n._streams || {};
                        n._reverseStreams = n._reverseStreams || {};
                        var o = n._streams[a.id];
                        if (o) {
                            o.addTrack(r);
                            Promise.resolve().then(function() {
                                n.dispatchEvent(new Event("negotiationneeded"))
                            })
                        } else {
                            var s = new e.MediaStream([r]);
                            n._streams[a.id] = s;
                            n._reverseStreams[s.id] = a;
                            n.addStream(s)
                        }
                        return n.getSenders().find(function(e) {
                            return e.track === r
                        })
                    };

                    function t(e, t) {
                        var r = t.sdp;
                        Object.keys(e._reverseStreams || []).forEach(function(t) {
                            var a = e._reverseStreams[t],
                                n = e._streams[a.id];
                            r = r.replace(new RegExp(n.id, "g"), a.id)
                        });
                        return new RTCSessionDescription({
                            type: t.type,
                            sdp: r
                        })
                    }

                    function r(e, t) {
                        var r = t.sdp;
                        Object.keys(e._reverseStreams || []).forEach(function(t) {
                            var a = e._reverseStreams[t],
                                n = e._streams[a.id];
                            r = r.replace(new RegExp(a.id, "g"), n.id)
                        });
                        return new RTCSessionDescription({
                            type: t.type,
                            sdp: r
                        })
                    }["createOffer", "createAnswer"].forEach(function(r) {
                        var a = e.RTCPeerConnection.prototype[r];
                        e.RTCPeerConnection.prototype[r] = function() {
                            var e = this,
                                r = arguments,
                                n = arguments.length && "function" == typeof arguments[0];
                            if (n) {
                                return a.apply(e, [function(a) {
                                    var n = t(e, a);
                                    r[0].apply(null, [n])
                                }, function(e) {
                                    if (r[1]) {
                                        r[1].apply(null, e)
                                    }
                                }, arguments[2]])
                            }
                            return a.apply(e, arguments).then(function(r) {
                                return t(e, r)
                            })
                        }
                    });
                    var c = e.RTCPeerConnection.prototype.setLocalDescription;
                    e.RTCPeerConnection.prototype.setLocalDescription = function() {
                        var e = this;
                        if (!arguments.length || !arguments[0].type) {
                            return c.apply(e, arguments)
                        }
                        arguments[0] = r(e, arguments[0]);
                        return c.apply(e, arguments)
                    };
                    var d = Object.getOwnPropertyDescriptor(e.RTCPeerConnection.prototype, "localDescription");
                    Object.defineProperty(e.RTCPeerConnection.prototype, "localDescription", {
                        get: function get() {
                            var e = this,
                                r = d.get.apply(this);
                            if ("" === r.type) {
                                return r
                            }
                            return t(e, r)
                        }
                    });
                    e.RTCPeerConnection.prototype.removeTrack = function(e) {
                        var t = this;
                        if ("closed" === t.signalingState) {
                            throw new DOMException("The RTCPeerConnection's signalingState is 'closed'.", "InvalidStateError")
                        }
                        if (!e._pc) {
                            throw new DOMException("Argument 1 of RTCPeerConnection.removeTrack does not implement interface RTCRtpSender.", "TypeError")
                        }
                        var r = e._pc === t;
                        if (!r) {
                            throw new DOMException("Sender was not created by this connection.", "InvalidAccessError")
                        }
                        t._streams = t._streams || {};
                        var a;
                        Object.keys(t._streams).forEach(function(r) {
                            var n = t._streams[r].getTracks().find(function(t) {
                                return e.track === t
                            });
                            if (n) {
                                a = t._streams[r]
                            }
                        });
                        if (a) {
                            if (1 === a.getTracks().length) {
                                t.removeStream(t._reverseStreams[a.id])
                            } else {
                                a.removeTrack(e.track)
                            }
                            t.dispatchEvent(new Event("negotiationneeded"))
                        }
                    }
                },
                shimPeerConnection: function shimPeerConnection(e) {
                    var t = n.detectBrowser(e);
                    if (!e.RTCPeerConnection && e.webkitRTCPeerConnection) {
                        e.RTCPeerConnection = function(t, r) {
                            i("PeerConnection");
                            if (t && t.iceTransportPolicy) {
                                t.iceTransports = t.iceTransportPolicy
                            }
                            return new e.webkitRTCPeerConnection(t, r)
                        };
                        e.RTCPeerConnection.prototype = e.webkitRTCPeerConnection.prototype;
                        if (e.webkitRTCPeerConnection.generateCertificate) {
                            Object.defineProperty(e.RTCPeerConnection, "generateCertificate", {
                                get: function get() {
                                    return e.webkitRTCPeerConnection.generateCertificate
                                }
                            })
                        }
                    } else {
                        var r = e.RTCPeerConnection;
                        e.RTCPeerConnection = function(e, t) {
                            if (e && e.iceServers) {
                                for (var a = [], o = 0, s; o < e.iceServers.length; o++) {
                                    s = e.iceServers[o];
                                    if (!s.hasOwnProperty("urls") && s.hasOwnProperty("url")) {
                                        n.deprecated("RTCIceServer.url", "RTCIceServer.urls");
                                        s = JSON.parse(JSON.stringify(s));
                                        s.urls = s.url;
                                        a.push(s)
                                    } else {
                                        a.push(e.iceServers[o])
                                    }
                                }
                                e.iceServers = a
                            }
                            return new r(e, t)
                        };
                        e.RTCPeerConnection.prototype = r.prototype;
                        Object.defineProperty(e.RTCPeerConnection, "generateCertificate", {
                            get: function get() {
                                return r.generateCertificate
                            }
                        })
                    }
                    var a = e.RTCPeerConnection.prototype.getStats;
                    e.RTCPeerConnection.prototype.getStats = function(e, t, r) {
                        var n = this,
                            i = arguments;
                        if (0 < arguments.length && "function" == typeof e) {
                            return a.apply(this, arguments)
                        }
                        if (0 === a.length && (0 === arguments.length || "function" != typeof arguments[0])) {
                            return a.apply(this, [])
                        }
                        var o = function(e) {
                                var t = {},
                                    r = e.result();
                                r.forEach(function(e) {
                                    var r = {
                                        id: e.id,
                                        timestamp: e.timestamp,
                                        type: {
                                            localcandidate: "local-candidate",
                                            remotecandidate: "remote-candidate"
                                        }[e.type] || e.type
                                    };
                                    e.names().forEach(function(t) {
                                        r[t] = e.stat(t)
                                    });
                                    t[r.id] = r
                                });
                                return t
                            },
                            s = function(e) {
                                return new Map(Object.keys(e).map(function(t) {
                                    return [t, e[t]]
                                }))
                            };
                        if (2 <= arguments.length) {
                            var c = function(e) {
                                i[1](s(o(e)))
                            };
                            return a.apply(this, [c, arguments[0]])
                        }
                        return new Promise(function(e, t) {
                            a.apply(n, [function(t) {
                                e(s(o(t)))
                            }, t])
                        }).then(t, r)
                    };
                    if (51 > t.version) {
                        ["setLocalDescription", "setRemoteDescription", "addIceCandidate"].forEach(function(t) {
                            var r = e.RTCPeerConnection.prototype[t];
                            e.RTCPeerConnection.prototype[t] = function() {
                                var e = arguments,
                                    t = this,
                                    a = new Promise(function(a, n) {
                                        r.apply(t, [e[0], a, n])
                                    });
                                if (2 > e.length) {
                                    return a
                                }
                                return a.then(function() {
                                    e[1].apply(null, [])
                                }, function(t) {
                                    if (3 <= e.length) {
                                        e[2].apply(null, [t])
                                    }
                                })
                            }
                        })
                    }
                    if (52 > t.version) {
                        ["createOffer", "createAnswer"].forEach(function(t) {
                            var r = e.RTCPeerConnection.prototype[t];
                            e.RTCPeerConnection.prototype[t] = function() {
                                var e = this;
                                if (1 > arguments.length || 1 === arguments.length && "object" === _typeof(arguments[0])) {
                                    var t = 1 === arguments.length ? arguments[0] : void 0;
                                    return new Promise(function(a, n) {
                                        r.apply(e, [a, n, t])
                                    })
                                }
                                return r.apply(this, arguments)
                            }
                        })
                    }["setLocalDescription", "setRemoteDescription", "addIceCandidate"].forEach(function(t) {
                        var r = e.RTCPeerConnection.prototype[t];
                        e.RTCPeerConnection.prototype[t] = function() {
                            arguments[0] = new("addIceCandidate" === t ? e.RTCIceCandidate : e.RTCSessionDescription)(arguments[0]);
                            return r.apply(this, arguments)
                        }
                    });
                    var o = e.RTCPeerConnection.prototype.addIceCandidate;
                    e.RTCPeerConnection.prototype.addIceCandidate = function() {
                        if (!arguments[0]) {
                            if (arguments[1]) {
                                arguments[1].apply(null)
                            }
                            return Promise.resolve()
                        }
                        return o.apply(this, arguments)
                    }
                }
            }
        }, {
            "../utils.js": 14,
            "./getusermedia": 6
        }],
        6: [function(e, t) {
            'use strict';
            var r = e("../utils.js"),
                a = r.log;
            t.exports = function(e) {
                var t = r.detectBrowser(e),
                    n = e && e.navigator,
                    i = function(e) {
                        if ("object" !== _typeof(e) || e.mandatory || e.optional) {
                            return e
                        }
                        var t = {};
                        Object.keys(e).forEach(function(a) {
                            if ("require" === a || "advanced" === a || "mediaSource" === a) {
                                return
                            }
                            var n = "object" === _typeof(e[a]) ? e[a] : {
                                ideal: e[a]
                            };
                            if (n.exact !== void 0 && "number" == typeof n.exact) {
                                n.min = n.max = n.exact
                            }
                            var r = function(e, t) {
                                if (e) {
                                    return e + t.charAt(0).toUpperCase() + t.slice(1)
                                }
                                return "deviceId" === t ? "sourceId" : t
                            };
                            if (n.ideal !== void 0) {
                                t.optional = t.optional || [];
                                var i = {};
                                if ("number" == typeof n.ideal) {
                                    i[r("min", a)] = n.ideal;
                                    t.optional.push(i);
                                    i = {};
                                    i[r("max", a)] = n.ideal;
                                    t.optional.push(i)
                                } else {
                                    i[r("", a)] = n.ideal;
                                    t.optional.push(i)
                                }
                            }
                            if (n.exact !== void 0 && "number" != typeof n.exact) {
                                t.mandatory = t.mandatory || {};
                                t.mandatory[r("", a)] = n.exact
                            } else {
                                ["min", "max"].forEach(function(e) {
                                    if (n[e] !== void 0) {
                                        t.mandatory = t.mandatory || {};
                                        t.mandatory[r(e, a)] = n[e]
                                    }
                                })
                            }
                        });
                        if (e.advanced) {
                            t.optional = (t.optional || []).concat(e.advanced)
                        }
                        return t
                    },
                    o = function(e, r) {
                        if (61 <= t.version) {
                            return r(e)
                        }
                        e = JSON.parse(JSON.stringify(e));
                        if (e && "object" === _typeof(e.audio)) {
                            var o = function(e, t, r) {
                                if (t in e && !(r in e)) {
                                    e[r] = e[t];
                                    delete e[t]
                                }
                            };
                            e = JSON.parse(JSON.stringify(e));
                            o(e.audio, "autoGainControl", "googAutoGainControl");
                            o(e.audio, "noiseSuppression", "googNoiseSuppression");
                            e.audio = i(e.audio)
                        }
                        if (e && "object" === _typeof(e.video)) {
                            var s = e.video.facingMode;
                            s = s && ("object" === _typeof(s) ? s : {
                                ideal: s
                            });
                            var c = 66 > t.version;
                            if (s && ("user" === s.exact || "environment" === s.exact || "user" === s.ideal || "environment" === s.ideal) && !(n.mediaDevices.getSupportedConstraints && n.mediaDevices.getSupportedConstraints().facingMode && !c)) {
                                delete e.video.facingMode;
                                var p;
                                if ("environment" === s.exact || "environment" === s.ideal) {
                                    p = ["back", "rear"]
                                } else if ("user" === s.exact || "user" === s.ideal) {
                                    p = ["front"]
                                }
                                if (p) {
                                    return n.mediaDevices.enumerateDevices().then(function(t) {
                                        t = t.filter(function(e) {
                                            return "videoinput" === e.kind
                                        });
                                        var n = t.find(function(e) {
                                            return p.some(function(t) {
                                                return -1 !== e.label.toLowerCase().indexOf(t)
                                            })
                                        });
                                        if (!n && t.length && -1 !== p.indexOf("back")) {
                                            n = t[t.length - 1]
                                        }
                                        if (n) {
                                            e.video.deviceId = s.exact ? {
                                                exact: n.deviceId
                                            } : {
                                                ideal: n.deviceId
                                            }
                                        }
                                        e.video = i(e.video);
                                        a("chrome: " + JSON.stringify(e));
                                        return r(e)
                                    })
                                }
                            }
                            e.video = i(e.video)
                        }
                        a("chrome: " + JSON.stringify(e));
                        return r(e)
                    },
                    s = function(t) {
                        return {
                            name: {
                                PermissionDeniedError: "NotAllowedError",
                                PermissionDismissedError: "NotAllowedError",
                                InvalidStateError: "NotAllowedError",
                                DevicesNotFoundError: "NotFoundError",
                                ConstraintNotSatisfiedError: "OverconstrainedError",
                                TrackStartError: "NotReadableError",
                                MediaDeviceFailedDueToShutdown: "NotAllowedError",
                                MediaDeviceKillSwitchOn: "NotAllowedError",
                                TabCaptureError: "AbortError",
                                ScreenCaptureError: "AbortError",
                                DeviceCaptureError: "AbortError"
                            }[t.name] || t.name,
                            message: t.message,
                            constraint: t.constraintName,
                            toString: function toString() {
                                return this.name + (this.message && ": ") + this.message
                            }
                        }
                    };
                n.getUserMedia = function getUserMedia_(e, t, r) {
                    o(e, function(e) {
                        n.webkitGetUserMedia(e, t, function(t) {
                            if (r) {
                                r(s(t))
                            }
                        })
                    })
                };
                var c = function(e) {
                    return new Promise(function(t, r) {
                        n.getUserMedia(e, t, r)
                    })
                };
                if (!n.mediaDevices) {
                    n.mediaDevices = {
                        getUserMedia: c,
                        enumerateDevices: function enumerateDevices() {
                            return new Promise(function(t) {
                                var r = {
                                    audio: "audioinput",
                                    video: "videoinput"
                                };
                                return e.MediaStreamTrack.getSources(function(e) {
                                    t(e.map(function(e) {
                                        return {
                                            label: e.label,
                                            kind: r[e.kind],
                                            deviceId: e.id,
                                            groupId: ""
                                        }
                                    }))
                                })
                            })
                        },
                        getSupportedConstraints: function getSupportedConstraints() {
                            return {
                                deviceId: !0,
                                echoCancellation: !0,
                                facingMode: !0,
                                frameRate: !0,
                                height: !0,
                                width: !0
                            }
                        }
                    }
                }
                if (!n.mediaDevices.getUserMedia) {
                    n.mediaDevices.getUserMedia = function(e) {
                        return c(e)
                    }
                } else {
                    var d = n.mediaDevices.getUserMedia.bind(n.mediaDevices);
                    n.mediaDevices.getUserMedia = function(e) {
                        return o(e, function(e) {
                            return d(e).then(function(t) {
                                if (e.audio && !t.getAudioTracks().length || e.video && !t.getVideoTracks().length) {
                                    t.getTracks().forEach(function(e) {
                                        e.stop()
                                    });
                                    throw new DOMException("", "NotFoundError")
                                }
                                return t
                            }, function(t) {
                                return Promise.reject(s(t))
                            })
                        })
                    }
                }
                if ("undefined" == typeof n.mediaDevices.addEventListener) {
                    n.mediaDevices.addEventListener = function() {
                        a("Dummy mediaDevices.addEventListener called.")
                    }
                }
                if ("undefined" == typeof n.mediaDevices.removeEventListener) {
                    n.mediaDevices.removeEventListener = function() {
                        a("Dummy mediaDevices.removeEventListener called.")
                    }
                }
            }
        }, {
            "../utils.js": 14
        }],
        7: [function(e, t) {
            'use strict';
            var r = e("sdp"),
                a = e("./utils");
            t.exports = {
                shimRTCIceCandidate: function shimRTCIceCandidate(t) {
                    if (!t.RTCIceCandidate || t.RTCIceCandidate && "foundation" in t.RTCIceCandidate.prototype) {
                        return
                    }
                    var n = t.RTCIceCandidate;
                    t.RTCIceCandidate = function(e) {
                        if ("object" === _typeof(e) && e.candidate && 0 === e.candidate.indexOf("a=")) {
                            e = JSON.parse(JSON.stringify(e));
                            e.candidate = e.candidate.substr(2)
                        }
                        if (e.candidate && e.candidate.length) {
                            var t = new n(e),
                                a = r.parseCandidate(e.candidate),
                                i = Object.assign(t, a);
                            i.toJSON = function() {
                                return {
                                    candidate: i.candidate,
                                    sdpMid: i.sdpMid,
                                    sdpMLineIndex: i.sdpMLineIndex,
                                    usernameFragment: i.usernameFragment
                                }
                            };
                            return i
                        }
                        return new n(e)
                    };
                    t.RTCIceCandidate.prototype = n.prototype;
                    a.wrapPeerConnectionEvent(t, "icecandidate", function(r) {
                        if (r.candidate) {
                            Object.defineProperty(r, "candidate", {
                                value: new t.RTCIceCandidate(r.candidate),
                                writable: "false"
                            })
                        }
                        return r
                    })
                },
                shimCreateObjectURL: function shimCreateObjectURL(e) {
                    var t = e && e.URL;
                    if (!("object" === _typeof(e) && e.HTMLMediaElement && "srcObject" in e.HTMLMediaElement.prototype && t.createObjectURL && t.revokeObjectURL)) {
                        return
                    }
                    var r = t.createObjectURL.bind(t),
                        n = t.revokeObjectURL.bind(t),
                        i = new Map,
                        o = 0;
                    t.createObjectURL = function(e) {
                        if ("getTracks" in e) {
                            var t = "polyblob:" + ++o;
                            i.set(t, e);
                            a.deprecated("URL.createObjectURL(stream)", "elem.srcObject = stream");
                            return t
                        }
                        return r(e)
                    };
                    t.revokeObjectURL = function(e) {
                        n(e);
                        i.delete(e)
                    };
                    var s = Object.getOwnPropertyDescriptor(e.HTMLMediaElement.prototype, "src");
                    Object.defineProperty(e.HTMLMediaElement.prototype, "src", {
                        get: function get() {
                            return s.get.apply(this)
                        },
                        set: function set(e) {
                            this.srcObject = i.get(e) || null;
                            return s.set.apply(this, [e])
                        }
                    });
                    var c = e.HTMLMediaElement.prototype.setAttribute;
                    e.HTMLMediaElement.prototype.setAttribute = function() {
                        if (2 === arguments.length && "src" === ("" + arguments[0]).toLowerCase()) {
                            this.srcObject = i.get(arguments[1]) || null
                        }
                        return c.apply(this, arguments)
                    }
                },
                shimMaxMessageSize: function shimMaxMessageSize(e) {
                    if (e.RTCSctpTransport || !e.RTCPeerConnection) {
                        return
                    }
                    var t = a.detectBrowser(e);
                    if (!("sctp" in e.RTCPeerConnection.prototype)) {
                        Object.defineProperty(e.RTCPeerConnection.prototype, "sctp", {
                            get: function get() {
                                return "undefined" == typeof this._sctp ? null : this._sctp
                            }
                        })
                    }
                    var n = function(e) {
                            var t = r.splitSections(e.sdp);
                            t.shift();
                            return t.some(function(e) {
                                var t = r.parseMLine(e);
                                return t && "application" === t.kind && -1 !== t.protocol.indexOf("SCTP")
                            })
                        },
                        i = function(e) {
                            var t = e.sdp.match(/mozilla...THIS_IS_SDPARTA-(\d+)/);
                            if (null === t || 2 > t.length) {
                                return -1
                            }
                            var r = parseInt(t[1], 10);
                            return r !== r ? -1 : r
                        },
                        o = function(e) {
                            var r = 65536;
                            if ("firefox" === t.browser) {
                                if (57 > t.version) {
                                    if (-1 === e) {
                                        r = 16384
                                    } else {
                                        r = 2147483637
                                    }
                                } else if (60 > t.version) {
                                    r = 57 === t.version ? 65535 : 65536
                                } else {
                                    r = 2147483637
                                }
                            }
                            return r
                        },
                        s = function(e, a) {
                            var n = 65536;
                            if ("firefox" === t.browser && 57 === t.version) {
                                n = 65535
                            }
                            var i = r.matchPrefix(e.sdp, "a=max-message-size:");
                            if (0 < i.length) {
                                n = parseInt(i[0].substr(19), 10)
                            } else if ("firefox" === t.browser && -1 !== a) {
                                n = 2147483637
                            }
                            return n
                        },
                        c = e.RTCPeerConnection.prototype.setRemoteDescription;
                    e.RTCPeerConnection.prototype.setRemoteDescription = function() {
                        var e = this;
                        e._sctp = null;
                        if (n(arguments[0])) {
                            var t = i(arguments[0]),
                                r = o(t),
                                a = s(arguments[0], t),
                                d;
                            if (0 === r && 0 === a) {
                                d = Number.POSITIVE_INFINITY
                            } else if (0 === r || 0 === a) {
                                d = Math.max(r, a)
                            } else {
                                d = Math.min(r, a)
                            }
                            var p = {};
                            Object.defineProperty(p, "maxMessageSize", {
                                get: function get() {
                                    return d
                                }
                            });
                            e._sctp = p
                        }
                        return c.apply(e, arguments)
                    }
                },
                shimSendThrowTypeError: function shimSendThrowTypeError(e) {
                    if (!(e.RTCPeerConnection && "createDataChannel" in e.RTCPeerConnection.prototype)) {
                        return
                    }

                    function t(e, t) {
                        var r = e.send;
                        e.send = function() {
                            var a = arguments[0],
                                n = a.length || a.size || a.byteLength;
                            if ("open" === e.readyState && t.sctp && n > t.sctp.maxMessageSize) {
                                throw new TypeError("Message too large (can send a maximum of " + t.sctp.maxMessageSize + " bytes)")
                            }
                            return r.apply(e, arguments)
                        }
                    }
                    var r = e.RTCPeerConnection.prototype.createDataChannel;
                    e.RTCPeerConnection.prototype.createDataChannel = function() {
                        var e = this,
                            a = r.apply(e, arguments);
                        t(a, e);
                        return a
                    };
                    a.wrapPeerConnectionEvent(e, "datachannel", function(r) {
                        t(r.channel, r.target);
                        return r
                    })
                }
            }
        }, {
            "./utils": 14,
            sdp: 2
        }],
        8: [function(e, t) {
            'use strict';
            var r = e("../utils"),
                a = e("./filtericeservers"),
                n = e("rtcpeerconnection-shim");
            t.exports = {
                shimGetUserMedia: e("./getusermedia"),
                shimPeerConnection: function shimPeerConnection(e) {
                    var t = r.detectBrowser(e);
                    if (e.RTCIceGatherer) {
                        if (!e.RTCIceCandidate) {
                            e.RTCIceCandidate = function(e) {
                                return e
                            }
                        }
                        if (!e.RTCSessionDescription) {
                            e.RTCSessionDescription = function(e) {
                                return e
                            }
                        }
                        if (15025 > t.version) {
                            var i = Object.getOwnPropertyDescriptor(e.MediaStreamTrack.prototype, "enabled");
                            Object.defineProperty(e.MediaStreamTrack.prototype, "enabled", {
                                set: function set(e) {
                                    i.set.call(this, e);
                                    var t = new Event("enabled");
                                    t.enabled = e;
                                    this.dispatchEvent(t)
                                }
                            })
                        }
                    }
                    if (e.RTCRtpSender && !("dtmf" in e.RTCRtpSender.prototype)) {
                        Object.defineProperty(e.RTCRtpSender.prototype, "dtmf", {
                            get: function get() {
                                if (this._dtmf === void 0) {
                                    if ("audio" === this.track.kind) {
                                        this._dtmf = new e.RTCDtmfSender(this)
                                    } else if ("video" === this.track.kind) {
                                        this._dtmf = null
                                    }
                                }
                                return this._dtmf
                            }
                        })
                    }
                    if (e.RTCDtmfSender && !e.RTCDTMFSender) {
                        e.RTCDTMFSender = e.RTCDtmfSender
                    }
                    var o = n(e, t.version);
                    e.RTCPeerConnection = function(e) {
                        if (e && e.iceServers) {
                            e.iceServers = a(e.iceServers)
                        }
                        return new o(e)
                    };
                    e.RTCPeerConnection.prototype = o.prototype
                },
                shimReplaceTrack: function shimReplaceTrack(e) {
                    if (e.RTCRtpSender && !("replaceTrack" in e.RTCRtpSender.prototype)) {
                        e.RTCRtpSender.prototype.replaceTrack = e.RTCRtpSender.prototype.setTrack
                    }
                }
            }
        }, {
            "../utils": 14,
            "./filtericeservers": 9,
            "./getusermedia": 10,
            "rtcpeerconnection-shim": 1
        }],
        9: [function(e, t) {
            'use strict';
            var r = e("../utils");
            t.exports = function(e, t) {
                var a = !1;
                e = JSON.parse(JSON.stringify(e));
                return e.filter(function(e) {
                    if (e && (e.urls || e.url)) {
                        var n = e.urls || e.url;
                        if (e.url && !e.urls) {
                            r.deprecated("RTCIceServer.url", "RTCIceServer.urls")
                        }
                        var i = "string" == typeof n;
                        if (i) {
                            n = [n]
                        }
                        n = n.filter(function(e) {
                            var r = 0 === e.indexOf("turn:") && -1 !== e.indexOf("transport=udp") && -1 === e.indexOf("turn:[") && !a;
                            if (r) {
                                a = !0;
                                return !0
                            }
                            return 0 === e.indexOf("stun:") && 14393 <= t && -1 === e.indexOf("?transport=udp")
                        });
                        delete e.url;
                        e.urls = i ? n[0] : n;
                        return !!n.length
                    }
                })
            }
        }, {
            "../utils": 14
        }],
        10: [function(e, t) {
            'use strict';
            t.exports = function(e) {
                var t = e && e.navigator,
                    r = function(t) {
                        return {
                            name: {
                                PermissionDeniedError: "NotAllowedError"
                            }[t.name] || t.name,
                            message: t.message,
                            constraint: t.constraint,
                            toString: function toString() {
                                return this.name
                            }
                        }
                    },
                    a = t.mediaDevices.getUserMedia.bind(t.mediaDevices);
                t.mediaDevices.getUserMedia = function(e) {
                    return a(e).catch(function(t) {
                        return Promise.reject(r(t))
                    })
                }
            }
        }, {}],
        11: [function(e, t) {
            'use strict';
            var r = e("../utils");
            t.exports = {
                shimGetUserMedia: e("./getusermedia"),
                shimOnTrack: function shimOnTrack(e) {
                    if ("object" === _typeof(e) && e.RTCPeerConnection && !("ontrack" in e.RTCPeerConnection.prototype)) {
                        Object.defineProperty(e.RTCPeerConnection.prototype, "ontrack", {
                            get: function get() {
                                return this._ontrack
                            },
                            set: function set(e) {
                                if (this._ontrack) {
                                    this.removeEventListener("track", this._ontrack);
                                    this.removeEventListener("addstream", this._ontrackpoly)
                                }
                                this.addEventListener("track", this._ontrack = e);
                                this.addEventListener("addstream", this._ontrackpoly = function(t) {
                                    t.stream.getTracks().forEach(function(e) {
                                        var r = new Event("track");
                                        r.track = e;
                                        r.receiver = {
                                            track: e
                                        };
                                        r.transceiver = {
                                            receiver: r.receiver
                                        };
                                        r.streams = [t.stream];
                                        this.dispatchEvent(r)
                                    }.bind(this))
                                }.bind(this))
                            }
                        })
                    }
                    if ("object" === _typeof(e) && e.RTCTrackEvent && "receiver" in e.RTCTrackEvent.prototype && !("transceiver" in e.RTCTrackEvent.prototype)) {
                        Object.defineProperty(e.RTCTrackEvent.prototype, "transceiver", {
                            get: function get() {
                                return {
                                    receiver: this.receiver
                                }
                            }
                        })
                    }
                },
                shimSourceObject: function shimSourceObject(e) {
                    if ("object" === _typeof(e)) {
                        if (e.HTMLMediaElement && !("srcObject" in e.HTMLMediaElement.prototype)) {
                            Object.defineProperty(e.HTMLMediaElement.prototype, "srcObject", {
                                get: function get() {
                                    return this.mozSrcObject
                                },
                                set: function set(e) {
                                    this.mozSrcObject = e
                                }
                            })
                        }
                    }
                },
                shimPeerConnection: function shimPeerConnection(e) {
                    var t = r.detectBrowser(e);
                    if ("object" !== _typeof(e) || !(e.RTCPeerConnection || e.mozRTCPeerConnection)) {
                        return
                    }
                    if (!e.RTCPeerConnection) {
                        e.RTCPeerConnection = function(r, a) {
                            if (38 > t.version) {
                                if (r && r.iceServers) {
                                    for (var n = [], o = 0, s; o < r.iceServers.length; o++) {
                                        s = r.iceServers[o];
                                        if (s.hasOwnProperty("urls")) {
                                            for (var c = 0, d; c < s.urls.length; c++) {
                                                d = {
                                                    url: s.urls[c]
                                                };
                                                if (0 === s.urls[c].indexOf("turn")) {
                                                    d.username = s.username;
                                                    d.credential = s.credential
                                                }
                                                n.push(d)
                                            }
                                        } else {
                                            n.push(r.iceServers[o])
                                        }
                                    }
                                    r.iceServers = n
                                }
                            }
                            return new e.mozRTCPeerConnection(r, a)
                        };
                        e.RTCPeerConnection.prototype = e.mozRTCPeerConnection.prototype;
                        if (e.mozRTCPeerConnection.generateCertificate) {
                            Object.defineProperty(e.RTCPeerConnection, "generateCertificate", {
                                get: function get() {
                                    return e.mozRTCPeerConnection.generateCertificate
                                }
                            })
                        }
                        e.RTCSessionDescription = e.mozRTCSessionDescription;
                        e.RTCIceCandidate = e.mozRTCIceCandidate
                    }["setLocalDescription", "setRemoteDescription", "addIceCandidate"].forEach(function(t) {
                        var r = e.RTCPeerConnection.prototype[t];
                        e.RTCPeerConnection.prototype[t] = function() {
                            arguments[0] = new("addIceCandidate" === t ? e.RTCIceCandidate : e.RTCSessionDescription)(arguments[0]);
                            return r.apply(this, arguments)
                        }
                    });
                    var a = e.RTCPeerConnection.prototype.addIceCandidate;
                    e.RTCPeerConnection.prototype.addIceCandidate = function() {
                        if (!arguments[0]) {
                            if (arguments[1]) {
                                arguments[1].apply(null)
                            }
                            return Promise.resolve()
                        }
                        return a.apply(this, arguments)
                    };
                    var n = function(e) {
                            var t = new Map;
                            Object.keys(e).forEach(function(r) {
                                t.set(r, e[r]);
                                t[r] = e[r]
                            });
                            return t
                        },
                        o = {
                            inboundrtp: "inbound-rtp",
                            outboundrtp: "outbound-rtp",
                            candidatepair: "candidate-pair",
                            localcandidate: "local-candidate",
                            remotecandidate: "remote-candidate"
                        },
                        s = e.RTCPeerConnection.prototype.getStats;
                    e.RTCPeerConnection.prototype.getStats = function(e, r, a) {
                        return s.apply(this, [e || null]).then(function(a) {
                            if (48 > t.version) {
                                a = n(a)
                            }
                            if (53 > t.version && !r) {
                                try {
                                    a.forEach(function(e) {
                                        e.type = o[e.type] || e.type
                                    })
                                } catch (t) {
                                    if ("TypeError" !== t.name) {
                                        throw t
                                    }
                                    a.forEach(function(e, t) {
                                        a.set(t, Object.assign({}, e, {
                                            type: o[e.type] || e.type
                                        }))
                                    })
                                }
                            }
                            return a
                        }).then(r, a)
                    }
                },
                shimSenderGetStats: function shimSenderGetStats(e) {
                    if (!("object" === _typeof(e) && e.RTCPeerConnection && e.RTCRtpSender)) {
                        return
                    }
                    if (e.RTCRtpSender && "getStats" in e.RTCRtpSender.prototype) {
                        return
                    }
                    var t = e.RTCPeerConnection.prototype.getSenders;
                    if (t) {
                        e.RTCPeerConnection.prototype.getSenders = function() {
                            var e = this,
                                r = t.apply(e, []);
                            r.forEach(function(t) {
                                t._pc = e
                            });
                            return r
                        }
                    }
                    var r = e.RTCPeerConnection.prototype.addTrack;
                    if (r) {
                        e.RTCPeerConnection.prototype.addTrack = function() {
                            var e = r.apply(this, arguments);
                            e._pc = this;
                            return e
                        }
                    }
                    e.RTCRtpSender.prototype.getStats = function() {
                        return this.track ? this._pc.getStats(this.track) : Promise.resolve(new Map)
                    }
                },
                shimReceiverGetStats: function shimReceiverGetStats(e) {
                    if (!("object" === _typeof(e) && e.RTCPeerConnection && e.RTCRtpSender)) {
                        return
                    }
                    if (e.RTCRtpSender && "getStats" in e.RTCRtpReceiver.prototype) {
                        return
                    }
                    var t = e.RTCPeerConnection.prototype.getReceivers;
                    if (t) {
                        e.RTCPeerConnection.prototype.getReceivers = function() {
                            var e = this,
                                r = t.apply(e, []);
                            r.forEach(function(t) {
                                t._pc = e
                            });
                            return r
                        }
                    }
                    r.wrapPeerConnectionEvent(e, "track", function(t) {
                        t.receiver._pc = t.srcElement;
                        return t
                    });
                    e.RTCRtpReceiver.prototype.getStats = function() {
                        return this._pc.getStats(this.track)
                    }
                },
                shimRemoveStream: function shimRemoveStream(e) {
                    if (!e.RTCPeerConnection || "removeStream" in e.RTCPeerConnection.prototype) {
                        return
                    }
                    e.RTCPeerConnection.prototype.removeStream = function(e) {
                        var t = this;
                        r.deprecated("removeStream", "removeTrack");
                        this.getSenders().forEach(function(r) {
                            if (r.track && -1 !== e.getTracks().indexOf(r.track)) {
                                t.removeTrack(r)
                            }
                        })
                    }
                },
                shimRTCDataChannel: function shimRTCDataChannel(e) {
                    if (e.DataChannel && !e.RTCDataChannel) {
                        e.RTCDataChannel = e.DataChannel
                    }
                }
            }
        }, {
            "../utils": 14,
            "./getusermedia": 12
        }],
        12: [function(e, t) {
            'use strict';
            var r = e("../utils"),
                a = r.log;
            t.exports = function(e) {
                var t = r.detectBrowser(e),
                    n = e && e.navigator,
                    i = e && e.MediaStreamTrack,
                    o = function(t) {
                        return {
                            name: {
                                InternalError: "NotReadableError",
                                NotSupportedError: "TypeError",
                                PermissionDeniedError: "NotAllowedError",
                                SecurityError: "NotAllowedError"
                            }[t.name] || t.name,
                            message: {
                                "The operation is insecure.": "The request is not allowed by the user agent or the platform in the current context."
                            }[t.message] || t.message,
                            constraint: t.constraint,
                            toString: function toString() {
                                return this.name + (this.message && ": ") + this.message
                            }
                        }
                    },
                    s = function(e, r, i) {
                        var s = function(e) {
                            if ("object" !== _typeof(e) || e.require) {
                                return e
                            }
                            var t = [];
                            Object.keys(e).forEach(function(a) {
                                if ("require" === a || "advanced" === a || "mediaSource" === a) {
                                    return
                                }
                                var n = e[a] = "object" === _typeof(e[a]) ? e[a] : {
                                    ideal: e[a]
                                };
                                if (n.min !== void 0 || n.max !== void 0 || n.exact !== void 0) {
                                    t.push(a)
                                }
                                if (n.exact !== void 0) {
                                    if ("number" == typeof n.exact) {
                                        n.min = n.max = n.exact
                                    } else {
                                        e[a] = n.exact
                                    }
                                    delete n.exact
                                }
                                if (n.ideal !== void 0) {
                                    e.advanced = e.advanced || [];
                                    var r = {};
                                    if ("number" == typeof n.ideal) {
                                        r[a] = {
                                            min: n.ideal,
                                            max: n.ideal
                                        }
                                    } else {
                                        r[a] = n.ideal
                                    }
                                    e.advanced.push(r);
                                    delete n.ideal;
                                    if (!Object.keys(n).length) {
                                        delete e[a]
                                    }
                                }
                            });
                            if (t.length) {
                                e.require = t
                            }
                            return e
                        };
                        e = JSON.parse(JSON.stringify(e));
                        if (38 > t.version) {
                            a("spec: " + JSON.stringify(e));
                            if (e.audio) {
                                e.audio = s(e.audio)
                            }
                            if (e.video) {
                                e.video = s(e.video)
                            }
                            a("ff37: " + JSON.stringify(e))
                        }
                        return n.mozGetUserMedia(e, r, function(t) {
                            i(o(t))
                        })
                    },
                    c = function(e) {
                        return new Promise(function(t, r) {
                            s(e, t, r)
                        })
                    };
                if (!n.mediaDevices) {
                    n.mediaDevices = {
                        getUserMedia: c,
                        addEventListener: function addEventListener() {},
                        removeEventListener: function removeEventListener() {}
                    }
                }
                n.mediaDevices.enumerateDevices = n.mediaDevices.enumerateDevices || function() {
                    return new Promise(function(e) {
                        e([{
                            kind: "audioinput",
                            deviceId: "default",
                            label: "",
                            groupId: ""
                        }, {
                            kind: "videoinput",
                            deviceId: "default",
                            label: "",
                            groupId: ""
                        }])
                    })
                };
                if (41 > t.version) {
                    var d = n.mediaDevices.enumerateDevices.bind(n.mediaDevices);
                    n.mediaDevices.enumerateDevices = function() {
                        return d().then(void 0, function(t) {
                            if ("NotFoundError" === t.name) {
                                return []
                            }
                            throw t
                        })
                    }
                }
                if (49 > t.version) {
                    var p = n.mediaDevices.getUserMedia.bind(n.mediaDevices);
                    n.mediaDevices.getUserMedia = function(e) {
                        return p(e).then(function(t) {
                            if (e.audio && !t.getAudioTracks().length || e.video && !t.getVideoTracks().length) {
                                t.getTracks().forEach(function(e) {
                                    e.stop()
                                });
                                throw new DOMException("The object can not be found here.", "NotFoundError")
                            }
                            return t
                        }, function(t) {
                            return Promise.reject(o(t))
                        })
                    }
                }
                if (!(55 < t.version && "autoGainControl" in n.mediaDevices.getSupportedConstraints())) {
                    var m = function(e, t, r) {
                            if (t in e && !(r in e)) {
                                e[r] = e[t];
                                delete e[t]
                            }
                        },
                        l = n.mediaDevices.getUserMedia.bind(n.mediaDevices);
                    n.mediaDevices.getUserMedia = function(e) {
                        if ("object" === _typeof(e) && "object" === _typeof(e.audio)) {
                            e = JSON.parse(JSON.stringify(e));
                            m(e.audio, "autoGainControl", "mozAutoGainControl");
                            m(e.audio, "noiseSuppression", "mozNoiseSuppression")
                        }
                        return l(e)
                    };
                    if (i && i.prototype.getSettings) {
                        var h = i.prototype.getSettings;
                        i.prototype.getSettings = function() {
                            var e = h.apply(this, arguments);
                            m(e, "mozAutoGainControl", "autoGainControl");
                            m(e, "mozNoiseSuppression", "noiseSuppression");
                            return e
                        }
                    }
                    if (i && i.prototype.applyConstraints) {
                        var g = i.prototype.applyConstraints;
                        i.prototype.applyConstraints = function(e) {
                            if ("audio" === this.kind && "object" === _typeof(e)) {
                                e = JSON.parse(JSON.stringify(e));
                                m(e, "autoGainControl", "mozAutoGainControl");
                                m(e, "noiseSuppression", "mozNoiseSuppression")
                            }
                            return g.apply(this, [e])
                        }
                    }
                }
                n.getUserMedia = function(e, a, i) {
                    if (44 > t.version) {
                        return s(e, a, i)
                    }
                    r.deprecated("navigator.getUserMedia", "navigator.mediaDevices.getUserMedia");
                    n.mediaDevices.getUserMedia(e).then(a, i)
                }
            }
        }, {
            "../utils": 14
        }],
        13: [function(e, t) {
            'use strict';
            var r = e("../utils");
            t.exports = {
                shimLocalStreamsAPI: function shimLocalStreamsAPI(e) {
                    if ("object" !== _typeof(e) || !e.RTCPeerConnection) {
                        return
                    }
                    if (!("getLocalStreams" in e.RTCPeerConnection.prototype)) {
                        e.RTCPeerConnection.prototype.getLocalStreams = function() {
                            if (!this._localStreams) {
                                this._localStreams = []
                            }
                            return this._localStreams
                        }
                    }
                    if (!("getStreamById" in e.RTCPeerConnection.prototype)) {
                        e.RTCPeerConnection.prototype.getStreamById = function(e) {
                            var t = null;
                            if (this._localStreams) {
                                this._localStreams.forEach(function(r) {
                                    if (r.id === e) {
                                        t = r
                                    }
                                })
                            }
                            if (this._remoteStreams) {
                                this._remoteStreams.forEach(function(r) {
                                    if (r.id === e) {
                                        t = r
                                    }
                                })
                            }
                            return t
                        }
                    }
                    if (!("addStream" in e.RTCPeerConnection.prototype)) {
                        var t = e.RTCPeerConnection.prototype.addTrack;
                        e.RTCPeerConnection.prototype.addStream = function(e) {
                            if (!this._localStreams) {
                                this._localStreams = []
                            }
                            if (-1 === this._localStreams.indexOf(e)) {
                                this._localStreams.push(e)
                            }
                            var r = this;
                            e.getTracks().forEach(function(a) {
                                t.call(r, a, e)
                            })
                        };
                        e.RTCPeerConnection.prototype.addTrack = function(e, r) {
                            if (r) {
                                if (!this._localStreams) {
                                    this._localStreams = [r]
                                } else if (-1 === this._localStreams.indexOf(r)) {
                                    this._localStreams.push(r)
                                }
                            }
                            return t.call(this, e, r)
                        }
                    }
                    if (!("removeStream" in e.RTCPeerConnection.prototype)) {
                        e.RTCPeerConnection.prototype.removeStream = function(e) {
                            if (!this._localStreams) {
                                this._localStreams = []
                            }
                            var t = this._localStreams.indexOf(e);
                            if (-1 === t) {
                                return
                            }
                            this._localStreams.splice(t, 1);
                            var r = this,
                                a = e.getTracks();
                            this.getSenders().forEach(function(e) {
                                if (-1 !== a.indexOf(e.track)) {
                                    r.removeTrack(e)
                                }
                            })
                        }
                    }
                },
                shimRemoteStreamsAPI: function shimRemoteStreamsAPI(e) {
                    if ("object" !== _typeof(e) || !e.RTCPeerConnection) {
                        return
                    }
                    if (!("getRemoteStreams" in e.RTCPeerConnection.prototype)) {
                        e.RTCPeerConnection.prototype.getRemoteStreams = function() {
                            return this._remoteStreams ? this._remoteStreams : []
                        }
                    }
                    if (!("onaddstream" in e.RTCPeerConnection.prototype)) {
                        Object.defineProperty(e.RTCPeerConnection.prototype, "onaddstream", {
                            get: function get() {
                                return this._onaddstream
                            },
                            set: function set(e) {
                                var t = this;
                                if (this._onaddstream) {
                                    this.removeEventListener("addstream", this._onaddstream);
                                    this.removeEventListener("track", this._onaddstreampoly)
                                }
                                this.addEventListener("addstream", this._onaddstream = e);
                                this.addEventListener("track", this._onaddstreampoly = function(r) {
                                    r.streams.forEach(function(e) {
                                        if (!t._remoteStreams) {
                                            t._remoteStreams = []
                                        }
                                        if (0 <= t._remoteStreams.indexOf(e)) {
                                            return
                                        }
                                        t._remoteStreams.push(e);
                                        var r = new Event("addstream");
                                        r.stream = e;
                                        t.dispatchEvent(r)
                                    })
                                })
                            }
                        })
                    }
                },
                shimCallbacksAPI: function shimCallbacksAPI(e) {
                    if ("object" !== _typeof(e) || !e.RTCPeerConnection) {
                        return
                    }
                    var t = e.RTCPeerConnection.prototype,
                        r = t.createOffer,
                        a = t.createAnswer,
                        n = t.setLocalDescription,
                        i = t.setRemoteDescription,
                        o = t.addIceCandidate;
                    t.createOffer = function(e, t) {
                        var a = 2 <= arguments.length ? arguments[2] : arguments[0],
                            n = r.apply(this, [a]);
                        if (!t) {
                            return n
                        }
                        n.then(e, t);
                        return Promise.resolve()
                    };
                    t.createAnswer = function(e, t) {
                        var r = 2 <= arguments.length ? arguments[2] : arguments[0],
                            n = a.apply(this, [r]);
                        if (!t) {
                            return n
                        }
                        n.then(e, t);
                        return Promise.resolve()
                    };
                    var s = function(e, t, r) {
                        var a = n.apply(this, [e]);
                        if (!r) {
                            return a
                        }
                        a.then(t, r);
                        return Promise.resolve()
                    };
                    t.setLocalDescription = s;
                    s = function(e, t, r) {
                        var a = i.apply(this, [e]);
                        if (!r) {
                            return a
                        }
                        a.then(t, r);
                        return Promise.resolve()
                    };
                    t.setRemoteDescription = s;
                    s = function(e, t, r) {
                        var a = o.apply(this, [e]);
                        if (!r) {
                            return a
                        }
                        a.then(t, r);
                        return Promise.resolve()
                    };
                    t.addIceCandidate = s
                },
                shimGetUserMedia: function shimGetUserMedia(e) {
                    var t = e && e.navigator;
                    if (!t.getUserMedia) {
                        if (t.webkitGetUserMedia) {
                            t.getUserMedia = t.webkitGetUserMedia.bind(t)
                        } else if (t.mediaDevices && t.mediaDevices.getUserMedia) {
                            t.getUserMedia = function(e, r, a) {
                                t.mediaDevices.getUserMedia(e).then(r, a)
                            }.bind(t)
                        }
                    }
                },
                shimRTCIceServerUrls: function shimRTCIceServerUrls(e) {
                    var t = e.RTCPeerConnection;
                    e.RTCPeerConnection = function(e, a) {
                        if (e && e.iceServers) {
                            for (var n = [], o = 0, s; o < e.iceServers.length; o++) {
                                s = e.iceServers[o];
                                if (!s.hasOwnProperty("urls") && s.hasOwnProperty("url")) {
                                    r.deprecated("RTCIceServer.url", "RTCIceServer.urls");
                                    s = JSON.parse(JSON.stringify(s));
                                    s.urls = s.url;
                                    delete s.url;
                                    n.push(s)
                                } else {
                                    n.push(e.iceServers[o])
                                }
                            }
                            e.iceServers = n
                        }
                        return new t(e, a)
                    };
                    e.RTCPeerConnection.prototype = t.prototype;
                    if ("generateCertificate" in e.RTCPeerConnection) {
                        Object.defineProperty(e.RTCPeerConnection, "generateCertificate", {
                            get: function get() {
                                return t.generateCertificate
                            }
                        })
                    }
                },
                shimTrackEventTransceiver: function shimTrackEventTransceiver(e) {
                    if ("object" === _typeof(e) && e.RTCPeerConnection && "receiver" in e.RTCTrackEvent.prototype && !e.RTCTransceiver) {
                        Object.defineProperty(e.RTCTrackEvent.prototype, "transceiver", {
                            get: function get() {
                                return {
                                    receiver: this.receiver
                                }
                            }
                        })
                    }
                },
                shimCreateOfferLegacy: function shimCreateOfferLegacy(e) {
                    var t = e.RTCPeerConnection.prototype.createOffer;
                    e.RTCPeerConnection.prototype.createOffer = function(e) {
                        var r = this;
                        if (e) {
                            if ("undefined" != typeof e.offerToReceiveAudio) {
                                e.offerToReceiveAudio = !!e.offerToReceiveAudio
                            }
                            var a = r.getTransceivers().find(function(e) {
                                return e.sender.track && "audio" === e.sender.track.kind
                            });
                            if (!1 === e.offerToReceiveAudio && a) {
                                if ("sendrecv" === a.direction) {
                                    if (a.setDirection) {
                                        a.setDirection("sendonly")
                                    } else {
                                        a.direction = "sendonly"
                                    }
                                } else if ("recvonly" === a.direction) {
                                    if (a.setDirection) {
                                        a.setDirection("inactive")
                                    } else {
                                        a.direction = "inactive"
                                    }
                                }
                            } else if (!0 === e.offerToReceiveAudio && !a) {
                                r.addTransceiver("audio")
                            }
                            if ("undefined" != typeof e.offerToReceiveAudio) {
                                e.offerToReceiveVideo = !!e.offerToReceiveVideo
                            }
                            var n = r.getTransceivers().find(function(e) {
                                return e.sender.track && "video" === e.sender.track.kind
                            });
                            if (!1 === e.offerToReceiveVideo && n) {
                                if ("sendrecv" === n.direction) {
                                    n.setDirection("sendonly")
                                } else if ("recvonly" === n.direction) {
                                    n.setDirection("inactive")
                                }
                            } else if (!0 === e.offerToReceiveVideo && !n) {
                                r.addTransceiver("video")
                            }
                        }
                        return t.apply(r, arguments)
                    }
                }
            }
        }, {
            "../utils": 14
        }],
        14: [function(e, t) {
            'use strict';
            var a = !0,
                n = !0;

            function r(e, t, r) {
                var a = e.match(t);
                return a && a.length >= r && parseInt(a[r], 10)
            }
            t.exports = {
                extractVersion: r,
                wrapPeerConnectionEvent: function(e, t, r) {
                    if (!e.RTCPeerConnection) {
                        return
                    }
                    var a = e.RTCPeerConnection.prototype,
                        n = a.addEventListener;
                    a.addEventListener = function(e, a) {
                        if (e !== t) {
                            return n.apply(this, arguments)
                        }
                        var i = function(t) {
                            a(r(t))
                        };
                        this._eventMap = this._eventMap || {};
                        this._eventMap[a] = i;
                        return n.apply(this, [e, i])
                    };
                    var i = a.removeEventListener;
                    a.removeEventListener = function(e, r) {
                        if (e !== t || !this._eventMap || !this._eventMap[r]) {
                            return i.apply(this, arguments)
                        }
                        var a = this._eventMap[r];
                        delete this._eventMap[r];
                        return i.apply(this, [e, a])
                    };
                    Object.defineProperty(a, "on" + t, {
                        get: function get() {
                            return this["_on" + t]
                        },
                        set: function set(e) {
                            if (this["_on" + t]) {
                                this.removeEventListener(t, this["_on" + t]);
                                delete this["_on" + t]
                            }
                            if (e) {
                                this.addEventListener(t, this["_on" + t] = e)
                            }
                        },
                        enumerable: !0,
                        configurable: !0
                    })
                },
                disableLog: function disableLog(e) {
                    if ("boolean" != typeof e) {
                        return new Error("Argument type: " + _typeof(e) + ". Please use a boolean.")
                    }
                    a = e;
                    return e ? "adapter.js logging disabled" : "adapter.js logging enabled"
                },
                disableWarnings: function disableWarnings(e) {
                    if ("boolean" != typeof e) {
                        return new Error("Argument type: " + _typeof(e) + ". Please use a boolean.")
                    }
                    n = !e;
                    return "adapter.js deprecation warnings " + (e ? "disabled" : "enabled")
                },
                log: function log() {
                    if ("object" === ("undefined" == typeof window ? "undefined" : _typeof(window))) {
                        if (a) {
                            return
                        }
                        if ("undefined" != typeof console && "function" == typeof console.log) {
                            console.log.apply(console, arguments)
                        }
                    }
                },
                deprecated: function deprecated(e, t) {
                    if (!n) {
                        return
                    }
                    console.warn(e + " is deprecated, please use " + t + " instead.")
                },
                detectBrowser: function detectBrowser(e) {
                    var t = e && e.navigator,
                        a = {};
                    a.browser = null;
                    a.version = null;
                    if ("undefined" == typeof e || !e.navigator) {
                        a.browser = "Not a browser.";
                        return a
                    }
                    if (t.mozGetUserMedia) {
                        a.browser = "firefox";
                        a.version = r(t.userAgent, /Firefox\/(\d+)\./, 1)
                    } else if (t.webkitGetUserMedia) {
                        a.browser = "chrome";
                        a.version = r(t.userAgent, /Chrom(e|ium)\/(\d+)\./, 2)
                    } else if (t.mediaDevices && t.userAgent.match(/Edge\/(\d+).(\d+)$/)) {
                        a.browser = "edge";
                        a.version = r(t.userAgent, /Edge\/(\d+).(\d+)$/, 2)
                    } else if (e.RTCPeerConnection && t.userAgent.match(/AppleWebKit\/(\d+)\./)) {
                        a.browser = "safari";
                        a.version = r(t.userAgent, /AppleWebKit\/(\d+)\./, 1)
                    } else {
                        a.browser = "Not a supported browser.";
                        return a
                    }
                    return a
                }
            }
        }, {}]
    }, {}, [3])(3)
});
define("filter_poodll/poodll_scenariomediaskin", ["jquery", "core/log", "filter_poodll/utils_amd", "filter_poodll/upskin_bar"], function(a, b, c, d) {
    "use strict";
    b.debug("PoodLL Scenario Skin: initialising");
    return {
        instanceprops: null,
        pmr: null,
        uploaded: !1,
        recorded: !1,
        played: !1,
        mustResetResourcePlayer: !1,
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        init: function init(a, b) {
            this.instanceprops = a;
            this.pmr = b
        },
        fetch_instanceprops: function fetch_instanceprops() {
            return this.instanceprops
        },
        onUploadSuccess: function onUploadSuccess(b) {
            a("#" + b + " > .poodll_save-recording").hide();
            a("#" + b + " > .poodll_savedsuccessfully").show()
        },
        onUploadFailure: function onUploadFailure() {},
        fetch_status_bar: function fetch_status_bar(a) {
            return "<div class=\"poodll_status_" + a + "\"></div>"
        },
        fetch_preview_audio: function fetch_preview_audio(a) {
            return "<audio class=\"poodll_checkplayer_" + a + " hide\" controls></audio>"
        },
        fetch_preview_video: function fetch_preview_video(a) {
            return "<video class=\"poodll_checkplayer_" + a + "\" width=\"320\" height=\"240\"></video>"
        },
        fetch_resource_audio: function fetch_resource_audio(a) {
            return "<audio class=\"poodll_resourceplayer_" + a + " hide\" src=\"@@RESOURCEURL@@\" playsinline controls></audio>"
        },
        fetch_resource_video: function fetch_resource_video(a) {
            return "<video class=\"poodll_resourceplayer_" + a + " hide\" src=\"@@RESOURCEURL@@\" ></video>"
        },
        fetch_uploader_skin: function fetch_uploader_skin(a, b) {
            var c = this.fetch_instanceprops(a),
                e = d.clone();
            e.init(c.config, b, c.controlbar.split_progresscanvas, c.controlbar.status);
            return e
        },
        onMediaError: function onMediaError(a) {
            console.error("media error", a)
        },
        onMediaSuccess_video: function onMediaSuccess_video(a) {
            var b = this.fetch_instanceprops(a);
            b.controlbar.stopbutton.attr("disabled", !1);
            b.controlbar.savebutton.attr("disabled", !1)
        },
        onMediaSuccess_audio: function onMediaSuccess_audio(a) {
            var b = this.fetch_instanceprops(a);
            b.controlbar.checkplayer.attr("src", null);
            b.controlbar.stopbutton.attr("disabled", !1);
            b.controlbar.savebutton.attr("disabled", !1)
        },
        handle_timer_update: function handle_timer_update(a) {
            if (!this.played && !this.recorded) {
                return
            }
            var b = this.fetch_instanceprops(a),
                c = M.util.get_string("recui_recording", "filter_poodll");
            this.update_status(a, c + b.timer.fetch_display_time());
            if (0 == b.timer.seconds && 0 < b.timer.initseconds) {
                b.controlbar.stopbutton.click()
            }
        },
        update_status: function update_status(a, b) {
            var c = this.fetch_instanceprops(a);
            c.controlbar.status.html(b)
        },
        set_visual_mode: function set_visual_mode(a, b) {
            var c = this;
            switch (a) {
                case "recordingmode":
                    c.disable_button(b.controlbar.resourceplaybutton);
                    b.controlbar.resourceplaybutton.empty();
                    b.controlbar.resourceplaybutton.html("<span class=\"fa fa-microphone fa-3x\"></span>");
                    b.controlbar.resourceplaybutton.addClass("poodll_mediarecorderholder_scenario_recordcolor");
                    b.controlbar.status.addClass("poodll_mediarecorderholder_scenario_recordcolor");
                    c.handle_timer_update(b.controlbarid);
                    c.enable_button(b.controlbar.stopbutton);
                    break;
                case "resourceplayingmode":
                    c.disable_button(b.controlbar.resourceplaybutton);
                    c.disable_button(b.controlbar.stopbutton);
                    break;
                case "neverrecordedmode":
                    b.controlbar.resourceplaybutton.empty();
                    b.controlbar.resourceplaybutton.html("<p style=\"margin-bottom: 0px; font-size: 24px;\">Start</p>");
                    c.enable_button(b.controlbar.resourceplaybutton);
                    c.disable_button(b.controlbar.stopbutton);
                    this.update_status(b.controlbarid, M.util.get_string("recui_ready", "filter_poodll"));
                    break;
                case "allstoppedmode":
                    c.disable_button(b.controlbar.resourceplaybutton);
                    c.disable_button(b.controlbar.stopbutton);
                    b.controlbar.resourceplaybutton.empty();
                    b.controlbar.resourceplaybutton.html("<span class=\"fa fa-check fa-3x\"></span>");
                    b.controlbar.resourceplaybutton.removeClass("poodll_mediarecorderholder_scenario_recordcolor");
                    b.controlbar.status.removeClass("poodll_mediarecorderholder_scenario_recordcolor");
                    this.update_status(b.controlbarid, M.util.get_string("recui_finished", "filter_poodll"));
                    break;
            }
        },
        insert_controlbar_video: function insert_controlbar_video(a, b, c, d) {
            var e = this.prepare_controlbar(a, b, c, d, "video");
            return e
        },
        insert_controlbar_audio: function insert_controlbar_audio(a, b, c, d) {
            var e = this.prepare_controlbar(a, b, c, d, "audio");
            return e
        },
        prepare_controlbar: function prepare_controlbar(b, c, d, e, f) {
            var g = this.fetch_instanceprops(c),
                h = g.config.media_skin_style,
                i = "video" == f ? "poodll_mediarecorder_video" : "poodll_mediarecorder_audio";
            e = e.replace("@@RESOURCEURL@@", g.config.resource);
            var j = this.pmr.fetch_strings(),
                k = "<div class=\"poodll_mediarecorderholder_scenario " + i + "\" id=\"holder_" + c + "\">";
            k += "<div class=\"poodll_mediarecorderbox_scenario\" id=\"" + c + "\">";
            k += "<div class=\"style-holder " + h + "\">";
            k += d, k += e, k += "<button type=\"button\" class=\"poodll_mediarecorder_button_scenario poodll_start-recording_scenario hide\"><span class=\"fa fa-microphone fa-3x\"></span></button>";
            k += " <button type=\"button\" class=\"poodll_mediarecorder_button_scenario poodll_playback-recording_scenario hide\"><span class=\"fa fa-play-circle fa-3x\"></span></button>";
            k += " <button type=\"button\" class=\"poodll_mediarecorder_button_scenario poodll_stopplayback-recording_scenario hide\"><span class=\"fa fa-stop-circle fa-3x\"></span></button>";
            k += "<button type=\"button\" class=\"poodll_save-recording_scenario pmr_disabled hide\">" + j.recui_save + "</button></div>";
            k += "<div class=\"poodll_mediarecorderholder_scenario\"><button type=\"button\" class=\"poodll_mediarecorder_button_scenario poodll_stop-recording_scenario pmr_disabled\" disabled><p style=\"margin-bottom: 0px;font-size: 24px;\">Submit</p></button></div>";
            k += "<div class=\"poodll_statusholder_scenario\" >";
            k += "<canvas class=\"scenario_range\"></canvas>";
            var l = this.fetch_status_bar("scenario");
            k += l;
            k += "</div>";
            k += "</div></div></div>";
            a(b).append(k);
            a(".qtext").prepend("<hr />");
            a(".qtext").prepend("<div class=\"poodll_mediarecorderholder_scenario poodll_mediarecorder_scenario_topscenario\"><button type=\"button\" class=\"poodll_mediarecorder_button_scenario poodll_play-resource_scenario\"><p style=\"margin-bottom: 0px; font-size: 24px;\">Start</p></button></div>");
            var m = {
                scenario_progresscanvas: a("#" + c + " .scenario_range"),
                marker: a("#" + c + "  .marker"),
                resourceplayer: a("#" + c + "  .poodll_resourceplayer_scenario"),
                checkplayer: a("#" + c + "  .poodll_checkplayer_scenario"),
                stopbutton: a("#" + c + "  .poodll_stop-recording_scenario"),
                resourcestopbutton: a("#" + c + "  .poodll_stop-resource_scenario"),
                startbutton: a("#" + c + "  .poodll_start-recording_scenario"),
                playbackbutton: a("#" + c + "  .poodll_playback-recording_scenario"),
                stopplaybackbutton: a("#" + c + "  .poodll_stopplayback-recording_scenario"),
                savebutton: a("#" + c + "  .poodll_save-recording_scenario"),
                resourceplaybutton: a(".poodll_mediarecorder_button_scenario.poodll_play-resource_scenario"),
                status: a(".poodll_status_scenario")
            };
            return m
        },
        register_controlbar_events_video: function register_controlbar_events_video(a, b) {
            return this.register_controlbar_events_audio(a, b)
        },
        do_callback: function do_callback(b) {
            switch (b[1]) {
                case "filesubmitted":
                    var c = document.getElementById(b[3]);
                    if (null == c) {
                        c = parent.document.getElementById(b[3])
                    }
                    if (c) {
                        c.value = b[2]
                    }
                    a("#responseform input[name=next]").attr("disabled", !1);
            }
        },
        register_controlbar_events_audio: function register_controlbar_events_audio(b, c) {
            var d = this,
                e = this.pmr,
                f = this.fetch_instanceprops(c);
            this.set_visual_mode("neverrecordedmode", f);
            f.config.callbackjs = d.do_callback;
            a("#responseform input[name=next]").attr("disabled", !0);
            f.controlbar.startbutton.click(function() {
                e.do_start_audio(f, b);
                d.recorded = !0;
                f.timer.reset();
                f.timer.start();
                d.set_visual_mode("recordingmode", f)
            });
            f.controlbar.stopbutton.click(function() {
                d.do_stop_resource(f);
                e.do_stop_audio(f);
                d.disable_button(this);
                setTimeout(function() {
                    f.controlbar.savebutton.click()
                }, 100);
                f.timer.stop();
                d.set_visual_mode("allstoppedmode", f)
            });
            f.controlbar.resourceplaybutton.click(function() {
                navigator.mediaDevices.getUserMedia({
                    audio: !0
                }).then(function() {
                    f.controlbar.startbutton.trigger("click");
                    d.played = !0;
                    if ("" != f.config.resource) {
                        d.do_play_resource(f)
                    }
                }).catch(function(a) {
                    alert(a)
                })
            });
            f.controlbar.resourcestopbutton.click(function() {
                d.do_stop_resource(f);
                if (d.recorded) {
                    d.set_visual_mode("allstoppedmode", f)
                } else {
                    d.set_visual_mode("neverrecordedmode", f)
                }
            });
            f.controlbar.savebutton.click(function() {
                d.disable_button(this);
                if (f.blobs && 0 < f.blobs.length) {
                    e.do_save_audio(f);
                    d.uploaded = !0;
                    d.disable_button(f.controlbar.startbutton)
                } else {
                    f.uploader.Output(M.util.get_string("recui_nothingtosaveerror", "filter_poodll"))
                }
                return !1
            })
        },
        set_completion: function set_completion(a, b) {
            var c = b.controlbar.completioncheck
        },
        do_stop_resource: function do_stop_resource(a) {
            console.log("stopped the resource");
            var b = a.controlbar.resourceplayer.get(0);
            b.pause();
            b.currentTime = 0;
            if (a.mustResetResourcePlayer) {
                a.mustResetResourcePlayer = !1;
                b.src = a.config.resource;
                b.load()
            }
        },
        do_play_resource: function do_play_resource(a) {
            var b = a.controlbar.resourceplayer.get(0);
            b.play();
            b.currentTime = 0
        },
        enable_button: function enable_button(b) {
            a(b).attr("disabled", !1);
            a(b).removeClass("pmr_disabled")
        },
        disable_button: function disable_button(b) {
            a(b).attr("disabled", !0);
            a(b).addClass("pmr_disabled")
        }
    }
});
define("filter_poodll/template_amd", ["jquery", "core/log"], function(a, b) {
    "use strict";
    b.debug("Filter Poodll initialising");
    return {
        allopts: {},
        extscripts: {},
        csslinks: [],
        jslinks: [],
        appendjspath: function appendjspath(a) {
            require.config({
                paths: {
                    theprefix: a
                }
            })
        },
        injectcss: function injectcss(a) {
            var b = document.createElement("link");
            b.href = a;
            if (a.toLowerCase().lastIndexOf(".html") == a.length - 5) {
                b.rel = "import"
            } else {
                b.type = "text/css";
                b.rel = "stylesheet"
            }
            document.getElementsByTagName("head")[0].appendChild(b)
        },
        loadtemplate: function loadtemplate(b) {
            var c = "#filter_poodll_amdopts_" + b.AUTOID,
                d = a(c).get(0);
            if (d) {
                b = JSON.parse(d.value);
                a(c).remove()
            }
            if (b.CSSLINK) {
                if (0 > this.csslinks.indexOf(b.CSSLINK)) {
                    this.csslinks.push(b.CSSLINK);
                    this.injectcss(b.CSSLINK)
                }
            }
            if (b.CSSUPLOAD) {
                if (0 > this.csslinks.indexOf(b.CSSUPLOAD)) {
                    this.csslinks.push(b.CSSUPLOAD);
                    this.injectcss(b.CSSUPLOAD)
                }
            }
            if (b.CSSCUSTOM) {
                if (0 > this.csslinks.indexOf(b.CSSCUSTOM)) {
                    this.csslinks.push(b.CSSCUSTOM);
                    this.injectcss(b.CSSCUSTOM)
                }
            }
            if ("undefined" != typeof b.TEMPLATEID) {
                require(["filter_poodll_d" + b.TEMPLATEID], function(a) {
                    a(b)
                })
            }
        }
    }
});
define("filter_poodll/poodll_onetwothreemediaskin", ["jquery", "jqueryui", "core/log", "filter_poodll/utils_amd", "filter_poodll/anim_progress_bar", "filter_poodll/speech_poodll", "filter_poodll/dlg_devicesettings", "filter_poodll/upskin_bar"], function(a, b, c, d, e, f, g, h) {
    "use strict";
    c.debug("PoodLL One Two Three Skin: initialising");
    return {
        instanceprops: null,
        pmr: null,
        stage: "none",
        uploaded: !1,
        devsettings: null,
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        init: function init(a, b) {
            this.instanceprops = a;
            this.pmr = b;
            this.devsettings = g.clone();
            this.devsettings.init(b, a)
        },
        fetch_instanceprops: function fetch_instanceprops() {
            return this.instanceprops
        },
        onUploadSuccess: function onUploadSuccess(b) {
            a("#" + b + " > .poodll_save-recording").hide();
            a("#" + b + " > .poodll_savedsuccessfully").show()
        },
        onUploadFailure: function onUploadFailure() {},
        fetch_status_bar: function fetch_status_bar(a) {
            return "<div class=\"poodll_status_" + a + "\" height=\"50\">00:00:00</div>"
        },
        fetch_preview_audio: function fetch_preview_audio(a) {
            return "<audio class=\"audio_preview_123 poodll_preview_" + a + "\" style=\"display: none;\" width=\"100%\" height=\"100%\" controls></audio>"
        },
        fetch_preview_video: function fetch_preview_video(a) {
            return "<video class=\"video_preview_123 poodll_preview_" + a + "\" width=\"100%\" height=\"300px\"></video>"
        },
        fetch_resource_audio: function fetch_resource_audio(a) {
            return "<audio class=\"poodll_resourceplayer_" + a + "\" style=\"display: none;\"></audio>"
        },
        fetch_resource_video: function fetch_resource_video(a) {
            return "<video class=\"poodll_resourceplayer_" + a + "\" style=\"display: none;\"></video>"
        },
        fetch_uploader_skin: function fetch_uploader_skin(a, b) {
            var c = this.fetch_instanceprops(a),
                d = h.clone();
            d.init(c.config, b, c.controlbar.progresscanvas, c.controlbar.timer);
            return d
        },
        onMediaError: function onMediaError(a) {
            console.error("media error", a)
        },
        onMediaSuccess_video: function onMediaSuccess_video(a) {
            var b = this.fetch_instanceprops(a);
            b.uploader.Output("");
            this.set_visual_mode("recordmode", a);
            b.timer.reset();
            b.timer.start();
            this.update_status(a);
            this.stage = "recorded"
        },
        onMediaSuccess_audio: function onMediaSuccess_audio(a) {
            var b = this.fetch_instanceprops(a);
            b.uploader.Output("");
            this.set_visual_mode("recordmode", a);
            b.timer.reset();
            b.timer.start();
            this.update_status(a);
            b.controlbar.preview.attr("src", null);
            this.stage = "recorded"
        },
        handle_timer_update: function handle_timer_update(a) {
            var b = this.fetch_instanceprops(a);
            b.controlbar.status.html(b.timer.fetch_display_time());
            if (0 == b.timer.seconds && 0 < b.timer.initseconds) {
                b.controlbar.stoprecbutton.click()
            }
        },
        update_status: function update_status(a) {
            var b = this.fetch_instanceprops(a);
            b.controlbar.status.html(b.timer.fetch_display_time())
        },
        set_visual_mode: function set_visual_mode(b, c) {
            var d = this,
                e = this.fetch_instanceprops(c);
            switch (b) {
                case "recordmode":
                    e.controlbar.progress.hide();
                    e.controlbar.preview.addClass("poodll_recording");
                    e.controlbar.status.addClass("poodll_recording");
                    if ("audio" == e.config.mediatype) {
                        e.controlbar.preview.addClass("hide")
                    }
                    e.controlbar.status.removeClass("hide");
                    d.disable_button(this);
                    d.disable_button(e.controlbar.playbutton);
                    e.controlbar.playbutton.show();
                    d.disable_button(e.controlbar.stopbutton);
                    e.controlbar.stopbutton.hide();
                    d.disable_button(e.controlbar.savebutton);
                    e.controlbar.savebutton.show();
                    d.enable_button(e.controlbar.stoprecbutton);
                    e.controlbar.stoprecbutton.show();
                    e.controlbar.startbutton.hide();
                    break;
                case "previewmode":
                    e.controlbar.playbutton.hide();
                    d.enable_button(e.controlbar.stopbutton);
                    e.controlbar.stopbutton.show();
                    d.disable_button(e.controlbar.startbutton);
                    e.controlbar.startbutton.show();
                    d.disable_button(e.controlbar.resumebutton);
                    e.controlbar.resumebutton.hide();
                    d.disable_button(e.controlbar.playbutton);
                    e.controlbar.preview.removeClass("poodll_recording");
                    e.controlbar.status.removeClass("poodll_recording");
                    if ("audio" == e.config.mediatype) {
                        e.controlbar.preview.removeClass("hide")
                    } else {
                        e.controlbar.status.removeClass("hide")
                    }
                    e.controlbar.status.addClass("hide");
                    if (e.controlbar.progresscanvas.hasClass("hide")) {
                        e.controlbar.progresscanvas.removeClass("hide");
                        e.controlbar.progresscanvas.show()
                    }
                    if (!a(this).hasClass("played")) {
                        a(this).addClass("played");
                        e.controlbar.steptwo.empty();
                        e.controlbar.steptwo.append("<i class=\"fa fa-check\" aria-hidden=\"true\"></i>").hide().fadeIn(1e3)
                    }
                    break;
                case "pausedmode":
                    d.enable_button(e.controlbar.startbutton);
                    e.controlbar.startbutton.show();
                    d.enable_button(e.controlbar.playbutton);
                    e.controlbar.playbutton.show();
                    d.disable_button(e.controlbar.savebutton);
                    e.controlbar.savebutton.show();
                    e.controlbar.preview.removeClass("poodll_recording");
                    e.controlbar.status.removeClass("poodll_recording");
                    e.controlbar.stoprecbutton.hide();
                    e.controlbar.timer.html("00:00:00");
                    e.controlbar.status.addClass("hide");
                    e.controlbar.progress.show();
                    e.controlbar.stepone.empty();
                    e.controlbar.stepone.append("<i class=\"fa fa-check\" aria-hidden=\"true\"></i>").hide().fadeIn(1e3);
                    d.disable_button(e.controlbar.stoprecbutton);
                    break;
                case "stopplayingmode":
                    if (!d.uploaded) {
                        d.enable_button(e.controlbar.savebutton);
                        d.enable_button(e.controlbar.startbutton)
                    }
                    if (!e.controlbar.progresscanvas.hasClass("hide")) {
                        e.controlbar.timer.html("00:00:00");
                        e.controlbar.progresscanvas.addClass("hide");
                        e.controlbar.progresscanvas.hide()
                    }
                    e.controlbar.stopbutton.hide();
                    e.controlbar.playbutton.show();
                    e.controlbar.startbutton.show();
                    d.enable_button(e.controlbar.playbutton);
                    d.disable_button(e.controlbar.stopbutton);
                    break;
                case "uploadmode":
                    d.disable_button(e.controlbar.startbutton);
                    e.controlbar.progresscanvas.removeClass("hide");
                    e.controlbar.progresscanvas.show();
                    break;
                case "savemode":
                    d.disable_button(e.controlbar.savebutton);
                    e.controlbar.stepthree.empty();
                    e.controlbar.stepthree.append("<i class=\"fa fa-check\" aria-hidden=\"true\"></i>").hide().fadeIn(1e3);
                    break;
            }
        },
        insert_controlbar_video: function insert_controlbar_video(a, b, c, d) {
            var e = this.prepare_controlbar(a, b, c, d, "video");
            return e
        },
        insert_controlbar_audio: function insert_controlbar_audio(a, b, c, d) {
            var e = this.prepare_controlbar(a, b, c, d, "audio");
            return e
        },
        prepare_controlbar: function prepare_controlbar(b, c, d, e, f) {
            var g = this.fetch_instanceprops(c),
                h = g.config.media_skin_style,
                i = "video" == f ? "poodll_mediarecorder_video" : "poodll_mediarecorder_audio",
                j = "poodll_mediarecorder_size_auto";
            switch (g.config.size) {
                case "small":
                    j = "poodll_mediarecorder_size_small";
                    break;
                case "big":
                    j = "poodll_mediarecorder_size_big";
                    break;
                case "auto":
                    j = "poodll_mediarecorder_size_auto";
            }
            var k = this.pmr.fetch_strings(),
                l = "<div class=\"one-two-three-main-wrapper poodll_mediarecorderholder_onetwothree " + i + " " + j + "\" id=\"holder_" + c + "\">";
            l += "<div class=\"modal-box poodll_mediarecorderbox_onetwothree one-two-three-wrap\" id=\"" + c + "\">";
            l += "<div class=\"style-holder " + h + "\">";
            var m = this.fetch_status_bar("onetwothree");
            l += m, l += "<div class=\"hp_slide\" id=\"slide_" + c + "\">";
            l += "<div class=\"hp_timer\"></div><canvas class=\"hp_range\"></canvas></div>";
            l += d, l += "<div class=\"settingsicon\" id=\"settingsicon_" + c + "\"><button type=\"button\" class=\"btn btn-info btn-lg\" data-toggle=\"modal\" data-target=\"#myModal\"><i class=\"fa fa-cogs\" aria-hidden=\"true\"></i></button></div>";
            l += "<button type=\"button\" class=\"poodll_mediarecorder_button_onetwothree poodll_start-recording_onetwothree\"><i class=\"fa fa-microphone\" aria-hidden=\"true\"></i></button> ";
            l += "<button type=\"button\" class=\"poodll_mediarecorder_button_onetwothree poodll_stop-recording_onetwothree pmr_disabled\" style=\"display: none;\" disabled><i class=\"fa fa-stop\" aria-hidden=\"true\"></i></button>";
            l += "<button type=\"button\" class=\"poodll_mediarecorder_button_onetwothree poodll_pause-recording_onetwothree pmr_disabled\" style=\"display: none;\" disabled><i class=\"fa fa-pause\" aria-hidden=\"true\"></i></button>";
            l += " <button type=\"button\" class=\"poodll_mediarecorder_button_onetwothree poodll_resume-recording_onetwothree pmr_disabled\" style=\"display: none;\" disabled><i class=\"fa fa-microphone\" aria-hidden=\"true\"></i></button>";
            l += "<button type=\"button\" class=\"poodll_mediarecorder_button_onetwothree poodll_play-recording_onetwothree pmr_disabled\" disabled><i class=\"fa fa-play\" aria-hidden=\"true\"></i></button> ";
            l += "<button type=\"button\" class=\"poodll_mediarecorder_button_onetwothree poodll_stop-playing_onetwothree pmr_disabled\" style=\"display: none;\" disabled><i class=\"fa fa-stop\" aria-hidden=\"true\"></i></button>";
            l += "<button type=\"button\" class=\"poodll_mediarecorder_button_onetwothree poodll_save-recording_onetwothree pmr_disabled\" disabled><i class=\"fa fa-upload\" aria-hidden=\"true\"></i></button>";
            l += "<div style=\"clear:both;\">";
            l += "<div class=\"task-helper\">";
            l += "<p class=\"step-1\">" + k.recui_record + "</p>";
            l += "<p class=\"step-2\">" + k.recui_play + "</p>";
            l += "<p class=\"step-3\">" + k.recui_save + "</p>";
            l += "</div>";
            l += "</div>";
            l += "</div>";
            l += this.devsettings.fetch_dialogue_box();
            l += g.downloaddialog.fetch_dialogue_box();
            l += g.errordialog.fetch_dialogue_box();
            l += "</div>";
            a(b).prepend(l);
            var n = {
                settingsdialog: a("#" + c + " .poodll_dialogue_box_settings"),
                downloaddialog: a("#" + c + " .poodll_dialogue_box_download"),
                errorsdialog: a("#" + c + " .poodll_dialogue_box_errors"),
                settingsicon: a("#" + c + " .settingsicon"),
                stepone: a("#" + c + " .step-1"),
                steptwo: a("#" + c + " .step-2"),
                stepthree: a("#" + c + " .step-3"),
                progresscanvas: a("#" + c + " .hp_range"),
                progress: a("#" + c + " .hp_slide"),
                timer: a("#" + c + " .hp_timer"),
                status: a("#" + c + " .poodll_status_onetwothree"),
                preview: a("#" + c + " .poodll_preview_onetwothree"),
                startbutton: a("#" + c + " .poodll_start-recording_onetwothree"),
                stoprecbutton: a("#" + c + " .poodll_stop-recording_onetwothree"),
                stopbutton: a("#" + c + " .poodll_stop-playing_onetwothree"),
                pausebutton: a("#" + c + " .poodll_pause-recording_onetwothree"),
                resumebutton: a("#" + c + " .poodll_resume-recording_onetwothree"),
                playbutton: a("#" + c + " .poodll_play-recording_onetwothree"),
                savebutton: a("#" + c + " .poodll_save-recording_onetwothree")
            };
            g.downloaddialog.set_dialogue_box(n.downloaddialog);
            g.errordialog.set_dialogue_box(n.errorsdialog);
            this.devsettings.set_dialogue_box(n.settingsdialog);
            return n
        },
        register_controlbar_events_video: function register_controlbar_events_video(a, b) {
            return this.register_controlbar_events_audio(a, b)
        },
        register_controlbar_events_audio: function register_controlbar_events_audio(a, b) {
            var d = this,
                f = this.pmr,
                g = this.stage,
                h = this.fetch_instanceprops(b),
                i = e.clone();
            i.init(h.controlbar.progresscanvas);
            h.controlbar.settingsicon.click(function() {
                if (!d.uploaded) {
                    d.devsettings.open()
                } else {
                    h.downloaddialog.open()
                }
            });
            h.controlbar.startbutton.click(function() {
                f.do_start_audio(h, a)
            });
            h.controlbar.stoprecbutton.click(function() {
                f.do_stop_audio(h);
                d.set_visual_mode("pausedmode", b);
                h.timer.stop();
                h.timer.reset();
                d.update_status(b)
            });
            h.controlbar.stopbutton.click(function() {
                d.set_visual_mode("stopplayingmode", b);
                var a = h.controlbar.preview.get(0);
                f.do_stopplay_audio(h, a);
                i.stop()
            });
            h.controlbar.playbutton.click(function() {
                h.controlbar.preview.on("timeupdate", function() {
                    var a = this.currentTime;
                    h.controlbar.timer.html(h.timer.fetch_display_time(a))
                });
                var a = h.controlbar.preview.get(0);
                f.do_play_audio(h, a);
                d.set_visual_mode("previewmode", b);
                g = "played";
                i.clear();
                i.fetchCurrent = function() {
                    var a = h.controlbar.preview.prop("currentTime"),
                        b = h.controlbar.preview.prop("duration");
                    if (!isFinite(b)) {
                        b = h.timer.finalseconds
                    }
                    return a / b
                };
                i.start()
            });
            h.controlbar.savebutton.click(function() {
                d.set_visual_mode("savemode", b);
                c.debug("save");
                if (h.blobs && 0 < h.blobs.length) {
                    f.do_save_audio(h);
                    d.uploaded = !0;
                    d.set_visual_mode("uploadmode", b);
                    g = "saved"
                } else {
                    h.uploader.Output(M.util.get_string("recui_nothingtosaveerror", "filter_poodll"))
                }
                return !1
            });
            window.onbeforeunload = function() {
                d.enable_button(h.controlbar.startbutton);
                var a = h.controlbar.preview;
                if (a && a.get(0)) {
                    a.get(0).pause()
                }
            }
        },
        enable_button: function enable_button(b) {
            a(b).attr("disabled", !1);
            a(b).removeClass("pmr_disabled")
        },
        disable_button: function disable_button(b) {
            a(b).attr("disabled", !0);
            a(b).addClass("pmr_disabled")
        }
    }
});
define('filter_poodll/msr_helper_whammy', ["jquery", "core/log", "filter_poodll/utils_amd", "filter_poodll/poodll_whammy"], function(a, b, c, d) {
    "use strict";
    return b.debug("PoodLL Whammy Recorder Helper: initialising"), {
        requestDataInvoked: !1,
        isOnStartedDrawingNonBlankFramesInvoked: !1,
        isStopDrawing: !1,
        canvas: null,
        context: null,
        video: !1,
        lastTime: !1,
        whammy: !1,
        isPaused: !1,
        width: !1,
        height: !1,
        speed: .8,
        quality: 100,
        mediaStream: null,
        msr: null,
        audioctx: null,
        clone: function() {
            return a.extend(!0, {}, this)
        },
        init: function(a, c, d) {
            this.canvas = document.createElement("canvas"), this.context = this.canvas.getContext("2d"), this.mediaStream = c, this.msr = a, this.audioctx = d, b.debug("initing whammy helper")
        },
        record: function(a) {
            b.debug("recordingin whammy helper"), this.width || (this.width = 320), this.height || (this.height = 240), this.video && this.video instanceof HTMLVideoElement && (this.width || (this.width = this.video.videoWidth || this.video.clientWidth || 320), this.height || (this.height = this.video.videoHeight || this.video.clientHeight || 240)), this.video || (this.video = {
                width: this.width,
                height: this.height
            }), this.canvas && this.canvas.width && this.canvas.height || (this.canvas = {
                width: this.width,
                height: this.height
            }), this.video && this.video instanceof HTMLVideoElement ? this.isHTMLObject = !0 : (this.video = document.createElement("video"), this.video.srcObject = this.mediaStream), this.video.muted = !0, this.video.play(), this.lastTime = (new Date).getTime(), this.whammy = d.Video, this.whammy.init(this.speed, this.quality), this.drawFrames(this)
        },
        clearOldRecordedFrames: function() {
            this.whammy.frames = []
        },
        requestData: function() {
            var a = this;
            if (!this.isPaused) {
                if (!this.whammy.frames.length) return void(this.requestDataInvoked = !1);
                this.requestDataInvoked = !0;
                var d = this.whammy.frames.slice(0);
                this.whammy.frames = this.dropBlackFrames(d, -1), this.whammy.compile(function(d) {
                    a.msr.ondataavailable(d), b.debug("video recorded blob size:" + c.bytesToSize(d.size))
                }), this.whammy.frames = [], this.requestDataInvoked = !1
            }
        },
        drawFrames: function(a) {
            if (a.isPaused) return a.lastTime = (new Date).getTime(), void setTimeout(function() {
                a.drawFrames(a)
            }, 500);
            if (!a.isStopDrawing) {
                if (a.requestDataInvoked) return setTimeout(function() {
                    a.drawFrames(a)
                }, 100);
                var b = (new Date).getTime() - a.lastTime;
                if (!b) return a.drawFrames(a);
                a.lastTime = (new Date).getTime(), !a.isHTMLObject && a.video.paused && a.video.play(), a.context.drawImage(a.video, 0, 0, a.canvas.width, a.canvas.height), a.isStopDrawing || a.whammy.frames.push({
                    duration: b,
                    image: a.canvas.toDataURL("image/webp")
                }), a.isOnStartedDrawingNonBlankFramesInvoked || a.isBlankFrame(a.whammy.frames[a.whammy.frames.length - 1]) || (a.isOnStartedDrawingNonBlankFramesInvoked = !0, a.msr.onStartedDrawingNonBlankFrames()), setTimeout(function() {
                    a.drawFrames(a)
                }, 10)
            }
        },
        stop: function() {
            this.isStopDrawing = !0, this.requestData()
        },
        isBlankFrame: function(a, b, c) {
            var d = document.createElement("canvas");
            d.width = this.canvas.width, d.height = this.canvas.height;
            var e, f, g, h = d.getContext("2d"),
                i = {
                    r: 0,
                    g: 0,
                    b: 0
                },
                j = Math.sqrt(Math.pow(255, 2) + Math.pow(255, 2) + Math.pow(255, 2)),
                k = b && b >= 0 && b <= 1 ? b : 0,
                l = c && c >= 0 && c <= 1 ? c : 0,
                m = new Image;
            m.src = a.image, h.drawImage(m, 0, 0, this.canvas.width, this.canvas.height);
            var n = h.getImageData(0, 0, this.canvas.width, this.canvas.height);
            e = 0, f = n.data.length, g = n.data.length / 4;
            for (var o = 0; o < f; o += 4) {
                var p = {
                        r: n.data[o],
                        g: n.data[o + 1],
                        b: n.data[o + 2]
                    },
                    q = Math.sqrt(Math.pow(p.r - i.r, 2) + Math.pow(p.g - i.g, 2) + Math.pow(p.b - i.b, 2));
                q <= j * k && e++
            }
            return !(g - e <= g * l)
        },
        dropBlackFrames: function(a, b, c, d) {
            var e = document.createElement("canvas");
            e.width = this.canvas.width, e.height = this.canvas.height;
            for (var f = e.getContext("2d"), g = [], h = b === -1, i = b && b > 0 && b <= a.length ? b : a.length, j = {
                    r: 0,
                    g: 0,
                    b: 0
                }, k = Math.sqrt(Math.pow(255, 2) + Math.pow(255, 2) + Math.pow(255, 2)), l = c && c >= 0 && c <= 1 ? c : 0, m = d && d >= 0 && d <= 1 ? d : 0, n = !1, o = 0; o < i; o++) {
                var p, q, r;
                if (!n) {
                    var s = new Image;
                    s.src = a[o].image, f.drawImage(s, 0, 0, this.canvas.width, this.canvas.height);
                    var t = f.getImageData(0, 0, this.canvas.width, this.canvas.height);
                    p = 0, q = t.data.length, r = t.data.length / 4;
                    for (var u = 0; u < q; u += 4) {
                        var v = {
                                r: t.data[u],
                                g: t.data[u + 1],
                                b: t.data[u + 2]
                            },
                            w = Math.sqrt(Math.pow(v.r - j.r, 2) + Math.pow(v.g - j.g, 2) + Math.pow(v.b - j.b, 2));
                        w <= k * l && p++
                    }
                }!n && r - p <= r * m || (h && (n = !0), g.push(a[o]))
            }
            return g = g.concat(a.slice(i)), g.length <= 0 && g.push(a[a.length - 1]), g
        },
        pause: function() {
            this.isPaused = !0
        },
        resume: function() {
            this.isPaused = !1
        }
    }
});
define("filter_poodll/poodll_goldmediaskin", ["jquery", "jqueryui", "core/log", "filter_poodll/utils_amd", "filter_poodll/anim_progress_radial", "filter_poodll/anim_hwave", "filter_poodll/anim_fbars", "filter_poodll/anim_ripple", "filter_poodll/anim_words", "filter_poodll/speech_poodll", "filter_poodll/dlg_devicesettings"], function(a, b, c, d, e, f, g, h, i, j, k) {
    "use strict";
    c.debug("PoodLL Gold Skin: initialising");
    return {
        instanceprops: null,
        pmr: null,
        devsettings: null,
        therecanim: null,
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        init: function init(a, b) {
            this.instanceprops = a;
            this.pmr = b;
            this.devsettings = k.clone();
            this.devsettings.init(b, a)
        },
        fetch_instanceprops: function fetch_instanceprops() {
            return this.instanceprops
        },
        onUploadSuccess: function onUploadSuccess(b) {
            a("#" + b + " > .poodll_save-recording").hide();
            a("#" + b + " > .poodll_savedsuccessfully").show()
        },
        onUploadFailure: function onUploadFailure() {},
        fetch_status_bar: function fetch_status_bar(a) {
            return "<div class=\"poodll_status_" + a + "\" width=\"320\" height=\"50\">00:00:00</div>"
        },
        fetch_preview_audio: function fetch_preview_audio(a) {
            return "<audio class=\"poodll_preview_" + a + " hide\"></audio>"
        },
        fetch_preview_video: function fetch_preview_video(a) {
            return "<video class=\"poodll_preview_" + a + "\" width=\"320\" height=\"240\"></video>"
        },
        fetch_resource_audio: function fetch_resource_audio(a) {
            return "<audio class=\"poodll_resourceplayer_" + a + " hide\" ></audio>"
        },
        fetch_resource_video: function fetch_resource_video(a) {
            return "<video class=\"poodll_resourceplayer_" + a + " hide\" ></video>"
        },
        fetch_uploader_skin: function fetch_uploader_skin() {
            return !1
        },
        onMediaError: function onMediaError(a) {
            console.error("media error", a)
        },
        onMediaSuccess_video: function onMediaSuccess_video(a) {
            this.fetch_instanceprops(a);
            this.set_visual_mode("recordingmode", a)
        },
        onMediaSuccess_audio: function onMediaSuccess_audio(a) {
            var b = this.fetch_instanceprops(a);
            b.controlbar.preview.attr("src", null);
            b.uploader.Output("");
            this.therecanim.start();
            b.timer.reset();
            b.timer.start();
            this.update_status(a);
            this.set_visual_mode("recordingmode", a)
        },
        handle_timer_update: function handle_timer_update(a) {
            var b = this.fetch_instanceprops(a);
            b.controlbar.status.html(b.timer.fetch_display_time());
            if (0 == b.timer.seconds && 0 < b.timer.initseconds) {
                b.controlbar.stopbutton.click()
            }
        },
        update_status: function update_status(a) {
            var b = this.fetch_instanceprops(a);
            b.controlbar.status.html(b.timer.fetch_display_time())
        },
        set_visual_mode: function set_visual_mode(a, b) {
            var c = this,
                d = this.fetch_instanceprops(b);
            switch (a) {
                case "startmode":
                    c.enable_button(d.controlbar.startbutton);
                    c.disable_button(d.controlbar.playbutton);
                    c.disable_button(d.controlbar.stopbutton);
                    if (d.showupload) {
                        c.disable_button(d.controlbar.savebutton)
                    } else {
                        d.controlbar.savebutton.hide()
                    }
                    c.disable_button(d.controlbar.restartbutton);
                    break;
                case "recordingmode":
                    c.enable_button(d.controlbar.stopbutton);
                    c.disable_button(d.controlbar.startbutton);
                    c.disable_button(d.controlbar.playbutton);
                    if (d.showupload) {
                        c.disable_button(d.controlbar.savebutton)
                    } else {
                        d.controlbar.savebutton.hide()
                    }
                    c.disable_button(d.controlbar.restartbutton);
                    if ("video" == d.config.mediatype) {
                        d.controlbar.preview.removeClass("hide")
                    }
                    break;
                case "previewmode":
                    if (d.showupload) {
                        d.controlbar.savebutton.removeClass("hide");
                        d.controlbar.savebutton.removeClass("pmr_disabled");
                        d.controlbar.savebutton.attr("disabled", !1)
                    } else {
                        d.controlbar.savebutton.hide();
                        if ("video" == d.config.mediatype) {
                            d.controlbar.preview.addClass("hide")
                        }
                    }
                    if (!d.uploaded) {
                        c.enable_button(d.controlbar.startbutton);
                        c.enable_button(d.controlbar.restartbutton)
                    }
                    c.enable_button(d.controlbar.stopbutton);
                    c.enable_button(d.controlbar.playbutton);
                    break;
                case "playingmode":
                    c.enable_button(d.controlbar.stopbutton);
                    if ("video" == d.config.mediatype) {
                        c.enable_button(d.controlbar.preview);
                        d.controlbar.preview.removeClass("hide")
                    }
                    c.disable_button(d.controlbar.startbutton);
                    c.disable_button(d.controlbar.playbutton);
                    c.disable_button(d.controlbar.restartbutton);
                    break;
            }
        },
        insert_controlbar_video: function insert_controlbar_video(a, b, c, d) {
            var e = this.prepare_controlbar(a, b, c, d, "video");
            return e
        },
        insert_controlbar_audio: function insert_controlbar_audio(a, b, c, d) {
            var e = this.prepare_controlbar(a, b, c, d, "audio");
            return e
        },
        prepare_controlbar: function prepare_controlbar(b, c, d, e, f) {
            var g = this.fetch_instanceprops(c),
                h = g.config.media_skin_style,
                i = "video" == f ? "poodll_mediarecorder_video" : "poodll_mediarecorder_audio";
            switch (g.config.size) {
                case "small":
                    break;
                case "big":
                    break;
                case "auto":
            }
            var j = this.pmr.fetch_strings(),
                k = "<div class=\"poodll_mediarecorderholder_gold " + i + "\" id=\"holder_" + c + "\">";
            k += "<div class=\"poodll_mediarecorderbox_gold\" id=\"" + c + "\">";
            k += this.devsettings.fetch_dialogue_box();
            k += g.downloaddialog.fetch_dialogue_box();
            k += g.errordialog.fetch_dialogue_box();
            k += "<div class=\"style-holder " + h + "\">";
            var l = this.fetch_status_bar("gold");
            k += l, k += d, k += "<div class=\"settingsicon\" id=\"settingsicon_" + c + "\"><button type=\"button\" class=\"btn btn-info btn-lg\" data-toggle=\"modal\" data-target=\"#myModal\"><i class=\"fa fa-cogs\" aria-hidden=\"true\"></i></button></div>";
            k += "<canvas id=\"" + c + "_playcanvas\"> width=\"250\" height=\"250\"></canvas>";
            k += "<button type=\"button\" class=\"poodll_mediarecorder_button_gold poodll_start-recording_gold\"><i class=\"fa fa-microphone\" aria-hidden=\"true\"></i></button>";
            k += "<button type=\"button\" class=\"poodll_mediarecorder_button_gold poodll_stop-recording_gold\"><i class=\"fa fa-stop\" aria-hidden=\"true\"></i></button>";
            k += "<div class=\"gold-save-button-wrapper\"><a class=\"btn btn-primary poodll_save-recording_gold\">Upload</a></div>";
            k += " <button type=\"button\" class=\"poodll_mediarecorder_button_gold poodll_play-recording_gold\"><i class=\"fa fa-play\" aria-hidden=\"true\"></i></button>";
            k += "<div class=\"gold-restart-button-wrapper\"><a class=\"btn btn-success poodll_restart_gold \" >" + j.recui_restart + "</a></div>";
            k += "</div></div></div>";
            a(b).prepend(k);
            var m = {
                settingsdialog: a("#" + c + " .poodll_dialogue_box_settings"),
                downloaddialog: a("#" + c + " .poodll_dialogue_box_download"),
                errorsdialog: a("#" + c + " .poodll_dialogue_box_errors"),
                settingsicon: a("#" + c + " .settingsicon"),
                status: a("#" + c + " .poodll_status_gold"),
                preview: a("#" + c + " .poodll_preview_gold"),
                startbutton: a("#" + c + " .poodll_start-recording_gold"),
                stopbutton: a("#" + c + " .poodll_stop-recording_gold"),
                stopplayingbutton: a("#" + c + " .poodll_stop-playing_gold"),
                playbutton: a("#" + c + " .poodll_play-recording_gold"),
                savebutton: a("#" + c + " .poodll_save-recording_gold"),
                restartbutton: a("#" + c + " .poodll_restart_gold"),
                playcanvas: a("#" + c + "_playcanvas")
            };
            g.downloaddialog.set_dialogue_box(m.downloaddialog);
            g.errordialog.set_dialogue_box(m.errorsdialog);
            this.devsettings.set_dialogue_box(m.settingsdialog);
            return m
        },
        register_controlbar_events_video: function register_controlbar_events_video(a, b) {
            return this.register_controlbar_events_audio(a, b)
        },
        register_controlbar_events_audio: function register_controlbar_events_audio(b, c) {
            var d = this,
                j = this.pmr,
                k = this.fetch_instanceprops(c);
            this.set_visual_mode("startmode", c);
            var l = e.clone();
            l.init(k.controlbar.playcanvas);
            var m = null;
            switch (k.config.recanim) {
                case "hwave":
                    m = f.clone();
                    break;
                case "fbars":
                    m = g.clone();
                    break;
                case "ripple":
                    m = h.clone();
                    break;
                case "words":
                    m = i.clone();
                    break;
                default:
                    k.config.recanim = "ripple";
                    var m = h.clone();
            }
            m.init(k.audioanalyser, k.controlbar.playcanvas.get(0));
            k.controlbar.settingsicon.click(function() {
                if (!d.uploaded) {
                    d.devsettings.open()
                } else {
                    k.downloaddialog.open()
                }
            });
            if ("video" == k.config.mediatype) {
                k.controlbar.preview.addClass("hide")
            }
            k.controlbar.preview.click(function() {
                console.log("clicked preview");
                a(this).addClass("hide");
                a(k.controlbar.stopbutton).trigger("click");
                if (a(this).hasClass("recorded")) {
                    a(this).removeClass("recorded")
                } else {
                    a(this).addClass("recorded")
                }
            });
            k.controlbar.startbutton.click(function() {
                d.therecanim = m;
                j.do_start_audio(k, b)
            });
            k.controlbar.restartbutton.click(function() {
                d.set_visual_mode("startmode", c)
            });
            k.controlbar.stopbutton.click(function() {
                j.do_stop_audio(k);
                var a = k.controlbar.preview.get(0);
                a.pause();
                m.clear();
                l.stop();
                k.timer.stop();
                d.update_status(c);
                d.set_visual_mode("previewmode", c)
            });
            k.controlbar.playbutton.click(function() {
                if ("video" == k.config.mediatype) {
                    if (a(k.controlbar.preview).hasClass("recorder")) {
                        a(k.controlbar.preview).removeClass("recorder");
                        a(k.controlbar.preview).removeClass("hide")
                    }
                }
                var b = k.controlbar.preview.get(0);
                j.do_play_audio(k, b);
                l.clear();
                l.fetchCurrent = function() {
                    var a = k.controlbar.preview.prop("currentTime"),
                        b = k.controlbar.preview.prop("duration");
                    if (!isFinite(b)) {
                        b = k.timer.finalseconds
                    }
                    return a / b
                };
                l.start();
                d.set_visual_mode("playingmode", c)
            });
            k.controlbar.savebutton.click(function() {
                if (k.blobs && 0 < k.blobs.length) {
                    j.do_save_audio(k);
                    k.uploaded = !0;
                    d.disable_button(k.controlbar.startbutton)
                } else {
                    k.uploader.Output(M.util.get_string("recui_nothingtosaveerror", "filter_poodll"))
                }
                d.set_visual_mode("previewmode", c);
                return !1
            });
            window.onbeforeunload = function() {
                d.enable_button(k.controlbar.startbutton);
                var a = k.controlbar.preview;
                if (a && a.get(0)) {
                    a.get(0).pause()
                }
            }
        },
        enable_button: function enable_button(b) {
            a(b).attr("disabled", !1);
            a(b).removeClass("pmr_disabled")
        },
        disable_button: function disable_button(b) {
            a(b).attr("disabled", !0);
            a(b).addClass("pmr_disabled")
        }
    }
});
define("filter_poodll/lzloader", [], function() {
    var $dhtml = !0,
        $as3 = !1,
        $js1 = !0,
        $swf7 = !1,
        $swf8 = !1,
        $svg = !1,
        $as2 = !1,
        $swf9 = !1,
        $profile = !1,
        $runtime = "dhtml",
        $swf10 = !1,
        $debug = !1,
        $j2me = !1;
    try {
        if (lz) {}
    } catch (t) {
        lz = {}
    }
    lz.embed = {
        options: {},
        swf: function swf(e, t) {
            if (null == t) {
                t = 8
            }
            var n = e.url,
                a = this.__getqueryurl(n);
            if (e.accessible && "false" != e.accessible) {
                a.flashvars += "&accessible=true"
            }
            if (e.history) {
                a.flashvars += "&history=true"
            }
            if (null != e.bgcolor) {
                a.flashvars += "&bgcolor=" + escape(e.bgcolor)
            }
            a.flashvars += "&width=" + escape(e.width);
            a.flashvars += "&height=" + escape(e.height);
            a.flashvars += "&__lzurl=" + escape(n);
            a.flashvars += "&__lzminimumversion=" + escape(t);
            a.flashvars += "&id=" + escape(e.id);
            var n = a.url + "?" + a.query,
                r = lz.embed._getAppendDiv(e.id, e.appenddivid),
                s = {
                    width: "100%",
                    height: "100%",
                    id: e.id,
                    bgcolor: e.bgcolor,
                    wmode: e.wmode,
                    flashvars: a.flashvars,
                    allowfullscreen: e.allowfullscreen,
                    flash8: n,
                    appenddiv: r
                };
            if (lz.embed[e.id]) {
                alert("Warning: an app with the id: " + e.id + " already exists.")
            }
            var i = lz.embed[e.id] = lz.embed.applications[e.id] = {
                runtime: "swf",
                _id: e.id,
                appenddiv: r,
                setCanvasAttribute: lz.embed._setCanvasAttributeSWF,
                getCanvasAttribute: lz.embed._getCanvasAttributeSWF,
                callMethod: lz.embed._callMethodSWF,
                _ready: lz.embed._ready,
                _onload: [],
                _getSWFDiv: lz.embed._getSWFDiv,
                loaded: !1,
                _sendMouseWheel: lz.embed._sendMouseWheel,
                _sendAllKeysUp: lz.embed._sendAllKeysUpSWF,
                _setCanvasAttributeDequeue: lz.embed._setCanvasAttributeDequeue,
                _sendPercLoad: lz.embed._sendPercLoad
            };
            if (!1 == e.history) {
                lz.embed.history.active = !1
            }
            lz.embed.dojo.addLoadedListener(lz.embed._loaded, i);
            lz.embed.dojo.setSwf(s, t);
            r.style.height = lz.embed.CSSDimension(e.height);
            r.style.width = lz.embed.CSSDimension(e.width);
            if (!0 != e.cancelmousewheel && ("Mac" == lz.embed.browser.OS || ("transparent" == s.wmode || "opaque" == s.wmode) && "Windows" == lz.embed.browser.OS && (lz.embed.browser.isOpera || lz.embed.browser.isFirefox))) {
                if (lz.embed.mousewheel) {
                    lz.embed.mousewheel.setCallback(i, "_sendMouseWheel")
                }
            }
            if (("transparent" == s.wmode || "opaque" == s.wmode) && "Windows" == lz.embed.browser.OS && (lz.embed.browser.isOpera || lz.embed.browser.isFirefox)) {
                var o = s.appenddiv;
                o.onmouseout = function() {
                    o.mouseisoutside = !0
                };
                o.onmouseover = function() {
                    o.mouseisoutside = !1
                };
                o._gotmouseup = document.onmouseup = function() {
                    if (o.mouseisoutside) {
                        i.callMethod("LzMouseKernel.__mouseUpOutsideHandler()")
                    }
                }
            }
        },
        __swfSetAppAppendDivStyle: function __swfSetAppAppendDivStyle(e, t, n) {
            var a = lz.embed.applications[e].appenddiv;
            return a.style[t] = n
        },
        lfc: function lfc(e, t) {
            if ("" == t) {
                t = "."
            } else {
                if (!t || "string" != typeof t) {
                    alert("WARNING: lz.embed.lfc() requires a valid serverroot to be specified.");
                    return
                }
            }
            lz.embed.options.serverroot = t;
            if (lz.embed.browser.isIE) {
                var n = t + "lps/includes/excanvas.js";
                this.__dhtmlLoadScript(n)
            }
            this.__dhtmlLoadScript(e)
        },
        dhtml: function dhtml(e) {
            var t = this.__getqueryurl(e.url, !0),
                n = t.url + "?lzt=object&" + t.query,
                a = lz.embed._getAppendDiv(e.id, e.appenddivid);
            a.style.height = lz.embed.CSSDimension(e.height);
            a.style.width = lz.embed.CSSDimension(e.width);
            lz.embed.__propcache = {
                bgcolor: e.bgcolor,
                width: e.width,
                height: e.height,
                id: e.id,
                appenddiv: lz.embed._getAppendDiv(e.id, e.appenddivid),
                url: n,
                cancelkeyboardcontrol: e.cancelkeyboardcontrol,
                serverroot: e.serverroot,
                approot: null != e.approot ? e.approot : ""
            };
            if (lz.embed[e.id]) {
                alert("Warning: an app with the id: " + e.id + " already exists.")
            }
            lz.embed[e.id] = lz.embed.applications[e.id] = {
                runtime: "dhtml",
                _id: e.id,
                _ready: lz.embed._ready,
                _onload: [],
                loaded: !1,
                setCanvasAttribute: lz.embed._setCanvasAttributeDHTML,
                getCanvasAttribute: lz.embed._getCanvasAttributeDHTML,
                _sendAllKeysUp: lz.embed._sendAllKeysUpDHTML
            };
            if (!1 == e.history) {
                lz.embed.history.active = !1
            }
            this.__dhtmlLoadScript(n);
            if ("Windows" == lz.embed.browser.OS && lz.embed.browser.isFirefox) {
                window.focus()
            }
        },
        applications: {},
        __dhtmlLoadScript: function __dhtmlLoadScript(e) {
            var t = "<script type=\"text/javascript\" language=\"JavaScript1.5\" src=\"" + e + "\"></script>";
            document.writeln(t);
            return t
        },
        __dhtmlLoadLibrary: function __dhtmlLoadLibrary(e) {
            var t = document.createElement("script");
            this.__setAttr(t, "type", "text/javascript");
            this.__setAttr(t, "src", e);
            document.getElementsByTagName("head")[0].appendChild(t);
            return t
        },
        __getqueryurl: function __getqueryurl(e, t) {
            var n = e.split("?");
            e = n[0];
            if (1 == n.length) {
                return {
                    url: e,
                    flashvars: "",
                    query: ""
                }
            }
            var a = this.__parseQuery(n[1]),
                r = "",
                s = "",
                i = /\+/g;
            for (var o in a) {
                if ("" == o || null == o) {
                    continue
                }
                var d = a[o];
                if ("lzr" == o || "lzt" == o || "debug" == o || "profile" == o || "lzbacktrace" == o || "lzconsoledebug" == o || "lzdebug" == o || "lzkrank" == o || "lzprofile" == o || "lzcopyresources" == o || "fb" == o || "sourcelocators" == o || "_canvas_debug" == o || "lzsourceannotations" == o) {
                    r += o + "=" + d + "&"
                }
                if (t) {
                    if (null == window[o]) {
                        window[o] = unescape(d.replace(i, " "))
                    }
                }
                s += o + "=" + d + "&"
            }
            r = r.substr(0, r.length - 1);
            s = s.substr(0, s.length - 1);
            return {
                url: e,
                flashvars: s,
                query: r
            }
        },
        __parseQuery: function __parseQuery(e) {
            if (-1 == e.indexOf("=")) {
                return
            }
            for (var t = e.split("&"), n = {}, a = 0, r; a < t.length; a++) {
                r = t[a].split("=");
                if (1 == r.length) {
                    continue
                }
                var s = r[0],
                    i = r[1];
                n[s] = i
            }
            return n
        },
        __setAttr: function __setAttr(e, t, n) {
            e.setAttribute(t, n)
        },
        _setCanvasAttributeSWF: function _setCanvasAttributeSWF(e, t, n) {
            if (this.loaded && lz.embed.dojo.comm[this._id] && lz.embed.dojo.comm[this._id].callMethod) {
                if (n) {
                    lz.embed.history._store(e, t)
                } else {
                    lz.embed.dojo.comm[this._id].setCanvasAttribute(e, t + "")
                }
            } else {
                if (null == this._setCanvasAttributeQ) {
                    this._setCanvasAttributeQ = [
                        [e, t, n]
                    ]
                } else {
                    this._setCanvasAttributeQ.push([e, t, n])
                }
            }
        },
        _setCanvasAttributeDHTML: function _setCanvasAttributeDHTML(e, t, n) {
            if (n) {
                lz.embed.history._store(e, t)
            } else {
                if (canvas) {
                    if (!canvas.__LZdeleted) {
                        var a = "$lzc$set_" + e;
                        if (Function.$lzsc$isa ? Function.$lzsc$isa(canvas[a]) : canvas[a] instanceof Function) {
                            canvas[a](t)
                        } else {
                            canvas[e] = t;
                            var r = canvas["on" + e];
                            if (LzEvent.$lzsc$isa ? LzEvent.$lzsc$isa(r) : r instanceof LzEvent) {
                                if (r.ready) {
                                    r.sendEvent(t)
                                }
                            }
                        }
                    }
                }
            }
        },
        _loaded: function _loaded(e) {
            if (lz.embed[e].loaded) {
                return
            }
            if (8 == lz.embed.dojo.info.commVersion) {
                setTimeout("lz.embed[\"" + e + "\"]._ready.call(lz.embed[\"" + e + "\"])", 100)
            } else {
                lz.embed[e]._ready.call(lz.embed[e])
            }
        },
        _setCanvasAttributeDequeue: function _setCanvasAttributeDequeue() {
            while (0 < this._setCanvasAttributeQ.length) {
                var e = this._setCanvasAttributeQ.pop();
                this.setCanvasAttribute(e[0], e[1], e[2])
            }
        },
        _ready: function _ready(e) {
            this.loaded = !0;
            if (this._callmethod) {
                for (var t = 0; t < this._callmethod.length; t++) {
                    this.callMethod(this._callmethod[t])
                }
                this._callmethod = null
            }
            if (this._setCanvasAttributeQ) {
                this._setCanvasAttributeDequeue()
            }
            if (e) {
                this.canvas = e
            }
            for (var t = 0, n; t < this._onload.length; t++) {
                n = this._onload[t];
                if ("function" == typeof n) {
                    n(this)
                }
            }
            if (this.onload && "function" == typeof this.onload) {
                this.onload(this)
            }
        },
        _getCanvasAttributeSWF: function _getCanvasAttributeSWF(e) {
            if (this.loaded) {
                return lz.embed.dojo.comm[this._id].getCanvasAttribute(e)
            } else {
                alert("Flash is not ready: getCanvasAttribute" + e)
            }
        },
        _getCanvasAttributeDHTML: function _getCanvasAttributeDHTML(e) {
            return canvas[e]
        },
        browser: {
            init: function init() {
                if (this.initted) {
                    return
                }
                this.browser = this.searchString(this.dataBrowser) || "An unknown browser";
                this.version = this.searchVersion(navigator.userAgent) || this.searchVersion(navigator.appVersion) || "an unknown version";
                this.osversion = this.searchOSVersion(navigator.userAgent) || "an unknown osversion";
                this.subversion = this.searchSubVersion(navigator.userAgent);
                this.OS = this.searchString(this.dataOS) || "an unknown OS";
                this.initted = !0;
                this.isNetscape = this.isSafari = this.isOpera = this.isFirefox = this.isIE = this.isIphone = !1;
                if ("Netscape" == this.browser) {
                    this.isNetscape = !0
                } else {
                    if ("Safari" == this.browser) {
                        this.isSafari = !0
                    } else {
                        if ("Opera" == this.browser) {
                            this.isOpera = !0
                        } else {
                            if ("Firefox" == this.browser) {
                                this.isFirefox = !0
                            } else {
                                if ("Explorer" == this.browser) {
                                    this.isIE = !0
                                } else {
                                    if ("iPhone" == this.browser) {
                                        this.isSafari = !0;
                                        this.isIphone = !0
                                    }
                                }
                            }
                        }
                    }
                }
            },
            searchString: function searchString(e) {
                for (var t = 0; t < e.length; t++) {
                    var n = e[t].string,
                        a = e[t].prop;
                    this.versionSearchString = e[t].versionSearch || e[t].identity;
                    this.osversionSearchString = e[t].osversionSearch || "";
                    if (n) {
                        if (-1 != n.indexOf(e[t].subString)) {
                            return e[t].identity
                        }
                    } else {
                        if (a) {
                            return e[t].identity
                        }
                    }
                }
            },
            searchVersion: function searchVersion(e) {
                var t = e.indexOf(this.versionSearchString);
                if (-1 == t) {
                    return
                }
                return parseFloat(e.substring(t + this.versionSearchString.length + 1))
            },
            searchSubVersion: function searchSubVersion(e) {
                var t = new RegExp(this.versionSearchString + ".\\d+\\.\\d+\\.([\\d.]+)"),
                    n = t.exec(e);
                if (n && 1 < n.length) {
                    return parseFloat(n[1])
                }
            },
            searchOSVersion: function searchOSVersion(e) {
                var t = e.indexOf(this.osversionSearchString);
                if (-1 == t) {
                    return
                }
                return parseFloat(e.substring(t + this.osversionSearchString.length + 1))
            },
            dataBrowser: [{
                string: navigator.userAgent,
                subString: "iPhone",
                identity: "iPhone",
                versionSearch: "WebKit"
            }, {
                string: navigator.userAgent,
                subString: "Chrome",
                identity: "Chrome"
            }, {
                string: navigator.userAgent,
                subString: "OmniWeb",
                versionSearch: "OmniWeb/",
                identity: "OmniWeb"
            }, {
                string: navigator.vendor,
                subString: "Apple",
                identity: "Safari",
                versionSearch: "WebKit"
            }, {
                prop: window.opera,
                identity: "Opera"
            }, {
                string: navigator.vendor,
                subString: "iCab",
                identity: "iCab"
            }, {
                string: navigator.vendor,
                subString: "KDE",
                identity: "Konqueror"
            }, {
                string: navigator.userAgent,
                subString: "Firefox",
                identity: "Firefox"
            }, {
                string: navigator.userAgent,
                subString: "Iceweasel",
                versionSearch: "Iceweasel",
                identity: "Firefox"
            }, {
                string: navigator.vendor,
                subString: "Camino",
                identity: "Camino"
            }, {
                string: navigator.userAgent,
                subString: "Netscape",
                identity: "Netscape"
            }, {
                string: navigator.userAgent,
                subString: "MSIE",
                identity: "Explorer",
                versionSearch: "MSIE",
                osversionSearch: "Windows NT"
            }, {
                string: navigator.userAgent,
                subString: "Gecko",
                identity: "Mozilla",
                versionSearch: "rv"
            }, {
                string: navigator.userAgent,
                subString: "Mozilla",
                identity: "Netscape",
                versionSearch: "Mozilla"
            }],
            dataOS: [{
                string: navigator.platform,
                subString: "Win",
                identity: "Windows"
            }, {
                string: navigator.platform,
                subString: "Mac",
                identity: "Mac"
            }, {
                string: navigator.userAgent,
                subString: "iPhone",
                identity: "iPhone/iPod"
            }, {
                string: navigator.platform,
                subString: "Linux",
                identity: "Linux"
            }]
        },
        _callMethodSWF: function _callMethodSWF(e) {
            if (this.loaded) {
                return lz.embed.dojo.comm[this._id].callMethod(e)
            } else {
                if (!this._callmethod) {
                    this._callmethod = []
                }
                this._callmethod.push(e)
            }
        },
        _broadcastMethod: function _broadcastMethod(e) {
            var t = [].slice.call(arguments, 1);
            for (var n in lz.embed.applications) {
                var a = lz.embed.applications[n];
                if (a[e]) {
                    a[e].apply(a, t)
                }
            }
        },
        setCanvasAttribute: function setCanvasAttribute(e, t, n) {
            lz.embed._broadcastMethod("setCanvasAttribute", e, t, n)
        },
        callMethod: function callMethod(e) {
            lz.embed._broadcastMethod("callMethod", e)
        },
        _getAppendDiv: function _getAppendDiv(e, t) {
            var n = t ? t : e + "Container",
                a = document.getElementById(n);
            if (!a) {
                document.writeln("<div id=\"" + n + "\"></div>");
                a = document.getElementById(n)
            }
            return a
        },
        _getSWFDiv: function _getSWFDiv() {
            return lz.embed.dojo.obj[this._id].get()
        },
        _sendMouseWheel: function _sendMouseWheel(e) {
            if (null != e) {
                this.callMethod("lz.Keys.__mousewheelEvent(" + e + ")")
            }
        },
        _gotFocus: function _gotFocus() {
            lz.embed._broadcastMethod("_sendAllKeysUp")
        },
        _sendAllKeysUpSWF: function _sendAllKeysUpSWF() {
            this.callMethod("lz.Keys.__allKeysUp()")
        },
        _sendAllKeysUpDHTML: function _sendAllKeysUpDHTML() {
            if (lz.Keys && lz.Keys.__allKeysUp) {
                lz.Keys.__allKeysUp()
            }
        },
        _sendPercLoad: function _sendPercLoad(e) {
            if (this.onloadstatus && "function" == typeof this.onloadstatus) {
                this.onloadstatus(e)
            }
        },
        attachEventHandler: function attachEventHandler(e, t, n, a, r) {
            if (!(n && a && "function" == typeof n[a])) {
                return
            }
            var s = e + t + n + a,
                i = this._handlers[s];
            if (null != i) {
                if (i instanceof Array) {
                    for (var o = i.length - 1; 0 <= o; --o) {
                        if (i[o].$e === e && i[o].$c === n) {
                            return
                        }
                    }
                } else {
                    if (i.$e === e && i.$c === n) {
                        return
                    }
                }
            }
            var d = function() {
                var e = window.event ? [window.event] : [].slice.call(arguments, 0);
                if (r) {
                    e.push(r)
                }
                n[a].apply(n, e)
            };
            d.$e = e;
            d.$c = n;
            if (null != i) {
                if (i instanceof Array) {
                    i.push(d)
                } else {
                    i = [i, d]
                }
            } else {
                i = d
            }
            this._handlers[s] = i;
            if (e.addEventListener) {
                e.addEventListener(t, d, !1);
                return !0
            } else {
                if (e.attachEvent) {
                    return e.attachEvent("on" + t, d)
                }
            }
        },
        removeEventHandler: function removeEventHandler(e, t, n, a) {
            var r = e + t + n + a,
                s, i = this._handlers[r];
            if (null != i) {
                if (i instanceof Array) {
                    for (var o = i.length - 1; 0 <= o; --o) {
                        if (i[o].$e === e && i[o].$c === n) {
                            s = i[o];
                            i.splice(o, 1);
                            if (0 == i.length) {
                                delete this._handlers[r]
                            }
                        }
                    }
                } else {
                    if (i.$e === e && i.$c === n) {
                        s = i;
                        delete this._handlers[r]
                    }
                }
            }
            if (!s) {
                return
            }
            if (e.removeEventListener) {
                e.removeEventListener(t, s, !1);
                return !0
            } else {
                if (e.detachEvent) {
                    return e.detachEvent("on" + t, s)
                }
            }
        },
        _handlers: {},
        _cleanupHandlers: function _cleanupHandlers() {
            lz.embed._handlers = {}
        },
        getAbsolutePosition: function getAbsolutePosition(e) {
            var t = null,
                n = {},
                a;
            if (!(lz.embed.browser.isFirefox && e == document.body) && e.getBoundingClientRect) {
                a = e.getBoundingClientRect();
                var r = document.documentElement.scrollTop || document.body.scrollTop,
                    s = document.documentElement.scrollLeft || document.body.scrollLeft;
                return {
                    x: Math.floor(a.left + s),
                    y: Math.floor(a.top + r)
                }
            } else {
                if (document.getBoxObjectFor) {
                    a = document.getBoxObjectFor(e);
                    n = {
                        x: a.x,
                        y: a.y
                    }
                } else {
                    n = {
                        x: e.offsetLeft,
                        y: e.offsetTop
                    };
                    t = e.offsetParent;
                    if (t != e) {
                        while (t) {
                            n.x += t.offsetLeft;
                            n.y += t.offsetTop;
                            t = t.offsetParent
                        }
                    }
                    if (lz.embed.browser.isSafari && document.defaultView && document.defaultView.getComputedStyle) {
                        var i = document.defaultView.getComputedStyle(e, "")
                    }
                    if (lz.embed.browser.isOpera || lz.embed.browser.isSafari && i && "absolute" == i.position) {
                        n.y -= document.body.offsetTop
                    }
                }
            }
            if (e.parentNode) {
                t = e.parentNode
            } else {
                return n
            }
            while (t && "BODY" != t.tagName && "HTML" != t.tagName) {
                n.x -= t.scrollLeft;
                n.y -= t.scrollTop;
                if (t.parentNode) {
                    t = t.parentNode
                } else {
                    return n
                }
            }
            return n
        },
        CSSDimension: function CSSDimension(e, t) {
            var n = e;
            if (isNaN(e)) {
                if (e.indexOf("%") == e.length - 1 && !isNaN(e.substring(0, e.length - 1))) {
                    return e
                } else {
                    n = 0
                }
            } else {
                if (e === 1 / 0) {
                    n = 2147483647
                } else {
                    if (e === -Infinity) {
                        n = -2147483648
                    }
                }
            }
            return n + (t ? t : "px")
        }
    };
    lz.embed.browser.init();
    lz.embed.attachEventHandler(window, "beforeunload", lz.embed, "_cleanupHandlers");
    lz.embed.attachEventHandler(window, "focus", lz.embed, "_gotFocus");
    if (lz.embed.browser.isIE) {
        lz.embed.attachEventHandler(window, "activate", lz.embed, "_gotFocus")
    }
    try {
        if (lzOptions) {
            if (lzOptions.dhtmlKeyboardControl) {
                alert("WARNING: this page uses lzOptions.dhtmlKeyboardControl.  Please use the cancelkeyboardcontrol embed argument for lz.embed.dhtml() instead.")
            }
            if (lzOptions.ServerRoot) {
                alert("WARNING: this page uses lzOptions.ServerRoot.  Please use the second argument of lz.embed.lfc() instead.")
            }
        }
    } catch (t) {}
    lz.embed.dojo = function() {};
    lz.embed.dojo = {
        defaults: {
            flash8: null,
            ready: !1,
            visible: !0,
            width: 500,
            height: 400,
            bgcolor: "#ffffff",
            allowfullscreen: !1,
            wmode: "window",
            flashvars: "",
            minimumVersion: 8,
            id: "flashObject",
            appenddiv: null
        },
        obj: {},
        comm: {},
        _loadedListeners: [],
        _loadedListenerScopes: [],
        _installingListeners: [],
        _installingListenerScopes: [],
        setSwf: function setSwf(e, t) {
            if (null == e) {
                return
            }
            var n = {};
            for (var a in this.defaults) {
                var r = e[a];
                if (null != r) {
                    n[a] = r
                } else {
                    n[a] = this.defaults[a]
                }
            }
            if (null != t) {
                this.minimumVersion = t
            }
            this._initialize(n)
        },
        addLoadedListener: function addLoadedListener(e, t) {
            this._loadedListeners.push(e);
            this._loadedListenerScopes.push(t)
        },
        addInstallingListener: function addInstallingListener(e, t) {
            this._installingListeners.push(e);
            this._installingListenerScopes.push(t)
        },
        loaded: function loaded(e) {
            var t = lz.embed.dojo;
            if (t._isinstaller) {
                top.location = top.location + ""
            }
            t.info.installing = !1;
            t.ready = !0;
            if (0 < t._loadedListeners.length) {
                for (var n = 0, a; n < t._loadedListeners.length; n++) {
                    a = t._loadedListenerScopes[n];
                    if (e != a._id) {
                        continue
                    }
                    lz.embed.dojo._loadedListeners[n].apply(a, [a._id])
                }
            }
        },
        installing: function installing() {
            var e = lz.embed.dojo;
            if (0 < e._installingListeners.length) {
                for (var t = 0, n; t < e._installingListeners.length; t++) {
                    n = e._installingListenerScopes[t];
                    e._installingListeners[t].apply(n, [n._id])
                }
            }
        },
        _initialize: function _initialize(e) {
            var t = lz.embed.dojo,
                n = new t.Install(e.id);
            t.installer = n;
            var a = new t.Embed(e);
            t.obj[e.id] = a;
            if (!0 == n.needed()) {
                n.install()
            } else {
                a.write(t.info.commVersion);
                t.comm[e.id] = new t.Communicator(e.id)
            }
        }
    };
    lz.embed.dojo.Info = function() {
        if (lz.embed.browser.isIE) {
            document.writeln("<script language=\"VBScript\" type=\"text/vbscript\">");
            document.writeln("Function VBGetSwfVer(i)");
            document.writeln("  on error resume next");
            document.writeln("  Dim swControl, swVersion");
            document.writeln("  swVersion = 0");
            document.writeln("  set swControl = CreateObject(\"ShockwaveFlash.ShockwaveFlash.\" + CStr(i))");
            document.writeln("  if (IsObject(swControl)) then");
            document.writeln("    swVersion = swControl.GetVariable(\"$version\")");
            document.writeln("  end if");
            document.writeln("  VBGetSwfVer = swVersion");
            document.writeln("End Function");
            document.writeln("</script>")
        }
        this._detectVersion();
        this._detectCommunicationVersion()
    };
    lz.embed.dojo.Info.prototype = {
        version: -1,
        versionMajor: -1,
        versionMinor: -1,
        versionRevision: -1,
        capable: !1,
        commVersion: 8,
        installing: !1,
        isVersionOrAbove: function isVersionOrAbove(e, t, n) {
            n = parseFloat("." + n);
            if (this.versionMajor >= e && this.versionMinor >= t && this.versionRevision >= n) {
                return !0
            } else {
                return !1
            }
        },
        _detectVersion: function _detectVersion() {
            for (var e, t = lz.embed.browser.isIE, n = 25; 0 < n; n--) {
                if (t) {
                    e = VBGetSwfVer(n)
                } else {
                    e = this._JSFlashInfo(n)
                }
                if (-1 == e) {
                    this.capable = !1;
                    return
                } else {
                    if (0 != e) {
                        var a;
                        if (t) {
                            var r = e.split(" "),
                                s = r[1];
                            a = s.split(",")
                        } else {
                            a = e.split(".")
                        }
                        this.versionMajor = a[0];
                        this.versionMinor = a[1];
                        this.versionRevision = a[2];
                        var i = this.versionMajor + "." + this.versionRevision;
                        this.version = parseFloat(i);
                        this.capable = !0;
                        break
                    }
                }
            }
        },
        _JSFlashInfo: function _JSFlashInfo() {
            if (null != navigator.plugins && 0 < navigator.plugins.length) {
                if (navigator.plugins["Shockwave Flash 2.0"] || navigator.plugins["Shockwave Flash"]) {
                    var e = navigator.plugins["Shockwave Flash 2.0"] ? " 2.0" : "",
                        t = navigator.plugins["Shockwave Flash" + e].description,
                        n = t.split(" "),
                        a = n[2].split("."),
                        r = a[0],
                        s = a[1];
                    if ("" != n[3]) {
                        var i = n[3].split("r")
                    } else {
                        var i = n[4].split("r")
                    }
                    var o = 0 < i[1] ? i[1] : 0;
                    return r + "." + s + "." + o
                }
            }
            return -1
        },
        _detectCommunicationVersion: function _detectCommunicationVersion() {
            if (!1 == this.capable) {
                this.commVersion = null
            }
        }
    };
    lz.embed.dojo.Embed = function(e) {
        this.properties = e;
        if (!this.properties.width) {
            this.properties.width = "100%"
        }
        if (!this.properties.height) {
            this.properties.height = "100%"
        }
        if (!this.properties.bgcolor) {
            this.properties.bgcolor = "#ffffff"
        }
        if (!this.properties.visible) {
            this.properties.visible = !0
        }
    };
    lz.embed.dojo.Embed.prototype = {
        protocol: function protocol() {
            switch (window.location.protocol) {
                case "https:":
                    return "https";
                    break;
                default:
                    return "http";
                    break;
            }
        },
        __getCSSValue: function __getCSSValue(e) {
            if (e && e.length && -1 != e.indexOf("%")) {
                return "100%"
            } else {
                return e + "px"
            }
        },
        write: function write(e, t) {
            var n = "";
            n += "width: " + this.__getCSSValue(this.properties.width) + ";";
            n += "height: " + this.__getCSSValue(this.properties.height) + ";";
            if (!1 == this.properties.visible) {
                n += "position: absolute; ";
                n += "z-index: 10000; ";
                n += "top: -1000px; ";
                n += "left: -1000px; "
            }
            var a, r, s = lz.embed;
            if (e > s.dojo.version) {
                t = !0
            }
            r = this.properties.flash8;
            var i = this.properties.flashvars,
                o = this.properties.flashvars;
            if (t) {
                var d = escape(window.location);
                document.title = document.title.slice(0, 47) + " - Flash Player Installation";
                var l = escape(document.title);
                i += "&MMredirectURL=" + d + "&MMplayerType=ActiveX&MMdoctitle=" + l;
                o += "&MMredirectURL=" + d + "&MMplayerType=PlugIn"
            }
            if (s.browser.isIE) {
                a = "<object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"" + this.protocol() + "://fpdownload.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=8,0,0,0\" width=\"" + this.properties.width + "\" height=\"" + this.properties.height + "\" id=\"" + this.properties.id + "\" align=\"middle\"> <param name=\"allowScriptAccess\" value=\"sameDomain\" /> <param name=\"movie\" value=\"" + r + "\" /> <param name=\"quality\" value=\"high\" /> <param name=\"FlashVars\" value=\"" + i + "\" /> <param name=\"bgcolor\" value=\"" + this.properties.bgcolor + "\" /> <param name=\"wmode\" value=\"" + this.properties.wmode + "\" /> <param name=\"allowFullScreen\" value=\"" + this.properties.allowfullscreen + "\" /> </object>"
            } else {
                a = "<embed src=\"" + r + "\" quality=\"high\" bgcolor=\"" + this.properties.bgcolor + "\" wmode=\"" + this.properties.wmode + "\" allowFullScreen=\"" + this.properties.allowfullscreen + "\" width=\"" + this.properties.width + "\" height=\"" + this.properties.height + "\" id=\"" + this.properties.id + "\" name=\"" + this.properties.id + "\" FlashVars=\"" + o + "\" swLiveConnect=\"true\" align=\"middle\" allowScriptAccess=\"sameDomain\" type=\"application/x-shockwave-flash\" pluginspage=\"" + this.protocol() + "://www.macromedia.com/go/getflashplayer\" />"
            }
            var m = this.properties.id + "Container",
                c = this.properties.appenddiv;
            if (c) {
                c.innerHTML = a;
                c.setAttribute("style", n)
            } else {
                a = "<div id=\"" + m + "\" style=\"" + n + "\"> " + a + "</div>";
                document.writeln(a)
            }
        },
        get: function get() {
            try {
                var e = document.getElementById(this.properties.id + "")
            } catch (t) {}
            return e
        },
        setVisible: function setVisible(e) {
            var t = document.getElementById(this.properties.id + "Container");
            if (!0 == e) {
                t.style.visibility = "visible"
            } else {
                t.style.position = "absolute";
                t.style.x = "-1000px";
                t.style.y = "-1000px";
                t.style.visibility = "hidden"
            }
        },
        center: function center() {
            var e = this.properties.width,
                t = this.properties.height,
                n = document.getElementById(this.properties.id + "Container");
            n.style.top = 0 + "px";
            n.style.left = 0 + "px"
        }
    };
    lz.embed.dojo.Communicator = function(e) {
        this._id = e
    };
    lz.embed.dojo.Communicator.prototype = {
        _addExternalInterfaceCallback: function _addExternalInterfaceCallback(e, t) {
            var n = lz.embed.dojo;
            n.comm[t][e] = function() {
                for (var a = [], r = 0; r < arguments.length; r++) {
                    a[r] = arguments[r]
                }
                a.length = arguments.length;
                return n.comm[t]._execFlash(e, a, t)
            }
        },
        _encodeData: function _encodeData(e) {
            var t = /\&([^;]*)\;/g;
            e = e.replace(t, "&amp;$1;");
            e = e.replace(/</g, "&lt;");
            e = e.replace(/>/g, "&gt;");
            e = e.replace("\\", "&custom_backslash;&custom_backslash;");
            e = e.replace(/\n/g, "\\n");
            e = e.replace(/\r/g, "\\r");
            e = e.replace(/\f/g, "\\f");
            e = e.replace(/\0/g, "\\0");
            e = e.replace(/\'/g, "\\'");
            e = e.replace(/\"/g, "\\\"");
            return e
        },
        _decodeData: function _decodeData($1) {
            if (null == $1 || "undefined" == typeof $1) {
                return $1
            }
            $1 = $1.replace(/\&custom_lt\;/g, "<");
            $1 = $1.replace(/\&custom_gt\;/g, ">");
            $1 = eval("\"" + $1 + "\"");
            return $1
        },
        _chunkArgumentData: function _chunkArgumentData(e, t, n) {
            for (var a = lz.embed.dojo.obj[n].get(), r = Math.ceil(e.length / 1024), s = 0; s < r; s++) {
                var i = 1024 * s,
                    o = 1024 * s + 1024;
                if (s == r - 1) {
                    o = 1024 * s + e.length
                }
                var d = e.substring(i, o);
                d = this._encodeData(d);
                a.CallFunction("<invoke name=\"chunkArgumentData\" returntype=\"javascript\"><arguments><string>" + d + "</string><number>" + t + "</number></arguments></invoke>")
            }
        },
        _chunkReturnData: function _chunkReturnData(e) {
            for (var t = lz.embed.dojo.obj[e].get(), n = t.getReturnLength(), a = [], r = 0, s; r < n; r++) {
                s = t.CallFunction("<invoke name=\"chunkReturnData\" returntype=\"javascript\"><arguments><number>" + r + "</number></arguments></invoke>");
                if ("\"\"" == s || "''" == s) {
                    s = ""
                } else {
                    s = s.substring(1, s.length - 1)
                }
                a.push(s)
            }
            var i = a.join("");
            return i
        },
        _execFlash: function _execFlash(e, t, n) {
            var a = lz.embed.dojo.obj[n].get();
            a.startExec();
            a.setNumberArguments(t.length);
            for (var r = 0; r < t.length; r++) {
                this._chunkArgumentData(t[r], r, n)
            }
            a.exec(e);
            var s = this._chunkReturnData(n);
            s = this._decodeData(s);
            a.endExec();
            return s
        }
    };
    lz.embed.dojo.Install = function(e) {
        this._id = e
    };
    lz.embed.dojo.Install.prototype = {
        needed: function needed() {
            var e = lz.embed.dojo;
            if (!1 == e.info.capable) {
                return !0
            }
            if (!0 == lz.embed.browser.isSafari && !e.info.isVersionOrAbove(8, 0, 0)) {
                return !0
            }
            if (e.minimumVersion > e.info.versionMajor) {
                return !0
            }
            if (!e.info.isVersionOrAbove(8, 0, 0)) {
                return !0
            }
            return !1
        },
        install: function install() {
            var e = lz.embed.dojo;
            e.info.installing = !0;
            e.installing();
            var t = e.obj[this._id].properties,
                n = t.flash8,
                a = n.indexOf("swf7");
            if (-1 != a) {
                e._tempurl = n;
                n = n.substring(0, a + 3) + "8" + n.substring(a + 4, n.length);
                t.flash8 = n
            }
            var a = n.indexOf("swf9");
            if (-1 != a) {
                e._tempurl = n;
                n = n.substring(0, a + 3) + "8" + n.substring(a + 4, n.length);
                t.flash8 = n
            }
            e.ready = !1;
            if (!1 == e.info.capable) {
                e._isinstaller = !0;
                var r = new e.Embed(t);
                r.write(e.minimumVersion)
            } else {
                if (e.info.isVersionOrAbove(6, 0, 65)) {
                    var r = new e.Embed(t);
                    r.write(e.minimumVersion, !0);
                    r.setVisible(!0);
                    r.center()
                } else {
                    alert("This content requires a more recent version of the Macromedia  Flash Player.");
                    window.location = "http://www.macromedia.com/go/getflashplayer"
                }
            }
        },
        _onInstallStatus: function _onInstallStatus(e) {
            if ("Download.Complete" == e) {
                if (lz.embed.browser.isIE) {
                    top.location = top.location + ""
                }
            } else {
                if ("Download.Cancelled" == e) {
                    alert("This content requires a more recent version of the Macromedia  Flash Player.");
                    window.location = "http://www.macromedia.com/go/getflashplayer"
                } else {
                    if ("Download.Failed" == e) {
                        alert("There was an error downloading the Flash Player update. Please try again later, or visit macromedia.com to download the latest version of the Flash plugin.");
                        window.location = "http://www.macromedia.com/go/getflashplayer"
                    }
                }
            }
        }
    };
    lz.embed.dojo.info = new lz.embed.dojo.Info;
    lz.embed.iframemanager = {
        __counter: 0,
        __frames: {},
        __namebyid: {},
        __loading: {},
        __callqueue: {},
        __calljsqueue: {},
        __sendmouseevents: {},
        __hidenativecontextmenu: {},
        __selectionbookmarks: {},
        create: function create(e, t, n, a, r, s) {
            var i = "__lz" + lz.embed.iframemanager.__counter++,
                o = "javascript:\"\"",
                d = "lz.embed.iframemanager.__gotload(\"" + i + "\")";
            if (null == t || "null" == t || "" == t) {
                t = i
            }
            lz.embed.iframemanager.__namebyid[i] = t;
            if (null == a || "undefined" == a) {
                a = document.body
            }
            if (document.all) {
                var l = "<iframe name='" + t + "' id='" + i + "' src='" + o + "' onload='" + d + "' frameBorder='0'";
                if (!0 != n) {
                    l += " scrolling='no'"
                }
                l += "></iframe>";
                var m = document.createElement("div");
                lz.embed.__setAttr(m, "id", i + "Container");
                a.appendChild(m);
                m.innerHTML = l;
                var c = document.getElementById(i)
            } else {
                var c = document.createElement("iframe");
                lz.embed.__setAttr(c, "name", t);
                lz.embed.__setAttr(c, "src", o);
                lz.embed.__setAttr(c, "id", i);
                lz.embed.__setAttr(c, "onload", d);
                if (!0 != n) {
                    lz.embed.__setAttr(c, "scrolling", "no")
                }
                this.appendTo(c, a)
            }
            if (c) {
                this.__finishCreate(i, e, t, n, a, r, s)
            } else {
                this.__callqueue[i] = [
                    ["__finishCreate", i, e, t, n, a, r, s]
                ];
                setTimeout("lz.embed.iframemanager.__checkiframe(\"" + i + "\")", 10)
            }
            return i + ""
        },
        __checkiframe: function __checkiframe(e) {
            var t = document.getElementById(e);
            if (t) {
                var n = lz.embed.iframemanager.__callqueue[e];
                delete lz.embed.iframemanager.__callqueue[e];
                lz.embed.iframemanager.__playQueue(n)
            } else {
                setTimeout("lz.embed.iframemanager.__checkiframe(\"" + e + "\")", 10)
            }
        },
        __playQueue: function __playQueue(e) {
            for (var t = lz.embed.iframemanager, n = 0; n < e.length; n++) {
                var a = e[n],
                    r = a.splice(0, 1);
                t[r].apply(t, a)
            }
        },
        __finishCreate: function __finishCreate(e, t, n, a, r, s) {
            var i = document.getElementById(e);
            if ("string" == typeof t) {
                i.appcontainer = lz.embed.applications[t]._getSWFDiv()
            }
            i.owner = t;
            lz.embed.iframemanager.__frames[e] = i;
            this.__namebyid[e] = n;
            var o = lz.embed.iframemanager.getFrame(e);
            o.__gotload = lz.embed.iframemanager.__gotload;
            o._defaultz = s ? s : 99900;
            this.setZ(e, o._defaultz);
            lz.embed.iframemanager.__topiframe = e;
            if (document.getElementById && !document.all) {
                o.style.border = "0"
            } else {
                if (document.all) {
                    lz.embed.__setAttr(o, "allowtransparency", "true");
                    var d = lz.embed[o.owner];
                    if (d && "swf" == d.runtime) {
                        var l = d._getSWFDiv();
                        l.onfocus = lz.embed.iframemanager.__refresh
                    }
                }
            }
            o.style.position = "absolute"
        },
        appendTo: function appendTo(e, t) {
            if (t.__appended == t) {
                return
            }
            if (e.__appended) {
                old = e.__appended.removeChild(e);
                t.appendChild(old)
            } else {
                t.appendChild(e)
            }
            e.__appended = t
        },
        getFrame: function getFrame(e) {
            return lz.embed.iframemanager.__frames[e]
        },
        getFrameWindow: function getFrameWindow(e) {
            if (!this.framesColl) {
                if (document.frames) {
                    this.framesColl = document.frames
                } else {
                    this.framesColl = window.frames
                }
            }
            return this.framesColl[e]
        },
        setSrc: function setSrc(e, t, n) {
            if (this.__callqueue[e]) {
                this.__callqueue[e].push(["setSrc", e, t, n]);
                return
            }
            this.__setSendMouseEvents(e, !1);
            if (n) {
                var a = lz.embed.iframemanager.getFrame(e);
                if (!a) {
                    return
                }
                lz.embed.__setAttr(a, "src", t)
            } else {
                var e = lz.embed.iframemanager.__namebyid[e],
                    a = window[e];
                if (!a) {
                    return
                }
                a.location.replace(t)
            }
            this.__loading[e] = !0
        },
        setPosition: function setPosition(e, t, n, a, r, s, i) {
            if (this.__callqueue[e]) {
                this.__callqueue[e].push(["setPosition", e, t, n, a, r, s, i]);
                return
            }
            var o = lz.embed.iframemanager.getFrame(e);
            if (!o) {
                return
            }
            if (o.appcontainer) {
                var d = lz.embed.getAbsolutePosition(o.appcontainer)
            } else {
                var d = {
                    x: 0,
                    y: 0
                }
            }
            if (null != t && !isNaN(t)) {
                o.style.left = t + d.x + "px"
            }
            if (null != n && !isNaN(n)) {
                o.style.top = n + d.y + "px"
            }
            if (null != a && !isNaN(a)) {
                o.style.width = a + "px"
            }
            if (null != r && !isNaN(r)) {
                o.style.height = r + "px"
            }
            if (null != s) {
                if ("string" == typeof s) {
                    s = "true" == s
                }
                o.style.display = s ? "block" : "none"
            }
            if (null != i) {
                this.setZ(e, i + o._defaultz)
            }
        },
        setVisible: function setVisible(e, t) {
            if (this.__callqueue[e]) {
                this.__callqueue[e].push(["setVisible", e, t]);
                return
            }
            if ("string" == typeof t) {
                t = "true" == t
            }
            var n = lz.embed.iframemanager.getFrame(e);
            if (!n) {
                return
            }
            n.style.display = t ? "block" : "none"
        },
        bringToFront: function bringToFront(e) {
            if (this.__callqueue[e]) {
                this.__callqueue[e].push(["bringToFront", e]);
                return
            }
            var t = lz.embed.iframemanager.getFrame(e);
            if (!t) {
                return
            }
            t._defaultz = 1e5;
            this.setZ(e, t._defaultz);
            lz.embed.iframemanager.__topiframe = e
        },
        sendToBack: function sendToBack(e) {
            if (this.__callqueue[e]) {
                this.__callqueue[e].push(["sendToBack", e]);
                return
            }
            var t = lz.embed.iframemanager.getFrame(e);
            if (!t) {
                return
            }
            t._defaultz = 99900;
            this.setZ(e, t._defaultz)
        },
        __gotload: function __gotload(e) {
            var t = lz.embed.iframemanager.getFrame(e);
            if (!t) {
                return
            }
            if (t.owner && t.owner.__gotload) {
                t.owner.__gotload()
            } else {
                lz.embed[t.owner].callMethod("lz.embed.iframemanager.__gotload('" + e + "')")
            }
            this.__loading[e] = !1;
            if (this.__sendmouseevents[e]) {
                this.__setSendMouseEvents(e, !0)
            }
            if (this.__calljsqueue[e]) {
                this.__playQueue(this.__calljsqueue[e]);
                delete this.__calljsqueue[e]
            }
        },
        __refresh: function __refresh() {
            if (lz.embed.iframemanager.__topiframe) {
                var e = lz.embed.iframemanager.getFrame(lz.embed.iframemanager.__topiframe);
                if ("block" == e.style.display) {
                    e.style.display = "none";
                    e.style.display = "block"
                }
            }
        },
        setZ: function setZ(e, t) {
            if (this.__callqueue[e]) {
                this.__callqueue[e].push(["setZ", e, t]);
                return
            }
            var n = lz.embed.iframemanager.getFrame(e);
            if (!n) {
                return
            }
            n.style.zIndex = t
        },
        scrollBy: function scrollBy(e, t, n) {
            if (this.__callqueue[e]) {
                this.__callqueue[e].push(["scrollBy", e, t, n]);
                return
            }
            var e = lz.embed.iframemanager.__namebyid[e],
                a = window.frames[e];
            if (!a) {
                return
            }
            a.scrollBy(t, n)
        },
        __destroy: function __destroy(e) {
            if (this.__callqueue[e]) {
                this.__callqueue[e].push(["__destroy", e]);
                return
            }
            var t = lz.embed.iframemanager.__frames[e];
            if (t) {
                this.__setSendMouseEvents(e, !1);
                t.owner = null;
                t.appcontainer = null;
                LzSprite.prototype.__discardElement(t);
                delete lz.embed.iframemanager.__frames[e];
                delete lz.embed.iframemanager.__namebyid[e]
            }
        },
        callJavascript: function callJavascript(e, t, n, a) {
            if (this.__callqueue[e]) {
                this.__callqueue[e].push(["callJavascript", e, t, n, a]);
                return
            }
            if (this.__loading[e]) {
                if (!this.__calljsqueue[e]) {
                    this.__calljsqueue[e] = []
                }
                this.__calljsqueue[e].push(["callJavascript", e, t, n, a]);
                return
            }
            var r = lz.embed.iframemanager.getFrameWindow(e);
            if (!a) {
                a = []
            }
            try {
                var s = r.eval(t);
                if (s) {
                    var i = s.apply(r, a);
                    if (n) {
                        n.execute(i)
                    }
                    return i
                }
            } catch (t) {}
        },
        __globalMouseover: function __globalMouseover(e, t) {
            var n = lz.embed.iframemanager.getFrame(t);
            if (!n) {
                return
            }
            e = window.event;
            if (n.owner && n.owner.sprite) {
                if (e.toElement && "IFRAME" != e.toElement.nodeName) {
                    LzMouseKernel.__resetMouse()
                }
            }
        },
        __mouseEvent: function __mouseEvent(e, t) {
            var n = lz.embed,
                a = n.iframemanager.getFrame(t);
            if (!a) {
                return
            }
            if (!e) {
                e = window.event
            }
            var r = "on" + e.type;
            if (a.owner && a.owner.sprite && a.owner.sprite.__mouseEvent) {
                if ("oncontextmenu" == r) {
                    if (!n.iframemanager.__hidenativecontextmenu[t]) {
                        return
                    } else {
                        var s = n.getAbsolutePosition(a);
                        LzMouseKernel.__sendMouseMove(e, s.x, s.y);
                        return LzMouseKernel.__showContextMenu(e)
                    }
                }
                a.owner.sprite.__mouseEvent(e);
                if ("onmouseup" == r) {
                    if (LzMouseKernel.__lastMouseDown == a.owner.sprite) {
                        LzMouseKernel.__lastMouseDown = null
                    }
                }
            } else {
                if ("onmouseleave" == r) {
                    r = "onmouseout"
                } else {
                    if ("onmouseenter" == r) {
                        r = "onmouseover"
                    } else {
                        if ("oncontextmenu" == r) {
                            return
                        }
                    }
                }
                n[a.owner].callMethod("lz.embed.iframemanager.__gotMouseEvent('" + t + "','" + r + "')")
            }
        },
        setSendMouseEvents: function setSendMouseEvents(e, t) {
            if (this.__callqueue[e]) {
                this.__callqueue[e].push(["setSendMouseEvents", e, t]);
                return
            }
            this.__sendmouseevents[e] = t
        },
        __setSendMouseEvents: function __setSendMouseEvents(e, t) {
            var n = lz.embed.iframemanager.getFrameWindow(e);
            if (!n) {
                return
            }
            if (t) {
                if (lz.embed.browser.isIE) {
                    lz.embed.attachEventHandler(document, "mouseover", lz.embed.iframemanager, "__globalMouseover", e)
                }
                try {
                    lz.embed.attachEventHandler(n.document, "mousedown", lz.embed.iframemanager, "__mouseEvent", e);
                    lz.embed.attachEventHandler(n.document, "mouseup", lz.embed.iframemanager, "__mouseEvent", e);
                    lz.embed.attachEventHandler(n.document, "click", lz.embed.iframemanager, "__mouseEvent", e);
                    n.document.oncontextmenu = function(t) {
                        if (!t) {
                            t = n.event
                        }
                        return lz.embed.iframemanager.__mouseEvent(t, e)
                    };
                    if (lz.embed.browser.isIE) {
                        lz.embed.attachEventHandler(n.document, "mouseenter", lz.embed.iframemanager, "__mouseEvent", e);
                        lz.embed.attachEventHandler(n.document, "mouseleave", lz.embed.iframemanager, "__mouseEvent", e)
                    } else {
                        lz.embed.attachEventHandler(n.document, "mouseover", lz.embed.iframemanager, "__mouseEvent", e);
                        lz.embed.attachEventHandler(n.document, "mouseout", lz.embed.iframemanager, "__mouseEvent", e)
                    }
                } catch (t) {}
            } else {
                if (lz.embed.browser.isIE) {
                    lz.embed.removeEventHandler(document, "mouseover", lz.embed.iframemanager, "__globalMouseover")
                }
                try {
                    lz.embed.removeEventHandler(n.document, "mousedown", lz.embed.iframemanager, "__mouseEvent");
                    lz.embed.removeEventHandler(n.document, "mouseup", lz.embed.iframemanager, "__mouseEvent");
                    lz.embed.removeEventHandler(n.document, "click", lz.embed.iframemanager, "__mouseEvent");
                    n.document.oncontextmenu = null;
                    if (lz.embed.browser.isIE) {
                        lz.embed.removeEventHandler(n.document, "mouseenter", lz.embed.iframemanager, "__mouseEvent");
                        lz.embed.removeEventHandler(n.document, "mouseleave", lz.embed.iframemanager, "__mouseEvent")
                    } else {
                        lz.embed.removeEventHandler(n.document, "mouseover", lz.embed.iframemanager, "__mouseEvent");
                        lz.embed.removeEventHandler(n.document, "mouseout", lz.embed.iframemanager, "__mouseEvent")
                    }
                } catch (t) {}
            }
        },
        setShowNativeContextMenu: function setShowNativeContextMenu(e, t) {
            this.__hidenativecontextmenu[e] = !t
        },
        storeSelection: function storeSelection(e) {
            var t = lz.embed.iframemanager,
                n = t.getFrameWindow(e);
            if (n && n.document && n.document.selection && "Text" == n.document.selection.type) {
                t.__selectionbookmarks[e] = n.document.selection.createRange().getBookmark()
            }
        },
        restoreSelection: function restoreSelection(e) {
            var t = lz.embed.iframemanager,
                n = t.getFrameWindow(e);
            if (t.__selectionbookmarks[e] && n) {
                var a = t.__selectionbookmarks[e],
                    r = n.document.body.createTextRange();
                r.moveToBookmark(a);
                r.select()
            }
        }
    };
    lz.embed.mousewheel = {
        __mousewheelEvent: function __mousewheelEvent(e) {
            if (!e) {
                e = window.event
            }
            var t = 0;
            if (e.wheelDelta) {
                t = e.wheelDelta / 120;
                if (lz.embed.browser.isOpera) {
                    t = -t
                }
            } else {
                if (e.detail) {
                    t = -e.detail / 3
                }
            }
            if (e.preventDefault) {
                e.preventDefault()
            }
            e.returnValue = !1;
            var n = lz.embed.mousewheel.__callbacks.length;
            if (null != t && 0 < n) {
                for (var a = 0; a < n; a += 2) {
                    var r = lz.embed.mousewheel.__callbacks[a],
                        s = lz.embed.mousewheel.__callbacks[a + 1];
                    if (r && r[s]) {
                        r[s](t)
                    }
                }
            }
        },
        __callbacks: [],
        setCallback: function setCallback(e, t) {
            var n = lz && lz.embed && lz.embed.options && !0 != lz.embed.options.cancelkeyboardcontrol || !0;
            if (0 == lz.embed.mousewheel.__callbacks.length && n) {
                if (window.addEventListener) {
                    lz.embed.attachEventHandler(window, "DOMMouseScroll", lz.embed.mousewheel, "__mousewheelEvent")
                }
                lz.embed.attachEventHandler(document, "mousewheel", lz.embed.mousewheel, "__mousewheelEvent")
            }
            lz.embed.mousewheel.__callbacks.push(e, t)
        }
    };
    lz.embed.history = {
        active: null,
        _currentstate: null,
        _apps: [],
        _intervalID: null,
        _registeredapps: {},
        intervaltime: 200,
        init: function init() {
            var e = lz.embed.history;
            if (e.active || !1 == e.active) {
                return
            }
            e.active = !0;
            e._title = top.document.title;
            var t = e.get();
            if (lz.embed.browser.isSafari) {
                e._historylength = history.length;
                e._history = [];
                for (var n = 1; n < e._historylength; n++) {
                    e._history.push("")
                }
                e._history.push(t);
                var a = document.createElement("form");
                a.method = "get";
                document.body.appendChild(a);
                e._form = a;
                if (!top.document.location.lzaddr) {
                    top.document.location.lzaddr = {}
                }
                if (top.document.location.lzaddr.history) {
                    e._history = top.document.location.lzaddr.history.split(",")
                }
                if ("" != t) {
                    e.set(t)
                }
            } else {
                if (lz.embed.browser.isIE) {
                    var t = top.location.hash;
                    if (t) {
                        t = t.substring(1)
                    }
                    var n = document.createElement("iframe");
                    lz.embed.__setAttr(n, "id", "lzHistory");
                    lz.embed.__setAttr(n, "frameborder", "no");
                    lz.embed.__setAttr(n, "scrolling", "no");
                    lz.embed.__setAttr(n, "width", "0");
                    lz.embed.__setAttr(n, "height", "0");
                    lz.embed.__setAttr(n, "src", "javascript:\"\"");
                    document.body.appendChild(n);
                    n = document.getElementById("lzHistory");
                    e._iframe = n;
                    n.style.display = "none";
                    n.style.position = "absolute";
                    n.style.left = "-999px";
                    var r = n.contentDocument || n.contentWindow.document;
                    r.open();
                    r.close();
                    if ("" != t) {
                        r.location.hash = "#" + t;
                        e._parse(t)
                    }
                } else {
                    if ("" != t) {
                        e._parse(t);
                        e._currentstate = t
                    }
                }
            }
            if (null != e._intervalID) {
                clearInterval(e._intervalID)
            }
            if (0 < e.intervaltime) {
                e._intervalID = setInterval("lz.embed.history._checklocationhash()", e.intervaltime)
            }
        },
        listen: function listen(e) {
            if ("string" == typeof e) {
                e = lz.embed.applications[e];
                if (!e || !e.runtime) {
                    return
                }
            }
            if (!e) {
                return
            }
            var t = lz.embed.history;
            if (t._registeredapps[e._id]) {
                return
            }
            t._registeredapps[e.id] = !0;
            t._apps.push(e);
            t.init()
        },
        _checklocationhash: function _checklocationhash() {
            if (lz.embed.dojo && lz.embed.dojo.info && lz.embed.dojo.info.installing) {
                return
            }
            if (lz.embed.browser.isSafari) {
                var e = this._history[this._historylength - 1];
                if ("" == e || "#" == e) {
                    e = "#0"
                }
                if (!this._skip && this._historylength != history.length) {
                    this._historylength = history.length;
                    if ("undefined" != typeof e) {
                        e = e.substring(1);
                        this._currentstate = e;
                        this._parse(e)
                    }
                } else {
                    this._parse(e.substring(1))
                }
            } else {
                var e = lz.embed.history.get();
                if ("" == e) {
                    e = "0"
                }
                if (lz.embed.browser.isIE) {
                    if (e != this._currentstate) {
                        top.location.hash = "0" == e ? "" : "#" + e;
                        this._currentstate = e;
                        this._parse(e)
                    }
                    if (top.document.title != this._title) {
                        top.document.title = this._title
                    }
                } else {
                    this._currentstate = e;
                    this._parse(e)
                }
            }
        },
        set: function set(e) {
            if (!1 == lz.embed.history.active) {
                return
            }
            if (null == e) {
                e = ""
            }
            if (lz.embed.history._currentstate == e) {
                return
            }
            lz.embed.history._currentstate = e;
            var t = "#" + e;
            if (lz.embed.browser.isIE) {
                top.location.hash = "#0" == t ? "" : t;
                var n = lz.embed.history._iframe.contentDocument || lz.embed.history._iframe.contentWindow.document;
                n.open();
                n.close();
                n.location.hash = t;
                lz.embed.history._parse(e + "")
            } else {
                if (lz.embed.browser.isSafari) {
                    lz.embed.history._history[history.length] = t;
                    lz.embed.history._historylength = history.length + 1;
                    if (412 > lz.embed.browser.version) {
                        if ("" == top.location.search) {
                            lz.embed.history._form.action = t;
                            top.document.location.lzaddr.history = lz.embed.history._history.toString();
                            lz.embed.history._skip = !0;
                            lz.embed.history._form.submit();
                            lz.embed.history._skip = !1
                        }
                    } else {
                        var a = document.createEvent("MouseEvents");
                        a.initEvent("click", !0, !0);
                        var r = document.createElement("a");
                        r.href = t;
                        r.dispatchEvent(a)
                    }
                } else {
                    top.location.hash = t;
                    lz.embed.history._parse(e + "")
                }
            }
            return !0
        },
        get: function get() {
            var e = "";
            if (lz.embed.browser.isIE) {
                if (lz.embed.history._iframe) {
                    var t = lz.embed.history._iframe.contentDocument || lz.embed.history._iframe.contentWindow.document;
                    e = t.location.hash
                }
            } else {
                e = top.location.href
            }
            var n = e.indexOf("#");
            if (-1 != n) {
                return e.substring(n + 1)
            }
            return ""
        },
        _parse: function _parse(e) {
            var t = lz.embed.history;
            if (0 == e.length) {
                return
            }
            for (var n = 0, a = lz.embed.history._apps.length, r; n < a; n++) {
                r = lz.embed.history._apps[n];
                if (!r.loaded || r._lasthash == e) {
                    continue
                }
                r._lasthash = e;
                if (-1 != e.indexOf("_lz")) {
                    e = e.substring(3);
                    for (var s = e.split(","), i = 0; i < s.length; i++) {
                        var o = s[i],
                            d = o.indexOf("="),
                            l = unescape(o.substring(0, d)),
                            m = unescape(o.substring(d + 1));
                        lz.embed.setCanvasAttribute(l, m);
                        if (window.canvas) {
                            canvas.setAttribute(l, m)
                        }
                    }
                } else {
                    if ("swf" == r.runtime) {
                        t.__setFlash(e, r._id)
                    } else {
                        if (window.lz && lz.History && lz.History.isReady && lz.History.receiveHistory) {
                            lz.History.receiveHistory(e)
                        }
                    }
                }
            }
        },
        _store: function _store(e, t) {
            if (e instanceof Object) {
                var n = "";
                for (var a in e) {
                    if ("" != n) {
                        n += ","
                    }
                    n += escape(a) + "=" + escape(e[a])
                }
            } else {
                var n = escape(e) + "=" + escape(t)
            }
            this.set("_lz" + n)
        },
        __setFlash: function __setFlash(e, t) {
            var n = lz.embed[t];
            if (n && n.loaded && "swf" == n.runtime) {
                var a = n._getSWFDiv();
                if (a) {
                    n.callMethod("lz.History.receiveHistory(" + e + ")");
                    n._lasthash = e
                }
            }
        }
    };
    if (lz.embed.browser.isFirefox) {
        window.onunload = function() {}
    }
    lz.embed.regex = {
        cache: {},
        create: function create(e, t, n) {
            try {
                var a = lz.embed.regex;
                a.cache[e] = new RegExp(a.unmask(t), a.unmask(n));
                return !0
            } catch (t) {
                return t.name + ": " + t.message
            }
        },
        test: function test(e, t, n) {
            var a = lz.embed.regex,
                r = a.cache[e];
            r.lastIndex = n;
            return [r.test(a.unmask(t)), r.lastIndex]
        },
        exec: function exec(e, t, n) {
            var a = lz.embed.regex,
                r = a.cache[e];
            r.lastIndex = n;
            var s = r.exec(a.unmask(t));
            if (s) {
                (s = a.maskArr(s)).push(s.index, r.lastIndex);
                return s
            } else {
                return null
            }
        },
        match: function match(e, t) {
            var n = lz.embed.regex,
                a = n.unmask(t).match(n.cache[e]);
            return a ? n.maskArr(a) : null
        },
        replace: function replace(e, t, n) {
            var a = lz.embed.regex;
            return a.mask(a.unmask(t).replace(a.cache[e], a.unmask(n)))
        },
        search: function search(e, t) {
            var n = lz.embed.regex;
            return n.unmask(t).search(n.cache[e])
        },
        split: function split(e, t, n) {
            var a = lz.embed.regex;
            return a.maskArr(a.unmask(t).split(a.cache[e], n))
        },
        remove: function remove(e) {
            delete lz.embed.regex.cache[e]
        },
        mask: function mask(e) {
            var t = /^\s*$/,
                n = /\s/g;
            return null == e || !t.test(e) ? e : "__#lznull" + e.replace(n, function(e) {
                switch (e) {
                    case " ":
                        return "w";
                    case "\f":
                        return "f";
                    case "\n":
                        return "n";
                    case "\r":
                        return "r";
                    case "\t":
                        return "t";
                    case "\xA0":
                        return "s";
                    case "\u2028":
                        return "l";
                    case "\u2029":
                        return "p";
                }
            })
        },
        unmask: function unmask(e) {
            return "__#lznull" == e ? "" : e
        },
        maskArr: function maskArr(e) {
            for (var t = lz.embed.regex, n = 0; n < e.length; ++n) {
                e[n] = t.mask(e[n])
            }
            return e
        }
    };
    return lz
});
define("filter_poodll/upskin_text", ["jquery", "core/log"], function(a, b) {
    "use strict";
    b.debug("upskin_text: initialising");
    return {
        element: null,
        cvs: null,
        cvsctx: null,
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        init: function init(a, b, c, d) {
            this.config = a;
            this.element = b;
            this.cvs = c;
            this.messagearea = d
        },
        initControls: function initControls() {},
        initProgressSession: function initProgressSession(a) {
            var b = this;
            b.percent = 0;
            var c = M.util.get_string("recui_uploading", "filter_poodll");
            a.upload.addEventListener("progress", function(a) {
                if (a.lengthComputable) {
                    b.percent = a.loaded / a.total;
                    b.showMessage(c + "(" + Math.floor(100 * b.percent) + "%)")
                }
            })
        },
        deactivateProgressSession: function deactivateProgressSession() {
            b.debug("deactivating session")
        },
        showMessage: function showMessage(a) {
            this.messagearea.html(a)
        }
    }
});
define("filter_poodll/modal_dialogue", ["jquery", "core/log", "filter_poodll/dlg_devicesettings"], function(a, b, c) {
    "use strict";
    b.debug("Modal Progress: initialising");
    return {
        init: function init() {},
        fetch_icon: function fetch_icon(a) {
            return "<div class=\"setting\" id=\"setting_" + a + "\"><button type=\"button\" class=\"btn btn-info btn-lg\" data-toggle=\"modal\" data-target=\"#myModal\"><i class=\"fa fa-cogs\" aria-hidden=\"true\"></i></button></div>"
        },
        test: function test() {
            console.log(c.init())
        },
        fetch_dialogue_box: function fetch_dialogue_box(a) {
            return "<div class=\"poodll_dialogue_box " + a + "\"><div class=\"poodll_close_modal\"><i class=\"fa fa-window-close\" aria-hidden=\"true\"></div></i><div class=\"poodll_dialogue_content\"><p>Poodll Dialogue box</p></div></div>"
        }
    }
});

function _typeof(a) {
    if ("function" == typeof Symbol && "symbol" == typeof Symbol.iterator) {
        _typeof = function(a) {
            return typeof a
        }
    } else {
        _typeof = function(a) {
            return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
        }
    }
    return _typeof(a)
}
define("filter_poodll/drawingboard", [], function() {
    var a = {};
    a.Board = function(b, c) {
        this.opts = $.extend({}, a.Board.defaultOpts, c);
        this.ev = new a.Utils.MicroEvent;
        this.id = b;
        this.$el = $(document.getElementById(b));
        if (!this.$el.length) return !1;
        var d = "<div class=\"drawing-board-canvas-wrapper\"></canvas><canvas class=\"drawing-board-canvas\"></canvas><div class=\"drawing-board-cursor drawing-board-utils-hidden\"></div></div>";
        if (-1 < this.opts.controlsPosition.indexOf("bottom")) d += "<div class=\"drawing-board-controls\"></div>";
        else d = "<div class=\"drawing-board-controls\"></div>" + d;
        this.$el.addClass("drawing-board").append(d);
        this.dom = {
            $canvasWrapper: this.$el.find(".drawing-board-canvas-wrapper"),
            $canvas: this.$el.find(".drawing-board-canvas"),
            $cursor: this.$el.find(".drawing-board-cursor"),
            $controls: this.$el.find(".drawing-board-controls")
        };
        $.each(["left", "right", "center"], $.proxy(function(a, b) {
            if (-1 < this.opts.controlsPosition.indexOf(b)) {
                this.dom.$controls.attr("data-align", b);
                return !1
            }
        }, this));
        this.canvas = this.dom.$canvas.get(0);
        this.ctx = this.canvas && this.canvas.getContext && this.canvas.getContext("2d") ? this.canvas.getContext("2d") : null;
        this.color = this.opts.color;
        if (!this.ctx) {
            if (this.opts.errorMessage) this.$el.html(this.opts.errorMessage);
            return !1
        }
        this.storage = this._getStorage();
        this.initHistory();
        this.reset({
            webStorage: !1,
            history: !1,
            background: !1
        });
        this.initControls();
        this.resize();
        this.reset({
            webStorage: !1,
            history: !0,
            background: !0
        });
        this.restoreWebStorage();
        this.initDropEvents();
        this.initDrawEvents()
    };
    a.Board.defaultOpts = {
        controls: ["Color", "DrawingMode", "Size", "Navigation"],
        controlsPosition: "top left",
        color: "#000000",
        size: 1,
        background: "#fff",
        eraserColor: "background",
        webStorage: "session",
        droppable: !1,
        enlargeYourContainer: !1,
        errorMessage: "<p>It seems you use an obsolete browser. <a href=\"http://browsehappy.com/\" target=\"_blank\">Update it</a> to start drawing.</p>"
    };
    a.Board.prototype = {
        reset: function reset(a) {
            a = $.extend({
                color: this.opts.color,
                size: this.opts.size,
                webStorage: !0,
                history: !0,
                background: !1
            }, a);
            this.setMode("pencil");
            if (a.background) this.resetBackground(this.opts.background, !1);
            if (a.color) this.setColor(a.color);
            if (a.size) this.ctx.lineWidth = a.size;
            this.ctx.lineCap = "round";
            this.ctx.lineJoin = "round";
            if (a.webStorage) this.saveWebStorage();
            if (a.history) this.saveHistory();
            this.blankCanvas = this.getImg();
            this.ev.trigger("board:reset", a)
        },
        resetBackground: function resetBackground(b, c) {
            b = b || this.opts.background;
            c = "undefined" != typeof c ? c : !0;
            var d = a.Utils.isColor(b),
                e = this.getMode();
            this.setMode("pencil");
            this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.width);
            if (d) {
                this.ctx.fillStyle = b;
                this.ctx.fillRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height)
            } else if (b) this.setImg(b);
            this.setMode(e);
            if (c) this.saveHistory()
        },
        resize: function resize() {
            this.dom.$controls.toggleClass("drawing-board-controls-hidden", !this.controls || !this.controls.length);
            var b, c, d = [this.$el.width(), a.Utils.boxBorderWidth(this.$el), a.Utils.boxBorderWidth(this.dom.$canvasWrapper, !0, !0)],
                e = [this.$el.height(), a.Utils.boxBorderHeight(this.$el), this.dom.$controls.height(), a.Utils.boxBorderHeight(this.dom.$controls, !1, !0), a.Utils.boxBorderHeight(this.dom.$canvasWrapper, !0, !0)],
                f = this,
                g = function(a, b) {
                    b = b || 1;
                    for (var c = a[0], d = 1; d < a.length; d++) {
                        c = c + a[d] * b
                    }
                    return c
                },
                h = function(a) {
                    return g(a, -1)
                };
            if (this.opts.enlargeYourContainer) {
                b = this.$el.width();
                c = this.$el.height();
                this.$el.width(g(d));
                this.$el.height(g(e))
            } else {
                b = h(d);
                c = h(e)
            }
            this.dom.$canvasWrapper.css("width", b + "px");
            this.dom.$canvasWrapper.css("height", c + "px");
            this.dom.$canvas.css("width", b + "px");
            this.dom.$canvas.css("height", c + "px");
            this.canvas.width = b;
            this.canvas.height = c
        },
        initControls: function initControls() {
            this.controls = [];
            if (!this.opts.controls.length || !a.Control) return !1;
            for (var b = 0, d; b < this.opts.controls.length; b++) {
                d = null;
                if ("string" == typeof this.opts.controls[b]) d = new window.DrawingBoard.Control[this.opts.controls[b]](this);
                else if ("object" == _typeof(this.opts.controls[b])) {
                    for (var e in this.opts.controls[b]) {
                        break
                    }
                    d = new window.DrawingBoard.Control[e](this, this.opts.controls[b][e])
                }
                if (d) {
                    this.addControl(d)
                }
            }
        },
        addControl: function addControl(b, c, d) {
            if ("string" != typeof b && ("object" !== _typeof(b) || !b instanceof a.Control)) return !1;
            var e = "object" == _typeof(c) ? c : {};
            d = d ? 1 * d : "number" == typeof c ? c : null;
            if ("string" == typeof b) b = new window.DrawingBoard.Control[b](this, e);
            if (d) this.dom.$controls.children().eq(d).before(b.$el);
            else this.dom.$controls.append(b.$el);
            if (!this.controls) this.controls = [];
            this.controls.push(b);
            this.dom.$controls.removeClass("drawing-board-controls-hidden")
        },
        initHistory: function initHistory() {
            this.history = {
                values: [],
                position: 0
            }
        },
        saveHistory: function saveHistory() {
            while (30 < this.history.values.length) {
                this.history.values.shift();
                this.history.position--
            }
            if (0 !== this.history.position && this.history.position < this.history.values.length) {
                this.history.values = this.history.values.slice(0, this.history.position);
                this.history.position++
            } else {
                this.history.position = this.history.values.length + 1
            }
            this.history.values.push(this.getImg());
            this.ev.trigger("historyNavigation", this.history.position)
        },
        _goThroughHistory: function _goThroughHistory(a) {
            if (a && this.history.position == this.history.values.length || !a && 1 == this.history.position) return;
            var b = a ? this.history.position + 1 : this.history.position - 1;
            if (this.history.values.length && this.history.values[b - 1] !== void 0) {
                this.history.position = b;
                this.setImg(this.history.values[b - 1])
            }
            this.ev.trigger("historyNavigation", b);
            this.saveWebStorage()
        },
        goBackInHistory: function goBackInHistory() {
            this._goThroughHistory(!1)
        },
        goForthInHistory: function goForthInHistory() {
            this._goThroughHistory(!0)
        },
        setImg: function setImg(a) {
            var b = this.ctx,
                c = new Image,
                d = b.globalCompositeOperation;
            c.onload = function() {
                b.globalCompositeOperation = "source-over";
                b.clearRect(0, 0, b.canvas.width, b.canvas.width);
                b.drawImage(c, 0, 0);
                b.globalCompositeOperation = d
            };
            c.src = a
        },
        getImg: function getImg() {
            return this.canvas.toDataURL("image/png")
        },
        downloadImg: function downloadImg() {
            var a = this.getImg();
            a = a.replace("image/png", "image/octet-stream");
            window.location.href = a
        },
        saveWebStorage: function saveWebStorage() {
            if (window[this.storage]) {
                window[this.storage].setItem("drawing-board-" + this.id, this.getImg());
                this.ev.trigger("board:save" + this.storage.charAt(0).toUpperCase() + this.storage.slice(1), this.getImg())
            }
        },
        restoreWebStorage: function restoreWebStorage() {
            if (window[this.storage] && null !== window[this.storage].getItem("drawing-board-" + this.id)) {
                this.setImg(window[this.storage].getItem("drawing-board-" + this.id));
                this.ev.trigger("board:restore" + this.storage.charAt(0).toUpperCase() + this.storage.slice(1), window[this.storage].getItem("drawing-board-" + this.id))
            }
        },
        clearWebStorage: function clearWebStorage() {
            if (window[this.storage] && null !== window[this.storage].getItem("drawing-board-" + this.id)) {
                window[this.storage].removeItem("drawing-board-" + this.id);
                this.ev.trigger("board:clear" + this.storage.charAt(0).toUpperCase() + this.storage.slice(1))
            }
        },
        _getStorage: function _getStorage() {
            if (!this.opts.webStorage || !("session" === this.opts.webStorage || "local" === this.opts.webStorage)) return !1;
            return this.opts.webStorage + "Storage"
        },
        initDropEvents: function initDropEvents() {
            if (!this.opts.droppable) return !1;
            this.dom.$canvas.on("dragover dragenter drop", function(a) {
                a.stopPropagation();
                a.preventDefault()
            });
            this.dom.$canvas.on("drop", $.proxy(this._onCanvasDrop, this))
        },
        _onCanvasDrop: function _onCanvasDrop(a) {
            a = a.originalEvent ? a.originalEvent : a;
            var b = a.dataTransfer.files;
            if (!b || !b.length || -1 == b[0].type.indexOf("image") || !window.FileReader) return !1;
            var c = new FileReader;
            c.readAsDataURL(b[0]);
            c.onload = $.proxy(function(a) {
                this.setImg(a.target.result);
                this.ev.trigger("board:imageDropped", a.target.result);
                this.ev.trigger("board:userAction");
                this.saveHistory()
            }, this)
        },
        setMode: function setMode(b, c) {
            c = c || !1;
            b = b || "pencil";
            this.ev.unbind("board:startDrawing", $.proxy(this.fill, this));
            if ("transparent" === this.opts.eraserColor) this.ctx.globalCompositeOperation = "eraser" === b ? "destination-out" : "source-over";
            else {
                if ("eraser" === b) {
                    if ("background" === this.opts.eraserColor && a.Utils.isColor(this.opts.background)) this.ctx.strokeStyle = this.opts.background;
                    else if (a.Utils.isColor(this.opts.eraserColor)) this.ctx.strokeStyle = this.opts.eraserColor
                } else if (!this.mode || "eraser" === this.mode) {
                    this.ctx.strokeStyle = this.color
                }
                if ("filler" === b) this.ev.bind("board:startDrawing", $.proxy(this.fill, this))
            }
            this.mode = b;
            if (!c) this.ev.trigger("board:mode", this.mode)
        },
        getMode: function getMode() {
            return this.mode || "pencil"
        },
        setColor: function setColor(b) {
            var c = this;
            b = b || this.color;
            if (!a.Utils.isColor(b)) return !1;
            this.color = b;
            if ("transparent" !== this.opts.eraserColor && "eraser" === this.mode) {
                var d = function(a) {
                    if ("eraser" !== a) c.strokeStyle = c.color;
                    c.ev.unbind("board:mode", d)
                };
                this.ev.bind("board:mode", d)
            } else this.ctx.strokeStyle = this.color
        },
        fill: function fill(c) {
            if (this.getImg() === this.blankCanvas) {
                this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.width);
                this.ctx.fillStyle = this.color;
                this.ctx.fillRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);
                return
            }
            var d = this.ctx.getImageData(0, 0, this.canvas.width, this.canvas.height),
                e = 0,
                f = 1,
                h = 2,
                i = 3,
                j = this.ctx.strokeStyle,
                k = parseInt(j.substr(1, 2), 16),
                l = parseInt(j.substr(3, 2), 16),
                g = parseInt(j.substr(5, 2), 16),
                b = a.Utils.pixelAt(d, parseInt(c.coords.x, 10), parseInt(c.coords.y, 10));
            if (b[i] === a.Utils.RGBToInt(k, l, g)) return;
            var m = [b],
                n, o = d.width - 1,
                p = d.height - 1;
            while (n = m.pop()) {
                if (n[i] === b[i]) {
                    d.data[n[e]] = k;
                    d.data[n[e] + 1] = l;
                    d.data[n[e] + 2] = g;
                    if (0 < n[f]) m.push(a.Utils.pixelAt(d, n[f] - 1, n[h]));
                    if (n[f] < o) m.push(a.Utils.pixelAt(d, n[f] + 1, n[h]));
                    if (0 < n[h]) m.push(a.Utils.pixelAt(d, n[f], n[h] - 1));
                    if (n[h] < p) m.push(a.Utils.pixelAt(d, n[f], n[h] + 1))
                }
            }
            this.ctx.putImageData(d, 0, 0)
        },
        initDrawEvents: function initDrawEvents() {
            this.isDrawing = !1;
            this.isMouseHovering = !1;
            this.coords = {};
            this.coords.old = this.coords.current = this.coords.oldMid = {
                x: 0,
                y: 0
            };
            this.dom.$canvas.on("mousedown touchstart", $.proxy(function(a) {
                this._onInputStart(a, this._getInputCoords(a))
            }, this));
            this.dom.$canvas.on("mousemove touchmove", $.proxy(function(a) {
                this._onInputMove(a, this._getInputCoords(a))
            }, this));
            this.dom.$canvas.on("mousemove", $.proxy(function() {}, this));
            this.dom.$canvas.on("mouseup touchend", $.proxy(function(a) {
                this._onInputStop(a, this._getInputCoords(a))
            }, this));
            this.dom.$canvas.on("mouseover", $.proxy(function(a) {
                this._onMouseOver(a, this._getInputCoords(a))
            }, this));
            this.dom.$canvas.on("mouseout", $.proxy(function(a) {
                this._onMouseOut(a, this._getInputCoords(a))
            }, this));
            $("body").on("mouseup touchend", $.proxy(function() {
                this.isDrawing = !1
            }, this));
            if (window.requestAnimationFrame) requestAnimationFrame($.proxy(this.draw, this))
        },
        draw: function draw() {
            if (window.requestAnimationFrame && 10 < this.ctx.lineWidth && this.isMouseHovering) {
                this.dom.$cursor.css({
                    width: this.ctx.lineWidth + "px",
                    height: this.ctx.lineWidth + "px"
                });
                var b = a.Utils.tpl("translateX({{x}}px) translateY({{y}}px)", {
                    x: this.coords.current.x - this.ctx.lineWidth / 2,
                    y: this.coords.current.y - this.ctx.lineWidth / 2
                });
                this.dom.$cursor.css({
                    transform: b,
                    "-webkit-transform": b,
                    "-ms-transform": b
                });
                this.dom.$cursor.removeClass("drawing-board-utils-hidden")
            } else {
                this.dom.$cursor.addClass("drawing-board-utils-hidden")
            }
            if (this.isDrawing) {
                var c = this._getMidInputCoords(this.coords.current);
                this.ctx.beginPath();
                this.ctx.moveTo(c.x, c.y);
                this.ctx.quadraticCurveTo(this.coords.old.x, this.coords.old.y, this.coords.oldMid.x, this.coords.oldMid.y);
                this.ctx.stroke();
                this.coords.old = this.coords.current;
                this.coords.oldMid = c
            }
            if (window.requestAnimationFrame) requestAnimationFrame($.proxy(function() {
                this.draw()
            }, this))
        },
        _onInputStart: function _onInputStart(a, b) {
            this.coords.current = this.coords.old = b;
            this.coords.oldMid = this._getMidInputCoords(b);
            this.isDrawing = !0;
            if (!window.requestAnimationFrame) this.draw();
            this.ev.trigger("board:startDrawing", {
                e: a,
                coords: b
            });
            a.preventDefault()
        },
        _onInputMove: function _onInputMove(a, b) {
            this.coords.current = b;
            this.ev.trigger("board:drawing", {
                e: a,
                coords: b
            });
            if (!window.requestAnimationFrame) this.draw();
            a.preventDefault()
        },
        _onInputStop: function _onInputStop(a, b) {
            if (this.isDrawing && (!a.touches || 0 === a.touches.length)) {
                this.isDrawing = !1;
                this.saveWebStorage();
                this.saveHistory();
                this.ev.trigger("board:stopDrawing", {
                    e: a,
                    coords: b
                });
                this.ev.trigger("board:userAction");
                a.preventDefault()
            }
        },
        _onMouseOver: function _onMouseOver(a, b) {
            this.isMouseHovering = !0;
            this.coords.old = this._getInputCoords(a);
            this.coords.oldMid = this._getMidInputCoords(this.coords.old);
            this.ev.trigger("board:mouseOver", {
                e: a,
                coords: b
            })
        },
        _onMouseOut: function _onMouseOut(a, b) {
            this.isMouseHovering = !1;
            this.ev.trigger("board:mouseOut", {
                e: a,
                coords: b
            })
        },
        _getInputCoords: function _getInputCoords(a) {
            a = a.originalEvent ? a.originalEvent : a;
            var b, c;
            if (a.touches && 1 == a.touches.length) {
                b = a.touches[0].pageX;
                c = a.touches[0].pageY
            } else {
                b = a.pageX;
                c = a.pageY
            }
            return {
                x: b - this.dom.$canvas.offset().left,
                y: c - this.dom.$canvas.offset().top
            }
        },
        _getMidInputCoords: function _getMidInputCoords(a) {
            return {
                x: this.coords.old.x + a.x >> 1,
                y: this.coords.old.y + a.y >> 1
            }
        }
    };
    a.Control = function(a, b) {
        this.board = a;
        this.opts = $.extend({}, this.defaults, b);
        this.$el = $(document.createElement("div")).addClass("drawing-board-control");
        if (this.name) this.$el.addClass("drawing-board-control-" + this.name);
        this.board.ev.bind("board:reset", $.proxy(this.onBoardReset, this));
        this.initialize.apply(this, arguments);
        return this
    };
    a.Control.prototype = {
        name: "",
        defaults: {},
        initialize: function initialize() {},
        addToBoard: function addToBoard() {
            this.board.addControl(this)
        },
        onBoardReset: function onBoardReset() {}
    };
    a.Control.extend = function(a, b) {
        var c = this,
            d;
        if (a && a.hasOwnProperty("constructor")) {
            d = a.constructor
        } else {
            d = function() {
                return c.apply(this, arguments)
            }
        }
        $.extend(d, c, b);
        var e = function() {
            this.constructor = d
        };
        e.prototype = c.prototype;
        d.prototype = new e;
        if (a) $.extend(d.prototype, a);
        d.__super__ = c.prototype;
        return d
    };
    a.Control.Color = a.Control.extend({
        name: "colors",
        initialize: function initialize() {
            this.initTemplate();
            var a = this;
            this.$el.on("click", ".drawing-board-control-colors-picker", function(b) {
                var c = $(this).attr("data-color");
                a.board.setColor(c);
                a.$el.find(".drawing-board-control-colors-current").css("background-color", c).attr("data-color", c);
                a.board.ev.trigger("color:changed", c);
                a.$el.find(".drawing-board-control-colors-rainbows").addClass("drawing-board-utils-hidden");
                b.preventDefault()
            });
            this.$el.on("click", ".drawing-board-control-colors-current", function(b) {
                a.$el.find(".drawing-board-control-colors-rainbows").toggleClass("drawing-board-utils-hidden");
                b.preventDefault()
            });
            $("body").on("click", function(b) {
                var c = $(b.target),
                    d = c.hasClass("drawing-board-control-colors-current") ? c : c.closest(".drawing-board-control-colors-current"),
                    e = a.$el.find(".drawing-board-control-colors-current"),
                    f = a.$el.find(".drawing-board-control-colors-rainbows");
                if ((!d.length || d.get(0) !== e.get(0)) && !f.hasClass("drawing-board-utils-hidden")) f.addClass("drawing-board-utils-hidden")
            })
        },
        initTemplate: function initTemplate() {
            var b = "<div class=\"drawing-board-control-colors-picker\" data-color=\"{{color}}\" style=\"background-color: {{color}}\"></div>",
                c = "";
            $.each([.75, .5, .25], $.proxy(function(d, e) {
                var f = 0,
                    g = null;
                c += "<div class=\"drawing-board-control-colors-rainbow\">";
                if (.25 == e) g = this._rgba(0, 0, 0, 1);
                if (.5 == e) g = this._rgba(150, 150, 150, 1);
                if (.75 == e) g = this._rgba(255, 255, 255, 1);
                c += a.Utils.tpl(b, {
                    color: g.toString()
                });
                while (330 >= f) {
                    c += a.Utils.tpl(b, {
                        color: this._hsl2Rgba(this._hsl(f - 60, 1, e)).toString()
                    });
                    f += 30
                }
                c += "</div>"
            }, this));
            this.$el.append($(a.Utils.tpl("<div class=\"drawing-board-control-inner\"><div class=\"drawing-board-control-colors-current\" style=\"background-color: {{color}}\" data-color=\"{{color}}\"></div><div class=\"drawing-board-control-colors-rainbows\">{{rainbows}}</div></div>", {
                color: this.board.color,
                rainbows: c
            })));
            this.$el.find(".drawing-board-control-colors-rainbows").addClass("drawing-board-utils-hidden")
        },
        onBoardReset: function onBoardReset() {
            this.board.setColor(this.$el.find(".drawing-board-control-colors-current").attr("data-color"))
        },
        _rgba: function _rgba(c, d, e, b) {
            return {
                r: c,
                g: d,
                b: e,
                a: b,
                toString: function toString() {
                    return "rgba(" + c + ", " + d + ", " + e + ", " + b + ")"
                }
            }
        },
        _hsl: function _hsl(a, b, c) {
            return {
                h: a,
                s: b,
                l: c,
                toString: function toString() {
                    return "hsl(" + a + ", " + 100 * b + "%, " + 100 * c + "%)"
                }
            }
        },
        _hex2Rgba: function _hex2Rgba(a) {
            var b = parseInt(a.substring(1), 16);
            return this._rgba(b >> 16, 255 & b >> 8, 255 & b, 1)
        },
        _hsl2Rgba: function _hsl2Rgba(a) {
            var d = a.h / 360,
                e = a.s,
                f = a.l,
                h, i, j;

            function c(a, b, c) {
                if (0 > c) c += 1;
                if (1 < c) c -= 1;
                if (c < 1 / 6) return a + 6 * (b - a) * c;
                if (c < 1 / 2) return b;
                if (c < 2 / 3) return a + 6 * ((b - a) * (2 / 3 - c));
                return a
            }
            if (0 === e) {
                h = i = j = f
            } else {
                var k = .5 > f ? f * (1 + e) : f + e - f * e,
                    l = 2 * f - k;
                h = Math.floor(255 * c(l, k, d + 1 / 3));
                i = Math.floor(255 * c(l, k, d));
                j = Math.floor(255 * c(l, k, d - 1 / 3))
            }
            return this._rgba(h, i, j, 1)
        }
    });
    a.Control.DrawingMode = a.Control.extend({
        name: "drawingmode",
        defaults: {
            pencil: !0,
            eraser: !0,
            filler: !0
        },
        initialize: function initialize() {
            this.prevMode = this.board.getMode();
            $.each(["pencil", "eraser", "filler"], $.proxy(function(a, b) {
                if (this.opts[b]) {
                    this.$el.append("<button class=\"drawing-board-control-drawingmode-" + b + "-button\" data-mode=\"" + b + "\"></button>")
                }
            }, this));
            this.$el.on("click", "button[data-mode]", $.proxy(function(a) {
                var b = $(a.currentTarget).attr("data-mode"),
                    c = this.board.getMode();
                if (c !== b) this.prevMode = c;
                var d = c === b ? this.prevMode : b;
                this.board.setMode(d);
                a.preventDefault()
            }, this));
            this.board.ev.bind("board:mode", $.proxy(function(a) {
                this.toggleButtons(a)
            }, this));
            this.toggleButtons(this.board.getMode())
        },
        toggleButtons: function toggleButtons(a) {
            this.$el.find("button[data-mode]").each(function(b, c) {
                var d = $(c);
                d.toggleClass("active", a === d.attr("data-mode"))
            })
        }
    });
    a.Control.Navigation = a.Control.extend({
        name: "navigation",
        defaults: {
            back: !0,
            forward: !0,
            reset: !0
        },
        initialize: function initialize() {
            var a = "";
            if (this.opts.back) a += "<button class=\"drawing-board-control-navigation-back\">&larr;</button>";
            if (this.opts.forward) a += "<button class=\"drawing-board-control-navigation-forward\">&rarr;</button>";
            if (this.opts.reset) a += "<button class=\"drawing-board-control-navigation-reset\">&times;</button>";
            this.$el.append(a);
            if (this.opts.back) {
                var b = this.$el.find(".drawing-board-control-navigation-back");
                this.board.ev.bind("historyNavigation", $.proxy(function(a) {
                    if (1 === a) b.attr("disabled", "disabled");
                    else b.removeAttr("disabled")
                }, this));
                this.$el.on("click", ".drawing-board-control-navigation-back", $.proxy(function(a) {
                    this.board.goBackInHistory();
                    a.preventDefault()
                }, this))
            }
            if (this.opts.forward) {
                var c = this.$el.find(".drawing-board-control-navigation-forward");
                this.board.ev.bind("historyNavigation", $.proxy(function(a) {
                    if (a === this.board.history.values.length) c.attr("disabled", "disabled");
                    else c.removeAttr("disabled")
                }, this));
                this.$el.on("click", ".drawing-board-control-navigation-forward", $.proxy(function(a) {
                    this.board.goForthInHistory();
                    a.preventDefault()
                }, this))
            }
            if (this.opts.reset) {
                this.$el.on("click", ".drawing-board-control-navigation-reset", $.proxy(function(a) {
                    this.board.reset({
                        background: !0
                    });
                    a.preventDefault()
                }, this))
            }
        }
    });
    a.Control.Size = a.Control.extend({
        name: "size",
        defaults: {
            type: "auto",
            dropdownValues: [1, 3, 6, 10, 20, 30, 40, 50]
        },
        types: ["dropdown", "range"],
        initialize: function initialize() {
            if ("auto" == this.opts.type) this.opts.type = this._iHasRangeInput() ? "range" : "dropdown";
            var a = -1 < $.inArray(this.opts.type, this.types) ? this["_" + this.opts.type + "Template"]() : !1;
            if (!a) return !1;
            this.val = this.board.opts.size;
            this.$el.append($(a));
            this.$el.attr("data-drawing-board-type", this.opts.type);
            this.updateView();
            var b = this;
            if ("range" == this.opts.type) {
                this.$el.on("change", ".drawing-board-control-size-range-input", function(a) {
                    b.val = $(this).val();
                    b.updateView();
                    b.board.ev.trigger("size:changed", b.val);
                    a.preventDefault()
                })
            }
            if ("dropdown" == this.opts.type) {
                this.$el.on("click", ".drawing-board-control-size-dropdown-current", $.proxy(function() {
                    this.$el.find(".drawing-board-control-size-dropdown").toggleClass("drawing-board-utils-hidden")
                }, this));
                this.$el.on("click", "[data-size]", function(a) {
                    b.val = parseInt($(this).attr("data-size"), 0);
                    b.updateView();
                    b.board.ev.trigger("size:changed", b.val);
                    a.preventDefault()
                })
            }
        },
        _rangeTemplate: function _rangeTemplate() {
            return a.Utils.tpl("<div class=\"drawing-board-control-inner\" title=\"{{size}}\"><input type=\"range\" min=\"1\" max=\"50\" value=\"{{size}}\" step=\"1\" class=\"drawing-board-control-size-range-input\"><span class=\"drawing-board-control-size-range-current\"></span></div>", {
                size: this.board.opts.size
            })
        },
        _dropdownTemplate: function _dropdownTemplate() {
            var b = "<div class=\"drawing-board-control-inner\" title=\"{{size}}\"><div class=\"drawing-board-control-size-dropdown-current\"><span></span></div><ul class=\"drawing-board-control-size-dropdown\">";
            $.each(this.opts.dropdownValues, function(c, d) {
                b += a.Utils.tpl("<li data-size=\"{{size}}\"><span style=\"width: {{size}}px; height: {{size}}px; border-radius: {{size}}px;\"></span></li>", {
                    size: d
                })
            });
            b += "</ul></div>";
            return b
        },
        onBoardReset: function onBoardReset() {
            this.updateView()
        },
        updateView: function updateView() {
            var a = this.val;
            this.board.ctx.lineWidth = a;
            this.$el.find(".drawing-board-control-size-range-current, .drawing-board-control-size-dropdown-current span").css({
                width: a + "px",
                height: a + "px",
                borderRadius: a + "px",
                marginLeft: -1 * a / 2 + "px",
                marginTop: -1 * a / 2 + "px"
            });
            this.$el.find(".drawing-board-control-inner").attr("title", a);
            if ("dropdown" == this.opts.type) {
                var b = null;
                $.each(this.opts.dropdownValues, function(c, d) {
                    if (null === b || Math.abs(d - a) < Math.abs(b - a)) b = d
                });
                this.$el.find(".drawing-board-control-size-dropdown").addClass("drawing-board-utils-hidden")
            }
        },
        _iHasRangeInput: function _iHasRangeInput() {
            var a = document.createElement("input"),
                b = document.documentElement,
                c;
            a.setAttribute("type", "range");
            c = "text" !== a.type;
            a.value = ":)";
            a.style.cssText = "position:absolute;visibility:hidden;";
            if (/^range$/.test("range") && a.style.WebkitAppearance !== void 0) {
                b.appendChild(a);
                defaultView = document.defaultView;
                c = defaultView.getComputedStyle && "textfield" !== defaultView.getComputedStyle(a, null).WebkitAppearance && 0 !== a.offsetHeight;
                b.removeChild(a)
            }
            return !!c
        }
    });
    a.Control.Download = a.Control.extend({
        name: "download",
        initialize: function initialize() {
            this.$el.append("<button class=\"drawing-board-control-download-button\"></button>");
            this.$el.on("click", ".drawing-board-control-download-button", $.proxy(function(a) {
                this.board.downloadImg();
                a.preventDefault()
            }, this))
        }
    });
    a.Utils = {};
    a.Utils.tpl = function() {
        "use strict";
        var a = /{{\s*([a-z0-9_][\.a-z0-9_]*)\s*}}/gi,
            b;
        return function(c, d) {
            return c.replace(a, function(a, c) {
                var e = c.split("."),
                    f = e.length,
                    g = d,
                    h = 0;
                for (; h < f; h++) {
                    g = g[e[h]];
                    if (g === b) {
                        throw "tim: '" + e[h] + "' not found in " + a
                    }
                    if (h == f - 1) {
                        return g
                    }
                }
            })
        }
    }();
    a.Utils.MicroEvent = function() {};
    a.Utils.MicroEvent.prototype = {
        bind: function bind(a, b) {
            this._events = this._events || {};
            this._events[a] = this._events[a] || [];
            this._events[a].push(b)
        },
        unbind: function unbind(a, b) {
            this._events = this._events || {};
            if (!1 == a in this._events) return;
            this._events[a].splice(this._events[a].indexOf(b), 1)
        },
        trigger: function trigger(a) {
            this._events = this._events || {};
            if (!1 == a in this._events) return;
            for (var b = 0; b < this._events[a].length; b++) {
                this._events[a][b].apply(this, Array.prototype.slice.call(arguments, 1))
            }
        }
    };
    a.Utils._boxBorderSize = function(a, b, c, d) {
        b = !!b || !0;
        c = !!c || !1;
        var e = 0,
            f;
        if ("width" == d) {
            f = ["border-left-width", "border-right-width"];
            if (b) f.push("padding-left", "padding-right");
            if (c) f.push("margin-left", "margin-right")
        } else {
            f = ["border-top-width", "border-bottom-width"];
            if (b) f.push("padding-top", "padding-bottom");
            if (c) f.push("margin-top", "margin-bottom")
        }
        for (var g = f.length - 1; 0 <= g; g--) {
            e += parseInt(a.css(f[g]).replace("px", ""), 10)
        }
        return e
    };
    a.Utils.boxBorderWidth = function(b, c, d) {
        return a.Utils._boxBorderSize(b, c, d, "width")
    };
    a.Utils.boxBorderHeight = function(b, c, d) {
        return a.Utils._boxBorderSize(b, c, d, "height")
    };
    a.Utils.isColor = function(a) {
        if (!a || !a.length) return !1;
        return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(a) || -1 !== $.inArray(a.substring(0, 3), ["rgb", "hsl"])
    };
    a.Utils.RGBToInt = function(a, d, e) {
        var b = 0;
        b |= (255 & a) << 16;
        b |= (255 & d) << 8;
        b |= 255 & e;
        return b
    };
    a.Utils.pixelAt = function(b, d, e) {
        var f = 4 * (e * b.width + d),
            g = a.Utils.RGBToInt(b.data[f], b.data[f + 1], b.data[f + 2]);
        return [f, d, e, g]
    };
    (function() {
        for (var a = ["ms", "moz", "webkit", "o"], b = 0; b < a.length && !window.requestAnimationFrame; ++b) {
            window.requestAnimationFrame = window[a[b] + "RequestAnimationFrame"];
            window.cancelAnimationFrame = window[a[b] + "CancelAnimationFrame"] || window[a[b] + "CancelRequestAnimationFrame"]
        }
    })();
    var b;
    if ("undefined" != typeof window) {
        b = window
    } else if ("undefined" != typeof global) {
        b = global
    } else if ("undefined" != typeof self) {
        b = self
    } else {
        b = this
    }
    b.DrawingBoard = a;
    return a
});
define("filter_poodll/anim_hwave_timer", ["jquery", "core/log"], function(a, b) {
    "use strict";
    b.debug("anim_horizontal_wave_ra: initialising");
    return {
        analyser: null,
        cvs: null,
        cvsctx: null,
        sounddetected: !1,
        displaytime: "00:00:00",
        drawparams: {
            wavColor: "#CCCCCC",
            textColor: "#000000",
            lineWidth: 2,
            font: "30px Georgia",
            textAlign: "center"
        },
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        init: function init(a, b) {
            this.cvs = b;
            this.cvsctx = b.getContext("2d");
            this.cvsctx.textAlign = this.drawparams.textAlign;
            this.analyser = a
        },
        setDrawParam: function setDrawParam(a, b) {
            this.drawparams[a] = b
        },
        clear: function clear() {
            this.cvsctx.clearRect(0, 0, this.cvs.width, this.cvs.height);
            this.cvsctx.lineWidth = 2;
            this.cvsctx.strokeStyle = this.drawparams.textColor;
            this.cvsctx.beginPath();
            this.drawTime(this.cvsctx, this.displaytime, this.cvs.width, this.cvs.height);
            this.cvsctx.stroke()
        },
        drawTime: function drawTime(a, b, c, d) {
            a.fillStyle = this.drawparams.textColor;
            a.font = this.drawparams.font;
            a.fillText(b, c / 2, 3 * (d / 4))
        },
        start: function start() {
            this.analyser.core.fftSize = 2048;
            var a = this.analyser.core.fftSize,
                b = new Uint8Array(a),
                c = this.cvs.width,
                d = this.cvs.height,
                e = this.cvsctx,
                f = this.analyser,
                g = this;
            this.clear();
            var h = function() {
                requestAnimationFrame(h);
                if (!f.theinterval) {
                    return
                }
                f.core.getByteTimeDomainData(b);
                e.clearRect(0, 0, c, d);
                e.lineWidth = g.drawparams.lineWidth;
                e.strokeStyle = g.drawparams.wavColor;
                e.beginPath();
                var j = 3 * (d / 4),
                    k = 0;
                if (0 < a) {
                    var l = b[a - 1];
                    if (128 != l) {
                        g.sounddetected = !0
                    }
                }
                for (var m = 0; m < a; m++) {
                    var n = b[m] / 128,
                        o = n * j / 2;
                    if (0 == m) {
                        e.moveTo(k, o)
                    } else {
                        e.lineTo(k, o)
                    }
                    k += 2 * c / a
                }
                e.lineTo(c, j / 2);
                g.drawTime(e, g.displaytime, c, d);
                e.stroke()
            };
            h()
        }
    }
});
define('filter_poodll/poodll_whammy', ["jquery", "core/log"], function(a, b) {
    "use strict";

    function c(a) {
        var b = URL.createObjectURL(new Blob([a.toString(), "this.onmessage =  function (e) {" + a.name + "(e.data);}"], {
                type: "application/javascript"
            })),
            c = new Worker(b);
        return URL.revokeObjectURL(b), c
    }

    function d(a) {
        function b(a) {
            var b = d(a);
            if (!b) return [];
            for (var e = 3e4, f = [{
                    id: 440786851,
                    data: [{
                        data: 1,
                        id: 17030
                    }, {
                        data: 1,
                        id: 17143
                    }, {
                        data: 4,
                        id: 17138
                    }, {
                        data: 8,
                        id: 17139
                    }, {
                        data: "webm",
                        id: 17026
                    }, {
                        data: 2,
                        id: 17031
                    }, {
                        data: 2,
                        id: 17029
                    }]
                }, {
                    id: 408125543,
                    data: [{
                        id: 357149030,
                        data: [{
                            data: 1e6,
                            id: 2807729
                        }, {
                            data: "whammy",
                            id: 19840
                        }, {
                            data: "whammy",
                            id: 22337
                        }, {
                            data: m(b.duration),
                            id: 17545
                        }]
                    }, {
                        id: 374648427,
                        data: [{
                            id: 174,
                            data: [{
                                data: 1,
                                id: 215
                            }, {
                                data: 1,
                                id: 29637
                            }, {
                                data: 0,
                                id: 156
                            }, {
                                data: "und",
                                id: 2274716
                            }, {
                                data: "V_VP8",
                                id: 134
                            }, {
                                data: "VP8",
                                id: 2459272
                            }, {
                                data: 1,
                                id: 131
                            }, {
                                id: 224,
                                data: [{
                                    data: b.width,
                                    id: 176
                                }, {
                                    data: b.height,
                                    id: 186
                                }]
                            }]
                        }]
                    }]
                }], g = 0, i = 0; g < a.length;) {
                var j = [],
                    k = 0;
                do j.push(a[g]), k += a[g].duration, g++; while (g < a.length && k < e);
                var l = 0,
                    n = {
                        id: 524531317,
                        data: c(i, l, j)
                    };
                f[1].data.push(n), i += k
            }
            return h(f)
        }

        function c(a, b, c) {
            return [{
                data: a,
                id: 231
            }].concat(c.map(function(a) {
                var c = i({
                    discardable: 0,
                    frame: a.data.slice(4),
                    invisible: 0,
                    keyframe: 1,
                    lacing: 0,
                    trackNum: 1,
                    timecode: Math.round(b)
                });
                return b += a.duration, {
                    data: c,
                    id: 163
                }
            }))
        }

        function d(a) {
            if (!a[0]) return void postMessage({
                error: "Something went wrong. Maybe WebP format is not supported in the current browser."
            });
            for (var b = a[0].width, c = a[0].height, d = a[0].duration, e = 1; e < a.length; e++) d += a[e].duration;
            return {
                duration: d,
                width: b,
                height: c
            }
        }

        function e(a) {
            for (var b = []; a > 0;) b.push(255 & a), a >>= 8;
            return new Uint8Array(b.reverse())
        }

        function f(a) {
            return new Uint8Array(a.split("").map(function(a) {
                return a.charCodeAt(0)
            }))
        }

        function g(a) {
            var b = [],
                c = a.length % 8 ? new Array(9 - a.length % 8).join("0") : "";
            a = c + a;
            for (var d = 0; d < a.length; d += 8) b.push(parseInt(a.substr(d, 8), 2));
            return new Uint8Array(b)
        }

        function h(a) {
            for (var b = [], c = 0; c < a.length; c++) {
                var d = a[c].data;
                "object" == typeof d && (d = h(d)), "number" == typeof d && (d = g(d.toString(2))), "string" == typeof d && (d = f(d));
                var i = d.size || d.byteLength || d.length,
                    j = Math.ceil(Math.ceil(Math.log(i) / Math.log(2)) / 8),
                    k = i.toString(2),
                    l = new Array(7 * j + 7 + 1 - k.length).join("0") + k,
                    m = new Array(j).join("0") + "1" + l;
                b.push(e(a[c].id)), b.push(g(m)), b.push(d)
            }
            return new Blob(b, {
                type: "video/webm"
            })
        }

        function i(a) {
            var b = 0;
            if (a.keyframe && (b |= 128), a.invisible && (b |= 8), a.lacing && (b |= a.lacing << 1), a.discardable && (b |= 1), a.trackNum > 127) throw "TrackNumber > 127 not supported";
            var c = [128 | a.trackNum, a.timecode >> 8, 255 & a.timecode, b].map(function(a) {
                return String.fromCharCode(a)
            }).join("") + a.frame;
            return c
        }

        function j(a) {
            for (var b = a.RIFF[0].WEBP[0], c = b.indexOf("*"), d = 0, e = []; d < 4; d++) e[d] = b.charCodeAt(c + 3 + d);
            var f, g, h;
            return h = e[1] << 8 | e[0], f = 16383 & h, h = e[3] << 8 | e[2], g = 16383 & h, {
                width: f,
                height: g,
                data: b,
                riff: a
            }
        }

        function k(a, b) {
            return parseInt(a.substr(b + 4, 4).split("").map(function(a) {
                var b = a.charCodeAt(0).toString(2);
                return new Array(8 - b.length + 1).join("0") + b
            }).join(""), 2)
        }

        function l(a) {
            for (var b = 0, c = {}; b < a.length;) {
                var d = a.substr(b, 4),
                    e = k(a, b),
                    f = a.substr(b + 4 + 4, e);
                b += 8 + e, c[d] = c[d] || [], "RIFF" === d || "LIST" === d ? c[d].push(l(f)) : c[d].push(f)
            }
            return c
        }

        function m(a) {
            return [].slice.call(new Uint8Array(new Float64Array([a]).buffer), 0).map(function(a) {
                return String.fromCharCode(a)
            }).reverse().join("")
        }
        var n = new b(a.map(function(a) {
            var b = j(l(atob(a.image.slice(23))));
            return b.duration = a.duration, b
        }));
        postMessage(n)
    }
    b.debug("PoodLL Whammy: initialising");
    var e = {};
    return e.init = function(a, b) {
        this.frames = [], a || (a = 1), this.duration = 1e3 / a, this.quality = b || .8
    }, e.add = function(a, b) {
        if ("canvas" in a && (a = a.canvas), "toDataURL" in a && (a = a.toDataURL("image/webp", this.quality)), !/^data:image\/webp;base64,/gi.test(a)) throw "Input must be formatted properly as a base64 encoded DataURI of type image/webp";
        this.frames.push({
            image: a,
            duration: b || this.duration
        })
    }, e.compile = function(a) {
        var b = c(d);
        b.onmessage = function(b) {
            return b.data.error ? void console.error(b.data.error) : void a(b.data)
        }, b.postMessage(this.frames)
    }, {
        Video: e
    }
});
define("filter_poodll/poodll_freshmediaskin", ["jquery", "jqueryui", "core/log", "filter_poodll/utils_amd", "filter_poodll/dlg_devicesettings", "filter_poodll/anim_progress_bar_fresh", "filter_poodll/anim_hwave_fresh", "filter_poodll/anim_hwave_timer", "filter_poodll/upskin_text"], function(a, b, c, d, e, f, g, h, i) {
    "use strict";
    c.debug("PoodLL BMR Skin: initialising");
    return {
        instanceprops: null,
        pmr: null,
        uploaded: !1,
        devsettings: null,
        therecanim: null,
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        init: function init(a, b) {
            this.instanceprops = a;
            this.pmr = b;
            this.devsettings = e.clone();
            this.devsettings.init(b, a)
        },
        fetch_instanceprops: function fetch_instanceprops() {
            return this.instanceprops
        },
        onUploadSuccess: function onUploadSuccess(b) {
            a("#" + b + " > .poodll_save-recording").hide();
            a("#" + b + " > .poodll_savedsuccessfully").show()
        },
        onUploadFailure: function onUploadFailure() {},
        fetch_status_bar: function fetch_status_bar(a) {
            return "<div class=\"poodll_status_" + a + "\">00:00:00</div>"
        },
        fetch_preview_audio: function fetch_preview_audio(a) {
            return "<audio class=\"poodll_preview_" + a + "\" style=\"display: none;\" controls></audio>"
        },
        fetch_preview_video: function fetch_preview_video(a) {
            return "<video class=\"poodll_preview_" + a + "\"></video>"
        },
        fetch_resource_audio: function fetch_resource_audio() {
            return ""
        },
        fetch_resource_video: function fetch_resource_video() {
            return ""
        },
        fetch_uploader_skin: function fetch_uploader_skin(a, b) {
            var c = this.fetch_instanceprops(),
                d = i.clone();
            d.init(c.config, b, c.controlbar.bmr_progresscanvas, c.controlbar.status);
            return d
        },
        onMediaError: function onMediaError(a) {
            console.error("media error", a)
        },
        onMediaSuccess_video: function onMediaSuccess_video(a) {
            var b = this.fetch_instanceprops();
            b.uploader.Output("");
            this.set_visual_mode("recordmode", a);
            b.timer.reset();
            b.timer.start();
            this.update_status(a)
        },
        onMediaSuccess_audio: function onMediaSuccess_audio(a) {
            var b = this.fetch_instanceprops();
            b.uploader.Output("");
            b.controlbar.preview.attr("src", null);
            this.set_visual_mode("recordmode", a);
            this.therecanim.start();
            b.timer.reset();
            b.timer.start();
            this.update_status(a)
        },
        handle_timer_update: function handle_timer_update() {
            var a = this.fetch_instanceprops();
            a.controlbar.status.html(a.timer.fetch_display_time());
            if (0 == a.timer.seconds && 0 < a.timer.initseconds) {
                if (a.controlbar.startbutton.hasClass("poodll_in_progress")) {
                    a.controlbar.startbutton.click()
                }
            }
        },
        update_status: function update_status() {
            var a = this.fetch_instanceprops();
            a.controlbar.status.html(a.timer.fetch_display_time())
        },
        set_visual_mode: function set_visual_mode(a) {
            var b = this,
                c = this.fetch_instanceprops();
            this.visualmode = a;
            switch (a) {
                case "initmode":
                    c.controlbar.statusText.text("Ready to record");
                    c.controlbar.status.html("00:00:00");
                    c.controlbar.stoprecbutton.attr("class", "poodll_stop-recording_fresh poodll_fresh_stop_btn bmr_disabled");
                    c.controlbar.startbutton.attr("class", "poodll_start-recording_fresh poodll_fresh_main_btn");
                    c.controlbar.playbutton.attr("class", "poodll_play-recording_fresh poodll_fresh_play_btn bmr_disabled");
                    b.disable_button(c.controlbar.savebutton);
                    b.disable_button(c.controlbar.recordAgain);
                    break;
                case "recordmode":
                    c.controlbar.statusText.text("Recording..");
                    b.enable_button(c.controlbar.startbutton);
                    b.show_element(c.controlbar.startbutton);
                    b.hide_element(c.controlbar.bmr_progresscanvas);
                    b.enable_button(c.controlbar.pausebutton);
                    b.show_element(c.controlbar.pausebutton);
                    b.disable_button(c.controlbar.playbutton);
                    b.hide_element(c.controlbar.resumebutton);
                    b.enable_button(c.controlbar.stoprecbutton);
                    b.disable_button(c.controlbar.savebutton);
                    b.disable_button(c.controlbar.recordAgain);
                    c.controlbar.preview.addClass("poodll_recording");
                    c.controlbar.status.addClass("poodll_recording");
                    c.controlbar.preview.removeClass("poodll_playing");
                    c.controlbar.status.removeClass("poodll_playing");
                    c.controlbar.startbutton.addClass("poodll_in_progress").removeClass("poodll_resume_button");
                    c.controlbar.playbutton.removeClass("poodll_play_special poodll_play_green");
                    if ("audio" == c.config.mediatype) {
                        b.hide_element(c.controlbar.preview)
                    }
                    c.controlbar.root.removeClass("poodll_controllbar_playmode");
                    break;
                case "previewmode":
                    c.controlbar.statusText.text("Ready to Play");
                    b.disable_button(c.controlbar.stoprecbutton);
                    b.disable_button(c.controlbar.startbutton);
                    b.enable_button(c.controlbar.playbutton);
                    b.disable_button(c.controlbar.pausebutton);
                    c.controlbar.status.html(c.timer.fetch_display_time(c.timer.finalSeconds));
                    b.show_element(c.controlbar.startbutton);
                    b.disable_button(c.controlbar.resumebutton);
                    b.hide_element(c.controlbar.resumebutton);
                    b.hide_element(c.controlbar.bmr_progresscanvas);
                    if (b.uploaded) {
                        b.disable_button(c.controlbar.savebutton);
                        b.disable_button(c.controlbar.recordAgain)
                    } else {
                        b.enable_button(c.controlbar.savebutton);
                        b.enable_button(c.controlbar.recordAgain)
                    }
                    b.show_element(c.controlbar.pausebutton);
                    c.controlbar.preview.removeClass("poodll_recording");
                    c.controlbar.status.removeClass("poodll_recording");
                    c.controlbar.preview.removeClass("poodll_playing");
                    c.controlbar.status.removeClass("poodll_playing");
                    c.controlbar.startbutton.removeClass("poodll_in_progress");
                    c.controlbar.playbutton.addClass("poodll_play_green").removeClass("poodll_play_special").removeClass("poodll_play_pause").removeClass("poodll_stop_green");
                    if ("audio" == c.config.mediatype) {
                        b.show_element(c.controlbar.preview)
                    }
                    b.enable_button(c.controlbar.playbutton);
                    c.controlbar.root.removeClass("poodll_controllbar_playmode poodll_controllbar_pausemode");
                    break;
                case "playmode":
                    c.controlbar.statusText.text("Playing");
                    c.controlbar.status.html("00:00:00");
                    b.enable_button(c.controlbar.stoprecbutton);
                    b.enable_button(c.controlbar.pausebutton);
                    b.disable_button(c.controlbar.startbutton);
                    b.disable_button(c.controlbar.resumebutton);
                    b.disable_button(c.controlbar.savebutton);
                    b.disable_button(c.controlbar.recordAgain);
                    b.show_element(c.controlbar.bmr_progresscanvas);
                    c.controlbar.playbutton.removeClass("poodll_play_green").removeClass("poodll_play_special").addClass("poodll_stop_green");
                    c.controlbar.preview.addClass("poodll_playing");
                    c.controlbar.status.addClass("poodll_playing");
                    b.show_element(c.controlbar.startbutton);
                    b.hide_element(c.controlbar.resumebutton);
                    c.controlbar.root.addClass("poodll_controllbar_playmode").removeClass("poodll_controllbar_pausemode");
                    break;
                case "pausedmode":
                    c.controlbar.statusText.text("Paused");
                    b.show_element(c.controlbar.resumebutton);
                    b.enable_button(c.controlbar.resumebutton);
                    b.enable_button(c.controlbar.savebutton);
                    c.controlbar.preview.removeClass("poodll_recording");
                    c.controlbar.status.removeClass("poodll_recording");
                    c.controlbar.startbutton.removeClass("poodll_in_progress").addClass("poodll_resume_button");
                    c.controlbar.playbutton.removeClass("poodll_play_green").removeClass("poodll_play_pause");
                    c.controlbar.root.addClass("poodll_controllbar_pausemode");
                    break;
                case "uploadmode":
                    c.controlbar.statusText.text("Uploading");
                    b.disable_button(c.controlbar.savebutton);
                    b.disable_button(c.controlbar.recordAgain);
                    b.disable_button(c.controlbar.startbutton);
                    b.show_element(c.controlbar.bmr_progresscanvas);
                    c.controlbar.root.removeClass("poodll_controllbar_playmode poodll_controllbar_pausemode");
                    break;
            }
        },
        insert_controlbar_video: function insert_controlbar_video(a, b, c, d) {
            var e = this.prepare_controlbar(a, b, c, d, "video");
            return e
        },
        insert_controlbar_audio: function insert_controlbar_audio(a, b, c, d) {
            var e = this.prepare_controlbar(a, b, c, d, "audio");
            return e
        },
        prepare_controlbar: function prepare_controlbar(b, c, d, e, f) {
            var g = this.fetch_instanceprops(),
                h = g.config.media_skin_style,
                i = "poodll_mediarecorder_size_auto";
            switch (g.config.size) {
                case "small":
                    i = "poodll_mediarecorder_size_small";
                    break;
                case "big":
                    i = "poodll_mediarecorder_size_big";
                    break;
                case "auto":
                    i = "poodll_mediarecorder_size_auto";
            }
            var j = this.pmr.fetch_strings(),
                k = "video" == f ? "fa-video-camera" : "fa-microphone",
                l = "video" == f ? "poodll_mediarecorder_video" : "poodll_mediarecorder_audio",
                m = "<div class=\"poodll_mediarecorderholder_fresh poodll_videorecorderholder_fresh " + l + " " + i + "\" id=\"holder_" + c + "\">";
            m += "<div class=\"poodll_mediarecorderbox_fresh\" id=\"" + c + "\">";
            m += "<audio style=\"display: none !important;\" class=\"poodll-alert-recording\" id=\"" + c + "\"><source src=\"#\" type=\"audio/mpeg\"></audio>";
            m += "<div class=\"style-holder " + h + "\">";
            m += "<div class=\"poodll_statusholder_fresh\" >";
            var n = this.fetch_status_bar("fresh");
            m += n;
            m += "</div>";
            m += "<div class=\"poodll_fresh_musik_line\"><canvas class=\"fresh_range\"></canvas><canvas id=\"" + c + "_playcanvas\" class=\"poodll_fresh_playcanvas\" width=\"300\" height=\"50\"></canvas><div class=\"poodll_fresh_wave\"></div></div><div class=\"poodll_fresh_control\"><div class=\"poodll_fresh_txt_control\">" + j.recui_readytorecord + "</div><div class=\"poodll_fresh_settings_btn settingsicon\" data-toggle=\"modal\" data-target=\"#myModal id=\"settingsicon_" + c + "\"></div><div class=\"poodll_start-recording_fresh poodll_fresh_main_btn\"></div><div class=\"poodll_stop-playing-recording_fresh\" style=\"display: none;\"></div><div class=\"poodll_pause-recording_fresh poodll_fresh_pause_btn bmr_disabled\"></div><div class=\"poodll_play-recording_fresh poodll_fresh_play_btn bmr_disabled\"></div></div><div class=\"poodll_fresh_bottom_btns\"><a class=\"poodll_save-recording_fresh poodll_fresh_upload_btn bmr_disabled\" href=\"#\">" + j.recui_upload + "</a><a class=\"poodll_fresh_record_btn bmr_disabled\" href=\"#\">" + j.recui_recordagain + "</a></div>";
            m += d;
            m += "</div>";
            m += this.devsettings.fetch_dialogue_box();
            m += g.downloaddialog.fetch_dialogue_box();
            m += g.errordialog.fetch_dialogue_box();
            m += "</div>";
            m += "</div>";
            a(b).prepend(m);
            var o = {
                poodll_recording_alert: a("#" + c + " .poodll-alert-recording"),
                bmr_progresscanvas: a("#" + c + " .fresh_range"),
                settingsdialog: a("#" + c + " .poodll_dialogue_box_settings"),
                downloaddialog: a("#" + c + " .poodll_dialogue_box_download"),
                errorsdialog: a("#" + c + " .poodll_dialogue_box_errors"),
                settingsicon: a("#" + c + " .settingsicon"),
                status: a("#" + c + " .poodll_status_fresh"),
                statusText: a("#" + c + " .poodll_fresh_txt_control"),
                preview: a("#" + c + " .poodll_preview_fresh"),
                startbutton: a("#" + c + " .poodll_start-recording_fresh"),
                stoprecbutton: a("#" + c + " .poodll_stop-recording_fresh"),
                pausebutton: a("#" + c + " .poodll_pause-recording_fresh"),
                resumebutton: a("#" + c + " .poodll_resume-recording_fresh"),
                playbutton: a("#" + c + " .poodll_play-recording_fresh"),
                stopbutton: a("#" + c + " .poodll_stop-playing-recording_fresh"),
                savebutton: a("#" + c + " .poodll_save-recording_fresh"),
                recordAgain: a("#" + c + " .poodll_fresh_record_btn"),
                playcanvas: a("#" + c + "_playcanvas"),
                root: a("#" + c)
            };
            g.downloaddialog.set_dialogue_box(o.downloaddialog);
            g.errordialog.set_dialogue_box(o.errorsdialog);
            this.devsettings.set_dialogue_box(o.settingsdialog);
            return o
        },
        register_controlbar_events_video: function register_controlbar_events_video(a, b) {
            return this.register_controlbar_events_audio(a, b)
        },
        register_controlbar_events_audio: function register_controlbar_events_audio(b, c) {
            var d = this,
                e = this.pmr,
                h = this.fetch_instanceprops();
            h.controlbar.settingsicon.click(function() {
                if (!d.uploaded) {
                    d.devsettings.open()
                } else {
                    h.downloaddialog.open()
                }
            });
            var i = f.clone();
            i.init(h.controlbar.bmr_progresscanvas);
            i.readyBars();
            var j = g.clone();
            j.init(h.audioanalyser, h.controlbar.playcanvas.get(0));
            h.controlbar.startbutton.click(function() {
                if (a(this).hasClass("poodll_in_progress")) {
                    e.do_stop_audio(h);
                    var f = h.controlbar.preview;
                    if (f && f.get(0)) {
                        f.get(0).pause()
                    }
                    j.clear();
                    h.timer.stop();
                    d.update_status(c);
                    d.set_visual_mode("previewmode", c)
                } else if (a(this).hasClass("poodll_resume_button")) {
                    e.do_resume_audio(h);
                    h.timer.resume();
                    d.update_status(c);
                    d.set_visual_mode("recordmode", c)
                } else {
                    d.therecanim = j;
                    e.do_start_audio(h, b)
                }
            });
            h.controlbar.recordAgain.click(function() {
                e.do_stop_audio(h);
                d.update_status(c);
                d.set_visual_mode("initmode", c)
            });
            h.controlbar.stoprecbutton.click(function() {
                e.do_stop_audio(h);
                var a = h.controlbar.preview;
                if (a && a.get(0)) {
                    a.get(0).pause()
                }
                j.clear();
                h.timer.stop();
                d.update_status(c);
                d.set_visual_mode("previewmode", c)
            });
            h.controlbar.pausebutton.click(function() {
                e.do_pause_audio(h);
                var a = h.controlbar.preview;
                if (a && a.get(0)) {
                    a.get(0).pause();
                    a.get(0).controls = !1
                }
                console.log("PAUSE");
                h.timer.pause();
                d.update_status(c);
                d.set_visual_mode("pausedmode", c)
            });
            h.controlbar.resumebutton.click(function() {
                e.do_resume_audio(h);
                h.timer.resume();
                d.update_status(c);
                d.set_visual_mode("recordmode", c)
            });
            h.controlbar.preview.on("timeupdate", function() {
                if ("playmode" != d.visualmode) {
                    return
                }
                var a = this.currentTime;
                h.controlbar.status.html(h.timer.fetch_display_time(a))
            });
            h.controlbar.stopbutton.click(function() {
                e.do_stop_audio(h);
                var a = h.controlbar.preview;
                if (a && a.get(0)) {
                    a.get(0).pause()
                }
                j.clear();
                h.timer.stop();
                d.update_status(c);
                d.set_visual_mode("previewmode", c)
            });
            h.controlbar.playbutton.click(function() {
                if (a(this).hasClass("poodll_play_pause")) {
                    var b = h.controlbar.preview.get(0);
                    e.do_stopplay_audio(h, b);
                    e.do_stop_audio(h);
                    h.timer.pause();
                    d.update_status(c);
                    d.set_visual_mode("pausedmode", c)
                } else if (a(this).hasClass("poodll_stop_green")) {
                    e.do_stop_audio(h);
                    var b = h.controlbar.preview;
                    if (b && b.get(0)) {
                        b.get(0).pause()
                    }
                    j.clear();
                    h.timer.stop();
                    d.update_status(c);
                    d.set_visual_mode("previewmode", c)
                } else {
                    var b = h.controlbar.preview.get(0);
                    e.do_play_audio(h, b);
                    d.set_visual_mode("playmode", c);
                    i.clear();
                    i.fetchCurrent = function() {
                        var a = h.controlbar.preview.prop("currentTime"),
                            b = h.controlbar.preview.prop("duration");
                        if (!isFinite(b)) {
                            b = h.timer.finalseconds
                        }
                        return a / b
                    };
                    i.start();
                    var f = h.controlbar.preview.prop("currentTime"),
                        g = h.controlbar.preview.prop("duration");
                    i.playBars(f, g)
                }
            });
            h.controlbar.savebutton.click(function() {
                if (h.blobs && 0 < h.blobs.length) {
                    d.set_visual_mode("uploadmode", c);
                    e.do_save_audio(h);
                    d.uploaded = !0
                } else {
                    h.uploader.Output(M.util.get_string("recui_nothingtosaveerror", "filter_poodll"))
                }
                return !1
            });
            window.onbeforeunload = function() {
                d.enable_button(h.controlbar.startbutton);
                var a = h.controlbar.preview;
                if (a && a.get(0)) {
                    a.get(0).pause();
                    a.get(0).controls = !1
                }
            }
        },
        show_element: function show_element(b) {
            a(b).show()
        },
        hide_element: function hide_element(b) {
            a(b).hide()
        },
        enable_button: function enable_button(b) {
            a(b).attr("disabled", !1);
            a(b).removeClass("bmr_disabled")
        },
        disable_button: function disable_button(b) {
            a(b).attr("disabled", !0);
            a(b).addClass("bmr_disabled")
        }
    }
});
define('filter_poodll/poodll_mediastreamrecorder', ["jquery", "core/log"], function(a, b) {
    "use strict";
    return b.debug("PoodLL Recorder: initialising"), {
        init: function() {},
        start: function() {},
        stop: function() {},
        resume: function() {},
        ondataavailable: function(a) {
            b.debug("ondataavailable:" + a)
        },
        onstop: function(a) {
            b.debug(a)
        }
    }
});
define("filter_poodll/poodll_flashrecorder", ["jquery", "core/log", "filter_poodll/utils_amd", "filter_poodll/uploader", "filter_poodll/lzloader"], function(a, b, c, d, e) {
    "use strict";
    b.debug("PoodLL Flash Recorder: initialising");
    return {
        instanceprops: [],
        fetch_instance_props: function fetch_instance_props(a) {
            return this.instanceprops[a]
        },
        init_instance_props: function init_instance_props(a) {
            this.instanceprops[a] = {
                savebutton: null,
                audiodatacontrol: null,
                config: null,
                uploader: null
            }
        },
        supports_current_browser: function supports_current_browser(a) {
            var d = c.is_ios(),
                e = c.is_android();
            if (d || !a.flashonandroid && e) {
                return !1
            } else {
                if ("audio" != a.mediatype) {
                    return !1
                }
                b.debug("PoodLL Flash Recorder: supports this browser");
                return !0
            }
        },
        embed: function embed(b, f) {
            if (1 == f.flashmp3_cloudbypass) {
                f.posturl = f.cloudbypassurl;
                f.filename = !1;
                f.s3filename = !1;
                f.using_s3 = !1
            }
            this.init_instance_props(f.widgetid);
            var g = this.fetch_instance_props(f.widgetid);
            g.ie = c.is_ie();
            if (g.ie) {
                f.flashmp3audio_widgetjson = f.flashmp3audio_widgetjson.replace("sendmethod=post", "sendmethod=ajax")
            }
            g.config = f;
            var h = a.parseJSON(f.flashmp3audio_widgetjson);
            e.embed.swf(h);
            var i = "";
            if (g.ie) {
                i = " style=\"display: none\" "
            }
            var j = f.widgetid + "_savebutton",
                k = "<button id=\"" + j + "\" type=\"button\" class=\"poodll_save-recording\"" + i + ">" + M.util.get_string("recui_save", "filter_poodll") + "</button>";
            a(b).append(k);
            var l = f.widgetid + "_adc";
            a(b).prepend("<input type=\"hidden\" name=\"audiodatacontrol\" id=\"" + l + "\" value=\"\" />");
            g.uploader = d.clone();
            g.uploader.init(b, f);
            e.embed[f.widgetid].setCanvasAttribute("audiodatacontrol", l);
            g.savebutton = a("#" + j);
            g.audiodatacontrol = a("#" + l);
            this.registerevents(f.widgetid)
        },
        registerevents: function registerevents(a) {
            var b = this.fetch_instance_props(a);
            b.audioblob = !1;
            b.savebutton.click(function() {
                var a = atob(b.audiodatacontrol.val()),
                    c = a && 0 < a.length;
                if (!c && !b.audioblob) {
                    b.uploader.Output(M.util.get_string("recui_nothingtosaveerror", "filter_poodll"));
                    return !1
                }
                if (!b.audioblob && c) {
                    for (var d = [], f = 0; f < a.length; f++) {
                        d.push(a.charCodeAt(f))
                    }
                    b.audioblob = new Blob([new Uint8Array(d)], {
                        type: "audio/mpeg3"
                    })
                }
                b.uploader.uploadBlob(b.audioblob, "audio/mpeg3");
                e.embed[b.config.widgetid].callMethod("poodllapi.mp3_disable()");
                b.audiodatacontrol.val("");
                return !1
            })
        }
    }
});
define("filter_poodll/poodll_shadowmediaskin", ["jquery", "core/log", "filter_poodll/utils_amd"], function(a, b) {
    "use strict";
    b.debug("PoodLL Shadow Skin: initialising");
    return {
        instanceprops: null,
        pmr: null,
        uploaded: !1,
        recorded: !1,
        mustResetResourcePlayer: !1,
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        init: function init(a, b) {
            this.instanceprops = a;
            this.pmr = b
        },
        fetch_instanceprops: function fetch_instanceprops() {
            return this.instanceprops
        },
        onUploadSuccess: function onUploadSuccess(b) {
            a("#" + b + " > .poodll_save-recording").hide();
            a("#" + b + " > .poodll_savedsuccessfully").show()
        },
        onUploadFailure: function onUploadFailure() {},
        fetch_status_bar: function fetch_status_bar(a) {
            return "<div class=\"poodll_status_" + a + "\"></div>"
        },
        fetch_preview_audio: function fetch_preview_audio(a) {
            return "<audio class=\"poodll_checkplayer_" + a + " \" style=\"display: none;\" controls></audio>"
        },
        fetch_preview_video: function fetch_preview_video(a) {
            return "<video class=\"poodll_checkplayer_" + a + "\" width=\"320\" height=\"240\"></video>"
        },
        fetch_resource_audio: function fetch_resource_audio(a) {
            return "<audio class=\"poodll_resourceplayer_" + a + "\" style=\"display: none;\" src=\"@@RESOURCEURL@@\" playsinline controls></audio>"
        },
        fetch_resource_video: function fetch_resource_video(a) {
            return "<video class=\"poodll_resourceplayer_" + a + "\" style=\"display: none;\" src=\"@@RESOURCEURL@@\" ></video>"
        },
        fetch_uploader_skin: function fetch_uploader_skin() {
            return !1
        },
        onMediaError: function onMediaError(a) {
            console.error("media error", a)
        },
        onMediaSuccess_video: function onMediaSuccess_video(a) {
            var b = this.fetch_instanceprops(a);
            this.recorded = !0;
            this.do_play_resource(b);
            b.controlbar.resourceplayer.bind("ended", function() {
                b.controlbar.stopbutton.click()
            });
            self.set_visual_mode("recordingmode", b)
        },
        onMediaSuccess_audio: function onMediaSuccess_audio(a) {
            var b = this.fetch_instanceprops(a);
            b.controlbar.checkplayer.attr("src", null);
            this.recorded = !0;
            this.do_play_resource(b);
            b.controlbar.resourceplayer.bind("ended", function() {
                b.controlbar.stopbutton.click()
            });
            self.set_visual_mode("recordingmode", b)
        },
        handle_timer_update: function handle_timer_update(a) {
            var b = this.fetch_instanceprops(a);
            this.update_status(a);
            if (0 == b.timer.seconds && 0 < b.timer.initseconds) {
                b.controlbar.stopbutton.click()
            }
        },
        update_status: function update_status() {},
        set_visual_mode: function set_visual_mode(a, b) {
            var c = this;
            switch (a) {
                case "recordingmode":
                    c.disable_button(b.controlbar.startbutton);
                    b.controlbar.startbutton.hide();
                    c.disable_button(b.controlbar.stopplaybackbutton);
                    b.controlbar.stopplaybackbutton.hide();
                    c.disable_button(b.controlbar.resourcestopbutton);
                    b.controlbar.resourcestopbutton.hide();
                    c.enable_button(b.controlbar.stopbutton);
                    b.controlbar.stopbutton.show();
                    c.disable_button(b.controlbar.playbackbutton);
                    b.controlbar.playbackbutton.show();
                    c.disable_button(b.controlbar.resourceplaybutton);
                    b.controlbar.resourceplaybutton.show();
                    break;
                case "resourceplayingmode":
                    c.disable_button(b.controlbar.stopbutton);
                    b.controlbar.stopbutton.hide();
                    c.disable_button(b.controlbar.playbackbutton);
                    b.controlbar.playbackbutton.hide();
                    c.disable_button(b.controlbar.resourceplaybutton);
                    b.controlbar.resourceplaybutton.hide();
                    c.disable_button(b.controlbar.startbutton);
                    b.controlbar.startbutton.show();
                    c.disable_button(b.controlbar.stopplaybackbutton);
                    b.controlbar.stopplaybackbutton.show();
                    c.enable_button(b.controlbar.resourcestopbutton);
                    b.controlbar.resourcestopbutton.show();
                    break;
                case "playingbackmode":
                    c.disable_button(b.controlbar.stopbutton);
                    b.controlbar.stopbutton.hide();
                    c.disable_button(b.controlbar.playbackbutton);
                    b.controlbar.playbackbutton.hide();
                    c.disable_button(b.controlbar.resourcestopbutton);
                    b.controlbar.resourcestopbutton.hide();
                    c.disable_button(b.controlbar.startbutton);
                    b.controlbar.startbutton.show();
                    c.enable_button(b.controlbar.stopplaybackbutton);
                    b.controlbar.stopplaybackbutton.show();
                    c.disable_button(b.controlbar.resourceplaybutton);
                    b.controlbar.resourceplaybutton.show();
                    break;
                case "neverrecordedmode":
                    c.disable_button(b.controlbar.stopbutton);
                    b.controlbar.stopbutton.hide();
                    c.disable_button(b.controlbar.stopplaybackbutton);
                    b.controlbar.stopplaybackbutton.hide();
                    c.disable_button(b.controlbar.resourcestopbutton);
                    b.controlbar.resourcestopbutton.hide();
                    c.enable_button(b.controlbar.startbutton);
                    b.controlbar.startbutton.show();
                    c.disable_button(b.controlbar.playbackbutton);
                    b.controlbar.playbackbutton.show();
                    c.enable_button(b.controlbar.resourceplaybutton);
                    b.controlbar.resourceplaybutton.show();
                    break;
                case "allstoppedmode":
                    c.disable_button(b.controlbar.stopbutton);
                    b.controlbar.stopbutton.hide();
                    c.disable_button(b.controlbar.stopplaybackbutton);
                    b.controlbar.stopplaybackbutton.hide();
                    c.disable_button(b.controlbar.resourcestopbutton);
                    b.controlbar.resourcestopbutton.hide();
                    c.enable_button(b.controlbar.startbutton);
                    b.controlbar.startbutton.show();
                    c.enable_button(b.controlbar.playbackbutton);
                    b.controlbar.playbackbutton.show();
                    c.enable_button(b.controlbar.resourceplaybutton);
                    b.controlbar.resourceplaybutton.show();
                    break;
            }
        },
        insert_controlbar_video: function insert_controlbar_video(a, b, c, d) {
            var e = this.prepare_controlbar(a, b, c, d, "video");
            return e
        },
        insert_controlbar_audio: function insert_controlbar_audio(a, b, c, d) {
            var e = this.prepare_controlbar(a, b, c, d, "audio");
            return e
        },
        prepare_controlbar: function prepare_controlbar(b, c, d, e, f) {
            var g = this.fetch_instanceprops(c),
                h = g.config.media_skin_style,
                i = "video" == f ? "poodll_mediarecorder_video" : "poodll_mediarecorder_audio";
            e = e.replace("@@RESOURCEURL@@", g.config.resource);
            var j = "poodll_mediarecorder_size_auto";
            switch (g.config.size) {
                case "small":
                    j = "poodll_mediarecorder_size_small";
                    break;
                case "big":
                    j = "poodll_mediarecorder_size_big";
                    break;
                case "auto":
                    j = "poodll_mediarecorder_size_auto";
            }
            var k = this.pmr.fetch_strings(),
                l = "<div class=\"poodll_mediarecorderholder_shadow " + i + " " + j + "\" id=\"holder_" + c + "\">";
            l += "<div class=\"poodll_mediarecorderbox_shadow\" id=\"" + c + "\">";
            l += "<div class=\"style-holder " + h + "\">";
            var m = this.fetch_status_bar("shadow");
            l += m, l += d, l += e, l += "<button type=\"button\" class=\"poodll_mediarecorder_button_shadow poodll_play-resource_shadow\"><span class=\"fa fa-play-circle fa-4x\"></span></button>";
            l += "<button type=\"button\" class=\"poodll_mediarecorder_button_shadow poodll_stop-resource_shadow\" style=\"display: none;\"><span class=\"fa fa-stop-circle fa-4x\"></span></button>";
            l += "<button type=\"button\" class=\"poodll_mediarecorder_button_shadow poodll_start-recording_shadow\"><span class=\"fa fa-play-circle fa-4x\"></span><hr style=\"color: white\"><span class=\"fa fa-microphone fa-4x\"></span></button>";
            l += "<button type=\"button\" class=\"poodll_mediarecorder_button_shadow poodll_stop-recording_shadow pmr_disabled\" style=\"display: none;\" disabled><span class=\"fa fa-stop-circle fa-4x\"></span></button>";
            l += " <button type=\"button\" class=\"poodll_mediarecorder_button_shadow poodll_playback-recording_shadow pmr_disabled\" disabled><span class=\"fa fa-play-circle fa-4x\"></span></button>";
            l += " <button type=\"button\" class=\"poodll_mediarecorder_button_shadow poodll_stopplayback-recording_shadow\" style=\"display: none;\"><span class=\"fa fa-stop-circle fa-4x\"></span></button>";
            l += "<div class=\"marker\" style=\"display: none;\"><i class=\"fa fa-check\" aria-hidden=\"true\"></i></div>";
            l += "</div></div></div>";
            a(b).prepend(l);
            var n = {
                marker: a("#" + c + "  .marker"),
                status: a("#" + c + "  .poodll_status_shadow"),
                resourceplayer: a("#" + c + "  .poodll_resourceplayer_shadow"),
                checkplayer: a("#" + c + "  .poodll_checkplayer_shadow"),
                resourceplaybutton: a("#" + c + "  .poodll_play-resource_shadow"),
                resourcestopbutton: a("#" + c + "  .poodll_stop-resource_shadow"),
                startbutton: a("#" + c + "  .poodll_start-recording_shadow"),
                stopbutton: a("#" + c + "  .poodll_stop-recording_shadow"),
                playbackbutton: a("#" + c + "  .poodll_playback-recording_shadow"),
                stopplaybackbutton: a("#" + c + "  .poodll_stopplayback-recording_shadow"),
                savebutton: a("#" + c + "  .poodll_save-recording_shadow")
            };
            return n
        },
        register_controlbar_events_video: function register_controlbar_events_video(a, b) {
            return this.register_controlbar_events_audio(a, b)
        },
        register_controlbar_events_audio: function register_controlbar_events_audio(a, b) {
            var c = this,
                d = this.pmr,
                e = this.fetch_instanceprops(b);
            e.controlbar.startbutton.click(function() {
                d.do_start_audio(e, a)
            });
            e.controlbar.stopbutton.click(function() {
                d.do_stop_audio(e);
                c.disable_button(this);
                var a = e.controlbar.resourceplayer;
                if (a && a.get(0)) {
                    a.get(0).pause()
                }
                c.set_visual_mode("allstoppedmode", e);
                c.do_stop_resource(e)
            });
            e.controlbar.playbackbutton.click(function() {
                c.disable_button(this);
                e.controlbar.marker.show();
                var a = e.controlbar.resourceplayer.get(0);
                d.do_play_audio(e, a);
                e.mustResetResourcePlayer = !0;
                e.controlbar.resourceplayer.bind("ended", function() {
                    c.set_visual_mode("allstoppedmode", e)
                });
                c.set_visual_mode("playingbackmode", e);
                c.set_completion(!0, e)
            });
            e.controlbar.stopplaybackbutton.click(function() {
                c.do_stop_resource(e);
                c.set_visual_mode("allstoppedmode", e)
            });
            e.controlbar.resourceplaybutton.click(function() {
                c.do_play_resource(e);
                e.controlbar.resourceplayer.bind("ended", function() {
                    if (c.recorded) {
                        c.set_visual_mode("allstoppedmode", e)
                    } else {
                        c.set_visual_mode("neverrecordedmode", e)
                    }
                });
                c.set_visual_mode("resourceplayingmode", e)
            });
            e.controlbar.resourcestopbutton.click(function() {
                c.do_stop_resource(e);
                if (c.recorded) {
                    c.set_visual_mode("allstoppedmode", e)
                } else {
                    c.set_visual_mode("neverrecordedmode", e)
                }
            });
            e.controlbar.savebutton.click(function() {
                c.disable_button(this);
                if (e.blobs && 0 < e.blobs.length) {
                    d.do_save_audio(e);
                    c.uploaded = !0;
                    c.disable_button(e.controlbar.startbutton)
                } else {
                    e.uploader.Output(M.util.get_string("recui_nothingtosaveerror", "filter_poodll"))
                }
                return !1
            });
            window.onbeforeunload = function() {
                c.enable_button(e.controlbar.startbutton);
                var a = e.controlbar.checkplayer;
                if (a && a.get(0)) {
                    a.get(0).pause()
                }
            }
        },
        set_completion: function set_completion(a, b) {
            var c = b.controlbar.completioncheck
        },
        do_stop_resource: function do_stop_resource(a) {
            console.log("stopped the resource");
            var b = a.controlbar.resourceplayer.get(0);
            b.pause();
            b.currentTime = 0;
            if (a.mustResetResourcePlayer) {
                a.mustResetResourcePlayer = !1;
                b.src = a.config.resource;
                b.load()
            }
        },
        do_play_resource: function do_play_resource(a) {
            var b = a.controlbar.resourceplayer.get(0);
            b.play();
            b.currentTime = 0
        },
        enable_button: function enable_button(b) {
            a(b).attr("disabled", !1);
            a(b).removeClass("pmr_disabled")
        },
        disable_button: function disable_button(b) {
            a(b).attr("disabled", !0);
            a(b).addClass("pmr_disabled")
        }
    }
});
define("filter_poodll/timer", ["jquery", "core/log"], function(a, b) {
    "use strict";
    b.debug("Timer: initialising");
    return {
        increment: 1,
        initseconds: 0,
        seconds: 0,
        finalseconds: 0,
        intervalhandle: null,
        callback: null,
        enabled: !1,
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        init: function init(a, b) {
            this.initseconds = parseInt(a);
            this.seconds = parseInt(a);
            this.callback = b;
            this.enabled = !0
        },
        start: function start() {
            if (!this.enabled) {
                return
            }
            var a = this;
            this.finalseconds = 0;
            if (0 < this.initseconds) {
                this.increment = -1
            } else {
                this.increment = 1
            }
            this.intervalhandle = this.customSetInterval(function() {
                a.seconds = a.seconds + a.increment;
                a.finalseconds = a.finalseconds + 1;
                a.callback()
            }, 1e3)
        },
        customSetInterval: function customSetInterval(a, b) {
            var d = Date.now(),
                e = b,
                f = {};

            function c() {
                var g = Date.now(),
                    h = g - d;
                d = g;
                e = b + e - h;
                f.id = setTimeout(c, e);
                a()
            }
            f.id = setTimeout(c, b);
            return f
        },
        disable: function disable() {
            this.enabled = !1
        },
        enable: function enable() {
            this.enabled = !0
        },
        fetch_display_time: function fetch_display_time(a) {
            if (!a) {
                a = this.seconds
            }
            var b = "00" + parseInt(a / 3600);
            b = b.substr(b.length - 2, 2);
            var c = "00" + parseInt(a / 60);
            c = c.substr(c.length - 2, 2);
            var d = "00" + parseInt(a % 60);
            d = d.substr(d.length - 2, 2);
            var e = b + ":" + c + ":" + d;
            return e
        },
        stop: function stop() {
            clearTimeout(this.intervalhandle.id)
        },
        reset: function reset() {
            this.seconds = this.initseconds
        },
        pause: function pause() {
            this.increment = 0
        },
        resume: function resume() {
            if (0 < this.initseconds) {
                this.increment = -1
            } else {
                this.increment = 1
            }
        }
    }
});

function _typeof(e) {
    if ("function" == typeof Symbol && "symbol" == typeof Symbol.iterator) {
        _typeof = function(e) {
            return typeof e
        }
    } else {
        _typeof = function(e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        }
    }
    return _typeof(e)
}! function(n) {
    if ("object" == ("undefined" == typeof exports ? "undefined" : _typeof(exports)) && "undefined" != typeof module) module.exports = n();
    else if ("function" == typeof define && define.amd) define("filter_poodll/react-with-addons", [], n);
    else {
        var e;
        e = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this, e.React = n()
    }
}(function() {
    return function d(p, e, t) {
        function r(o, a) {
            if (!e[o]) {
                if (!p[o]) {
                    var i = "function" == typeof require && require;
                    if (!a && i) return i(o, !0);
                    if (n) return n(o, !0);
                    var s = new Error("Cannot find module '" + o + "'");
                    throw s.code = "MODULE_NOT_FOUND", s
                }
                var u = e[o] = {
                    exports: {}
                };
                p[o][0].call(u.exports, function(t) {
                    var e = p[o][1][t];
                    return r(e ? e : t)
                }, u, u.exports, d, p, e, t)
            }
            return e[o].exports
        }
        for (var n = "function" == typeof require && require, o = 0; o < t.length; o++) {
            r(t[o])
        }
        return r
    }({
        1: [function(n, e) {
            "use strict";
            var t = n(22),
                r = n(26),
                o = n(37),
                a = n(29),
                i = n(62),
                u = n(91),
                s = n(93),
                l = n(115),
                c = n(137),
                p = n(140);
            n(168);
            r.addons = {
                CSSTransitionGroup: a,
                LinkedStateMixin: t,
                PureRenderMixin: o,
                TransitionGroup: u,
                batchedUpdates: function batchedUpdates() {
                    return s.batchedUpdates.apply(this, arguments)
                },
                cloneWithProps: l,
                createFragment: i.create,
                shallowCompare: c,
                update: p
            }, e.exports = r
        }, {
            115: 115,
            137: 137,
            140: 140,
            168: 168,
            22: 22,
            26: 26,
            29: 29,
            37: 37,
            62: 62,
            91: 91,
            93: 93
        }],
        2: [function(n, e) {
            "use strict";
            var t = n(70),
                r = n(119),
                o = n(152);
            e.exports = {
                Mixin: {
                    componentDidMount: function componentDidMount() {
                        this.props.autoFocus && o(r(this))
                    }
                },
                focusDOMComponent: function focusDOMComponent() {
                    o(t.getNode(this._rootNodeID))
                }
            }
        }, {
            119: 119,
            152: 152,
            70: 70
        }],
        3: [function(n, e) {
            "use strict";

            function t() {
                var t = window.opera;
                return "object" == _typeof(t) && "function" == typeof t.version && 12 >= parseInt(t.version(), 10)
            }

            function r(t) {
                return (t.ctrlKey || t.altKey || t.metaKey) && !(t.ctrlKey && t.altKey)
            }

            function I(t) {
                switch (t) {
                    case M.topCompositionStart:
                        return N.compositionStart;
                    case M.topCompositionEnd:
                        return N.compositionEnd;
                    case M.topCompositionUpdate:
                        return N.compositionUpdate;
                }
            }

            function a(n, e) {
                return n === M.topKeyDown && e.keyCode === b
            }

            function i(n, e) {
                switch (n) {
                    case M.topKeyUp:
                        return -1 !== C.indexOf(e.keyCode);
                    case M.topKeyDown:
                        return e.keyCode !== b;
                    case M.topKeyPress:
                    case M.topMouseDown:
                    case M.topBlur:
                        return !0;
                    default:
                        return !1;
                }
            }

            function o(n) {
                var e = n.detail;
                return "object" == _typeof(e) && "data" in e ? e.data : null
            }

            function s(s, e, t, n, r) {
                var u, g;
                if (E ? u = I(s) : O ? i(s, n) && (u = N.compositionEnd) : a(s, n) && (u = N.compositionStart), !u) return null;
                D && (O || u !== N.compositionStart ? u === N.compositionEnd && O && (g = O.getData()) : O = h.getPooled(e));
                var y = m.getPooled(u, t, n, r);
                if (g) y.data = g;
                else {
                    var p = o(n);
                    null !== p && (y.data = p)
                }
                return f.accumulateTwoPhaseDispatches(y), y
            }

            function u(a, e) {
                switch (a) {
                    case M.topCompositionEnd:
                        return o(e);
                    case M.topKeyPress:
                        var t = e.which;
                        return t !== P ? null : (k = !0, T);
                    case M.topTextInput:
                        var n = e.data;
                        return n === T && k ? null : n;
                    default:
                        return null;
                }
            }

            function l(o, e) {
                if (O) {
                    if (o === M.topCompositionEnd || i(o, e)) {
                        var t = O.getData();
                        return h.release(O), O = null, t
                    }
                    return null
                }
                switch (o) {
                    case M.topPaste:
                        return null;
                    case M.topKeyPress:
                        return e.which && !r(e) ? String.fromCharCode(e.which) : null;
                    case M.topCompositionEnd:
                        return D ? null : e.data;
                    default:
                        return null;
                }
            }

            function p(d, e, t, n, r) {
                var o;
                if (o = v ? u(d, n) : l(d, n), !o) return null;
                var p = g.getPooled(N.beforeInput, t, n, r);
                return p.data = o, f.accumulateTwoPhaseDispatches(p), p
            }
            var d = n(15),
                f = n(19),
                c = n(144),
                h = n(20),
                m = n(100),
                g = n(104),
                y = n(163),
                C = [9, 13, 27, 32],
                b = 229,
                E = c.canUseDOM && "CompositionEvent" in window,
                _ = null;
            c.canUseDOM && "documentMode" in document && (_ = document.documentMode);
            var v = c.canUseDOM && "TextEvent" in window && !_ && !t(),
                D = c.canUseDOM && (!E || _ && 8 < _ && 11 >= _),
                P = 32,
                T = String.fromCharCode(32),
                M = d.topLevelTypes,
                N = {
                    beforeInput: {
                        phasedRegistrationNames: {
                            bubbled: y({
                                onBeforeInput: null
                            }),
                            captured: y({
                                onBeforeInputCapture: null
                            })
                        },
                        dependencies: [M.topCompositionEnd, M.topKeyPress, M.topTextInput, M.topPaste]
                    },
                    compositionEnd: {
                        phasedRegistrationNames: {
                            bubbled: y({
                                onCompositionEnd: null
                            }),
                            captured: y({
                                onCompositionEndCapture: null
                            })
                        },
                        dependencies: [M.topBlur, M.topCompositionEnd, M.topKeyDown, M.topKeyPress, M.topKeyUp, M.topMouseDown]
                    },
                    compositionStart: {
                        phasedRegistrationNames: {
                            bubbled: y({
                                onCompositionStart: null
                            }),
                            captured: y({
                                onCompositionStartCapture: null
                            })
                        },
                        dependencies: [M.topBlur, M.topCompositionStart, M.topKeyDown, M.topKeyPress, M.topKeyUp, M.topMouseDown]
                    },
                    compositionUpdate: {
                        phasedRegistrationNames: {
                            bubbled: y({
                                onCompositionUpdate: null
                            }),
                            captured: y({
                                onCompositionUpdateCapture: null
                            })
                        },
                        dependencies: [M.topBlur, M.topCompositionUpdate, M.topKeyDown, M.topKeyPress, M.topKeyUp, M.topMouseDown]
                    }
                },
                k = !1,
                O = null;
            e.exports = {
                eventTypes: N,
                extractEvents: function extractEvents(a, e, t, n, r) {
                    return [s(a, e, t, n, r), p(a, e, t, n, r)]
                }
            }
        }, {
            100: 100,
            104: 104,
            144: 144,
            15: 15,
            163: 163,
            19: 19,
            20: 20
        }],
        4: [function(n, e) {
            "use strict";

            function d(n, e) {
                return n + e.charAt(0).toUpperCase() + e.substring(1)
            }
            var r = {
                    animationIterationCount: !0,
                    boxFlex: !0,
                    boxFlexGroup: !0,
                    boxOrdinalGroup: !0,
                    columnCount: !0,
                    flex: !0,
                    flexGrow: !0,
                    flexPositive: !0,
                    flexShrink: !0,
                    flexNegative: !0,
                    flexOrder: !0,
                    fontWeight: !0,
                    lineClamp: !0,
                    lineHeight: !0,
                    opacity: !0,
                    order: !0,
                    orphans: !0,
                    tabSize: !0,
                    widows: !0,
                    zIndex: !0,
                    zoom: !0,
                    fillOpacity: !0,
                    stopOpacity: !0,
                    strokeDashoffset: !0,
                    strokeOpacity: !0,
                    strokeWidth: !0
                },
                t = ["Webkit", "ms", "Moz", "O"];
            Object.keys(r).forEach(function(n) {
                t.forEach(function(e) {
                    r[d(e, n)] = r[n]
                })
            });
            e.exports = {
                isUnitlessNumber: r,
                shorthandPropertyExpansions: {
                    background: {
                        backgroundAttachment: !0,
                        backgroundColor: !0,
                        backgroundImage: !0,
                        backgroundPositionX: !0,
                        backgroundPositionY: !0,
                        backgroundRepeat: !0
                    },
                    backgroundPosition: {
                        backgroundPositionX: !0,
                        backgroundPositionY: !0
                    },
                    border: {
                        borderWidth: !0,
                        borderStyle: !0,
                        borderColor: !0
                    },
                    borderBottom: {
                        borderBottomWidth: !0,
                        borderBottomStyle: !0,
                        borderBottomColor: !0
                    },
                    borderLeft: {
                        borderLeftWidth: !0,
                        borderLeftStyle: !0,
                        borderLeftColor: !0
                    },
                    borderRight: {
                        borderRightWidth: !0,
                        borderRightStyle: !0,
                        borderRightColor: !0
                    },
                    borderTop: {
                        borderTopWidth: !0,
                        borderTopStyle: !0,
                        borderTopColor: !0
                    },
                    font: {
                        fontStyle: !0,
                        fontVariant: !0,
                        fontWeight: !0,
                        fontSize: !0,
                        lineHeight: !0,
                        fontFamily: !0
                    },
                    outline: {
                        outlineWidth: !0,
                        outlineStyle: !0,
                        outlineColor: !0
                    }
                }
            }
        }, {}],
        5: [function(n, e) {
            "use strict";
            var t = n(4),
                r = n(144),
                o = n(76),
                m = (n(146), n(116)),
                a = n(157),
                i = n(165),
                s = (n(168), i(function(t) {
                    return a(t)
                })),
                l = !1,
                f = "cssFloat";
            if (r.canUseDOM) {
                var u = document.createElement("div").style;
                try {
                    u.font = ""
                } catch (e) {
                    l = !0
                }
                void 0 === document.documentElement.style.cssFloat && (f = "styleFloat")
            }
            var d = {
                createMarkupForStyles: function createMarkupForStyles(o) {
                    var e = "";
                    for (var a in o) {
                        if (o.hasOwnProperty(a)) {
                            var n = o[a];
                            null != n && (e += s(a) + ":", e += m(a, n) + ";")
                        }
                    }
                    return e || null
                },
                setValueForStyles: function setValueForStyles(r, e) {
                    var d = r.style;
                    for (var n in e) {
                        if (e.hasOwnProperty(n)) {
                            var i = m(n, e[n]);
                            if ("float" == n && (n = f), i) d[n] = i;
                            else {
                                var a = l && t.shorthandPropertyExpansions[n];
                                if (a)
                                    for (var p in a) {
                                        d[p] = ""
                                    } else d[n] = ""
                            }
                        }
                    }
                }
            };
            o.measureMethods(d, "CSSPropertyOperations", {
                setValueForStyles: "setValueForStyles"
            }), e.exports = d
        }, {
            116: 116,
            144: 144,
            146: 146,
            157: 157,
            165: 165,
            168: 168,
            4: 4,
            76: 76
        }],
        6: [function(n, e) {
            "use strict";

            function t() {
                this._callbacks = null, this._contexts = null
            }
            var r = n(25),
                o = n(24),
                a = n(158);
            o(t.prototype, {
                enqueue: function enqueue(n, e) {
                    this._callbacks = this._callbacks || [], this._contexts = this._contexts || [], this._callbacks.push(n), this._contexts.push(e)
                },
                notifyAll: function notifyAll() {
                    var o = this._callbacks,
                        e = this._contexts;
                    if (o) {
                        o.length !== e.length ? a(!1) : void 0, this._callbacks = null, this._contexts = null;
                        for (var t = 0; t < o.length; t++) {
                            o[t].call(e[t])
                        }
                        o.length = 0, e.length = 0
                    }
                },
                reset: function reset() {
                    this._callbacks = null, this._contexts = null
                },
                destructor: function destructor() {
                    this.reset()
                }
            }), r.addPoolingTo(t), e.exports = t
        }, {
            158: 158,
            24: 24,
            25: 25
        }],
        7: [function(n, e) {
            "use strict";

            function U(n) {
                var e = n.nodeName && n.nodeName.toLowerCase();
                return "select" === e || "input" === e && "file" === n.type
            }

            function r(n) {
                var e = b.getPooled(T.change, M, n, E(n));
                g.accumulateTwoPhaseDispatches(e), C.batchedUpdates(o, e)
            }

            function o(t) {
                c.enqueueEvents(t), c.processEventQueue(!1)
            }

            function a(n, e) {
                N = n, M = e, N.attachEvent("onchange", r)
            }

            function i() {
                N && (N.detachEvent("onchange", r), N = null, M = null)
            }

            function F(o, e, t) {
                return o === P.topChange ? t : void 0
            }

            function s(o, e, t) {
                o === P.topFocus ? (i(), a(e, t)) : o === P.topBlur && i()
            }

            function u(n, e) {
                N = n, M = e, w = n.value, V = Object.getOwnPropertyDescriptor(n.constructor.prototype, "value"), Object.defineProperty(N, "value", j), N.attachEvent("onpropertychange", p)
            }

            function l() {
                N && (delete N.value, N.detachEvent("onpropertychange", p), N = null, M = null, w = null, V = null)
            }

            function p(n) {
                if ("value" === n.propertyName) {
                    var e = n.srcElement.value;
                    e !== w && (w = e, r(n))
                }
            }

            function d(o, e, t) {
                return o === P.topInput ? t : void 0
            }

            function f(o, e, t) {
                o === P.topFocus ? (l(), u(e, t)) : o === P.topBlur && l()
            }

            function h(t) {
                return t !== P.topSelectionChange && t !== P.topKeyUp && t !== P.topKeyDown || !N || N.value === w ? void 0 : (w = N.value, M)
            }

            function v(t) {
                return t.nodeName && "input" === t.nodeName.toLowerCase() && ("checkbox" === t.type || "radio" === t.type)
            }

            function m(o, e, t) {
                return o === P.topClick ? t : void 0
            }
            var t = n(15),
                c = n(16),
                g = n(19),
                y = n(144),
                C = n(93),
                b = n(102),
                E = n(125),
                _ = n(130),
                x = n(131),
                D = n(163),
                P = t.topLevelTypes,
                T = {
                    change: {
                        phasedRegistrationNames: {
                            bubbled: D({
                                onChange: null
                            }),
                            captured: D({
                                onChangeCapture: null
                            })
                        },
                        dependencies: [P.topBlur, P.topChange, P.topClick, P.topFocus, P.topInput, P.topKeyDown, P.topKeyUp, P.topSelectionChange]
                    }
                },
                N = null,
                M = null,
                w = null,
                V = null,
                B = !1;
            y.canUseDOM && (B = _("change") && (!("documentMode" in document) || 8 < document.documentMode));
            var W = !1;
            y.canUseDOM && (W = _("input") && (!("documentMode" in document) || 9 < document.documentMode));
            var j = {
                get: function get() {
                    return V.get.call(this)
                },
                set: function set(t) {
                    w = "" + t, V.set.call(this, t)
                }
            };
            e.exports = {
                eventTypes: T,
                extractEvents: function extractEvents(r, e, t, n, o) {
                    var a, l;
                    if (U(e) ? B ? a = F : l = s : x(e) ? W ? a = d : (a = h, l = f) : v(e) && (a = m), a) {
                        var y = a(r, e, t);
                        if (y) {
                            var c = b.getPooled(T.change, y, n, o);
                            return c.type = "change", g.accumulateTwoPhaseDispatches(c), c
                        }
                    }
                    l && l(r, e, t)
                }
            }
        }, {
            102: 102,
            125: 125,
            130: 130,
            131: 131,
            144: 144,
            15: 15,
            16: 16,
            163: 163,
            19: 19,
            93: 93
        }],
        8: [function(n, e) {
            "use strict";
            var t = 0;
            e.exports = {
                createReactRootIndex: function createReactRootIndex() {
                    return t++
                }
            }
        }, {}],
        9: [function(n, e) {
            "use strict";

            function t(o, e, t) {
                var n = t >= o.childNodes.length ? null : o.childNodes.item(t);
                o.insertBefore(e, n)
            }
            var r = n(12),
                o = n(72),
                a = n(76),
                d = n(135),
                p = n(136),
                s = n(158),
                i = {
                    dangerouslyReplaceNodeWithMarkup: r.dangerouslyReplaceNodeWithMarkup,
                    updateTextContent: p,
                    processUpdates: function processUpdates(a, e) {
                        for (var u, l = null, y = null, C = 0; C < a.length; C++) {
                            if (u = a[C], u.type === o.MOVE_EXISTING || u.type === o.REMOVE_NODE) {
                                var b = u.fromIndex,
                                    E = u.parentNode.childNodes[b],
                                    f = u.parentID;
                                E ? void 0 : s(!1), l = l || {}, l[f] = l[f] || [], l[f][b] = E, y = y || [], y.push(E)
                            }
                        }
                        var h;
                        if (h = e.length && "string" == typeof e[0] ? r.dangerouslyRenderMarkup(e) : e, y)
                            for (var _ = 0; _ < y.length; _++) {
                                y[_].parentNode.removeChild(y[_])
                            }
                        for (var x = 0; x < a.length; x++) {
                            switch (u = a[x], u.type) {
                                case o.INSERT_MARKUP:
                                    t(u.parentNode, h[u.markupIndex], u.toIndex);
                                    break;
                                case o.MOVE_EXISTING:
                                    t(u.parentNode, l[u.parentID][u.fromIndex], u.toIndex);
                                    break;
                                case o.SET_MARKUP:
                                    d(u.parentNode, u.content);
                                    break;
                                case o.TEXT_CONTENT:
                                    p(u.parentNode, u.content);
                                    break;
                                case o.REMOVE_NODE:
                            }
                        }
                    }
                };
            a.measureMethods(i, "DOMChildrenOperations", {
                updateTextContent: "updateTextContent"
            }), e.exports = i
        }, {
            12: 12,
            135: 135,
            136: 136,
            158: 158,
            72: 72,
            76: 76
        }],
        10: [function(n, e) {
            "use strict";

            function m(n, e) {
                return (n & e) === e
            }
            var r = n(158),
                o = {
                    MUST_USE_ATTRIBUTE: 1,
                    MUST_USE_PROPERTY: 2,
                    HAS_SIDE_EFFECTS: 4,
                    HAS_BOOLEAN_VALUE: 8,
                    HAS_NUMERIC_VALUE: 16,
                    HAS_POSITIVE_NUMERIC_VALUE: 48,
                    HAS_OVERLOADED_BOOLEAN_VALUE: 64,
                    injectDOMPropertyConfig: function injectDOMPropertyConfig(a) {
                        var e = o,
                            t = a.Properties || {},
                            n = a.DOMAttributeNamespaces || {},
                            i = a.DOMAttributeNames || {},
                            s = a.DOMPropertyNames || {},
                            u = a.DOMMutationMethods || {};
                        a.isCustomAttribute && g._isCustomAttributeFunctions.push(a.isCustomAttribute);
                        for (var l in t) {
                            g.properties.hasOwnProperty(l) ? r(!1) : void 0;
                            var p = l.toLowerCase(),
                                d = t[l],
                                c = {
                                    attributeName: p,
                                    attributeNamespace: null,
                                    propertyName: l,
                                    mutationMethod: null,
                                    mustUseAttribute: m(d, e.MUST_USE_ATTRIBUTE),
                                    mustUseProperty: m(d, e.MUST_USE_PROPERTY),
                                    hasSideEffects: m(d, e.HAS_SIDE_EFFECTS),
                                    hasBooleanValue: m(d, e.HAS_BOOLEAN_VALUE),
                                    hasNumericValue: m(d, e.HAS_NUMERIC_VALUE),
                                    hasPositiveNumericValue: m(d, e.HAS_POSITIVE_NUMERIC_VALUE),
                                    hasOverloadedBooleanValue: m(d, e.HAS_OVERLOADED_BOOLEAN_VALUE)
                                };
                            if (c.mustUseAttribute && c.mustUseProperty ? r(!1) : void 0, !c.mustUseProperty && c.hasSideEffects ? r(!1) : void 0, 1 >= c.hasBooleanValue + c.hasNumericValue + c.hasOverloadedBooleanValue ? void 0 : r(!1), i.hasOwnProperty(l)) {
                                var f = i[l];
                                c.attributeName = f
                            }
                            n.hasOwnProperty(l) && (c.attributeNamespace = n[l]), s.hasOwnProperty(l) && (c.propertyName = s[l]), u.hasOwnProperty(l) && (c.mutationMethod = u[l]), g.properties[l] = c
                        }
                    }
                },
                a = {},
                g = {
                    ID_ATTRIBUTE_NAME: "data-reactid",
                    properties: {},
                    getPossibleStandardName: null,
                    _isCustomAttributeFunctions: [],
                    isCustomAttribute: function isCustomAttribute(o) {
                        for (var e = 0, r; e < g._isCustomAttributeFunctions.length; e++) {
                            r = g._isCustomAttributeFunctions[e];
                            if (r(o)) return !0
                        }
                        return !1
                    },
                    getDefaultValueForProperty: function getDefaultValueForProperty(o, e) {
                        var t, d = a[o];
                        return d || (a[o] = d = {}), e in d || (t = document.createElement(o), d[e] = t[e]), d[e]
                    },
                    injection: o
                };
            e.exports = g
        }, {
            158: 158
        }],
        11: [function(n, e) {
            "use strict";

            function d(t) {
                return i.hasOwnProperty(t) ? !0 : a.hasOwnProperty(t) ? !1 : r.test(t) ? (i[t] = !0, !0) : (a[t] = !0, !1)
            }

            function m(n, e) {
                return null == e || n.hasBooleanValue && !e || n.hasNumericValue && isNaN(e) || n.hasPositiveNumericValue && 1 > e || n.hasOverloadedBooleanValue && !1 === e
            }
            var f = n(10),
                t = n(76),
                o = n(133),
                r = (n(168), /^[a-zA-Z_][\w\.\-]*$/),
                a = {},
                i = {},
                c = {
                    createMarkupForID: function createMarkupForID(t) {
                        return f.ID_ATTRIBUTE_NAME + "=" + o(t)
                    },
                    setAttributeForID: function setAttributeForID(n, e) {
                        n.setAttribute(f.ID_ATTRIBUTE_NAME, e)
                    },
                    createMarkupForProperty: function createMarkupForProperty(a, e) {
                        var t = f.properties.hasOwnProperty(a) ? f.properties[a] : null;
                        if (t) {
                            if (m(t, e)) return "";
                            var n = t.attributeName;
                            return t.hasBooleanValue || t.hasOverloadedBooleanValue && !0 === e ? n + "=\"\"" : n + "=" + o(e)
                        }
                        return f.isCustomAttribute(a) ? null == e ? "" : a + "=" + o(e) : null
                    },
                    createMarkupForCustomAttribute: function createMarkupForCustomAttribute(n, e) {
                        return d(n) && null != e ? n + "=" + o(e) : ""
                    },
                    setValueForProperty: function setValueForProperty(o, e, t) {
                        var n = f.properties.hasOwnProperty(e) ? f.properties[e] : null;
                        if (n) {
                            var r = n.mutationMethod;
                            if (r) r(o, t);
                            else if (m(n, t)) this.deleteValueForProperty(o, e);
                            else if (n.mustUseAttribute) {
                                var a = n.attributeName,
                                    d = n.attributeNamespace;
                                d ? o.setAttributeNS(d, a, "" + t) : n.hasBooleanValue || n.hasOverloadedBooleanValue && !0 === t ? o.setAttribute(a, "") : o.setAttribute(a, "" + t)
                            } else {
                                var i = n.propertyName;
                                n.hasSideEffects && "" + o[i] == "" + t || (o[i] = t)
                            }
                        } else f.isCustomAttribute(e) && c.setValueForAttribute(o, e, t)
                    },
                    setValueForAttribute: function setValueForAttribute(o, e, t) {
                        d(e) && (null == t ? o.removeAttribute(e) : o.setAttribute(e, "" + t))
                    },
                    deleteValueForProperty: function deleteValueForProperty(a, e) {
                        var t = f.properties.hasOwnProperty(e) ? f.properties[e] : null;
                        if (t) {
                            var n = t.mutationMethod;
                            if (n) n(a, void 0);
                            else if (t.mustUseAttribute) a.removeAttribute(t.attributeName);
                            else {
                                var r = t.propertyName,
                                    o = f.getDefaultValueForProperty(a.nodeName, r);
                                t.hasSideEffects && "" + a[r] === o || (a[r] = o)
                            }
                        } else f.isCustomAttribute(e) && a.removeAttribute(e)
                    }
                };
            t.measureMethods(c, "DOMPropertyOperations", {
                setValueForProperty: "setValueForProperty",
                setValueForAttribute: "setValueForAttribute",
                deleteValueForProperty: "deleteValueForProperty"
            }), e.exports = c
        }, {
            10: 10,
            133: 133,
            168: 168,
            76: 76
        }],
        12: [function(n, e) {
            "use strict";

            function d(t) {
                return t.substring(1, t.indexOf(" "))
            }
            var r = n(144),
                o = n(149),
                a = n(150),
                i = n(154),
                u = n(158),
                t = /^(<[^ \/>]+)/;
            e.exports = {
                dangerouslyRenderMarkup: function dangerouslyRenderMarkup(s) {
                    r.canUseDOM ? void 0 : u(!1);
                    for (var e, l = {}, n = 0; n < s.length; n++) {
                        s[n] ? void 0 : u(!1), e = d(s[n]), e = i(e) ? e : "*", l[e] = l[e] || [], l[e][n] = s[n]
                    }
                    var c = [],
                        b = 0;
                    for (e in l) {
                        if (l.hasOwnProperty(e)) {
                            var E, _ = l[e];
                            for (E in _) {
                                if (_.hasOwnProperty(E)) {
                                    var x = _[E];
                                    _[E] = x.replace(t, "$1 data-danger-index=\"" + E + "\" ")
                                }
                            }
                            for (var m = o(_.join(""), a), g = 0, v; g < m.length; ++g) {
                                v = m[g];
                                v.hasAttribute && v.hasAttribute("data-danger-index") && (E = +v.getAttribute("data-danger-index"), v.removeAttribute("data-danger-index"), c.hasOwnProperty(E) ? u(!1) : void 0, c[E] = v, b += 1)
                            }
                        }
                    }
                    return b !== c.length ? u(!1) : void 0, c.length !== s.length ? u(!1) : void 0, c
                },
                dangerouslyReplaceNodeWithMarkup: function dangerouslyReplaceNodeWithMarkup(d, e) {
                    r.canUseDOM ? void 0 : u(!1), e ? void 0 : u(!1), "html" === d.tagName.toLowerCase() ? u(!1) : void 0;
                    var t;
                    t = "string" == typeof e ? o(e, a)[0] : e, d.parentNode.replaceChild(t, d)
                }
            }
        }, {
            144: 144,
            149: 149,
            150: 150,
            154: 154,
            158: 158
        }],
        13: [function(n, e) {
            "use strict";
            var t = n(163),
                r = [t({
                    ResponderEventPlugin: null
                }), t({
                    SimpleEventPlugin: null
                }), t({
                    TapEventPlugin: null
                }), t({
                    EnterLeaveEventPlugin: null
                }), t({
                    ChangeEventPlugin: null
                }), t({
                    SelectEventPlugin: null
                }), t({
                    BeforeInputEventPlugin: null
                })];
            e.exports = r
        }, {
            163: 163
        }],
        14: [function(n, e) {
            "use strict";
            var t = n(15),
                b = n(19),
                o = n(106),
                a = n(70),
                r = n(163),
                i = t.topLevelTypes,
                s = a.getFirstReactDOM,
                l = {
                    mouseEnter: {
                        registrationName: r({
                            onMouseEnter: null
                        }),
                        dependencies: [i.topMouseOut, i.topMouseOver]
                    },
                    mouseLeave: {
                        registrationName: r({
                            onMouseLeave: null
                        }),
                        dependencies: [i.topMouseOut, i.topMouseOver]
                    }
                },
                c = [null, null];
            e.exports = {
                eventTypes: l,
                extractEvents: function extractEvents(p, e, t, n, r) {
                    if (p === i.topMouseOver && (n.relatedTarget || n.fromElement)) return null;
                    if (p !== i.topMouseOut && p !== i.topMouseOver) return null;
                    var u;
                    if (e.window === e) u = e;
                    else {
                        var E = e.ownerDocument;
                        u = E ? E.defaultView || E.parentWindow : window
                    }
                    var f, _, x = "",
                        D = "";
                    if (p === i.topMouseOut ? (f = e, x = t, _ = s(n.relatedTarget || n.toElement), _ ? D = a.getID(_) : _ = u, _ = _ || u) : (f = u, _ = e, D = t), f === _) return null;
                    var P = o.getPooled(l.mouseLeave, x, n, r);
                    P.type = "mouseleave", P.target = f, P.relatedTarget = _;
                    var y = o.getPooled(l.mouseEnter, D, n, r);
                    return y.type = "mouseenter", y.target = _, y.relatedTarget = f, b.accumulateEnterLeaveDispatches(P, y, x, D), c[0] = P, c[1] = y, c
                }
            }
        }, {
            106: 106,
            15: 15,
            163: 163,
            19: 19,
            70: 70
        }],
        15: [function(n, e) {
            "use strict";
            var t = n(162),
                r = t({
                    bubbled: null,
                    captured: null
                }),
                o = t({
                    topAbort: null,
                    topBlur: null,
                    topCanPlay: null,
                    topCanPlayThrough: null,
                    topChange: null,
                    topClick: null,
                    topCompositionEnd: null,
                    topCompositionStart: null,
                    topCompositionUpdate: null,
                    topContextMenu: null,
                    topCopy: null,
                    topCut: null,
                    topDoubleClick: null,
                    topDrag: null,
                    topDragEnd: null,
                    topDragEnter: null,
                    topDragExit: null,
                    topDragLeave: null,
                    topDragOver: null,
                    topDragStart: null,
                    topDrop: null,
                    topDurationChange: null,
                    topEmptied: null,
                    topEncrypted: null,
                    topEnded: null,
                    topError: null,
                    topFocus: null,
                    topInput: null,
                    topKeyDown: null,
                    topKeyPress: null,
                    topKeyUp: null,
                    topLoad: null,
                    topLoadedData: null,
                    topLoadedMetadata: null,
                    topLoadStart: null,
                    topMouseDown: null,
                    topMouseMove: null,
                    topMouseOut: null,
                    topMouseOver: null,
                    topMouseUp: null,
                    topPaste: null,
                    topPause: null,
                    topPlay: null,
                    topPlaying: null,
                    topProgress: null,
                    topRateChange: null,
                    topReset: null,
                    topScroll: null,
                    topSeeked: null,
                    topSeeking: null,
                    topSelectionChange: null,
                    topStalled: null,
                    topSubmit: null,
                    topSuspend: null,
                    topTextInput: null,
                    topTimeUpdate: null,
                    topTouchCancel: null,
                    topTouchEnd: null,
                    topTouchMove: null,
                    topTouchStart: null,
                    topVolumeChange: null,
                    topWaiting: null,
                    topWheel: null
                });
            e.exports = {
                topLevelTypes: o,
                PropagationPhases: r
            }
        }, {
            162: 162
        }],
        16: [function(n, e) {
            "use strict";
            var m = n(17),
                r = n(18),
                o = n(59),
                g = n(112),
                a = n(121),
                i = n(158),
                s = (n(168), {}),
                u = null,
                t = function(n, e) {
                    n && (r.executeDispatchesInOrder(n, e), n.isPersistent() || n.constructor.release(n))
                },
                p = function(n) {
                    return t(n, !0)
                },
                d = function(n) {
                    return t(n, !1)
                },
                f = null,
                y = {
                    injection: {
                        injectMount: r.injection.injectMount,
                        injectInstanceHandle: function injectInstanceHandle(t) {
                            f = t
                        },
                        getInstanceHandle: function getInstanceHandle() {
                            return f
                        },
                        injectEventPluginOrder: m.injectEventPluginOrder,
                        injectEventPluginsByName: m.injectEventPluginsByName
                    },
                    eventNameDispatchConfigs: m.eventNameDispatchConfigs,
                    registrationNameModules: m.registrationNameModules,
                    putListener: function putListener(r, e, t) {
                        "function" != typeof t ? i(!1) : void 0;
                        var n = s[e] || (s[e] = {});
                        n[r] = t;
                        var o = m.registrationNameModules[e];
                        o && o.didPutListener && o.didPutListener(r, e, t)
                    },
                    getListener: function getListener(o, e) {
                        var t = s[e];
                        return t && t[o]
                    },
                    deleteListener: function deleteListener(r, e) {
                        var t = m.registrationNameModules[e];
                        t && t.willDeleteListener && t.willDeleteListener(r, e);
                        var n = s[e];
                        n && delete n[r]
                    },
                    deleteAllListeners: function deleteAllListeners(o) {
                        for (var e in s) {
                            if (s[e][o]) {
                                var t = m.registrationNameModules[e];
                                t && t.willDeleteListener && t.willDeleteListener(o, e), delete s[e][o]
                            }
                        }
                    },
                    extractEvents: function extractEvents(r, e, t, n, o) {
                        for (var a, d = m.plugins, i = 0, s; i < d.length; i++) {
                            s = d[i];
                            if (s) {
                                var f = s.extractEvents(r, e, t, n, o);
                                f && (a = g(a, f))
                            }
                        }
                        return a
                    },
                    enqueueEvents: function enqueueEvents(t) {
                        t && (u = g(u, t))
                    },
                    processEventQueue: function processEventQueue(n) {
                        var e = u;
                        u = null, n ? a(e, p) : a(e, d), u ? i(!1) : void 0, o.rethrowCaughtError()
                    },
                    __purge: function __purge() {
                        s = {}
                    },
                    __getListenerBank: function __getListenerBank() {
                        return s
                    }
                };
            e.exports = y
        }, {
            112: 112,
            121: 121,
            158: 158,
            168: 168,
            17: 17,
            18: 18,
            59: 59
        }],
        17: [function(n, e) {
            "use strict";

            function d() {
                if (i)
                    for (var o in f) {
                        var e = f[o],
                            t = i.indexOf(o);
                        if (-1 < t ? void 0 : m(!1), !s.plugins[t]) {
                            e.extractEvents ? void 0 : m(!1), s.plugins[t] = e;
                            var n = e.eventTypes;
                            for (var r in n) {
                                p(n[r], e, r) ? void 0 : m(!1)
                            }
                        }
                    }
            }

            function p(a, e, t) {
                s.eventNameDispatchConfigs.hasOwnProperty(t) ? m(!1) : void 0, s.eventNameDispatchConfigs[t] = a;
                var n = a.phasedRegistrationNames;
                if (n) {
                    for (var r in n) {
                        if (n.hasOwnProperty(r)) {
                            var o = n[r];
                            c(o, e, t)
                        }
                    }
                    return !0
                }
                return a.registrationName ? (c(a.registrationName, e, t), !0) : !1
            }

            function c(o, e, t) {
                s.registrationNameModules[o] ? m(!1) : void 0, s.registrationNameModules[o] = e, s.registrationNameDependencies[o] = e.eventTypes[t].dependencies
            }
            var m = n(158),
                i = null,
                f = {},
                s = {
                    plugins: [],
                    eventNameDispatchConfigs: {},
                    registrationNameModules: {},
                    registrationNameDependencies: {},
                    injectEventPluginOrder: function injectEventPluginOrder(t) {
                        i ? m(!1) : void 0, i = Array.prototype.slice.call(t), d()
                    },
                    injectEventPluginsByName: function injectEventPluginsByName(r) {
                        var e = !1;
                        for (var a in r) {
                            if (r.hasOwnProperty(a)) {
                                var n = r[a];
                                f.hasOwnProperty(a) && f[a] === n || (f[a] ? m(!1) : void 0, f[a] = n, e = !0)
                            }
                        }
                        e && d()
                    },
                    getPluginModuleForEvent: function getPluginModuleForEvent(o) {
                        var e = o.dispatchConfig;
                        if (e.registrationName) return s.registrationNameModules[e.registrationName] || null;
                        for (var t in e.phasedRegistrationNames) {
                            if (e.phasedRegistrationNames.hasOwnProperty(t)) {
                                var n = s.registrationNameModules[e.phasedRegistrationNames[t]];
                                if (n) return n
                            }
                        }
                        return null
                    },
                    _resetEventPlugins: function _resetEventPlugins() {
                        i = null;
                        for (var a in f) {
                            f.hasOwnProperty(a) && delete f[a]
                        }
                        s.plugins.length = 0;
                        var e = s.eventNameDispatchConfigs;
                        for (var t in e) {
                            e.hasOwnProperty(t) && delete e[t]
                        }
                        var n = s.registrationNameModules;
                        for (var r in n) {
                            n.hasOwnProperty(r) && delete n[r]
                        }
                    }
                };
            e.exports = s
        }, {
            158: 158
        }],
        18: [function(n, e) {
            "use strict";

            function a(a, e, t, n) {
                var r = a.type || "unknown-event";
                a.currentTarget = p.Mount.getNode(n), e ? d.invokeGuardedCallbackWithCatch(r, t, a, n) : d.invokeGuardedCallback(r, t, a, n), a.currentTarget = null
            }

            function o(o) {
                var e = o._dispatchListeners,
                    t = o._dispatchIDs;
                if (Array.isArray(e)) {
                    for (var n = 0; n < e.length && !o.isPropagationStopped(); n++) {
                        if (e[n](o, t[n])) return t[n]
                    }
                } else if (e && e(o, t)) return t;
                return null
            }
            var t = n(15),
                d = n(59),
                i = n(158),
                p = (n(168), {
                    Mount: null,
                    injectMount: function injectMount(t) {
                        p.Mount = t
                    }
                }),
                r = t.topLevelTypes;
            e.exports = {
                isEndish: function(t) {
                    return t === r.topMouseUp || t === r.topTouchEnd || t === r.topTouchCancel
                },
                isMoveish: function(t) {
                    return t === r.topMouseMove || t === r.topTouchMove
                },
                isStartish: function(t) {
                    return t === r.topMouseDown || t === r.topTouchStart
                },
                executeDirectDispatch: function(o) {
                    var e = o._dispatchListeners,
                        t = o._dispatchIDs;
                    Array.isArray(e) ? i(!1) : void 0;
                    var n = e ? e(o, t) : null;
                    return o._dispatchListeners = null, o._dispatchIDs = null, n
                },
                executeDispatchesInOrder: function(d, e) {
                    var t = d._dispatchListeners,
                        n = d._dispatchIDs;
                    if (Array.isArray(t))
                        for (var r = 0; r < t.length && !d.isPropagationStopped(); r++) {
                            a(d, e, t[r], n[r])
                        } else t && a(d, e, t, n);
                    d._dispatchListeners = null, d._dispatchIDs = null
                },
                executeDispatchesInOrderStopAtTrue: function(n) {
                    var e = o(n);
                    return n._dispatchIDs = null, n._dispatchListeners = null, e
                },
                hasDispatches: function(t) {
                    return !!t._dispatchListeners
                },
                getNode: function getNode(t) {
                    return p.Mount.getNode(t)
                },
                getID: function getID(t) {
                    return p.Mount.getID(t)
                },
                injection: p
            }
        }, {
            15: 15,
            158: 158,
            168: 168,
            59: 59
        }],
        19: [function(n, e) {
            "use strict";

            function d(o, e, t) {
                var n = e.dispatchConfig.phasedRegistrationNames[t];
                return m(o, n)
            }

            function t(r, e, t) {
                var n = e ? c.bubbled : c.captured,
                    o = d(r, t, n);
                o && (t._dispatchListeners = u(t._dispatchListeners, o), t._dispatchIDs = u(t._dispatchIDs, r))
            }

            function o(n) {
                n && n.dispatchConfig.phasedRegistrationNames && s.injection.getInstanceHandle().traverseTwoPhase(n.dispatchMarker, t, n)
            }

            function r(n) {
                n && n.dispatchConfig.phasedRegistrationNames && s.injection.getInstanceHandle().traverseTwoPhaseSkipTarget(n.dispatchMarker, t, n)
            }

            function a(a, e, t) {
                if (t && t.dispatchConfig.registrationName) {
                    var n = t.dispatchConfig.registrationName,
                        r = m(a, n);
                    r && (t._dispatchListeners = u(t._dispatchListeners, r), t._dispatchIDs = u(t._dispatchIDs, a))
                }
            }

            function i(t) {
                t && t.dispatchConfig.registrationName && a(t.dispatchMarker, null, t)
            }
            var p = n(15),
                s = n(16),
                u = (n(168), n(112)),
                l = n(121),
                c = p.PropagationPhases,
                m = s.getListener;
            e.exports = {
                accumulateTwoPhaseDispatches: function(t) {
                    l(t, o)
                },
                accumulateTwoPhaseDispatchesSkipTarget: function(t) {
                    l(t, r)
                },
                accumulateDirectDispatches: function(t) {
                    l(t, i)
                },
                accumulateEnterLeaveDispatches: function(o, e, t, n) {
                    s.injection.getInstanceHandle().traverseEnterLeave(t, n, a, o, e)
                }
            }
        }, {
            112: 112,
            121: 121,
            15: 15,
            16: 16,
            168: 168
        }],
        20: [function(n, e) {
            "use strict";

            function t(t) {
                this._root = t, this._startText = this.getText(), this._fallbackText = null
            }
            var r = n(25),
                o = n(24),
                a = n(128);
            o(t.prototype, {
                destructor: function destructor() {
                    this._root = null, this._startText = null, this._fallbackText = null
                },
                getText: function getText() {
                    return "value" in this._root ? this._root.value : this._root[a()]
                },
                getData: function getData() {
                    if (this._fallbackText) return this._fallbackText;
                    var d, p, s = this._startText,
                        n = s.length,
                        r = this.getText(),
                        o = r.length;
                    for (d = 0; n > d && s[d] === r[d]; d++) {}
                    var a = n - d;
                    for (p = 1; a >= p && s[n - p] === r[o - p]; p++) {}
                    var i = 1 < p ? 1 - p : void 0;
                    return this._fallbackText = r.slice(d, i), this._fallbackText
                }
            }), r.addPoolingTo(t), e.exports = t
        }, {
            128: 128,
            24: 24,
            25: 25
        }],
        21: [function(n, e) {
            "use strict";
            var t, m = n(10),
                o = n(144),
                a = m.injection.MUST_USE_ATTRIBUTE,
                i = m.injection.MUST_USE_PROPERTY,
                u = m.injection.HAS_BOOLEAN_VALUE,
                s = m.injection.HAS_SIDE_EFFECTS,
                l = m.injection.HAS_NUMERIC_VALUE,
                c = m.injection.HAS_POSITIVE_NUMERIC_VALUE,
                p = m.injection.HAS_OVERLOADED_BOOLEAN_VALUE;
            if (o.canUseDOM) {
                var d = document.implementation;
                t = d && d.hasFeature && d.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure", "1.1")
            }
            var f = {
                isCustomAttribute: RegExp.prototype.test.bind(/^(data|aria)-[a-z_][a-z\d_.\-]*$/),
                Properties: {
                    accept: null,
                    acceptCharset: null,
                    accessKey: null,
                    action: null,
                    allowFullScreen: a | u,
                    allowTransparency: a,
                    alt: null,
                    async: u,
                    autoComplete: null,
                    autoPlay: u,
                    capture: a | u,
                    cellPadding: null,
                    cellSpacing: null,
                    charSet: a,
                    challenge: a,
                    checked: i | u,
                    classID: a,
                    className: t ? a : i,
                    cols: a | c,
                    colSpan: null,
                    content: null,
                    contentEditable: null,
                    contextMenu: a,
                    controls: i | u,
                    coords: null,
                    crossOrigin: null,
                    data: null,
                    dateTime: a,
                    default: u,
                    defer: u,
                    dir: null,
                    disabled: a | u,
                    download: p,
                    draggable: null,
                    encType: null,
                    form: a,
                    formAction: a,
                    formEncType: a,
                    formMethod: a,
                    formNoValidate: u,
                    formTarget: a,
                    frameBorder: a,
                    headers: null,
                    height: a,
                    hidden: a | u,
                    high: null,
                    href: null,
                    hrefLang: null,
                    htmlFor: null,
                    httpEquiv: null,
                    icon: null,
                    id: i,
                    inputMode: a,
                    integrity: null,
                    is: a,
                    keyParams: a,
                    keyType: a,
                    kind: null,
                    label: null,
                    lang: null,
                    list: a,
                    loop: i | u,
                    low: null,
                    manifest: a,
                    marginHeight: null,
                    marginWidth: null,
                    max: null,
                    maxLength: a,
                    media: a,
                    mediaGroup: null,
                    method: null,
                    min: null,
                    minLength: a,
                    multiple: i | u,
                    muted: i | u,
                    name: null,
                    nonce: a,
                    noValidate: u,
                    open: u,
                    optimum: null,
                    pattern: null,
                    placeholder: null,
                    poster: null,
                    preload: null,
                    radioGroup: null,
                    readOnly: i | u,
                    rel: null,
                    required: u,
                    reversed: u,
                    role: a,
                    rows: a | c,
                    rowSpan: null,
                    sandbox: null,
                    scope: null,
                    scoped: u,
                    scrolling: null,
                    seamless: a | u,
                    selected: i | u,
                    shape: null,
                    size: a | c,
                    sizes: a,
                    span: c,
                    spellCheck: null,
                    src: null,
                    srcDoc: i,
                    srcLang: null,
                    srcSet: a,
                    start: l,
                    step: null,
                    style: null,
                    summary: null,
                    tabIndex: null,
                    target: null,
                    title: null,
                    type: null,
                    useMap: null,
                    value: i | s,
                    width: a,
                    wmode: a,
                    wrap: null,
                    about: a,
                    datatype: a,
                    inlist: a,
                    prefix: a,
                    property: a,
                    resource: a,
                    typeof: a,
                    vocab: a,
                    autoCapitalize: null,
                    autoCorrect: null,
                    autoSave: null,
                    color: null,
                    itemProp: a,
                    itemScope: a | u,
                    itemType: a,
                    itemID: a,
                    itemRef: a,
                    results: null,
                    security: a,
                    unselectable: a
                },
                DOMAttributeNames: {
                    acceptCharset: "accept-charset",
                    className: "class",
                    htmlFor: "for",
                    httpEquiv: "http-equiv"
                },
                DOMPropertyNames: {
                    autoCapitalize: "autocapitalize",
                    autoComplete: "autocomplete",
                    autoCorrect: "autocorrect",
                    autoFocus: "autofocus",
                    autoPlay: "autoplay",
                    autoSave: "autosave",
                    encType: "encoding",
                    hrefLang: "hreflang",
                    radioGroup: "radiogroup",
                    spellCheck: "spellcheck",
                    srcDoc: "srcdoc",
                    srcSet: "srcset"
                }
            };
            e.exports = f
        }, {
            10: 10,
            144: 144
        }],
        22: [function(n, e) {
            "use strict";
            var t = n(68),
                r = n(88);
            e.exports = {
                linkState: function linkState(n) {
                    return new t(this.state[n], r.createStateKeySetter(this, n))
                }
            }
        }, {
            68: 68,
            88: 88
        }],
        23: [function(n, e) {
            "use strict";

            function t(t) {
                null != t.checkedLink && null != t.valueLink ? s(!1) : void 0
            }

            function r(n) {
                t(n), null != n.value || null != n.onChange ? s(!1) : void 0
            }

            function o(n) {
                t(n), null != n.checked || null != n.onChange ? s(!1) : void 0
            }

            function a(n) {
                if (n) {
                    var e = n.getName();
                    if (e) return " Check the render method of `" + e + "`."
                }
                return ""
            }
            var i = n(80),
                u = n(79),
                s = n(158),
                l = (n(168), {
                    button: !0,
                    checkbox: !0,
                    image: !0,
                    hidden: !0,
                    radio: !0,
                    reset: !0,
                    submit: !0
                }),
                c = {
                    value: function value(n, e) {
                        return !n[e] || l[n.type] || n.onChange || n.readOnly || n.disabled ? null : new Error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.")
                    },
                    checked: function checked(n, e) {
                        return !n[e] || n.onChange || n.readOnly || n.disabled ? null : new Error("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.")
                    },
                    onChange: i.func
                },
                p = {};
            e.exports = {
                checkPropTypes: function checkPropTypes(d, e, t) {
                    for (var n in c) {
                        if (c.hasOwnProperty(n)) var r = c[n](e, n, d, u.prop);
                        r instanceof Error && !(r.message in p) && (p[r.message] = !0, a(t))
                    }
                },
                getValue: function getValue(t) {
                    return t.valueLink ? (r(t), t.valueLink.value) : t.value
                },
                getChecked: function getChecked(t) {
                    return t.checkedLink ? (o(t), t.checkedLink.value) : t.checked
                },
                executeOnChange: function executeOnChange(n, e) {
                    return n.valueLink ? (r(n), n.valueLink.requestChange(e.target.value)) : n.checkedLink ? (o(n), n.checkedLink.requestChange(e.target.checked)) : n.onChange ? n.onChange.call(void 0, e) : void 0
                }
            }
        }, {
            158: 158,
            168: 168,
            79: 79,
            80: 80
        }],
        24: [function(n, e) {
            "use strict";

            function t(t) {
                if (null == t) throw new TypeError("Object.assign target cannot be null or undefined");
                for (var e = Object(t), n = Object.prototype.hasOwnProperty, r = 1, d; r < arguments.length; r++) {
                    d = arguments[r];
                    if (null != d) {
                        var p = Object(d);
                        for (var i in p) {
                            n.call(p, i) && (e[i] = p[i])
                        }
                    }
                }
                return e
            }
            e.exports = t
        }, {}],
        25: [function(n, e) {
            "use strict";
            var a = n(158),
                r = function(o) {
                    var e = this;
                    if (e.instancePool.length) {
                        var t = e.instancePool.pop();
                        return e.call(t, o), t
                    }
                    return new e(o)
                },
                o = function(n) {
                    var e = this;
                    n instanceof e ? void 0 : a(!1), n.destructor(), e.instancePool.length < e.poolSize && e.instancePool.push(n)
                };
            e.exports = {
                addPoolingTo: function d(a, e) {
                    var t = a;
                    return t.instancePool = [], t.getPooled = e || r, t.poolSize || (t.poolSize = 10), t.release = o, t
                },
                oneArgumentPooler: r,
                twoArgumentPooler: function a(o, e) {
                    var t = this;
                    if (t.instancePool.length) {
                        var n = t.instancePool.pop();
                        return t.call(n, o, e), n
                    }
                    return new t(o, e)
                },
                threeArgumentPooler: function i(a, e, t) {
                    var n = this;
                    if (n.instancePool.length) {
                        var r = n.instancePool.pop();
                        return n.call(r, a, e, t), r
                    }
                    return new n(a, e, t)
                },
                fourArgumentPooler: function u(d, e, t, n) {
                    var r = this;
                    if (r.instancePool.length) {
                        var o = r.instancePool.pop();
                        return r.call(o, d, e, t, n), o
                    }
                    return new r(d, e, t, n)
                },
                fiveArgumentPooler: function s(d, e, t, n, r) {
                    var o = this;
                    if (o.instancePool.length) {
                        var a = o.instancePool.pop();
                        return o.call(a, d, e, t, n, r), a
                    }
                    return new o(d, e, t, n, r)
                }
            }
        }, {
            158: 158
        }],
        26: [function(n, e) {
            "use strict";
            var t = n(40),
                r = n(50),
                o = n(67),
                a = n(24),
                d = n(117),
                i = {};
            a(i, o), a(i, {
                findDOMNode: d("findDOMNode", "ReactDOM", "react-dom", t, t.findDOMNode),
                render: d("render", "ReactDOM", "react-dom", t, t.render),
                unmountComponentAtNode: d("unmountComponentAtNode", "ReactDOM", "react-dom", t, t.unmountComponentAtNode),
                renderToString: d("renderToString", "ReactDOMServer", "react-dom/server", r, r.renderToString),
                renderToStaticMarkup: d("renderToStaticMarkup", "ReactDOMServer", "react-dom/server", r, r.renderToStaticMarkup)
            }), i.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = t, i.__SECRET_DOM_SERVER_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = r, e.exports = i
        }, {
            117: 117,
            24: 24,
            40: 40,
            50: 50,
            67: 67
        }],
        27: [function(n, e) {
            "use strict";
            var t = (n(66), n(119)),
                r = (n(168), "_getDOMNodeDidWarn");
            e.exports = {
                getDOMNode: function getDOMNode() {
                    return this.constructor._getDOMNodeDidWarn = !0, t(this)
                }
            }
        }, {
            119: 119,
            168: 168,
            66: 66
        }],
        28: [function(n, e) {
            "use strict";

            function y(t) {
                return Object.prototype.hasOwnProperty.call(t, c) || (t[c] = l++, p[t[c]] = {}), p[t[c]]
            }
            var r = n(15),
                t = n(16),
                o = n(17),
                a = n(60),
                i = n(76),
                s = n(111),
                u = n(24),
                C = n(130),
                p = {},
                d = !1,
                l = 0,
                b = {
                    topAbort: "abort",
                    topBlur: "blur",
                    topCanPlay: "canplay",
                    topCanPlayThrough: "canplaythrough",
                    topChange: "change",
                    topClick: "click",
                    topCompositionEnd: "compositionend",
                    topCompositionStart: "compositionstart",
                    topCompositionUpdate: "compositionupdate",
                    topContextMenu: "contextmenu",
                    topCopy: "copy",
                    topCut: "cut",
                    topDoubleClick: "dblclick",
                    topDrag: "drag",
                    topDragEnd: "dragend",
                    topDragEnter: "dragenter",
                    topDragExit: "dragexit",
                    topDragLeave: "dragleave",
                    topDragOver: "dragover",
                    topDragStart: "dragstart",
                    topDrop: "drop",
                    topDurationChange: "durationchange",
                    topEmptied: "emptied",
                    topEncrypted: "encrypted",
                    topEnded: "ended",
                    topError: "error",
                    topFocus: "focus",
                    topInput: "input",
                    topKeyDown: "keydown",
                    topKeyPress: "keypress",
                    topKeyUp: "keyup",
                    topLoadedData: "loadeddata",
                    topLoadedMetadata: "loadedmetadata",
                    topLoadStart: "loadstart",
                    topMouseDown: "mousedown",
                    topMouseMove: "mousemove",
                    topMouseOut: "mouseout",
                    topMouseOver: "mouseover",
                    topMouseUp: "mouseup",
                    topPaste: "paste",
                    topPause: "pause",
                    topPlay: "play",
                    topPlaying: "playing",
                    topProgress: "progress",
                    topRateChange: "ratechange",
                    topScroll: "scroll",
                    topSeeked: "seeked",
                    topSeeking: "seeking",
                    topSelectionChange: "selectionchange",
                    topStalled: "stalled",
                    topSuspend: "suspend",
                    topTextInput: "textInput",
                    topTimeUpdate: "timeupdate",
                    topTouchCancel: "touchcancel",
                    topTouchEnd: "touchend",
                    topTouchMove: "touchmove",
                    topTouchStart: "touchstart",
                    topVolumeChange: "volumechange",
                    topWaiting: "waiting",
                    topWheel: "wheel"
                },
                c = "_reactListenersID" + (Math.random() + "").slice(2),
                m = u({}, a, {
                    ReactEventListener: null,
                    injection: {
                        injectReactEventListener: function injectReactEventListener(t) {
                            t.setHandleTopLevel(m.handleTopLevel), m.ReactEventListener = t
                        }
                    },
                    setEnabled: function setEnabled(t) {
                        m.ReactEventListener && m.ReactEventListener.setEnabled(t)
                    },
                    isEnabled: function isEnabled() {
                        return !(!m.ReactEventListener || !m.ReactEventListener.isEnabled())
                    },
                    listenTo: function listenTo(d, e) {
                        for (var t = e, n = y(t), a = o.registrationNameDependencies[d], i = r.topLevelTypes, p = 0, s; p < a.length; p++) {
                            s = a[p];
                            n.hasOwnProperty(s) && n[s] || (s === i.topWheel ? C("wheel") ? m.ReactEventListener.trapBubbledEvent(i.topWheel, "wheel", t) : C("mousewheel") ? m.ReactEventListener.trapBubbledEvent(i.topWheel, "mousewheel", t) : m.ReactEventListener.trapBubbledEvent(i.topWheel, "DOMMouseScroll", t) : s === i.topScroll ? C("scroll", !0) ? m.ReactEventListener.trapCapturedEvent(i.topScroll, "scroll", t) : m.ReactEventListener.trapBubbledEvent(i.topScroll, "scroll", m.ReactEventListener.WINDOW_HANDLE) : s === i.topFocus || s === i.topBlur ? (C("focus", !0) ? (m.ReactEventListener.trapCapturedEvent(i.topFocus, "focus", t), m.ReactEventListener.trapCapturedEvent(i.topBlur, "blur", t)) : C("focusin") && (m.ReactEventListener.trapBubbledEvent(i.topFocus, "focusin", t), m.ReactEventListener.trapBubbledEvent(i.topBlur, "focusout", t)), n[i.topBlur] = !0, n[i.topFocus] = !0) : b.hasOwnProperty(s) && m.ReactEventListener.trapBubbledEvent(s, b[s], t), n[s] = !0)
                        }
                    },
                    trapBubbledEvent: function trapBubbledEvent(o, e, t) {
                        return m.ReactEventListener.trapBubbledEvent(o, e, t)
                    },
                    trapCapturedEvent: function trapCapturedEvent(o, e, t) {
                        return m.ReactEventListener.trapCapturedEvent(o, e, t)
                    },
                    ensureScrollValueMonitoring: function ensureScrollValueMonitoring() {
                        if (!d) {
                            var t = s.refreshScrollValues;
                            m.ReactEventListener.monitorScrollValue(t), d = !0
                        }
                    },
                    eventNameDispatchConfigs: t.eventNameDispatchConfigs,
                    registrationNameModules: t.registrationNameModules,
                    putListener: t.putListener,
                    getListener: t.getListener,
                    deleteListener: t.deleteListener,
                    deleteAllListeners: t.deleteAllListeners
                });
            i.measureMethods(m, "ReactBrowserEventEmitter", {
                putListener: "putListener",
                deleteListener: "deleteListener"
            }), e.exports = m
        }, {
            111: 111,
            130: 130,
            15: 15,
            16: 16,
            17: 17,
            24: 24,
            60: 60,
            76: 76
        }],
        29: [function(n, e) {
            "use strict";

            function t(n) {
                var o = "transition" + n + "Timeout";
                return function(t) {
                    if (t["transition" + t]) {
                        if (null == t[o]) return new Error(o + " wasn't supplied to ReactCSSTransitionGroup: this can cause unreliable animations and won't be supported in a future version of React. See https://fb.me/react-animation-transition-group-timeout for more information.");
                        if ("number" != typeof t[o]) return new Error(o + " must be a number (in milliseconds)")
                    }
                }
            }
            var r = n(26),
                o = n(24),
                a = n(91),
                d = n(30),
                i = r.createClass({
                    displayName: "ReactCSSTransitionGroup",
                    propTypes: {
                        transitionName: d.propTypes.name,
                        transitionAppear: r.PropTypes.bool,
                        transitionEnter: r.PropTypes.bool,
                        transitionLeave: r.PropTypes.bool,
                        transitionAppearTimeout: t("Appear"),
                        transitionEnterTimeout: t("Enter"),
                        transitionLeaveTimeout: t("Leave")
                    },
                    getDefaultProps: function getDefaultProps() {
                        return {
                            transitionAppear: !1,
                            transitionEnter: !0,
                            transitionLeave: !0
                        }
                    },
                    _wrapChild: function _wrapChild(t) {
                        return r.createElement(d, {
                            name: this.props.transitionName,
                            appear: this.props.transitionAppear,
                            enter: this.props.transitionEnter,
                            leave: this.props.transitionLeave,
                            appearTimeout: this.props.transitionAppearTimeout,
                            enterTimeout: this.props.transitionEnterTimeout,
                            leaveTimeout: this.props.transitionLeaveTimeout
                        }, t)
                    },
                    render: function render() {
                        return r.createElement(a, o({}, this.props, {
                            childFactory: this._wrapChild
                        }))
                    }
                });
            e.exports = i
        }, {
            24: 24,
            26: 26,
            30: 30,
            91: 91
        }],
        30: [function(n, e) {
            "use strict";
            var t = n(26),
                d = n(40),
                o = n(142),
                a = n(90),
                r = n(132),
                i = t.createClass({
                    displayName: "ReactCSSTransitionGroupChild",
                    propTypes: {
                        name: t.PropTypes.oneOfType([t.PropTypes.string, t.PropTypes.shape({
                            enter: t.PropTypes.string,
                            leave: t.PropTypes.string,
                            active: t.PropTypes.string
                        }), t.PropTypes.shape({
                            enter: t.PropTypes.string,
                            enterActive: t.PropTypes.string,
                            leave: t.PropTypes.string,
                            leaveActive: t.PropTypes.string,
                            appear: t.PropTypes.string,
                            appearActive: t.PropTypes.string
                        })]).isRequired,
                        appear: t.PropTypes.bool,
                        enter: t.PropTypes.bool,
                        leave: t.PropTypes.bool,
                        appearTimeout: t.PropTypes.number,
                        enterTimeout: t.PropTypes.number,
                        leaveTimeout: t.PropTypes.number
                    },
                    transition: function transition(i, p, e) {
                        var t = d.findDOMNode(this);
                        if (!t) return void(p && p());
                        var n = this.props.name[i] || this.props.name + "-" + i,
                            r = this.props.name[i + "Active"] || n + "-active",
                            s = null,
                            u = function(d) {
                                d && d.target !== t || (clearTimeout(s), o.removeClass(t, n), o.removeClass(t, r), a.removeEndEventListener(t, u), p && p())
                            };
                        o.addClass(t, n), this.queueClass(r), e ? (s = setTimeout(u, e), this.transitionTimeouts.push(s)) : a.addEndEventListener(t, u)
                    },
                    queueClass: function queueClass(t) {
                        this.classNameQueue.push(t), this.timeout || (this.timeout = setTimeout(this.flushClassNameQueue, 17))
                    },
                    flushClassNameQueue: function flushClassNameQueue() {
                        this.isMounted() && this.classNameQueue.forEach(o.addClass.bind(o, d.findDOMNode(this))), this.classNameQueue.length = 0, this.timeout = null
                    },
                    componentWillMount: function componentWillMount() {
                        this.classNameQueue = [], this.transitionTimeouts = []
                    },
                    componentWillUnmount: function componentWillUnmount() {
                        this.timeout && clearTimeout(this.timeout), this.transitionTimeouts.forEach(function(t) {
                            clearTimeout(t)
                        })
                    },
                    componentWillAppear: function componentWillAppear(t) {
                        this.props.appear ? this.transition("appear", t, this.props.appearTimeout) : t()
                    },
                    componentWillEnter: function componentWillEnter(t) {
                        this.props.enter ? this.transition("enter", t, this.props.enterTimeout) : t()
                    },
                    componentWillLeave: function componentWillLeave(t) {
                        this.props.leave ? this.transition("leave", t, this.props.leaveTimeout) : t()
                    },
                    render: function render() {
                        return r(this.props.children)
                    }
                });
            e.exports = i
        }, {
            132: 132,
            142: 142,
            26: 26,
            40: 40,
            90: 90
        }],
        31: [function(n, e) {
            "use strict";

            function t(a, e, t) {
                var n = void 0 === a[t];
                null != e && n && (a[t] = o(e, null))
            }
            var d = n(82),
                o = n(129),
                a = n(138),
                r = n(139),
                i = (n(168), {
                    instantiateChildren: function instantiateChildren(n) {
                        if (null == n) return null;
                        var e = {};
                        return r(n, t, e), e
                    },
                    updateChildren: function updateChildren(i, e, t, n) {
                        if (!e && !i) return null;
                        for (var r in e) {
                            if (e.hasOwnProperty(r)) {
                                var m = i && i[r],
                                    s = m && m._currentElement,
                                    l = e[r];
                                if (null != m && a(s, l)) d.receiveComponent(m, l, t, n), e[r] = m;
                                else {
                                    m && d.unmountComponent(m, r);
                                    var c = o(l, null);
                                    e[r] = c
                                }
                            }
                        }
                        for (r in i) {
                            !i.hasOwnProperty(r) || e && e.hasOwnProperty(r) || d.unmountComponent(i[r])
                        }
                        return e
                    },
                    unmountChildren: function unmountChildren(o) {
                        for (var e in o) {
                            if (o.hasOwnProperty(e)) {
                                var t = o[e];
                                d.unmountComponent(t)
                            }
                        }
                    }
                });
            e.exports = i
        }, {
            129: 129,
            138: 138,
            139: 139,
            168: 168,
            82: 82
        }],
        32: [function(n, e) {
            "use strict";

            function d(t) {
                return ("" + t).replace(h, "//")
            }

            function i(n, e) {
                this.func = n, this.context = e, this.count = 0
            }

            function o(n, e) {
                var t = n.func,
                    r = n.context;
                t.call(r, e, n.count++)
            }

            function r(o, e, t, n) {
                this.result = o, this.keyPrefix = e, this.func = t, this.context = n, this.count = 0
            }

            function u(r, e, t) {
                var n = r.result,
                    o = r.keyPrefix,
                    a = r.func,
                    i = r.context,
                    u = a.call(i, e, r.count++);
                Array.isArray(u) ? c(u, n, t, l.thatReturnsArgument) : null != u && (p.isValidElement(u) && (u = p.cloneAndReplaceKey(u, o + (u !== e ? d(u.key || "") + "/" : "") + t)), n.push(u))
            }

            function c(p, e, t, n, o) {
                var a = "";
                null != t && (a = d(t) + "/");
                var c = r.getPooled(e, a, n, o);
                s(p, u, c), r.release(c)
            }

            function t() {
                return null
            }
            var a = n(25),
                p = n(55),
                l = n(150),
                s = n(139),
                m = a.twoArgumentPooler,
                f = a.fourArgumentPooler,
                h = /\/(?!\/)/g;
            i.prototype.destructor = function() {
                this.func = null, this.context = null, this.count = 0
            }, a.addPoolingTo(i, m), r.prototype.destructor = function() {
                this.result = null, this.keyPrefix = null, this.func = null, this.context = null, this.count = 0
            }, a.addPoolingTo(r, f);
            e.exports = {
                forEach: function(a, e, t) {
                    if (null == a) return a;
                    var n = i.getPooled(e, t);
                    s(a, o, n), i.release(n)
                },
                map: function(o, e, t) {
                    if (null == o) return o;
                    var n = [];
                    return c(o, n, null, e, t), n
                },
                mapIntoWithKeyPrefixInternal: c,
                count: function(n) {
                    return s(n, t, null)
                },
                toArray: function(n) {
                    var e = [];
                    return c(n, e, null, l.thatReturnsArgument), e
                }
            }
        }, {
            139: 139,
            150: 150,
            25: 25,
            55: 55
        }],
        33: [function(n, e) {
            "use strict";

            function T(o, e) {
                var t = b.hasOwnProperty(e) ? b[e] : null;
                _.hasOwnProperty(e) && (t !== y.OVERRIDE_BASE ? h(!1) : void 0), o.hasOwnProperty(e) && (t !== y.DEFINE_MANY && t !== y.DEFINE_MANY_MERGED ? h(!1) : void 0)
            }

            function r(r, e) {
                if (e) {
                    "function" == typeof e ? h(!1) : void 0, c.isValidElement(e) ? h(!1) : void 0;
                    var d = r.prototype;
                    e.hasOwnProperty(g) && E.mixins(r, e.mixins);
                    for (var n in e) {
                        if (e.hasOwnProperty(n) && n !== g) {
                            var o = e[n];
                            if (T(d, n), E.hasOwnProperty(n)) E[n](r, o);
                            else {
                                var a = b.hasOwnProperty(n),
                                    i = d.hasOwnProperty(n),
                                    s = "function" == typeof o && !a && !i && !1 !== e.autobind;
                                if (s) d.__reactAutoBindMap || (d.__reactAutoBindMap = {}), d.__reactAutoBindMap[n] = o, d[n] = o;
                                else if (i) {
                                    var p = b[n];
                                    !a || p !== y.DEFINE_MANY_MERGED && p !== y.DEFINE_MANY ? h(!1) : void 0, p === y.DEFINE_MANY_MERGED ? d[n] = N(d[n], o) : p === y.DEFINE_MANY && (d[n] = t(d[n], o))
                                } else d[n] = o
                            }
                        }
                    }
                }
            }

            function o(d, e) {
                if (e)
                    for (var t in e) {
                        var n = e[t];
                        if (e.hasOwnProperty(t)) {
                            var r = t in E;
                            r ? h(!1) : void 0;
                            var o = t in d;
                            o ? h(!1) : void 0, d[t] = n
                        }
                    }
            }

            function a(o, e) {
                o && e && "object" == _typeof(o) && "object" == _typeof(e) ? void 0 : h(!1);
                for (var t in e) {
                    e.hasOwnProperty(t) && (void 0 !== o[t] ? h(!1) : void 0, o[t] = e[t])
                }
                return o
            }

            function N(d, e) {
                return function() {
                    var t = d.apply(this, arguments),
                        n = e.apply(this, arguments);
                    if (null == t) return n;
                    if (null == n) return t;
                    var r = {};
                    return a(r, t), a(r, n), r
                }
            }

            function t(n, e) {
                return function() {
                    n.apply(this, arguments), e.apply(this, arguments)
                }
            }

            function i(o, e) {
                var t = e.bind(o);
                return t
            }

            function s(o) {
                for (var e in o.__reactAutoBindMap) {
                    if (o.__reactAutoBindMap.hasOwnProperty(e)) {
                        var t = o.__reactAutoBindMap[e];
                        o[e] = i(o, t)
                    }
                }
            }
            var u = n(34),
                c = n(55),
                d = (n(79), n(78), n(74)),
                p = n(24),
                l = n(151),
                h = n(158),
                m = n(162),
                f = n(163),
                g = (n(168), f({
                    mixins: null
                })),
                y = m({
                    DEFINE_ONCE: null,
                    DEFINE_MANY: null,
                    OVERRIDE_BASE: null,
                    DEFINE_MANY_MERGED: null
                }),
                C = [],
                b = {
                    mixins: y.DEFINE_MANY,
                    statics: y.DEFINE_MANY,
                    propTypes: y.DEFINE_MANY,
                    contextTypes: y.DEFINE_MANY,
                    childContextTypes: y.DEFINE_MANY,
                    getDefaultProps: y.DEFINE_MANY_MERGED,
                    getInitialState: y.DEFINE_MANY_MERGED,
                    getChildContext: y.DEFINE_MANY_MERGED,
                    render: y.DEFINE_ONCE,
                    componentWillMount: y.DEFINE_MANY,
                    componentDidMount: y.DEFINE_MANY,
                    componentWillReceiveProps: y.DEFINE_MANY,
                    shouldComponentUpdate: y.DEFINE_ONCE,
                    componentWillUpdate: y.DEFINE_MANY,
                    componentDidUpdate: y.DEFINE_MANY,
                    componentWillUnmount: y.DEFINE_MANY,
                    updateComponent: y.OVERRIDE_BASE
                },
                E = {
                    displayName: function displayName(n, e) {
                        n.displayName = e
                    },
                    mixins: function mixins(o, e) {
                        if (e)
                            for (var t = 0; t < e.length; t++) {
                                r(o, e[t])
                            }
                    },
                    childContextTypes: function childContextTypes(n, e) {
                        n.childContextTypes = p({}, n.childContextTypes, e)
                    },
                    contextTypes: function contextTypes(n, e) {
                        n.contextTypes = p({}, n.contextTypes, e)
                    },
                    getDefaultProps: function getDefaultProps(n, e) {
                        n.getDefaultProps ? n.getDefaultProps = N(n.getDefaultProps, e) : n.getDefaultProps = e
                    },
                    propTypes: function propTypes(n, e) {
                        n.propTypes = p({}, n.propTypes, e)
                    },
                    statics: function statics(n, e) {
                        o(n, e)
                    },
                    autobind: function autobind() {}
                },
                _ = {
                    replaceState: function replaceState(n, e) {
                        this.updater.enqueueReplaceState(this, n), e && this.updater.enqueueCallback(this, e)
                    },
                    isMounted: function isMounted() {
                        return this.updater.isMounted(this)
                    },
                    setProps: function setProps(n, e) {
                        this.updater.enqueueSetProps(this, n), e && this.updater.enqueueCallback(this, e)
                    },
                    replaceProps: function replaceProps(n, e) {
                        this.updater.enqueueReplaceProps(this, n), e && this.updater.enqueueCallback(this, e)
                    }
                },
                x = function() {};
            p(x.prototype, u.prototype, _);
            e.exports = {
                createClass: function createClass(o) {
                    var e = function(t, e, o) {
                        this.__reactAutoBindMap && s(this), this.props = t, this.context = e, this.refs = l, this.updater = o || d, this.state = null;
                        var n = this.getInitialState ? this.getInitialState() : null;
                        "object" != _typeof(n) || Array.isArray(n) ? h(!1) : void 0, this.state = n
                    };
                    e.prototype = new x, e.prototype.constructor = e, C.forEach(r.bind(null, e)), r(e, o), e.getDefaultProps && (e.defaultProps = e.getDefaultProps()), e.prototype.render ? void 0 : h(!1);
                    for (var t in b) {
                        e.prototype[t] || (e.prototype[t] = null)
                    }
                    return e
                },
                injection: {
                    injectMixin: function injectMixin(t) {
                        C.push(t)
                    }
                }
            }
        }, {
            151: 151,
            158: 158,
            162: 162,
            163: 163,
            168: 168,
            24: 24,
            34: 34,
            55: 55,
            74: 74,
            78: 78,
            79: 79
        }],
        34: [function(n, e) {
            "use strict";

            function t(a, e, t) {
                this.props = a, this.context = e, this.refs = o, this.updater = t || r
            }
            var r = n(74),
                o = (n(114), n(151)),
                a = n(158);
            n(168);
            t.prototype.isReactComponent = {}, t.prototype.setState = function(n, e) {
                "object" != _typeof(n) && "function" != typeof n && null != n ? a(!1) : void 0, this.updater.enqueueSetState(this, n), e && this.updater.enqueueCallback(this, e)
            }, t.prototype.forceUpdate = function(t) {
                this.updater.enqueueForceUpdate(this), t && this.updater.enqueueCallback(this, t)
            };
            e.exports = t
        }, {
            114: 114,
            151: 151,
            158: 158,
            168: 168,
            74: 74
        }],
        35: [function(n, e) {
            "use strict";
            var t = n(45),
                r = n(70),
                o = {
                    processChildrenUpdates: t.dangerouslyProcessChildrenUpdates,
                    replaceNodeWithMarkupByID: t.dangerouslyReplaceNodeWithMarkupByID,
                    unmountIDFromEnvironment: function unmountIDFromEnvironment(t) {
                        r.purgeID(t)
                    }
                };
            e.exports = o
        }, {
            45: 45,
            70: 70
        }],
        36: [function(n, e) {
            "use strict";
            var t = n(158),
                r = !1,
                d = {
                    unmountIDFromEnvironment: null,
                    replaceNodeWithMarkupByID: null,
                    processChildrenUpdates: null,
                    injection: {
                        injectEnvironment: function injectEnvironment(n) {
                            r ? t(!1) : void 0, d.unmountIDFromEnvironment = n.unmountIDFromEnvironment, d.replaceNodeWithMarkupByID = n.replaceNodeWithMarkupByID, d.processChildrenUpdates = n.processChildrenUpdates, r = !0
                        }
                    }
                };
            e.exports = d
        }, {
            158: 158
        }],
        37: [function(n, e) {
            "use strict";
            var o = n(137);
            e.exports = {
                shouldComponentUpdate: function shouldComponentUpdate(n, e) {
                    return o(this, n, e)
                }
            }
        }, {
            137: 137
        }],
        38: [function(n, e) {
            "use strict";

            function C(o) {
                var e = o._currentElement._owner || null;
                if (e) {
                    var t = e.getName();
                    if (t) return " Check the render method of `" + t + "`."
                }
                return ""
            }

            function b() {}
            var o = n(36),
                t = n(39),
                E = n(55),
                u = n(66),
                r = n(76),
                s = n(79),
                _ = (n(78), n(82)),
                p = n(92),
                d = n(24),
                x = n(151),
                h = n(158),
                l = n(138);
            n(168);
            b.prototype.render = function() {
                var t = u.get(this)._currentElement.type;
                return t(this.props, this.context, this.updater)
            };
            var v = 1,
                a = {
                    construct: function construct(t) {
                        this._currentElement = t, this._rootNodeID = null, this._instance = null, this._pendingElement = null, this._pendingStateQueue = null, this._pendingReplaceState = !1, this._pendingForceUpdate = !1, this._renderedComponent = null, this._context = null, this._mountOrder = 0, this._topLevelWrapper = null, this._pendingCallbacks = null
                    },
                    mountComponent: function mountComponent(o, e, t) {
                        this._context = t, this._mountOrder = v++, this._rootNodeID = o;
                        var n, d, s = this._processProps(this._currentElement.props),
                            i = this._processContext(t),
                            l = this._currentElement.type,
                            c = "prototype" in l;
                        c && (n = new l(s, i, p)), (!c || null === n || !1 === n || E.isValidElement(n)) && (d = n, n = new b(l)), n.props = s, n.context = i, n.refs = x, n.updater = p, this._instance = n, u.set(n, this);
                        var f = n.state;
                        void 0 === f && (n.state = f = null), "object" != _typeof(f) || Array.isArray(f) ? h(!1) : void 0, this._pendingStateQueue = null, this._pendingReplaceState = !1, this._pendingForceUpdate = !1, n.componentWillMount && (n.componentWillMount(), this._pendingStateQueue && (n.state = this._processPendingState(n.props, n.context))), void 0 === d && (d = this._renderValidatedComponent()), this._renderedComponent = this._instantiateReactComponent(d);
                        var g = _.mountComponent(this._renderedComponent, o, e, this._processChildContext(t));
                        return n.componentDidMount && e.getReactMountReady().enqueue(n.componentDidMount, n), g
                    },
                    unmountComponent: function unmountComponent() {
                        var t = this._instance;
                        t.componentWillUnmount && t.componentWillUnmount(), _.unmountComponent(this._renderedComponent), this._renderedComponent = null, this._instance = null, this._pendingStateQueue = null, this._pendingReplaceState = !1, this._pendingForceUpdate = !1, this._pendingCallbacks = null, this._pendingElement = null, this._context = null, this._rootNodeID = null, this._topLevelWrapper = null, u.remove(t)
                    },
                    _maskContext: function _maskContext(a) {
                        var e = null,
                            d = this._currentElement.type,
                            n = d.contextTypes;
                        if (!n) return x;
                        e = {};
                        for (var r in n) {
                            e[r] = a[r]
                        }
                        return e
                    },
                    _processContext: function _processContext(n) {
                        var e = this._maskContext(n);
                        return e
                    },
                    _processChildContext: function _processChildContext(a) {
                        var e = this._currentElement.type,
                            t = this._instance,
                            n = t.getChildContext && t.getChildContext();
                        if (n) {
                            "object" != _typeof(e.childContextTypes) ? h(!1) : void 0;
                            for (var r in n) {
                                r in e.childContextTypes ? void 0 : h(!1)
                            }
                            return d({}, a, n)
                        }
                        return a
                    },
                    _processProps: function _processProps(t) {
                        return t
                    },
                    _checkPropTypes: function _checkPropTypes(r, e, t) {
                        var n = this.getName();
                        for (var o in r) {
                            if (r.hasOwnProperty(o)) {
                                var a;
                                try {
                                    "function" != typeof r[o] ? h(!1) : void 0, a = r[o](e, o, n, t)
                                } catch (e) {
                                    a = e
                                }
                                a instanceof Error && (C(this), t === s.prop)
                            }
                        }
                    },
                    receiveComponent: function receiveComponent(a, e, t) {
                        var n = this._currentElement,
                            r = this._context;
                        this._pendingElement = null, this.updateComponent(e, n, a, r, t)
                    },
                    performUpdateIfNecessary: function performUpdateIfNecessary(t) {
                        null != this._pendingElement && _.receiveComponent(this, this._pendingElement || this._currentElement, t, this._context), (null !== this._pendingStateQueue || this._pendingForceUpdate) && this.updateComponent(t, this._currentElement, this._currentElement, this._context, this._context)
                    },
                    updateComponent: function updateComponent(d, e, t, n, r) {
                        var o, p = this._instance,
                            i = this._context === r ? p.context : this._processContext(r);
                        e === t ? o = t.props : (o = this._processProps(t.props), p.componentWillReceiveProps && p.componentWillReceiveProps(o, i));
                        var u = this._processPendingState(o, i),
                            s = this._pendingForceUpdate || !p.shouldComponentUpdate || p.shouldComponentUpdate(o, u, i);
                        s ? (this._pendingForceUpdate = !1, this._performComponentUpdate(t, o, u, i, d, r)) : (this._currentElement = t, this._context = r, p.props = o, p.state = u, p.context = i)
                    },
                    _processPendingState: function _processPendingState(p, e) {
                        var t = this._instance,
                            n = this._pendingStateQueue,
                            r = this._pendingReplaceState;
                        if (this._pendingReplaceState = !1, this._pendingStateQueue = null, !n) return t.state;
                        if (r && 1 === n.length) return n[0];
                        for (var o = d({}, r ? n[0] : t.state), a = r ? 1 : 0, s; a < n.length; a++) {
                            s = n[a];
                            d(o, "function" == typeof s ? s.call(t, o, p, e) : s)
                        }
                        return o
                    },
                    _performComponentUpdate: function _performComponentUpdate(d, e, t, n, r, o) {
                        var a, p, m, f = this._instance,
                            l = !!f.componentDidUpdate;
                        l && (a = f.props, p = f.state, m = f.context), f.componentWillUpdate && f.componentWillUpdate(e, t, n), this._currentElement = d, this._context = o, f.props = e, f.state = t, f.context = n, this._updateRenderedComponent(r, o), l && r.getReactMountReady().enqueue(f.componentDidUpdate.bind(f, a, p, m), f)
                    },
                    _updateRenderedComponent: function _updateRenderedComponent(d, e) {
                        var t = this._renderedComponent,
                            n = t._currentElement,
                            r = this._renderValidatedComponent();
                        if (l(n, r)) _.receiveComponent(t, r, d, this._processChildContext(e));
                        else {
                            var o = this._rootNodeID,
                                a = t._rootNodeID;
                            _.unmountComponent(t), this._renderedComponent = this._instantiateReactComponent(r);
                            var i = _.mountComponent(this._renderedComponent, o, d, this._processChildContext(e));
                            this._replaceNodeWithMarkupByID(a, i)
                        }
                    },
                    _replaceNodeWithMarkupByID: function _replaceNodeWithMarkupByID(n, e) {
                        o.replaceNodeWithMarkupByID(n, e)
                    },
                    _renderValidatedComponentWithoutOwnerOrContext: function _renderValidatedComponentWithoutOwnerOrContext() {
                        var n = this._instance,
                            e = n.render();
                        return e
                    },
                    _renderValidatedComponent: function _renderValidatedComponent() {
                        var n;
                        t.current = this;
                        try {
                            n = this._renderValidatedComponentWithoutOwnerOrContext()
                        } finally {
                            t.current = null
                        }
                        return null === n || !1 === n || E.isValidElement(n) ? void 0 : h(!1), n
                    },
                    attachRef: function attachRef(a, e) {
                        var t = this.getPublicInstance();
                        null == t ? h(!1) : void 0;
                        var n = e.getPublicInstance(),
                            r = t.refs === x ? t.refs = {} : t.refs;
                        r[a] = n
                    },
                    detachRef: function detachRef(n) {
                        var e = this.getPublicInstance().refs;
                        delete e[n]
                    },
                    getName: function getName() {
                        var n = this._currentElement.type,
                            e = this._instance && this._instance.constructor;
                        return n.displayName || e && e.displayName || n.name || e && e.name || null
                    },
                    getPublicInstance: function getPublicInstance() {
                        var t = this._instance;
                        return t instanceof b ? null : t
                    },
                    _instantiateReactComponent: null
                };
            r.measureMethods(a, "ReactCompositeComponent", {
                mountComponent: "mountComponent",
                updateComponent: "updateComponent",
                _renderValidatedComponent: "_renderValidatedComponent"
            });
            e.exports = {
                Mixin: a
            }
        }, {
            138: 138,
            151: 151,
            158: 158,
            168: 168,
            24: 24,
            36: 36,
            39: 39,
            55: 55,
            66: 66,
            76: 76,
            78: 78,
            79: 79,
            82: 82,
            92: 92
        }],
        39: [function(n, e) {
            "use strict";
            e.exports = {
                current: null
            }
        }, {}],
        40: [function(n, e) {
            "use strict";
            var t = n(39),
                r = n(51),
                o = n(54),
                a = n(65),
                i = n(70),
                u = n(76),
                s = n(82),
                l = n(93),
                c = n(94),
                p = n(119),
                d = n(134);
            n(168);
            o.inject();
            var m = u.measure("React", "render", i.render),
                f = {
                    findDOMNode: p,
                    render: m,
                    unmountComponentAtNode: i.unmountComponentAtNode,
                    version: c,
                    unstable_batchedUpdates: l.batchedUpdates,
                    unstable_renderSubtreeIntoContainer: d
                };
            "undefined" != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.inject && __REACT_DEVTOOLS_GLOBAL_HOOK__.inject({
                CurrentOwner: t,
                InstanceHandles: a,
                Mount: i,
                Reconciler: s,
                TextComponent: r
            });
            e.exports = f
        }, {
            119: 119,
            134: 134,
            168: 168,
            39: 39,
            51: 51,
            54: 54,
            65: 65,
            70: 70,
            76: 76,
            82: 82,
            93: 93,
            94: 94
        }],
        41: [function(n, e) {
            "use strict";
            var d = {
                onClick: !0,
                onDoubleClick: !0,
                onMouseDown: !0,
                onMouseMove: !0,
                onMouseUp: !0,
                onClickCapture: !0,
                onDoubleClickCapture: !0,
                onMouseDownCapture: !0,
                onMouseMoveCapture: !0,
                onMouseUpCapture: !0
            };
            e.exports = {
                getNativeProps: function getNativeProps(n, e) {
                    if (!e.disabled) return e;
                    var t = {};
                    for (var o in e) {
                        e.hasOwnProperty(o) && !d[o] && (t[o] = e[o])
                    }
                    return t
                }
            }
        }, {}],
        42: [function(n, e) {
            "use strict";

            function t() {
                return this
            }

            function r() {
                var t = this._reactInternalComponent;
                return !!t
            }

            function o() {}

            function a(o, e) {
                var t = this._reactInternalComponent;
                t && (R.enqueueSetPropsInternal(t, o), e && R.enqueueCallbackInternal(t, e))
            }

            function i(o, e) {
                var t = this._reactInternalComponent;
                t && (R.enqueueReplacePropsInternal(t, o), e && R.enqueueCallbackInternal(t, e))
            }

            function ee(n, e) {
                e && (null != e.dangerouslySetInnerHTML && (null != e.children ? w(!1) : void 0, "object" == _typeof(e.dangerouslySetInnerHTML) && q in e.dangerouslySetInnerHTML ? void 0 : w(!1)), null != e.style && "object" != _typeof(e.style) ? w(!1) : void 0)
            }

            function u(d, e, t, n) {
                var r = N.findReactContainerForID(d);
                if (r) {
                    var o = r.nodeType === H ? r.ownerDocument : r;
                    V(e, o)
                }
                n.getReactMountReady().enqueue(s, {
                    id: d,
                    registrationName: e,
                    listener: t
                })
            }

            function s() {
                var t = this;
                E.putListener(t.id, t.registrationName, t.listener)
            }

            function l() {
                var o = this;
                o._rootNodeID ? void 0 : w(!1);
                var e = N.getNode(o._rootNodeID);
                switch (e ? void 0 : w(!1), o._tag) {
                    case "iframe":
                        o._wrapperState.listeners = [E.trapBubbledEvent(b.topLevelTypes.topLoad, "load", e)];
                        break;
                    case "video":
                    case "audio":
                        o._wrapperState.listeners = [];
                        for (var t in Y) {
                            Y.hasOwnProperty(t) && o._wrapperState.listeners.push(E.trapBubbledEvent(b.topLevelTypes[t], Y[t], e))
                        }
                        break;
                    case "img":
                        o._wrapperState.listeners = [E.trapBubbledEvent(b.topLevelTypes.topError, "error", e), E.trapBubbledEvent(b.topLevelTypes.topLoad, "load", e)];
                        break;
                    case "form":
                        o._wrapperState.listeners = [E.trapBubbledEvent(b.topLevelTypes.topReset, "reset", e), E.trapBubbledEvent(b.topLevelTypes.topSubmit, "submit", e)];
                }
            }

            function p() {
                v.mountReadyWrapper(this)
            }

            function d() {
                P.postUpdateWrapper(this)
            }

            function c(t) {
                $.call(X, t) || (Q.test(t) ? void 0 : w(!1), X[t] = !0)
            }

            function f(n, e) {
                return 0 <= n.indexOf("-") || null != e.is
            }

            function h(t) {
                c(t), this._tag = t.toLowerCase(), this._renderedChildren = null, this._previousStyle = null, this._previousStyleCopy = null, this._rootNodeID = null, this._wrapperState = null, this._topLevelWrapper = null, this._nodeWithLegacyProperties = null
            }
            var m = n(2),
                g = n(5),
                y = n(10),
                C = n(11),
                b = n(15),
                E = n(28),
                _ = n(35),
                x = n(41),
                v = n(46),
                D = n(47),
                P = n(48),
                T = n(52),
                N = n(70),
                M = n(71),
                S = n(76),
                R = n(92),
                I = n(24),
                k = n(114),
                O = n(118),
                w = n(158),
                A = (n(130), n(163)),
                L = n(135),
                U = n(136),
                F = (n(166), n(141), n(168), E.deleteListener),
                V = E.listenTo,
                B = E.registrationNameModules,
                W = {
                    string: !0,
                    number: !0
                },
                j = A({
                    children: null
                }),
                K = A({
                    style: null
                }),
                q = A({
                    __html: null
                }),
                H = 1,
                Y = {
                    topAbort: "abort",
                    topCanPlay: "canplay",
                    topCanPlayThrough: "canplaythrough",
                    topDurationChange: "durationchange",
                    topEmptied: "emptied",
                    topEncrypted: "encrypted",
                    topEnded: "ended",
                    topError: "error",
                    topLoadedData: "loadeddata",
                    topLoadedMetadata: "loadedmetadata",
                    topLoadStart: "loadstart",
                    topPause: "pause",
                    topPlay: "play",
                    topPlaying: "playing",
                    topProgress: "progress",
                    topRateChange: "ratechange",
                    topSeeked: "seeked",
                    topSeeking: "seeking",
                    topStalled: "stalled",
                    topSuspend: "suspend",
                    topTimeUpdate: "timeupdate",
                    topVolumeChange: "volumechange",
                    topWaiting: "waiting"
                },
                z = {
                    area: !0,
                    base: !0,
                    br: !0,
                    col: !0,
                    embed: !0,
                    hr: !0,
                    img: !0,
                    input: !0,
                    keygen: !0,
                    link: !0,
                    meta: !0,
                    param: !0,
                    source: !0,
                    track: !0,
                    wbr: !0
                },
                G = {
                    listing: !0,
                    pre: !0,
                    textarea: !0
                },
                Q = (I({
                    menuitem: !0
                }, z), /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/),
                X = {},
                $ = {}.hasOwnProperty;
            h.displayName = "ReactDOMComponent", h.Mixin = {
                construct: function construct(t) {
                    this._currentElement = t
                },
                mountComponent: function mountComponent(d, e, t) {
                    this._rootNodeID = d;
                    var s = this._currentElement.props;
                    switch (this._tag) {
                        case "iframe":
                        case "img":
                        case "form":
                        case "video":
                        case "audio":
                            this._wrapperState = {
                                listeners: null
                            }, e.getReactMountReady().enqueue(l, this);
                            break;
                        case "button":
                            s = x.getNativeProps(this, s, t);
                            break;
                        case "input":
                            v.mountWrapper(this, s, t), s = v.getNativeProps(this, s, t);
                            break;
                        case "option":
                            D.mountWrapper(this, s, t), s = D.getNativeProps(this, s, t);
                            break;
                        case "select":
                            P.mountWrapper(this, s, t), s = P.getNativeProps(this, s, t), t = P.processChildContext(this, s, t);
                            break;
                        case "textarea":
                            T.mountWrapper(this, s, t), s = T.getNativeProps(this, s, t);
                    }
                    ee(this, s);
                    var c;
                    if (e.useCreateElement) {
                        var f = t[N.ownerDocumentContextKey],
                            a = f.createElement(this._currentElement.type);
                        C.setAttributeForID(a, this._rootNodeID), N.getID(a), this._updateDOMProperties({}, s, e, a), this._createInitialChildren(e, s, t, a), c = a
                    } else {
                        var i = this._createOpenTagMarkupAndPutListeners(e, s),
                            u = this._createContentMarkup(e, s, t);
                        c = !u && z[this._tag] ? i + "/>" : i + ">" + u + "</" + this._currentElement.type + ">"
                    }
                    switch (this._tag) {
                        case "input":
                            e.getReactMountReady().enqueue(p, this);
                        case "button":
                        case "select":
                        case "textarea":
                            s.autoFocus && e.getReactMountReady().enqueue(m.focusDOMComponent, this);
                    }
                    return c
                },
                _createOpenTagMarkupAndPutListeners: function _createOpenTagMarkupAndPutListeners(d, e) {
                    var t = "<" + this._currentElement.type;
                    for (var p in e) {
                        if (e.hasOwnProperty(p)) {
                            var r = e[p];
                            if (null != r)
                                if (B.hasOwnProperty(p)) r && u(this._rootNodeID, p, r, d);
                                else {
                                    p === K && (r && (r = this._previousStyleCopy = I({}, e.style)), r = g.createMarkupForStyles(r));
                                    var s = null;
                                    null != this._tag && f(this._tag, e) ? p !== j && (s = C.createMarkupForCustomAttribute(p, r)) : s = C.createMarkupForProperty(p, r), s && (t += " " + s)
                                }
                        }
                    }
                    if (d.renderToStaticMarkup) return t;
                    var l = C.createMarkupForID(this._rootNodeID);
                    return t + " " + l
                },
                _createContentMarkup: function _createContentMarkup(d, e, t) {
                    var n = "",
                        p = e.dangerouslySetInnerHTML;
                    if (null != p) null != p.__html && (n = p.__html);
                    else {
                        var o = W[_typeof(e.children)] ? e.children : null,
                            a = null != o ? null : e.children;
                        if (null != o) n = O(o);
                        else if (null != a) {
                            var i = this.mountChildren(a, d, t);
                            n = i.join("")
                        }
                    }
                    return G[this._tag] && "\n" === n.charAt(0) ? "\n" + n : n
                },
                _createInitialChildren: function _createInitialChildren(d, e, t, n) {
                    var r = e.dangerouslySetInnerHTML;
                    if (null != r) null != r.__html && L(n, r.__html);
                    else {
                        var o = W[_typeof(e.children)] ? e.children : null,
                            a = null != o ? null : e.children;
                        if (null != o) U(n, o);
                        else if (null != a)
                            for (var i = this.mountChildren(a, d, t), p = 0; p < i.length; p++) {
                                n.appendChild(i[p])
                            }
                    }
                },
                receiveComponent: function receiveComponent(o, e, t) {
                    var n = this._currentElement;
                    this._currentElement = o, this.updateComponent(e, n, o, t)
                },
                updateComponent: function updateComponent(i, e, t, n) {
                    var r = e.props,
                        p = this._currentElement.props;
                    switch (this._tag) {
                        case "button":
                            r = x.getNativeProps(this, r), p = x.getNativeProps(this, p);
                            break;
                        case "input":
                            v.updateWrapper(this), r = v.getNativeProps(this, r), p = v.getNativeProps(this, p);
                            break;
                        case "option":
                            r = D.getNativeProps(this, r), p = D.getNativeProps(this, p);
                            break;
                        case "select":
                            r = P.getNativeProps(this, r), p = P.getNativeProps(this, p);
                            break;
                        case "textarea":
                            T.updateWrapper(this), r = T.getNativeProps(this, r), p = T.getNativeProps(this, p);
                    }
                    ee(this, p), this._updateDOMProperties(r, p, i, null), this._updateDOMChildren(r, p, i, n), !k && this._nodeWithLegacyProperties && (this._nodeWithLegacyProperties.props = p), "select" === this._tag && i.getReactMountReady().enqueue(d, this)
                },
                _updateDOMProperties: function _updateDOMProperties(d, e, t, n) {
                    var p, l, m;
                    for (p in d) {
                        if (!e.hasOwnProperty(p) && d.hasOwnProperty(p))
                            if (p === K) {
                                var h = this._previousStyleCopy;
                                for (l in h) {
                                    h.hasOwnProperty(l) && (m = m || {}, m[l] = "")
                                }
                                this._previousStyleCopy = null
                            } else B.hasOwnProperty(p) ? d[p] && F(this._rootNodeID, p) : (y.properties[p] || y.isCustomAttribute(p)) && (n || (n = N.getNode(this._rootNodeID)), C.deleteValueForProperty(n, p))
                    }
                    for (p in e) {
                        var b = e[p],
                            E = p === K ? this._previousStyleCopy : d[p];
                        if (e.hasOwnProperty(p) && b !== E)
                            if (p === K) {
                                if (b ? b = this._previousStyleCopy = I({}, b) : this._previousStyleCopy = null, E) {
                                    for (l in E) {
                                        !E.hasOwnProperty(l) || b && b.hasOwnProperty(l) || (m = m || {}, m[l] = "")
                                    }
                                    for (l in b) {
                                        b.hasOwnProperty(l) && E[l] !== b[l] && (m = m || {}, m[l] = b[l])
                                    }
                                } else m = b;
                            } else B.hasOwnProperty(p) ? b ? u(this._rootNodeID, p, b, t) : E && F(this._rootNodeID, p) : f(this._tag, e) ? (n || (n = N.getNode(this._rootNodeID)), p === j && (b = null), C.setValueForAttribute(n, p, b)) : (y.properties[p] || y.isCustomAttribute(p)) && (n || (n = N.getNode(this._rootNodeID)), null != b ? C.setValueForProperty(n, p, b) : C.deleteValueForProperty(n, p))
                    }
                    m && (n || (n = N.getNode(this._rootNodeID)), g.setValueForStyles(n, m))
                },
                _updateDOMChildren: function _updateDOMChildren(d, e, t, n) {
                    var r = W[_typeof(d.children)] ? d.children : null,
                        o = W[_typeof(e.children)] ? e.children : null,
                        a = d.dangerouslySetInnerHTML && d.dangerouslySetInnerHTML.__html,
                        i = e.dangerouslySetInnerHTML && e.dangerouslySetInnerHTML.__html,
                        p = null != r ? null : d.children,
                        s = null != o ? null : e.children;
                    null != p && null == s ? this.updateChildren(null, t, n) : (null != r || null != a) && !(null != o || null != i) && this.updateTextContent(""), null != o ? r !== o && this.updateTextContent("" + o) : null != i ? a !== i && this.updateMarkup("" + i) : null != s && this.updateChildren(s, t, n)
                },
                unmountComponent: function unmountComponent() {
                    switch (this._tag) {
                        case "iframe":
                        case "img":
                        case "form":
                        case "video":
                        case "audio":
                            var o = this._wrapperState.listeners;
                            if (o)
                                for (var e = 0; e < o.length; e++) {
                                    o[e].remove()
                                }
                            break;
                        case "input":
                            v.unmountWrapper(this);
                            break;
                        case "html":
                        case "head":
                        case "body":
                            w(!1);
                    }
                    if (this.unmountChildren(), E.deleteAllListeners(this._rootNodeID), _.unmountIDFromEnvironment(this._rootNodeID), this._rootNodeID = null, this._wrapperState = null, this._nodeWithLegacyProperties) {
                        var r = this._nodeWithLegacyProperties;
                        r._reactInternalComponent = null, this._nodeWithLegacyProperties = null
                    }
                },
                getPublicInstance: function getPublicInstance() {
                    if (!this._nodeWithLegacyProperties) {
                        var n = N.getNode(this._rootNodeID);
                        n._reactInternalComponent = this, n.getDOMNode = t, n.isMounted = r, n.setState = o, n.replaceState = o, n.forceUpdate = o, n.setProps = a, n.replaceProps = i, n.props = this._currentElement.props, this._nodeWithLegacyProperties = n
                    }
                    return this._nodeWithLegacyProperties
                }
            }, S.measureMethods(h, "ReactDOMComponent", {
                mountComponent: "mountComponent",
                updateComponent: "updateComponent"
            }), I(h.prototype, h.Mixin, M.Mixin), e.exports = h
        }, {
            10: 10,
            11: 11,
            114: 114,
            118: 118,
            130: 130,
            135: 135,
            136: 136,
            141: 141,
            15: 15,
            158: 158,
            163: 163,
            166: 166,
            168: 168,
            2: 2,
            24: 24,
            28: 28,
            35: 35,
            41: 41,
            46: 46,
            47: 47,
            48: 48,
            5: 5,
            52: 52,
            70: 70,
            71: 71,
            76: 76,
            92: 92
        }],
        43: [function(n, e) {
            "use strict";
            var t = n(55),
                o = (n(56), n(164)),
                r = o({
                    a: "a",
                    abbr: "abbr",
                    address: "address",
                    area: "area",
                    article: "article",
                    aside: "aside",
                    audio: "audio",
                    b: "b",
                    base: "base",
                    bdi: "bdi",
                    bdo: "bdo",
                    big: "big",
                    blockquote: "blockquote",
                    body: "body",
                    br: "br",
                    button: "button",
                    canvas: "canvas",
                    caption: "caption",
                    cite: "cite",
                    code: "code",
                    col: "col",
                    colgroup: "colgroup",
                    data: "data",
                    datalist: "datalist",
                    dd: "dd",
                    del: "del",
                    details: "details",
                    dfn: "dfn",
                    dialog: "dialog",
                    div: "div",
                    dl: "dl",
                    dt: "dt",
                    em: "em",
                    embed: "embed",
                    fieldset: "fieldset",
                    figcaption: "figcaption",
                    figure: "figure",
                    footer: "footer",
                    form: "form",
                    h1: "h1",
                    h2: "h2",
                    h3: "h3",
                    h4: "h4",
                    h5: "h5",
                    h6: "h6",
                    head: "head",
                    header: "header",
                    hgroup: "hgroup",
                    hr: "hr",
                    html: "html",
                    i: "i",
                    iframe: "iframe",
                    img: "img",
                    input: "input",
                    ins: "ins",
                    kbd: "kbd",
                    keygen: "keygen",
                    label: "label",
                    legend: "legend",
                    li: "li",
                    link: "link",
                    main: "main",
                    map: "map",
                    mark: "mark",
                    menu: "menu",
                    menuitem: "menuitem",
                    meta: "meta",
                    meter: "meter",
                    nav: "nav",
                    noscript: "noscript",
                    object: "object",
                    ol: "ol",
                    optgroup: "optgroup",
                    option: "option",
                    output: "output",
                    p: "p",
                    param: "param",
                    picture: "picture",
                    pre: "pre",
                    progress: "progress",
                    q: "q",
                    rp: "rp",
                    rt: "rt",
                    ruby: "ruby",
                    s: "s",
                    samp: "samp",
                    script: "script",
                    section: "section",
                    select: "select",
                    small: "small",
                    source: "source",
                    span: "span",
                    strong: "strong",
                    style: "style",
                    sub: "sub",
                    summary: "summary",
                    sup: "sup",
                    table: "table",
                    tbody: "tbody",
                    td: "td",
                    textarea: "textarea",
                    tfoot: "tfoot",
                    th: "th",
                    thead: "thead",
                    time: "time",
                    title: "title",
                    tr: "tr",
                    track: "track",
                    u: "u",
                    ul: "ul",
                    var: "var",
                    video: "video",
                    wbr: "wbr",
                    circle: "circle",
                    clipPath: "clipPath",
                    defs: "defs",
                    ellipse: "ellipse",
                    g: "g",
                    image: "image",
                    line: "line",
                    linearGradient: "linearGradient",
                    mask: "mask",
                    path: "path",
                    pattern: "pattern",
                    polygon: "polygon",
                    polyline: "polyline",
                    radialGradient: "radialGradient",
                    rect: "rect",
                    stop: "stop",
                    svg: "svg",
                    text: "text",
                    tspan: "tspan"
                }, function(n) {
                    return t.createFactory(n)
                });
            e.exports = r
        }, {
            164: 164,
            55: 55,
            56: 56
        }],
        44: [function(n, e) {
            "use strict";
            e.exports = {
                useCreateElement: !1
            }
        }, {}],
        45: [function(n, e) {
            "use strict";
            var d = n(9),
                p = n(11),
                o = n(70),
                t = n(76),
                a = n(158),
                i = {
                    dangerouslySetInnerHTML: "`dangerouslySetInnerHTML` must be set using `updateInnerHTMLByID()`.",
                    style: "`style` must be set using `updateStylesByID()`."
                },
                r = {
                    updatePropertyByID: function updatePropertyByID(d, e, t) {
                        var n = o.getNode(d);
                        i.hasOwnProperty(e) ? a(!1) : void 0, null != t ? p.setValueForProperty(n, e, t) : p.deleteValueForProperty(n, e)
                    },
                    dangerouslyReplaceNodeWithMarkupByID: function dangerouslyReplaceNodeWithMarkupByID(r, e) {
                        var t = o.getNode(r);
                        d.dangerouslyReplaceNodeWithMarkup(t, e)
                    },
                    dangerouslyProcessChildrenUpdates: function dangerouslyProcessChildrenUpdates(r, e) {
                        for (var t = 0; t < r.length; t++) {
                            r[t].parentNode = o.getNode(r[t].parentID)
                        }
                        d.processUpdates(r, e)
                    }
                };
            t.measureMethods(r, "ReactDOMIDOperations", {
                dangerouslyReplaceNodeWithMarkupByID: "dangerouslyReplaceNodeWithMarkupByID",
                dangerouslyProcessChildrenUpdates: "dangerouslyProcessChildrenUpdates"
            }), e.exports = r
        }, {
            11: 11,
            158: 158,
            70: 70,
            76: 76,
            9: 9
        }],
        46: [function(n, e) {
            "use strict";

            function g() {
                this._rootNodeID && p.updateWrapper(this)
            }

            function r(r) {
                var e = this._currentElement.props,
                    p = y.executeOnChange(e, r);
                i.asap(g, this);
                var n = e.name;
                if ("radio" === e.type && null != n) {
                    for (var o = t.getNode(this._rootNodeID), s = o; s.parentNode;) {
                        s = s.parentNode
                    }
                    for (var c = s.querySelectorAll("input[name=" + JSON.stringify("" + n) + "][type=\"radio\"]"), d = 0, C; d < c.length; d++) {
                        C = c[d];
                        if (C !== o && C.form === o.form) {
                            var b = t.getID(C);
                            b ? void 0 : a(!1);
                            var E = u[b];
                            E ? void 0 : a(!1), i.asap(g, E)
                        }
                    }
                }
                return p
            }
            var o = n(45),
                y = n(23),
                t = n(70),
                i = n(93),
                s = n(24),
                a = n(158),
                u = {},
                p = {
                    getNativeProps: function getNativeProps(n, e) {
                        var t = y.getValue(e),
                            r = y.getChecked(e),
                            o = s({}, e, {
                                defaultChecked: void 0,
                                defaultValue: void 0,
                                value: null != t ? t : n._wrapperState.initialValue,
                                checked: null != r ? r : n._wrapperState.initialChecked,
                                onChange: n._wrapperState.onChange
                            });
                        return o
                    },
                    mountWrapper: function mountWrapper(o, e) {
                        var t = e.defaultValue;
                        o._wrapperState = {
                            initialChecked: e.defaultChecked || !1,
                            initialValue: null != t ? t : null,
                            onChange: r.bind(o)
                        }
                    },
                    mountReadyWrapper: function mountReadyWrapper(t) {
                        u[t._rootNodeID] = t
                    },
                    unmountWrapper: function unmountWrapper(t) {
                        delete u[t._rootNodeID]
                    },
                    updateWrapper: function updateWrapper(a) {
                        var e = a._currentElement.props,
                            t = e.checked;
                        null != t && o.updatePropertyByID(a._rootNodeID, "checked", t || !1);
                        var n = y.getValue(e);
                        null != n && o.updatePropertyByID(a._rootNodeID, "value", "" + n)
                    }
                };
            e.exports = p
        }, {
            158: 158,
            23: 23,
            24: 24,
            45: 45,
            70: 70,
            93: 93
        }],
        47: [function(n, e) {
            "use strict";
            var d = n(32),
                t = n(48),
                r = n(24),
                p = (n(168), t.valueContextKey);
            e.exports = {
                mountWrapper: function mountWrapper(d, e, t) {
                    var n = t[p],
                        r = null;
                    if (null != n)
                        if (r = !1, Array.isArray(n)) {
                            for (var i = 0; i < n.length; i++) {
                                if ("" + n[i] == "" + e.value) {
                                    r = !0;
                                    break
                                }
                            }
                        } else r = "" + n == "" + e.value;
                    d._wrapperState = {
                        selected: r
                    }
                },
                getNativeProps: function getNativeProps(n, e) {
                    var t = r({
                        selected: void 0,
                        children: void 0
                    }, e);
                    null != n._wrapperState.selected && (t.selected = n._wrapperState.selected);
                    var o = "";
                    return d.forEach(e.children, function(t) {
                        null != t && ("string" == typeof t || "number" == typeof t) && (o += t)
                    }), t.children = o, t
                }
            }
        }, {
            168: 168,
            24: 24,
            32: 32,
            48: 48
        }],
        48: [function(n, e) {
            "use strict";

            function d() {
                if (this._rootNodeID && this._wrapperState.pendingUpdate) {
                    this._wrapperState.pendingUpdate = !1;
                    var n = this._currentElement.props,
                        e = a.getValue(n);
                    null != e && p(this, n, e)
                }
            }

            function p(d, e, t) {
                var n, p, s = m.getNode(d._rootNodeID).options;
                if (e) {
                    for (n = {}, p = 0; p < t.length; p++) {
                        n["" + t[p]] = !0
                    }
                    for (p = 0; p < s.length; p++) {
                        var a = n.hasOwnProperty(s[p].value);
                        s[p].selected !== a && (s[p].selected = a)
                    }
                } else {
                    for (n = "" + t, p = 0; p < s.length; p++) {
                        if (s[p].value === n) return void(s[p].selected = !0)
                    }
                    s.length && (s[0].selected = !0)
                }
            }

            function o(o) {
                var e = this._currentElement.props,
                    t = a.executeOnChange(e, o);
                return this._wrapperState.pendingUpdate = !0, r.asap(d, this), t
            }
            var a = n(23),
                m = n(70),
                r = n(93),
                i = n(24),
                s = (n(168), "__ReactDOMSelect_value$" + Math.random().toString(36).slice(2));
            e.exports = {
                valueContextKey: s,
                getNativeProps: function getNativeProps(n, e) {
                    return i({}, e, {
                        onChange: n._wrapperState.onChange,
                        value: void 0
                    })
                },
                mountWrapper: function mountWrapper(r, e) {
                    var t = a.getValue(e);
                    r._wrapperState = {
                        pendingUpdate: !1,
                        initialValue: null != t ? t : e.defaultValue,
                        onChange: o.bind(r),
                        wasMultiple: !!e.multiple
                    }
                },
                processChildContext: function processChildContext(o, e, t) {
                    var n = i({}, t);
                    return n[s] = o._wrapperState.initialValue, n
                },
                postUpdateWrapper: function postUpdateWrapper(o) {
                    var e = o._currentElement.props;
                    o._wrapperState.initialValue = void 0;
                    var t = o._wrapperState.wasMultiple;
                    o._wrapperState.wasMultiple = !!e.multiple;
                    var n = a.getValue(e);
                    null != n ? (o._wrapperState.pendingUpdate = !1, p(o, !!e.multiple, n)) : t !== !!e.multiple && (null != e.defaultValue ? p(o, !!e.multiple, e.defaultValue) : p(o, !!e.multiple, e.multiple ? [] : ""))
                }
            }
        }, {
            168: 168,
            23: 23,
            24: 24,
            70: 70,
            93: 93
        }],
        49: [function(n, e) {
            "use strict";

            function g(o, e, t, n) {
                return o === t && e === n
            }

            function t(d) {
                var e = document.selection,
                    t = e.createRange(),
                    n = t.text.length,
                    r = t.duplicate();
                r.moveToElementText(d), r.setEndPoint("EndToStart", t);
                var o = r.text.length;
                return {
                    start: o,
                    end: o + n
                }
            }

            function o(r) {
                var e = window.getSelection && window.getSelection();
                if (!e || 0 === e.rangeCount) return null;
                var t = e.anchorNode,
                    n = e.anchorOffset,
                    o = e.focusNode,
                    a = e.focusOffset,
                    i = e.getRangeAt(0);
                try {
                    i.startContainer.nodeType, i.endContainer.nodeType
                } catch (e) {
                    return null
                }
                var s = g(e.anchorNode, e.anchorOffset, e.focusNode, e.focusOffset),
                    u = s ? 0 : i.toString().length,
                    l = i.cloneRange();
                l.selectNodeContents(r), l.setEnd(i.startContainer, i.startOffset);
                var p = g(l.startContainer, l.startOffset, l.endContainer, l.endOffset),
                    d = p ? 0 : l.toString().length,
                    c = d + u,
                    f = document.createRange();
                f.setStart(t, n), f.setEnd(o, a);
                var h = f.collapsed;
                return {
                    start: h ? c : d,
                    end: h ? d : c
                }
            }

            function r(d, e) {
                if (window.getSelection) {
                    var t = window.getSelection(),
                        n = d[l()].length,
                        r = Math.min(e.start, n),
                        c = "undefined" == typeof e.end ? r : Math.min(e.end, n);
                    if (!t.extend && r > c) {
                        var f = c;
                        c = r, r = f
                    }
                    var i = m(d, r),
                        u = m(d, c);
                    if (i && u) {
                        var s = document.createRange();
                        s.setStart(i.node, i.offset), t.removeAllRanges(), r > c ? (t.addRange(s), t.extend(u.node, u.offset)) : (s.setEnd(u.node, u.offset), t.addRange(s))
                    }
                }
            }
            var a = n(144),
                m = n(127),
                l = n(128),
                i = a.canUseDOM && "selection" in document && !("getSelection" in window),
                p = {
                    getOffsets: i ? t : o,
                    setOffsets: i ? function(a, e) {
                        var t, d, i = document.selection.createRange().duplicate();
                        "undefined" == typeof e.end ? (t = e.start, d = t) : e.start > e.end ? (t = e.end, d = e.start) : (t = e.start, d = e.end), i.moveToElementText(a), i.moveStart("character", t), i.setEndPoint("EndToStart", i), i.moveEnd("character", d - t), i.select()
                    } : r
                };
            e.exports = p
        }, {
            127: 127,
            128: 128,
            144: 144
        }],
        50: [function(n, e) {
            "use strict";
            var t = n(54),
                r = n(86),
                o = n(94);
            t.inject();
            var a = {
                renderToString: r.renderToString,
                renderToStaticMarkup: r.renderToStaticMarkup,
                version: o
            };
            e.exports = a
        }, {
            54: 54,
            86: 86,
            94: 94
        }],
        51: [function(n, e) {
            "use strict";
            var t = n(9),
                d = n(11),
                o = n(35),
                p = n(70),
                r = n(24),
                i = n(118),
                s = n(136),
                a = (n(141), function() {});
            r(a.prototype, {
                construct: function construct(t) {
                    this._currentElement = t, this._stringText = "" + t, this._rootNodeID = null, this._mountIndex = 0
                },
                mountComponent: function mountComponent(o, e, t) {
                    if (this._rootNodeID = o, e.useCreateElement) {
                        var n = t[p.ownerDocumentContextKey],
                            r = n.createElement("span");
                        return d.setAttributeForID(r, o), p.getID(r), s(r, this._stringText), r
                    }
                    var a = i(this._stringText);
                    return e.renderToStaticMarkup ? a : "<span " + d.createMarkupForID(o) + ">" + a + "</span>"
                },
                receiveComponent: function receiveComponent(r) {
                    if (r !== this._currentElement) {
                        this._currentElement = r;
                        var e = "" + r;
                        if (e !== this._stringText) {
                            this._stringText = e;
                            var n = p.getNode(this._rootNodeID);
                            t.updateTextContent(n, e)
                        }
                    }
                },
                unmountComponent: function unmountComponent() {
                    o.unmountIDFromEnvironment(this._rootNodeID)
                }
            }), e.exports = a
        }, {
            11: 11,
            118: 118,
            136: 136,
            141: 141,
            24: 24,
            35: 35,
            70: 70,
            9: 9
        }],
        52: [function(n, e) {
            "use strict";

            function d() {
                this._rootNodeID && t.updateWrapper(this)
            }

            function p(r) {
                var e = this._currentElement.props,
                    t = o.executeOnChange(e, r);
                return a.asap(d, this), t
            }
            var o = n(23),
                r = n(45),
                a = n(93),
                i = n(24),
                s = n(158),
                t = (n(168), {
                    getNativeProps: function getNativeProps(n, e) {
                        null != e.dangerouslySetInnerHTML ? s(!1) : void 0;
                        var t = i({}, e, {
                            defaultValue: void 0,
                            value: void 0,
                            children: n._wrapperState.initialValue,
                            onChange: n._wrapperState.onChange
                        });
                        return t
                    },
                    mountWrapper: function mountWrapper(a, e) {
                        var t = e.defaultValue,
                            d = e.children;
                        null != d && (null != t ? s(!1) : void 0, Array.isArray(d) && (1 >= d.length ? void 0 : s(!1), d = d[0]), t = "" + d), null == t && (t = "");
                        var u = o.getValue(e);
                        a._wrapperState = {
                            initialValue: "" + (null != u ? u : t),
                            onChange: p.bind(a)
                        }
                    },
                    updateWrapper: function updateWrapper(a) {
                        var e = a._currentElement.props,
                            t = o.getValue(e);
                        null != t && r.updatePropertyByID(a._rootNodeID, "value", "" + t)
                    }
                });
            e.exports = t
        }, {
            158: 158,
            168: 168,
            23: 23,
            24: 24,
            45: 45,
            93: 93
        }],
        53: [function(n, e) {
            "use strict";

            function t() {
                this.reinitializeTransaction()
            }
            var r = n(93),
                o = n(110),
                a = n(24),
                i = n(150),
                s = {
                    initialize: i,
                    close: r.flushBatchedUpdates.bind(r)
                },
                u = [s, {
                    initialize: i,
                    close: function close() {
                        p.isBatchingUpdates = !1
                    }
                }];
            a(t.prototype, o.Mixin, {
                getTransactionWrappers: function getTransactionWrappers() {
                    return u
                }
            });
            var l = new t,
                p = {
                    isBatchingUpdates: !1,
                    batchedUpdates: function batchedUpdates(d, e, t, n, r, o) {
                        var a = p.isBatchingUpdates;
                        p.isBatchingUpdates = !0, a ? d(e, t, n, r, o) : l.perform(d, null, e, t, n, r, o)
                    }
                };
            e.exports = p
        }, {
            110: 110,
            150: 150,
            24: 24,
            93: 93
        }],
        54: [function(n, e) {
            "use strict";

            function t() {
                D || (D = !0, m.EventEmitter.injectReactEventListener(v), m.EventPluginHub.injectEventPluginOrder(i), m.EventPluginHub.injectInstanceHandle(g), m.EventPluginHub.injectMount(y), m.EventPluginHub.injectEventPluginsByName({
                    SimpleEventPlugin: _,
                    EnterLeaveEventPlugin: u,
                    ChangeEventPlugin: o,
                    SelectEventPlugin: b,
                    BeforeInputEventPlugin: r
                }), m.NativeComponent.injectGenericComponentClass(f), m.NativeComponent.injectTextComponentClass(h), m.Class.injectMixin(c), m.DOMProperty.injectDOMPropertyConfig(l), m.DOMProperty.injectDOMPropertyConfig(x), m.EmptyComponent.injectEmptyComponent("noscript"), m.Updates.injectReconcileTransaction(C), m.Updates.injectBatchingStrategy(d), m.RootIndex.injectCreateReactRootIndex(s.canUseDOM ? a.createReactRootIndex : E.createReactRootIndex), m.Component.injectEnvironment(p))
            }
            var r = n(3),
                o = n(7),
                a = n(8),
                i = n(13),
                u = n(14),
                s = n(144),
                l = n(21),
                c = n(27),
                p = n(35),
                d = n(53),
                f = n(42),
                h = n(51),
                v = n(61),
                m = n(63),
                g = n(65),
                y = n(70),
                C = n(81),
                b = n(96),
                E = n(97),
                _ = n(98),
                x = n(95),
                D = !1;
            e.exports = {
                inject: t
            }
        }, {
            13: 13,
            14: 14,
            144: 144,
            21: 21,
            27: 27,
            3: 3,
            35: 35,
            42: 42,
            51: 51,
            53: 53,
            61: 61,
            63: 63,
            65: 65,
            7: 7,
            70: 70,
            8: 8,
            81: 81,
            95: 95,
            96: 96,
            97: 97,
            98: 98
        }],
        55: [function(n, e) {
            "use strict";
            var m = n(39),
                r = n(24),
                d = (n(114), "function" == typeof Symbol && Symbol["for"] && Symbol["for"]("react.element") || 60103),
                p = {
                    key: !0,
                    ref: !0,
                    __self: !0,
                    __source: !0
                },
                i = function(a, e, t, n, r, o, i) {
                    return {
                        $$typeof: d,
                        type: a,
                        key: e,
                        ref: t,
                        props: i,
                        _owner: o
                    }
                };
            i.createElement = function(r, e, t) {
                var n, u = {},
                    a = null,
                    g = null,
                    y = null,
                    C = null;
                if (null != e) {
                    g = void 0 === e.ref ? null : e.ref, a = void 0 === e.key ? null : "" + e.key, y = void 0 === e.__self ? null : e.__self, C = void 0 === e.__source ? null : e.__source;
                    for (n in e) {
                        e.hasOwnProperty(n) && !p.hasOwnProperty(n) && (u[n] = e[n])
                    }
                }
                var b = arguments.length - 2;
                if (1 == b) u.children = t;
                else if (1 < b) {
                    for (var d = Array(b), f = 0; b > f; f++) {
                        d[f] = arguments[f + 2]
                    }
                    u.children = d
                }
                if (r && r.defaultProps) {
                    var E = r.defaultProps;
                    for (n in E) {
                        "undefined" == typeof u[n] && (u[n] = E[n])
                    }
                }
                return i(r, a, g, y, C, m.current, u)
            }, i.createFactory = function(n) {
                var e = i.createElement.bind(null, n);
                return e.type = n, e
            }, i.cloneAndReplaceKey = function(o, e) {
                var t = i(o.type, e, o.ref, o._self, o._source, o._owner, o.props);
                return t
            }, i.cloneAndReplaceProps = function(o, e) {
                var t = i(o.type, o.key, o.ref, o._self, o._source, o._owner, e);
                return t
            }, i.cloneElement = function(o, e, t) {
                var n, u = r({}, o.props),
                    s = o.key,
                    g = o.ref,
                    y = o._self,
                    C = o._source,
                    d = o._owner;
                if (null != e) {
                    void 0 !== e.ref && (g = e.ref, d = m.current), void 0 !== e.key && (s = "" + e.key);
                    for (n in e) {
                        e.hasOwnProperty(n) && !p.hasOwnProperty(n) && (u[n] = e[n])
                    }
                }
                var b = arguments.length - 2;
                if (1 == b) u.children = t;
                else if (1 < b) {
                    for (var h = Array(b), E = 0; b > E; E++) {
                        h[E] = arguments[E + 2]
                    }
                    u.children = h
                }
                return i(o.type, s, g, y, C, d, u)
            }, i.isValidElement = function(t) {
                return "object" == _typeof(t) && null !== t && t.$$typeof === d
            }, e.exports = i
        }, {
            114: 114,
            24: 24,
            39: 39
        }],
        56: [function(n, e) {
            "use strict";

            function g() {
                if (l.current) {
                    var t = l.current.getName();
                    if (t) return " Check the render method of `" + t + "`."
                }
                return ""
            }

            function y(n, e) {
                n._store && !n._store.validated && null == n.key && (n._store.validated = !0, o("uniqueKey", n, e))
            }

            function o(r, e, t) {
                var n = g();
                if (!n) {
                    var d = "string" == typeof t ? t : t.displayName || t.name;
                    d && (n = " Check the top-level render call using <" + d + ">.")
                }
                var a = c[r] || (c[r] = {});
                if (a[n]) return null;
                a[n] = !0;
                var i = {
                    parentOrOwner: n,
                    url: " See https://fb.me/react-warning-keys for more information.",
                    childOwner: null
                };
                return e && e._owner && e._owner !== l.current && (i.childOwner = " It was passed a child from " + e._owner.getName() + "."), i
            }

            function t(o, e) {
                if ("object" == _typeof(o))
                    if (Array.isArray(o))
                        for (var t = 0, d; t < o.length; t++) {
                            d = o[t];
                            s.isValidElement(d) && y(d, e)
                        } else if (s.isValidElement(o)) o._store && (o._store.validated = !0);
                        else if (o) {
                    var l = p(o);
                    if (l && l !== o.entries)
                        for (var a, c = l.call(o); !(a = c.next()).done;) {
                            s.isValidElement(a.value) && y(a.value, e)
                        }
                }
            }

            function r(r, e, t, n) {
                for (var o in e) {
                    if (e.hasOwnProperty(o)) {
                        var a;
                        try {
                            "function" != typeof e[o] ? d(!1) : void 0, a = e[o](t, o, r, n)
                        } catch (e) {
                            a = e
                        }
                        a instanceof Error && !(a.message in u) && (u[a.message] = !0, g())
                    }
                }
            }

            function i(o) {
                var e = o.type;
                if ("function" == typeof e) {
                    var t = e.displayName || e.name;
                    e.propTypes && r(t, e.propTypes, o.props, a.prop), "function" == typeof e.getDefaultProps
                }
            }
            var s = n(55),
                a = n(79),
                l = (n(78), n(39)),
                p = (n(114), n(126)),
                d = n(158),
                c = (n(168), {}),
                u = {},
                f = {
                    createElement: function createElement(n) {
                        var e = s.createElement.apply(this, arguments);
                        if (null == e) return e;
                        if ("string" == typeof n || "function" == typeof n)
                            for (var o = 2; o < arguments.length; o++) {
                                t(arguments[o], n)
                            }
                        return i(e), e
                    },
                    createFactory: function createFactory(n) {
                        var e = f.createElement.bind(null, n);
                        return e.type = n, e
                    },
                    cloneElement: function cloneElement() {
                        for (var e = s.cloneElement.apply(this, arguments), n = 2; n < arguments.length; n++) {
                            t(arguments[n], e.type)
                        }
                        return i(e), e
                    }
                };
            e.exports = f
        }, {
            114: 114,
            126: 126,
            158: 158,
            168: 168,
            39: 39,
            55: 55,
            78: 78,
            79: 79
        }],
        57: [function(n, e) {
            "use strict";
            var t, d = n(55),
                o = n(58),
                a = n(82),
                i = n(24),
                p = function(n) {
                    this._currentElement = null, this._rootNodeID = null, this._renderedComponent = n(t)
                };
            i(p.prototype, {
                construct: function construct() {},
                mountComponent: function mountComponent(r, e, t) {
                    return o.registerNullComponentID(r), this._rootNodeID = r, a.mountComponent(this._renderedComponent, r, e, t)
                },
                receiveComponent: function receiveComponent() {},
                unmountComponent: function unmountComponent() {
                    a.unmountComponent(this._renderedComponent), o.deregisterNullComponentID(this._rootNodeID), this._rootNodeID = null, this._renderedComponent = null
                }
            }), p.injection = {
                injectEmptyComponent: function injectEmptyComponent(n) {
                    t = d.createElement(n)
                }
            }, e.exports = p
        }, {
            24: 24,
            55: 55,
            58: 58,
            82: 82
        }],
        58: [function(n, e) {
            "use strict";
            var t = {};
            e.exports = {
                isNullComponentID: function(n) {
                    return !!t[n]
                },
                registerNullComponentID: function(n) {
                    t[n] = !0
                },
                deregisterNullComponentID: function(n) {
                    delete t[n]
                }
            }
        }, {}],
        59: [function(n, e) {
            "use strict";

            function t(o, e, t, n) {
                try {
                    return e(t, n)
                } catch (e) {
                    return void(null === r && (r = e))
                }
            }
            var r = null;
            e.exports = {
                invokeGuardedCallback: t,
                invokeGuardedCallbackWithCatch: t,
                rethrowCaughtError: function rethrowCaughtError() {
                    if (r) {
                        var t = r;
                        throw r = null, t
                    }
                }
            }
        }, {}],
        60: [function(n, e) {
            "use strict";

            function d(t) {
                r.enqueueEvents(t), r.processEventQueue(!1)
            }
            var r = n(16);
            e.exports = {
                handleTopLevel: function handleTopLevel(o, e, t, n, a) {
                    var i = r.extractEvents(o, e, t, n, a);
                    d(i)
                }
            }
        }, {
            16: 16
        }],
        61: [function(n, e) {
            "use strict";

            function t(a) {
                var e = p.getID(a),
                    t = c.getReactRootIDFromNodeID(e),
                    n = p.findReactContainerForID(t),
                    r = p.getFirstReactDOM(n);
                return r
            }

            function r(n, e) {
                this.topLevelType = n, this.nativeEvent = e, this.ancestors = []
            }

            function o(t) {
                a(t)
            }

            function a(r) {
                for (var e = p.getFirstReactDOM(h(r.nativeEvent)) || window, d = e; d;) {
                    r.ancestors.push(d), d = t(d)
                }
                for (var i = 0; i < r.ancestors.length; i++) {
                    e = r.ancestors[i];
                    var s = p.getID(e) || "";
                    m._handleTopLevel(r.topLevelType, e, s, r.nativeEvent, h(r.nativeEvent))
                }
            }

            function i(n) {
                var e = y(window);
                n(e)
            }
            var u = n(143),
                s = n(144),
                l = n(25),
                c = n(65),
                p = n(70),
                d = n(93),
                f = n(24),
                h = n(125),
                y = n(155);
            f(r.prototype, {
                destructor: function destructor() {
                    this.topLevelType = null, this.nativeEvent = null, this.ancestors.length = 0
                }
            }), l.addPoolingTo(r, l.twoArgumentPooler);
            var m = {
                _enabled: !0,
                _handleTopLevel: null,
                WINDOW_HANDLE: s.canUseDOM ? window : null,
                setHandleTopLevel: function setHandleTopLevel(t) {
                    m._handleTopLevel = t
                },
                setEnabled: function setEnabled(t) {
                    m._enabled = !!t
                },
                isEnabled: function isEnabled() {
                    return m._enabled
                },
                trapBubbledEvent: function trapBubbledEvent(o, e, t) {
                    var n = t;
                    return n ? u.listen(n, e, m.dispatchEvent.bind(null, o)) : null
                },
                trapCapturedEvent: function trapCapturedEvent(o, e, t) {
                    var n = t;
                    return n ? u.capture(n, e, m.dispatchEvent.bind(null, o)) : null
                },
                monitorScrollValue: function monitorScrollValue(n) {
                    var e = i.bind(null, n);
                    u.listen(window, "scroll", e)
                },
                dispatchEvent: function dispatchEvent(a, e) {
                    if (m._enabled) {
                        var t = r.getPooled(a, e);
                        try {
                            d.batchedUpdates(o, t)
                        } finally {
                            r.release(t)
                        }
                    }
                }
            };
            e.exports = m
        }, {
            125: 125,
            143: 143,
            144: 144,
            155: 155,
            24: 24,
            25: 25,
            65: 65,
            70: 70,
            93: 93
        }],
        62: [function(n, e) {
            "use strict";
            var d = n(32),
                r = n(55),
                o = n(150),
                a = n(158),
                t = (n(168), {
                    create: function create(i) {
                        if ("object" != _typeof(i) || !i || Array.isArray(i)) return i;
                        if (r.isValidElement(i)) return i;
                        1 === i.nodeType ? a(!1) : void 0;
                        var e = [];
                        for (var t in i) {
                            d.mapIntoWithKeyPrefixInternal(i[t], e, t, o.thatReturnsArgument)
                        }
                        return e
                    }
                });
            e.exports = t
        }, {
            150: 150,
            158: 158,
            168: 168,
            32: 32,
            55: 55
        }],
        63: [function(n, e) {
            "use strict";
            var t = n(10),
                r = n(16),
                o = n(36),
                a = n(33),
                i = n(57),
                u = n(28),
                s = n(73),
                l = n(76),
                c = n(84),
                p = n(93),
                d = {
                    Component: o.injection,
                    Class: a.injection,
                    DOMProperty: t.injection,
                    EmptyComponent: i.injection,
                    EventPluginHub: r.injection,
                    EventEmitter: u.injection,
                    NativeComponent: s.injection,
                    Perf: l.injection,
                    RootIndex: c.injection,
                    Updates: p.injection
                };
            e.exports = d
        }, {
            10: 10,
            16: 16,
            28: 28,
            33: 33,
            36: 36,
            57: 57,
            73: 73,
            76: 76,
            84: 84,
            93: 93
        }],
        64: [function(n, e) {
            "use strict";

            function d(n) {
                return t(document.documentElement, n)
            }
            var p = n(49),
                t = n(147),
                r = n(152),
                a = n(153),
                i = {
                    hasSelectionCapabilities: function hasSelectionCapabilities(n) {
                        var e = n && n.nodeName && n.nodeName.toLowerCase();
                        return e && ("input" === e && "text" === n.type || "textarea" === e || "true" === n.contentEditable)
                    },
                    getSelectionInformation: function getSelectionInformation() {
                        var t = a();
                        return {
                            focusedElem: t,
                            selectionRange: i.hasSelectionCapabilities(t) ? i.getSelection(t) : null
                        }
                    },
                    restoreSelection: function restoreSelection(p) {
                        var e = a(),
                            t = p.focusedElem,
                            n = p.selectionRange;
                        e !== t && d(t) && (i.hasSelectionCapabilities(t) && i.setSelection(t, n), r(t))
                    },
                    getSelection: function getSelection(o) {
                        var e;
                        if ("selectionStart" in o) e = {
                            start: o.selectionStart,
                            end: o.selectionEnd
                        };
                        else if (document.selection && o.nodeName && "input" === o.nodeName.toLowerCase()) {
                            var r = document.selection.createRange();
                            r.parentElement() === o && (e = {
                                start: -r.moveStart("character", -o.value.length),
                                end: -r.moveEnd("character", -o.value.length)
                            })
                        } else e = p.getOffsets(o);
                        return e || {
                            start: 0,
                            end: 0
                        }
                    },
                    setSelection: function setSelection(o, e) {
                        var t = e.start,
                            n = e.end;
                        if ("undefined" == typeof n && (n = t), "selectionStart" in o) o.selectionStart = t, o.selectionEnd = Math.min(n, o.value.length);
                        else if (document.selection && o.nodeName && "input" === o.nodeName.toLowerCase()) {
                            var d = o.createTextRange();
                            d.collapse(!0), d.moveStart("character", t), d.moveEnd("character", n - t), d.select()
                        } else p.setOffsets(o, e)
                    }
                };
            e.exports = i
        }, {
            147: 147,
            152: 152,
            153: 153,
            49: 49
        }],
        65: [function(n, e) {
            "use strict";

            function t(t) {
                return a + t.toString(36)
            }

            function m(n, e) {
                return n.charAt(e) === a || e === n.length
            }

            function o(t) {
                return "" === t || t.charAt(0) === a && t.charAt(t.length - 1) !== a
            }

            function g(n, e) {
                return 0 === e.indexOf(n) && m(e, n.length)
            }

            function i(t) {
                return t ? t.substr(0, t.lastIndexOf(a)) : ""
            }

            function u(a, e) {
                if (o(a) && o(e) ? void 0 : y(!1), g(a, e) ? void 0 : y(!1), a === e) return a;
                var t, i = a.length + d;
                for (t = i; t < e.length && !m(e, t); t++) {}
                return e.substr(0, t)
            }

            function s(a, e) {
                var t = Math.min(a.length, e.length);
                if (0 === t) return "";
                for (var n = 0, d = 0; t >= d; d++) {
                    if (m(a, d) && m(e, d)) n = d;
                    else if (a.charAt(d) !== e.charAt(d)) break
                }
                var p = a.substr(0, n);
                return o(p) ? void 0 : y(!1), p
            }

            function l(d, s, m, n, r, o) {
                d = d || "", s = s || "", d === s ? y(!1) : void 0;
                var a = g(s, d);
                a || g(d, s) ? void 0 : y(!1);
                for (var l = 0, C = a ? i : u, b = d;; b = C(b, s)) {
                    var E;
                    if (r && b === d || o && b === s || (E = m(b, a, n)), !1 === E || b === s) break;
                    l++ < p ? void 0 : y(!1)
                }
            }
            var r = n(84),
                y = n(158),
                a = ".",
                d = ".".length,
                p = 1e4;
            e.exports = {
                createReactRootID: function createReactRootID() {
                    return t(r.createReactRootIndex())
                },
                createReactID: function createReactID(n, e) {
                    return n + e
                },
                getReactRootIDFromNodeID: function getReactRootIDFromNodeID(n) {
                    if (n && n.charAt(0) === "." && 1 < n.length) {
                        var e = n.indexOf(".", 1);
                        return -1 < e ? n.substr(0, e) : n
                    }
                    return null
                },
                traverseEnterLeave: function traverseEnterLeave(d, e, t, n, r) {
                    var o = s(d, e);
                    o !== d && l(d, o, t, n, !1, !0), o !== e && l(o, e, t, r, !0, !1)
                },
                traverseTwoPhase: function traverseTwoPhase(o, e, t) {
                    o && (l("", o, e, t, !0, !1), l(o, "", e, t, !1, !0))
                },
                traverseTwoPhaseSkipTarget: function traverseTwoPhaseSkipTarget(o, e, t) {
                    o && (l("", o, e, t, !0, !0), l(o, "", e, t, !0, !0))
                },
                traverseAncestors: function traverseAncestors(o, e, t) {
                    l("", o, e, t, !0, !1)
                },
                getFirstCommonAncestorID: s,
                _getNextDescendantID: u,
                isAncestorIDOf: g,
                SEPARATOR: "."
            }
        }, {
            158: 158,
            84: 84
        }],
        66: [function(n, e) {
            "use strict";
            e.exports = {
                remove: function remove(t) {
                    t._reactInternalInstance = void 0
                },
                get: function get(t) {
                    return t._reactInternalInstance
                },
                has: function has(t) {
                    return void 0 !== t._reactInternalInstance
                },
                set: function set(n, e) {
                    n._reactInternalInstance = e
                }
            }
        }, {}],
        67: [function(n, e) {
            "use strict";
            var t = n(32),
                r = n(34),
                o = n(33),
                a = n(43),
                i = n(55),
                u = (n(56), n(80)),
                s = n(94),
                l = n(24),
                c = n(132),
                p = i.createElement,
                d = i.createFactory,
                m = i.cloneElement,
                f = {
                    Children: {
                        map: t.map,
                        forEach: t.forEach,
                        count: t.count,
                        toArray: t.toArray,
                        only: c
                    },
                    Component: r,
                    createElement: p,
                    cloneElement: m,
                    isValidElement: i.isValidElement,
                    PropTypes: u,
                    createClass: o.createClass,
                    createFactory: d,
                    createMixin: function createMixin(t) {
                        return t
                    },
                    DOM: a,
                    version: s,
                    __spread: l
                };
            e.exports = f
        }, {
            132: 132,
            24: 24,
            32: 32,
            33: 33,
            34: 34,
            43: 43,
            55: 55,
            56: 56,
            80: 80,
            94: 94
        }],
        68: [function(n, e) {
            "use strict";

            function t(n, e) {
                this.value = n, this.requestChange = e
            }
            var o = n(26);
            t.PropTypes = {
                link: function(n) {
                    var e = {
                        value: "undefined" == typeof n ? o.PropTypes.any.isRequired : n.isRequired,
                        requestChange: o.PropTypes.func.isRequired
                    };
                    return o.PropTypes.shape(e)
                }
            }, e.exports = t
        }, {
            26: 26
        }],
        69: [function(n, e) {
            "use strict";
            var d = n(113),
                r = /\/?>/,
                i = {
                    CHECKSUM_ATTR_NAME: "data-react-checksum",
                    addChecksumToMarkup: function addChecksumToMarkup(n) {
                        var e = d(n);
                        return n.replace(r, " " + i.CHECKSUM_ATTR_NAME + "=\"" + e + "\"$&")
                    },
                    canReuseMarkup: function canReuseMarkup(r, e) {
                        var t = e.getAttribute(i.CHECKSUM_ATTR_NAME);
                        t = t && parseInt(t, 10);
                        var a = d(r);
                        return a === t
                    }
                };
            e.exports = i
        }, {
            113: 113
        }],
        70: [function(n, e) {
            "use strict";

            function d(o, e) {
                for (var t = Math.min(o.length, e.length), n = 0; t > n; n++) {
                    if (o.charAt(n) !== e.charAt(n)) return n
                }
                return o.length === e.length ? -1 : t
            }

            function j(t) {
                return t ? t.nodeType === w ? t.documentElement : t.firstChild : null
            }

            function o(n) {
                var e = j(n);
                return e && W.getID(e)
            }

            function a(t) {
                return t && t.getAttribute && t.getAttribute(k) || ""
            }

            function r(o, e) {
                if (o) {
                    a(o) !== e ? R(!1) : void 0;
                    var t = W.findReactContainerForID(e);
                    if (t && N(t, o)) return !0
                }
                return !1
            }

            function i(n) {
                var e = O[n];
                return e && r(e, n) ? void(V = e) : !1
            }

            function p(n) {
                V = null, C.traverseAncestors(n, i);
                var e = V;
                return V = null, e
            }

            function s(d, e, t, n, r, o) {
                h.useCreateElement && (o = P({}, o), t.nodeType === w ? o[A] = t : o[A] = t.ownerDocument);
                var p = x.mountComponent(d, e, n, o);
                d._renderedComponent._topLevelWrapper = d, W._mountImageIntoNode(p, t, r, n)
            }

            function u(d, e, t, n, r) {
                var o = D.ReactReconcileTransaction.getPooled(n);
                o.perform(s, null, d, e, t, o, n, r), D.ReactReconcileTransaction.release(o)
            }

            function l(n, e) {
                for (x.unmountComponent(n), e.nodeType === w && (e = e.documentElement); e.lastChild;) {
                    e.removeChild(e.lastChild)
                }
            }

            function m(n) {
                var e = o(n);
                return e ? e !== C.getReactRootIDFromNodeID(e) : !1
            }

            function t(d) {
                for (; d && d.parentNode !== d; d = d.parentNode) {
                    if (1 === d.nodeType) {
                        var i = a(d);
                        if (i) {
                            var t, p = C.getReactRootIDFromNodeID(i),
                                r = d;
                            do {
                                if (t = a(r), r = r.parentNode, null == r) return null
                            } while (t !== p);
                            if (r === U[p]) return d
                        }
                    }
                }
                return null
            }
            var c = n(10),
                f = n(28),
                h = (n(39), n(44)),
                y = n(55),
                g = n(58),
                C = n(65),
                b = n(66),
                E = n(69),
                _ = n(76),
                x = n(82),
                v = n(92),
                D = n(93),
                P = n(24),
                T = n(151),
                N = n(147),
                M = n(129),
                R = n(158),
                S = n(135),
                I = n(138),
                k = (n(141), n(168), c.ID_ATTRIBUTE_NAME),
                O = {},
                w = 9,
                A = "__ReactMount_ownerDocument$" + Math.random().toString(36).slice(2),
                L = {},
                U = {},
                F = [],
                V = null,
                B = function() {};
            B.prototype.isReactComponent = {}, B.prototype.render = function() {
                return this.props
            };
            var W = {
                TopLevelWrapper: B,
                _instancesByReactRootID: L,
                scrollMonitor: function scrollMonitor(n, e) {
                    e()
                },
                _updateRootComponent: function _updateRootComponent(o, e, t, n) {
                    return W.scrollMonitor(t, function() {
                        v.enqueueElementInternal(o, e), n && v.enqueueCallbackInternal(o, n)
                    }), o
                },
                _registerComponent: function _registerComponent(o, e) {
                    !e || e.nodeType !== 1 && e.nodeType !== 9 && e.nodeType !== 11 ? R(!1) : void 0, f.ensureScrollValueMonitoring();
                    var t = W.registerContainer(e);
                    return L[t] = o, t
                },
                _renderNewRootComponent: function _renderNewRootComponent(d, e, t, n) {
                    var r = M(d, null),
                        o = W._registerComponent(r, e);
                    return D.batchedUpdates(u, r, o, e, t, n), r
                },
                renderSubtreeIntoContainer: function renderSubtreeIntoContainer(o, e, t, n) {
                    return null == o || null == o._reactInternalInstance ? R(!1) : void 0, W._renderSubtreeIntoContainer(o, e, t, n)
                },
                _renderSubtreeIntoContainer: function _renderSubtreeIntoContainer(u, e, t, n) {
                    y.isValidElement(e) ? void 0 : R(!1);
                    var r = new y(B, null, null, null, null, null, e),
                        i = L[o(t)];
                    if (i) {
                        var s = i._currentElement,
                            l = s.props;
                        if (I(l, e)) {
                            var c = i._renderedComponent.getPublicInstance(),
                                p = n && function() {
                                    n.call(c)
                                };
                            return W._updateRootComponent(i, r, t, p), c
                        }
                        W.unmountComponentAtNode(t)
                    }
                    var d = j(t),
                        f = d && !!a(d),
                        h = m(t),
                        C = W._renderNewRootComponent(r, t, f && !i && !h, null != u ? u._reactInternalInstance._processChildContext(u._reactInternalInstance._context) : T)._renderedComponent.getPublicInstance();
                    return n && n.call(C), C
                },
                render: function render(o, e, t) {
                    return W._renderSubtreeIntoContainer(null, o, e, t)
                },
                registerContainer: function registerContainer(n) {
                    var e = o(n);
                    return e && (e = C.getReactRootIDFromNodeID(e)), e || (e = C.createReactRootID()), U[e] = n, e
                },
                unmountComponentAtNode: function unmountComponentAtNode(d) {
                    !d || d.nodeType !== 1 && d.nodeType !== 9 && d.nodeType !== 11 ? R(!1) : void 0;
                    var e = o(d),
                        t = L[e];
                    if (!t) {
                        var n = (m(d), a(d));
                        return n && n === C.getReactRootIDFromNodeID(n), !1
                    }
                    return D.batchedUpdates(l, t, d), delete L[e], delete U[e], !0
                },
                findReactContainerForID: function findReactContainerForID(o) {
                    var e = C.getReactRootIDFromNodeID(o),
                        t = U[e];
                    return t
                },
                findReactNodeByID: function findReactNodeByID(n) {
                    var e = W.findReactContainerForID(n);
                    return W.findComponentRoot(e, n)
                },
                getFirstReactDOM: function getFirstReactDOM(n) {
                    return t(n)
                },
                findComponentRoot: function findComponentRoot(d, e) {
                    var t = F,
                        n = 0,
                        s = p(e) || d;
                    for (t[0] = s.firstChild, t.length = 1; n < t.length;) {
                        for (var o, l = t[n++], c; l;) {
                            c = W.getID(l);
                            c ? e === c ? o = l : C.isAncestorIDOf(c, e) && (t.length = n = 0, t.push(l.firstChild)) : t.push(l.firstChild), l = l.nextSibling
                        }
                        if (o) return t.length = 0, o
                    }
                    t.length = 0, R(!1)
                },
                _mountImageIntoNode: function _mountImageIntoNode(o, e, t, n) {
                    if (!e || e.nodeType !== 1 && e.nodeType !== 9 && e.nodeType !== 11 ? R(!1) : void 0, t) {
                        var r = j(e);
                        if (E.canReuseMarkup(o, r)) return;
                        var a = r.getAttribute(E.CHECKSUM_ATTR_NAME);
                        r.removeAttribute(E.CHECKSUM_ATTR_NAME);
                        var i = r.outerHTML;
                        r.setAttribute(E.CHECKSUM_ATTR_NAME, a);
                        var p = o,
                            s = d(p, i);
                        " (client) " + p.substring(s - 20, s + 20) + "\n (server) " + i.substring(s - 20, s + 20), e.nodeType === 9 ? R(!1) : void 0
                    }
                    if (e.nodeType === 9 ? R(!1) : void 0, n.useCreateElement) {
                        for (; e.lastChild;) {
                            e.removeChild(e.lastChild)
                        }
                        e.appendChild(o)
                    } else S(e, o)
                },
                ownerDocumentContextKey: A,
                getReactRootID: o,
                getID: function(o) {
                    var e = a(o);
                    if (e)
                        if (O.hasOwnProperty(e)) {
                            var t = O[e];
                            t !== o && (r(t, e) ? R(!1) : void 0, O[e] = o)
                        } else O[e] = o;
                    return e
                },
                setID: function(o, e) {
                    var t = a(o);
                    t !== e && delete O[t], o.setAttribute(k, e), O[e] = o
                },
                getNode: function(t) {
                    return O.hasOwnProperty(t) && r(O[t], t) || (O[t] = W.findReactNodeByID(t)), O[t]
                },
                getNodeFromInstance: function(n) {
                    var e = b.get(n)._rootNodeID;
                    return g.isNullComponentID(e) ? null : (O.hasOwnProperty(e) && r(O[e], e) || (O[e] = W.findReactNodeByID(e)), O[e])
                },
                isValid: r,
                purgeID: function(t) {
                    delete O[t]
                }
            };
            _.measureMethods(W, "ReactMount", {
                _renderNewRootComponent: "_renderNewRootComponent",
                _mountImageIntoNode: "_mountImageIntoNode"
            }), e.exports = W
        }, {
            10: 10,
            129: 129,
            135: 135,
            138: 138,
            141: 141,
            147: 147,
            151: 151,
            158: 158,
            168: 168,
            24: 24,
            28: 28,
            39: 39,
            44: 44,
            55: 55,
            58: 58,
            65: 65,
            66: 66,
            69: 69,
            76: 76,
            82: 82,
            92: 92,
            93: 93
        }],
        71: [function(n, e) {
            "use strict";

            function y(o, e, t) {
                h.push({
                    parentID: o,
                    parentNode: null,
                    type: l.INSERT_MARKUP,
                    markupIndex: m.push(e) - 1,
                    content: null,
                    fromIndex: null,
                    toIndex: t
                })
            }

            function r(o, e, t) {
                h.push({
                    parentID: o,
                    parentNode: null,
                    type: l.MOVE_EXISTING,
                    markupIndex: null,
                    content: null,
                    fromIndex: e,
                    toIndex: t
                })
            }

            function t(n, e) {
                h.push({
                    parentID: n,
                    parentNode: null,
                    type: l.REMOVE_NODE,
                    markupIndex: null,
                    content: null,
                    fromIndex: e,
                    toIndex: null
                })
            }

            function o(n, e) {
                h.push({
                    parentID: n,
                    parentNode: null,
                    type: l.SET_MARKUP,
                    markupIndex: null,
                    content: e,
                    fromIndex: null,
                    toIndex: null
                })
            }

            function a(n, e) {
                h.push({
                    parentID: n,
                    parentNode: null,
                    type: l.TEXT_CONTENT,
                    markupIndex: null,
                    content: e,
                    fromIndex: null,
                    toIndex: null
                })
            }

            function i() {
                h.length && (u.processChildrenUpdates(h, m), s())
            }

            function s() {
                h.length = 0, m.length = 0
            }
            var u = n(36),
                l = n(72),
                p = (n(39), n(82)),
                d = n(31),
                c = n(120),
                f = 0,
                h = [],
                m = [];
            e.exports = {
                Mixin: {
                    _reconcilerInstantiateChildren: function _reconcilerInstantiateChildren(o, e, t) {
                        return d.instantiateChildren(o, e, t)
                    },
                    _reconcilerUpdateChildren: function _reconcilerUpdateChildren(a, e, t, n) {
                        var r;
                        return r = c(e), d.updateChildren(a, r, t, n)
                    },
                    mountChildren: function mountChildren(d, e, t) {
                        var n = this._reconcilerInstantiateChildren(d, e, t);
                        this._renderedChildren = n;
                        var r = [],
                            o = 0;
                        for (var c in n) {
                            if (n.hasOwnProperty(c)) {
                                var i = n[c],
                                    u = this._rootNodeID + c,
                                    s = p.mountComponent(i, u, e, t);
                                i._mountIndex = o++, r.push(s)
                            }
                        }
                        return r
                    },
                    updateTextContent: function updateTextContent(o) {
                        f++;
                        var e = !0;
                        try {
                            var a = this._renderedChildren;
                            d.unmountChildren(a);
                            for (var n in a) {
                                a.hasOwnProperty(n) && this._unmountChild(a[n])
                            }
                            this.setTextContent(o), e = !1
                        } finally {
                            f--, f || (e ? s() : i())
                        }
                    },
                    updateMarkup: function updateMarkup(o) {
                        f++;
                        var e = !0;
                        try {
                            var a = this._renderedChildren;
                            d.unmountChildren(a);
                            for (var n in a) {
                                a.hasOwnProperty(n) && this._unmountChildByName(a[n], n)
                            }
                            this.setMarkup(o), e = !1
                        } finally {
                            f--, f || (e ? s() : i())
                        }
                    },
                    updateChildren: function updateChildren(o, e, t) {
                        f++;
                        var n = !0;
                        try {
                            this._updateChildren(o, e, t), n = !1
                        } finally {
                            f--, f || (n ? s() : i())
                        }
                    },
                    _updateChildren: function _updateChildren(d, e, t) {
                        var n = this._renderedChildren,
                            r = this._reconcilerUpdateChildren(n, d, e, t);
                        if (this._renderedChildren = r, r || n) {
                            var o, p = 0,
                                c = 0;
                            for (o in r) {
                                if (r.hasOwnProperty(o)) {
                                    var m = n && n[o],
                                        s = r[o];
                                    m === s ? (this.moveChild(m, c, p), p = Math.max(m._mountIndex, p), m._mountIndex = c) : (m && (p = Math.max(m._mountIndex, p), this._unmountChild(m)), this._mountChildByNameAtIndex(s, o, c, e, t)), c++
                                }
                            }
                            for (o in n) {
                                !n.hasOwnProperty(o) || r && r.hasOwnProperty(o) || this._unmountChild(n[o])
                            }
                        }
                    },
                    unmountChildren: function unmountChildren() {
                        var t = this._renderedChildren;
                        d.unmountChildren(t), this._renderedChildren = null
                    },
                    moveChild: function moveChild(o, e, t) {
                        o._mountIndex < t && r(this._rootNodeID, o._mountIndex, e)
                    },
                    createChild: function createChild(n, e) {
                        y(this._rootNodeID, e, n._mountIndex)
                    },
                    removeChild: function removeChild(n) {
                        t(this._rootNodeID, n._mountIndex)
                    },
                    setTextContent: function setTextContent(t) {
                        a(this._rootNodeID, t)
                    },
                    setMarkup: function setMarkup(t) {
                        o(this._rootNodeID, t)
                    },
                    _mountChildByNameAtIndex: function _mountChildByNameAtIndex(d, e, t, n, r) {
                        var o = this._rootNodeID + e,
                            a = p.mountComponent(d, o, n, r);
                        d._mountIndex = t, this.createChild(d, a)
                    },
                    _unmountChild: function _unmountChild(t) {
                        this.removeChild(t), t._mountIndex = null
                    }
                }
            }
        }, {
            120: 120,
            31: 31,
            36: 36,
            39: 39,
            72: 72,
            82: 82
        }],
        72: [function(n, e) {
            "use strict";
            var t = n(162),
                r = t({
                    INSERT_MARKUP: null,
                    MOVE_EXISTING: null,
                    REMOVE_NODE: null,
                    SET_MARKUP: null,
                    TEXT_CONTENT: null
                });
            e.exports = r
        }, {
            162: 162
        }],
        73: [function(n, e) {
            "use strict";

            function t(t) {
                return s ? void 0 : i(!1), new s(t.type, t.props)
            }

            function o(t) {
                return new p(t)
            }

            function r(t) {
                return t instanceof p
            }
            var a = n(24),
                i = n(158),
                s = null,
                u = {},
                p = null;
            e.exports = {
                getComponentClassForElement: function(o) {
                    if ("function" == typeof o.type) return o.type;
                    var e = o.type,
                        t = u[e];
                    return null == t && (u[e] = t = null(e)), t
                },
                createInternalComponent: t,
                createInstanceForText: o,
                isTextComponent: r,
                injection: {
                    injectGenericComponentClass: function injectGenericComponentClass(t) {
                        s = t
                    },
                    injectTextComponentClass: function injectTextComponentClass(t) {
                        p = t
                    },
                    injectComponentClasses: function injectComponentClasses(t) {
                        a(u, t)
                    }
                }
            }
        }, {
            158: 158,
            24: 24
        }],
        74: [function(n, e) {
            "use strict";

            function t() {}
            var r = (n(168), {
                isMounted: function isMounted() {
                    return !1
                },
                enqueueCallback: function enqueueCallback() {},
                enqueueForceUpdate: function enqueueForceUpdate(n) {
                    t(n, "forceUpdate")
                },
                enqueueReplaceState: function enqueueReplaceState(n) {
                    t(n, "replaceState")
                },
                enqueueSetState: function enqueueSetState(n) {
                    t(n, "setState")
                },
                enqueueSetProps: function enqueueSetProps(n) {
                    t(n, "setProps")
                },
                enqueueReplaceProps: function enqueueReplaceProps(n) {
                    t(n, "replaceProps")
                }
            });
            e.exports = r
        }, {
            168: 168
        }],
        75: [function(n, e) {
            "use strict";
            var a = n(158),
                r = {
                    isValidOwner: function isValidOwner(t) {
                        return !(!t || "function" != typeof t.attachRef || "function" != typeof t.detachRef)
                    },
                    addComponentAsRefTo: function addComponentAsRefTo(o, e, t) {
                        r.isValidOwner(t) ? void 0 : a(!1), t.attachRef(e, o)
                    },
                    removeComponentAsRefFrom: function removeComponentAsRefFrom(o, e, t) {
                        r.isValidOwner(t) ? void 0 : a(!1), t.getPublicInstance().refs[e] === o.getPublicInstance() && t.detachRef(e)
                    }
                };
            e.exports = r
        }, {
            158: 158
        }],
        76: [function(n, e) {
            "use strict";
            var t = {
                enableMeasure: !1,
                storedMeasure: function(o, e, t) {
                    return t
                },
                measureMethods: function measureMethods() {},
                measure: function measure(o, e, t) {
                    return t
                },
                injection: {
                    injectMeasure: function injectMeasure(n) {
                        t.storedMeasure = n
                    }
                }
            };
            e.exports = t
        }, {}],
        77: [function(n, e) {
            "use strict";

            function t(o) {
                return function(e, t, n) {
                    e.hasOwnProperty(t) ? e[t] = o(e[t], n) : e[t] = n
                }
            }

            function r(o, e) {
                for (var t in e) {
                    if (e.hasOwnProperty(t)) {
                        var n = p[t];
                        n && p.hasOwnProperty(t) ? n(o, t, e[t]) : o.hasOwnProperty(t) || (o[t] = e[t])
                    }
                }
                return o
            }
            var o = n(24),
                a = n(150),
                d = n(161),
                i = t(function(n, e) {
                    return o({}, e, n)
                }),
                p = {
                    children: a,
                    className: t(d),
                    style: i
                };
            e.exports = {
                mergeProps: function mergeProps(n, e) {
                    return r(o({}, n), e)
                }
            }
        }, {
            150: 150,
            161: 161,
            24: 24
        }],
        78: [function(n, e) {
            "use strict";
            e.exports = {}
        }, {}],
        79: [function(n, e) {
            "use strict";
            var t = n(162),
                r = t({
                    prop: null,
                    context: null,
                    childContext: null
                });
            e.exports = r
        }, {
            162: 162
        }],
        80: [function(n, e) {
            "use strict";

            function a(d) {
                function e(e, t, n, r, p, a) {
                    if (r = r || m, a = a || n, null == t[n]) {
                        var s = c[p];
                        return e ? new Error("Required " + s + " `" + a + "` was not specified in " + ("`" + r + "`.")) : null
                    }
                    return d(t, n, r, p, a)
                }
                var t = e.bind(null, !1);
                return t.isRequired = e.bind(null, !0), t
            }

            function t(d) {
                function e(e, t, n, r, o) {
                    var a = e[t],
                        i = f(a);
                    if (i !== d) {
                        var u = c[r],
                            s = p(a);
                        return new Error("Invalid " + u + " `" + o + "` of type " + ("`" + s + "` supplied to `" + n + "`, expected ") + ("`" + d + "`."))
                    }
                    return null
                }
                return a(e)
            }

            function d(a) {
                switch (_typeof(a)) {
                    case "number":
                    case "string":
                    case "undefined":
                        return !0;
                    case "boolean":
                        return !a;
                    case "object":
                        if (Array.isArray(a)) return a.every(d);
                        if (null === a || i.isValidElement(a)) return !0;
                        var e = s(a);
                        if (!e) return !1;
                        var t, p = e.call(a);
                        if (e !== a.entries) {
                            for (; !(t = p.next()).done;) {
                                if (!d(t.value)) return !1
                            }
                        } else
                            for (; !(t = p.next()).done;) {
                                var r = t.value;
                                if (r && !d(r[1])) return !1
                            }
                        return !0;
                    default:
                        return !1;
                }
            }

            function f(n) {
                var e = _typeof(n);
                return Array.isArray(n) ? "array" : n instanceof RegExp ? "object" : e
            }

            function p(n) {
                var e = f(n);
                if ("object" === e) {
                    if (n instanceof Date) return "date";
                    if (n instanceof RegExp) return "regexp"
                }
                return e
            }

            function l(t) {
                return t.constructor && t.constructor.name ? t.constructor.name : "<<anonymous>>"
            }
            var i = n(55),
                c = n(78),
                o = n(150),
                s = n(126),
                m = "<<anonymous>>",
                r = {
                    array: t("array"),
                    bool: t("boolean"),
                    func: t("function"),
                    number: t("number"),
                    object: t("object"),
                    string: t("string"),
                    any: function() {
                        return a(o.thatReturns(null))
                    }(),
                    arrayOf: function(n) {
                        function e(e, t, d, r, o) {
                            var a = e[t];
                            if (!Array.isArray(a)) {
                                var i = c[r],
                                    p = f(a);
                                return new Error("Invalid " + i + " `" + o + "` of type " + ("`" + p + "` supplied to `" + d + "`, expected an array."))
                            }
                            for (var s = 0, u; s < a.length; s++) {
                                u = n(a, s, d, r, o + "[" + s + "]");
                                if (u instanceof Error) return u
                            }
                            return null
                        }
                        return a(e)
                    },
                    element: function() {
                        function t(d, e, t, n, r) {
                            if (!i.isValidElement(d[e])) {
                                var o = c[n];
                                return new Error("Invalid " + o + " `" + r + "` supplied to " + ("`" + t + "`, expected a single ReactElement."))
                            }
                            return null
                        }
                        return a(t)
                    }(),
                    instanceOf: function(d) {
                        function e(e, t, n, r, o) {
                            if (!(e[t] instanceof d)) {
                                var a = c[r],
                                    i = d.name || m,
                                    p = l(e[t]);
                                return new Error("Invalid " + a + " `" + o + "` of type " + ("`" + p + "` supplied to `" + n + "`, expected ") + ("instance of `" + i + "`."))
                            }
                            return null
                        }
                        return a(e)
                    },
                    node: function() {
                        function t(i, e, t, n, r) {
                            if (!d(i[e])) {
                                var o = c[n];
                                return new Error("Invalid " + o + " `" + r + "` supplied to " + ("`" + t + "`, expected a ReactNode."))
                            }
                            return null
                        }
                        return a(t)
                    }(),
                    objectOf: function(n) {
                        function e(e, t, d, r, o) {
                            var a = e[t],
                                i = f(a);
                            if ("object" !== i) {
                                var p = c[r];
                                return new Error("Invalid " + p + " `" + o + "` of type " + ("`" + i + "` supplied to `" + d + "`, expected an object."))
                            }
                            for (var s in a) {
                                if (a.hasOwnProperty(s)) {
                                    var u = n(a, s, d, r, o + "." + s);
                                    if (u instanceof Error) return u
                                }
                            }
                            return null
                        }
                        return a(e)
                    },
                    oneOf: function(d) {
                        function e(e, t, n, r, o) {
                            for (var a = e[t], i = 0; i < d.length; i++) {
                                if (a === d[i]) return null
                            }
                            var p = c[r],
                                s = JSON.stringify(d);
                            return new Error("Invalid " + p + " `" + o + "` of value `" + a + "` " + ("supplied to `" + n + "`, expected one of " + s + "."))
                        }
                        return a(Array.isArray(d) ? e : function() {
                            return new Error("Invalid argument supplied to oneOf, expected an instance of array.")
                        })
                    },
                    oneOfType: function(d) {
                        function e(e, t, n, r, o) {
                            for (var a = 0, p; a < d.length; a++) {
                                p = d[a];
                                if (null == p(e, t, n, r, o)) return null
                            }
                            var l = c[r];
                            return new Error("Invalid " + l + " `" + o + "` supplied to " + ("`" + n + "`."))
                        }
                        return a(Array.isArray(d) ? e : function() {
                            return new Error("Invalid argument supplied to oneOfType, expected an instance of array.")
                        })
                    },
                    shape: function(n) {
                        function e(e, t, d, r, o) {
                            var a = e[t],
                                i = f(a);
                            if ("object" !== i) {
                                var u = c[r];
                                return new Error("Invalid " + u + " `" + o + "` of type `" + i + "` " + ("supplied to `" + d + "`, expected `object`."))
                            }
                            for (var s in n) {
                                var l = n[s];
                                if (l) {
                                    var m = l(a, s, d, r, o + "." + s);
                                    if (m) return m
                                }
                            }
                            return null
                        }
                        return a(e)
                    }
                };
            e.exports = r
        }, {
            126: 126,
            150: 150,
            55: 55,
            78: 78
        }],
        81: [function(n, e) {
            "use strict";

            function t(t) {
                this.reinitializeTransaction(), this.renderToStaticMarkup = !1, this.reactMountReady = r.getPooled(null), this.useCreateElement = !t && d.useCreateElement
            }
            var r = n(6),
                o = n(25),
                a = n(28),
                d = n(44),
                i = n(64),
                s = n(110),
                u = n(24),
                l = {
                    initialize: i.getSelectionInformation,
                    close: i.restoreSelection
                },
                p = [l, {
                    initialize: function initialize() {
                        var t = a.isEnabled();
                        return a.setEnabled(!1), t
                    },
                    close: function close(t) {
                        a.setEnabled(t)
                    }
                }, {
                    initialize: function initialize() {
                        this.reactMountReady.reset()
                    },
                    close: function close() {
                        this.reactMountReady.notifyAll()
                    }
                }];
            u(t.prototype, s.Mixin, {
                getTransactionWrappers: function getTransactionWrappers() {
                    return p
                },
                getReactMountReady: function getReactMountReady() {
                    return this.reactMountReady
                },
                destructor: function destructor() {
                    r.release(this.reactMountReady), this.reactMountReady = null
                }
            }), o.addPoolingTo(t), e.exports = t
        }, {
            110: 110,
            24: 24,
            25: 25,
            28: 28,
            44: 44,
            6: 6,
            64: 64
        }],
        82: [function(n, e) {
            "use strict";

            function d() {
                r.attachRefs(this, this._currentElement)
            }
            var r = n(83);
            e.exports = {
                mountComponent: function mountComponent(r, e, t, n) {
                    var o = r.mountComponent(e, t, n);
                    return r._currentElement && null != r._currentElement.ref && t.getReactMountReady().enqueue(d, r), o
                },
                unmountComponent: function unmountComponent(t) {
                    r.detachRefs(t, t._currentElement), t.unmountComponent()
                },
                receiveComponent: function receiveComponent(o, e, t, n) {
                    var a = o._currentElement;
                    if (e !== a || n !== o._context) {
                        var i = r.shouldUpdateRefs(a, e);
                        i && r.detachRefs(o, a), o.receiveComponent(e, t, n), i && o._currentElement && null != o._currentElement.ref && t.getReactMountReady().enqueue(d, o)
                    }
                },
                performUpdateIfNecessary: function performUpdateIfNecessary(n, e) {
                    n.performUpdateIfNecessary(e)
                }
            }
        }, {
            83: 83
        }],
        83: [function(n, e) {
            "use strict";

            function d(r, e, t) {
                "function" == typeof r ? r(e.getPublicInstance()) : o.addComponentAsRefTo(e, r, t)
            }

            function r(r, e, t) {
                "function" == typeof r ? r(null) : o.removeComponentAsRefFrom(e, r, t)
            }
            var o = n(75),
                t = {};
            t.attachRefs = function(o, e) {
                if (null !== e && !1 !== e) {
                    var t = e.ref;
                    null != t && d(t, o, e._owner)
                }
            }, t.shouldUpdateRefs = function(n, e) {
                return null === n || !1 === n || null === e || !1 === e || e._owner !== n._owner || e.ref !== n.ref
            }, t.detachRefs = function(o, e) {
                if (null !== e && !1 !== e) {
                    var t = e.ref;
                    null != t && r(t, o, e._owner)
                }
            }, e.exports = t
        }, {
            75: 75
        }],
        84: [function(n, e) {
            "use strict";
            var t = {
                createReactRootIndex: null,
                injection: {
                    injectCreateReactRootIndex: function injectCreateReactRootIndex(n) {
                        t.createReactRootIndex = n
                    }
                }
            };
            e.exports = t
        }, {}],
        85: [function(n, e) {
            "use strict";
            e.exports = {
                isBatchingUpdates: !1,
                batchedUpdates: function batchedUpdates() {}
            }
        }, {}],
        86: [function(n, e) {
            "use strict";
            var o = n(53),
                r = n(55),
                a = n(65),
                i = n(69),
                s = n(85),
                u = n(87),
                l = n(93),
                p = n(151),
                d = n(129),
                c = n(158);
            e.exports = {
                renderToString: function(m) {
                    r.isValidElement(m) ? void 0 : c(!1);
                    var e;
                    try {
                        l.injection.injectBatchingStrategy(s);
                        var f = a.createReactRootID();
                        return e = u.getPooled(!1), e.perform(function() {
                            var t = d(m, null),
                                n = t.mountComponent(f, e, p);
                            return i.addChecksumToMarkup(n)
                        }, null)
                    } finally {
                        u.release(e), l.injection.injectBatchingStrategy(o)
                    }
                },
                renderToStaticMarkup: function(i) {
                    r.isValidElement(i) ? void 0 : c(!1);
                    var e;
                    try {
                        l.injection.injectBatchingStrategy(s);
                        var m = a.createReactRootID();
                        return e = u.getPooled(!0), e.perform(function() {
                            var t = d(i, null);
                            return t.mountComponent(m, e, p)
                        }, null)
                    } finally {
                        u.release(e), l.injection.injectBatchingStrategy(o)
                    }
                }
            }
        }, {
            129: 129,
            151: 151,
            158: 158,
            53: 53,
            55: 55,
            65: 65,
            69: 69,
            85: 85,
            87: 87,
            93: 93
        }],
        87: [function(n, e) {
            "use strict";

            function t(t) {
                this.reinitializeTransaction(), this.renderToStaticMarkup = t, this.reactMountReady = o.getPooled(null), this.useCreateElement = !1
            }
            var r = n(25),
                o = n(6),
                a = n(110),
                d = n(24),
                i = n(150),
                p = [{
                    initialize: function initialize() {
                        this.reactMountReady.reset()
                    },
                    close: i
                }];
            d(t.prototype, a.Mixin, {
                getTransactionWrappers: function getTransactionWrappers() {
                    return p
                },
                getReactMountReady: function getReactMountReady() {
                    return this.reactMountReady
                },
                destructor: function destructor() {
                    o.release(this.reactMountReady), this.reactMountReady = null
                }
            }), r.addPoolingTo(t), e.exports = t
        }, {
            110: 110,
            150: 150,
            24: 24,
            25: 25,
            6: 6
        }],
        88: [function(n, e) {
            "use strict";

            function a(o, e) {
                var t = {};
                return function(n) {
                    t[e] = n, o.setState(t)
                }
            }
            var t = {
                createStateSetter: function createStateSetter(d, e) {
                    return function(t, n, r, o, a, i) {
                        var p = e.call(d, t, n, r, o, a, i);
                        p && d.setState(p)
                    }
                },
                createStateKeySetter: function createStateKeySetter(o, e) {
                    var t = o.__keySetters || (o.__keySetters = {});
                    return t[e] || (t[e] = a(o, e))
                }
            };
            t.Mixin = {
                createStateSetter: function createStateSetter(n) {
                    return t.createStateSetter(this, n)
                },
                createStateKeySetter: function createStateKeySetter(n) {
                    return t.createStateKeySetter(this, n)
                }
            }, e.exports = t
        }, {}],
        89: [function(n, e) {
            "use strict";
            var t = n(120);
            e.exports = {
                getChildMapping: function getChildMapping(n) {
                    return n ? t(n) : n
                },
                mergeChildMappings: function mergeChildMappings(d, p) {
                    function c(e) {
                        return p.hasOwnProperty(e) ? p[e] : d[e]
                    }
                    d = d || {}, p = p || {};
                    var n = {},
                        r = [];
                    for (var m in d) {
                        p.hasOwnProperty(m) ? r.length && (n[m] = r, r = []) : r.push(m)
                    }
                    var a, f = {};
                    for (var u in p) {
                        if (n.hasOwnProperty(u))
                            for (a = 0; a < n[u].length; a++) {
                                var s = n[u][a];
                                f[n[u][a]] = c(s)
                            }
                        f[u] = c(u)
                    }
                    for (a = 0; a < r.length; a++) {
                        f[r[a]] = c(r[a])
                    }
                    return f
                }
            }
        }, {
            120: 120
        }],
        90: [function(n, e) {
            "use strict";

            function t() {
                var a = document.createElement("div"),
                    e = a.style;
                "AnimationEvent" in window || delete d.animationend.animation, "TransitionEvent" in window || delete d.transitionend.transition;
                for (var t in d) {
                    var n = d[t];
                    for (var r in n) {
                        if (r in e) {
                            i.push(n[r]);
                            break
                        }
                    }
                }
            }

            function r(o, e, t) {
                o.addEventListener(e, t, !1)
            }

            function o(o, e, t) {
                o.removeEventListener(e, t, !1)
            }
            var a = n(144),
                d = {
                    transitionend: {
                        transition: "transitionend",
                        WebkitTransition: "webkitTransitionEnd",
                        MozTransition: "mozTransitionEnd",
                        OTransition: "oTransitionEnd",
                        msTransition: "MSTransitionEnd"
                    },
                    animationend: {
                        animation: "animationend",
                        WebkitAnimation: "webkitAnimationEnd",
                        MozAnimation: "mozAnimationEnd",
                        OAnimation: "oAnimationEnd",
                        msAnimation: "MSAnimationEnd"
                    }
                },
                i = [];
            a.canUseDOM && t();
            e.exports = {
                addEndEventListener: function addEndEventListener(o, e) {
                    return 0 === i.length ? void window.setTimeout(e, 0) : void i.forEach(function(t) {
                        r(o, t, e)
                    })
                },
                removeEndEventListener: function removeEndEventListener(r, e) {
                    0 !== i.length && i.forEach(function(t) {
                        o(r, t, e)
                    })
                }
            }
        }, {
            144: 144
        }],
        91: [function(n, e) {
            "use strict";
            var d = n(26),
                p = n(89),
                o = n(24),
                t = n(150),
                r = d.createClass({
                    displayName: "ReactTransitionGroup",
                    propTypes: {
                        component: d.PropTypes.any,
                        childFactory: d.PropTypes.func
                    },
                    getDefaultProps: function getDefaultProps() {
                        return {
                            component: "span",
                            childFactory: t.thatReturnsArgument
                        }
                    },
                    getInitialState: function getInitialState() {
                        return {
                            children: p.getChildMapping(this.props.children)
                        }
                    },
                    componentWillMount: function componentWillMount() {
                        this.currentlyTransitioningKeys = {}, this.keysToEnter = [], this.keysToLeave = []
                    },
                    componentDidMount: function componentDidMount() {
                        var n = this.state.children;
                        for (var e in n) {
                            n[e] && this.performAppear(e)
                        }
                    },
                    componentWillReceiveProps: function componentWillReceiveProps(o) {
                        var e = p.getChildMapping(o.children),
                            t = this.state.children;
                        this.setState({
                            children: p.mergeChildMappings(t, e)
                        });
                        for (var n in e) {
                            var d = t && t.hasOwnProperty(n);
                            !e[n] || d || this.currentlyTransitioningKeys[n] || this.keysToEnter.push(n)
                        }
                        for (n in t) {
                            var a = e && e.hasOwnProperty(n);
                            !t[n] || a || this.currentlyTransitioningKeys[n] || this.keysToLeave.push(n)
                        }
                    },
                    componentDidUpdate: function componentDidUpdate() {
                        var n = this.keysToEnter;
                        this.keysToEnter = [], n.forEach(this.performEnter);
                        var e = this.keysToLeave;
                        this.keysToLeave = [], e.forEach(this.performLeave)
                    },
                    performAppear: function performAppear(n) {
                        this.currentlyTransitioningKeys[n] = !0;
                        var e = this.refs[n];
                        e.componentWillAppear ? e.componentWillAppear(this._handleDoneAppearing.bind(this, n)) : this._handleDoneAppearing(n)
                    },
                    _handleDoneAppearing: function _handleDoneAppearing(o) {
                        var e = this.refs[o];
                        e.componentDidAppear && e.componentDidAppear(), delete this.currentlyTransitioningKeys[o];
                        var t = p.getChildMapping(this.props.children);
                        t && t.hasOwnProperty(o) || this.performLeave(o)
                    },
                    performEnter: function performEnter(n) {
                        this.currentlyTransitioningKeys[n] = !0;
                        var e = this.refs[n];
                        e.componentWillEnter ? e.componentWillEnter(this._handleDoneEntering.bind(this, n)) : this._handleDoneEntering(n)
                    },
                    _handleDoneEntering: function _handleDoneEntering(o) {
                        var e = this.refs[o];
                        e.componentDidEnter && e.componentDidEnter(), delete this.currentlyTransitioningKeys[o];
                        var t = p.getChildMapping(this.props.children);
                        t && t.hasOwnProperty(o) || this.performLeave(o)
                    },
                    performLeave: function performLeave(n) {
                        this.currentlyTransitioningKeys[n] = !0;
                        var e = this.refs[n];
                        e.componentWillLeave ? e.componentWillLeave(this._handleDoneLeaving.bind(this, n)) : this._handleDoneLeaving(n)
                    },
                    _handleDoneLeaving: function _handleDoneLeaving(r) {
                        var e = this.refs[r];
                        e.componentDidLeave && e.componentDidLeave(), delete this.currentlyTransitioningKeys[r];
                        var t = p.getChildMapping(this.props.children);
                        t && t.hasOwnProperty(r) ? this.performEnter(r) : this.setState(function(e) {
                            var t = o({}, e.children);
                            return delete t[r], {
                                children: t
                            }
                        })
                    },
                    render: function render() {
                        var o = [];
                        for (var e in this.state.children) {
                            var t = this.state.children[e];
                            t && o.push(d.cloneElement(this.props.childFactory(t), {
                                ref: e,
                                key: e
                            }))
                        }
                        return d.createElement(this.props.component, this.props, o)
                    }
                });
            e.exports = r
        }, {
            150: 150,
            24: 24,
            26: 26,
            89: 89
        }],
        92: [function(n, e) {
            "use strict";

            function d(n) {
                t.enqueueUpdate(n)
            }

            function r(t) {
                var e = o.get(t);
                return e ? e : null
            }
            var p = (n(39), n(55)),
                o = n(66),
                t = n(93),
                a = n(24),
                s = n(158),
                i = (n(168), {
                    isMounted: function isMounted(n) {
                        var e = o.get(n);
                        return e ? !!e._renderedComponent : !1
                    },
                    enqueueCallback: function enqueueCallback(o, e) {
                        "function" != typeof e ? s(!1) : void 0;
                        var t = r(o);
                        return t ? (t._pendingCallbacks ? t._pendingCallbacks.push(e) : t._pendingCallbacks = [e], void d(t)) : null
                    },
                    enqueueCallbackInternal: function enqueueCallbackInternal(n, e) {
                        "function" != typeof e ? s(!1) : void 0, n._pendingCallbacks ? n._pendingCallbacks.push(e) : n._pendingCallbacks = [e], d(n)
                    },
                    enqueueForceUpdate: function enqueueForceUpdate(n) {
                        var e = r(n, "forceUpdate");
                        e && (e._pendingForceUpdate = !0, d(e))
                    },
                    enqueueReplaceState: function enqueueReplaceState(o, e) {
                        var t = r(o, "replaceState");
                        t && (t._pendingStateQueue = [e], t._pendingReplaceState = !0, d(t))
                    },
                    enqueueSetState: function enqueueSetState(o, e) {
                        var t = r(o, "setState");
                        if (t) {
                            var n = t._pendingStateQueue || (t._pendingStateQueue = []);
                            n.push(e), d(t)
                        }
                    },
                    enqueueSetProps: function enqueueSetProps(o, e) {
                        var t = r(o, "setProps");
                        t && i.enqueueSetPropsInternal(t, e)
                    },
                    enqueueSetPropsInternal: function enqueueSetPropsInternal(r, e) {
                        var t = r._topLevelWrapper;
                        t ? void 0 : s(!1);
                        var n = t._pendingElement || t._currentElement,
                            o = n.props,
                            i = a({}, o.props, e);
                        t._pendingElement = p.cloneAndReplaceProps(n, p.cloneAndReplaceProps(o, i)), d(t)
                    },
                    enqueueReplaceProps: function enqueueReplaceProps(o, e) {
                        var t = r(o, "replaceProps");
                        t && i.enqueueReplacePropsInternal(t, e)
                    },
                    enqueueReplacePropsInternal: function enqueueReplacePropsInternal(r, e) {
                        var t = r._topLevelWrapper;
                        t ? void 0 : s(!1);
                        var n = t._pendingElement || t._currentElement,
                            o = n.props;
                        t._pendingElement = p.cloneAndReplaceProps(n, p.cloneAndReplaceProps(o, e)), d(t)
                    },
                    enqueueElementInternal: function enqueueElementInternal(n, e) {
                        n._pendingElement = e, d(n)
                    }
                });
            e.exports = i
        }, {
            158: 158,
            168: 168,
            24: 24,
            39: 39,
            55: 55,
            66: 66,
            93: 93
        }],
        93: [function(n, e) {
            "use strict";

            function E() {
                N.ReactReconcileTransaction && v ? void 0 : f(!1)
            }

            function t() {
                this.reinitializeTransaction(), this.dirtyComponentsLength = null, this.callbackQueue = s.getPooled(), this.reconcileTransaction = N.ReactReconcileTransaction.getPooled(!1)
            }

            function o(r, e, t, n, o, a) {
                E(), v.batchedUpdates(r, e, t, n, o, a)
            }

            function _(n, e) {
                return n._mountOrder - e._mountOrder
            }

            function r(i) {
                var e = i.dirtyComponentsLength;
                e !== m.length ? f(!1) : void 0, m.sort(_);
                for (var t = 0; e > t; t++) {
                    var p = m[t],
                        r = p._pendingCallbacks;
                    if (p._pendingCallbacks = null, d.performUpdateIfNecessary(p, i.reconcileTransaction), r)
                        for (var o = 0; o < r.length; o++) {
                            i.callbackQueue.enqueue(r[o], p.getPublicInstance())
                        }
                }
            }

            function a(t) {
                return E(), v.isBatchingUpdates ? void m.push(t) : void v.batchedUpdates(a, t)
            }

            function i(n, e) {
                v.isBatchingUpdates ? void 0 : f(!1), h.enqueue(n, e), g = !0
            }
            var s = n(6),
                u = n(25),
                p = n(76),
                d = n(82),
                l = n(110),
                c = n(24),
                f = n(158),
                m = [],
                h = s.getPooled(),
                g = !1,
                v = null,
                P = [{
                    initialize: function initialize() {
                        this.dirtyComponentsLength = m.length
                    },
                    close: function close() {
                        this.dirtyComponentsLength !== m.length ? (m.splice(0, this.dirtyComponentsLength), x()) : m.length = 0
                    }
                }, {
                    initialize: function initialize() {
                        this.callbackQueue.reset()
                    },
                    close: function close() {
                        this.callbackQueue.notifyAll()
                    }
                }];
            c(t.prototype, l.Mixin, {
                getTransactionWrappers: function getTransactionWrappers() {
                    return P
                },
                destructor: function destructor() {
                    this.dirtyComponentsLength = null, s.release(this.callbackQueue), this.callbackQueue = null, N.ReactReconcileTransaction.release(this.reconcileTransaction), this.reconcileTransaction = null
                },
                perform: function perform(o, e, t) {
                    return l.Mixin.perform.call(this, this.reconcileTransaction.perform, this.reconcileTransaction, o, e, t)
                }
            }), u.addPoolingTo(t);
            var x = function() {
                for (; m.length || g;) {
                    if (m.length) {
                        var n = t.getPooled();
                        n.perform(r, null, n), t.release(n)
                    }
                    if (g) {
                        g = !1;
                        var e = h;
                        h = s.getPooled(), e.notifyAll(), s.release(e)
                    }
                }
            };
            x = p.measure("ReactUpdates", "flushBatchedUpdates", x);
            var N = {
                ReactReconcileTransaction: null,
                batchedUpdates: o,
                enqueueUpdate: a,
                flushBatchedUpdates: x,
                injection: {
                    injectReconcileTransaction: function injectReconcileTransaction(t) {
                        t ? void 0 : f(!1), N.ReactReconcileTransaction = t
                    },
                    injectBatchingStrategy: function injectBatchingStrategy(t) {
                        t ? void 0 : f(!1), "function" != typeof t.batchedUpdates ? f(!1) : void 0, "boolean" != typeof t.isBatchingUpdates ? f(!1) : void 0, v = t
                    }
                },
                asap: i
            };
            e.exports = N
        }, {
            110: 110,
            158: 158,
            24: 24,
            25: 25,
            6: 6,
            76: 76,
            82: 82
        }],
        94: [function(n, e) {
            "use strict";
            e.exports = "0.14.3"
        }, {}],
        95: [function(n, e) {
            "use strict";
            var t = n(10),
                r = t.injection.MUST_USE_ATTRIBUTE,
                o = {
                    xlink: "http://www.w3.org/1999/xlink",
                    xml: "http://www.w3.org/XML/1998/namespace"
                },
                a = {
                    Properties: {
                        clipPath: r,
                        cx: r,
                        cy: r,
                        d: r,
                        dx: r,
                        dy: r,
                        fill: r,
                        fillOpacity: r,
                        fontFamily: r,
                        fontSize: r,
                        fx: r,
                        fy: r,
                        gradientTransform: r,
                        gradientUnits: r,
                        markerEnd: r,
                        markerMid: r,
                        markerStart: r,
                        offset: r,
                        opacity: r,
                        patternContentUnits: r,
                        patternUnits: r,
                        points: r,
                        preserveAspectRatio: r,
                        r: r,
                        rx: r,
                        ry: r,
                        spreadMethod: r,
                        stopColor: r,
                        stopOpacity: r,
                        stroke: r,
                        strokeDasharray: r,
                        strokeLinecap: r,
                        strokeOpacity: r,
                        strokeWidth: r,
                        textAnchor: r,
                        transform: r,
                        version: r,
                        viewBox: r,
                        x1: r,
                        x2: r,
                        x: r,
                        xlinkActuate: r,
                        xlinkArcrole: r,
                        xlinkHref: r,
                        xlinkRole: r,
                        xlinkShow: r,
                        xlinkTitle: r,
                        xlinkType: r,
                        xmlBase: r,
                        xmlLang: r,
                        xmlSpace: r,
                        y1: r,
                        y2: r,
                        y: r
                    },
                    DOMAttributeNamespaces: {
                        xlinkActuate: o.xlink,
                        xlinkArcrole: o.xlink,
                        xlinkHref: o.xlink,
                        xlinkRole: o.xlink,
                        xlinkShow: o.xlink,
                        xlinkTitle: o.xlink,
                        xlinkType: o.xlink,
                        xmlBase: o.xml,
                        xmlLang: o.xml,
                        xmlSpace: o.xml
                    },
                    DOMAttributeNames: {
                        clipPath: "clip-path",
                        fillOpacity: "fill-opacity",
                        fontFamily: "font-family",
                        fontSize: "font-size",
                        gradientTransform: "gradientTransform",
                        gradientUnits: "gradientUnits",
                        markerEnd: "marker-end",
                        markerMid: "marker-mid",
                        markerStart: "marker-start",
                        patternContentUnits: "patternContentUnits",
                        patternUnits: "patternUnits",
                        preserveAspectRatio: "preserveAspectRatio",
                        spreadMethod: "spreadMethod",
                        stopColor: "stop-color",
                        stopOpacity: "stop-opacity",
                        strokeDasharray: "stroke-dasharray",
                        strokeLinecap: "stroke-linecap",
                        strokeOpacity: "stroke-opacity",
                        strokeWidth: "stroke-width",
                        textAnchor: "text-anchor",
                        viewBox: "viewBox",
                        xlinkActuate: "xlink:actuate",
                        xlinkArcrole: "xlink:arcrole",
                        xlinkHref: "xlink:href",
                        xlinkRole: "xlink:role",
                        xlinkShow: "xlink:show",
                        xlinkTitle: "xlink:title",
                        xlinkType: "xlink:type",
                        xmlBase: "xml:base",
                        xmlLang: "xml:lang",
                        xmlSpace: "xml:space"
                    }
                };
            e.exports = a
        }, {
            10: 10
        }],
        96: [function(n, e) {
            "use strict";

            function x(o) {
                if ("selectionStart" in o && a.hasSelectionCapabilities(o)) return {
                    start: o.selectionStart,
                    end: o.selectionEnd
                };
                if (window.getSelection) {
                    var e = window.getSelection();
                    return {
                        anchorNode: e.anchorNode,
                        anchorOffset: e.anchorOffset,
                        focusNode: e.focusNode,
                        focusOffset: e.focusOffset
                    }
                }
                if (document.selection) {
                    var t = document.selection.createRange();
                    return {
                        parentElement: t.parentElement(),
                        text: t.text,
                        top: t.boundingTop,
                        left: t.boundingLeft
                    }
                }
            }

            function D(a, e) {
                if (P || null == m || m !== s()) return null;
                var t = x(m);
                if (!v || !d(v, t)) {
                    v = t;
                    var n = i.getPooled(f.select, h, a, e);
                    return n.type = "select", n.target = m, r.accumulateTwoPhaseDispatches(n), n
                }
                return null
            }
            var t = n(15),
                r = n(19),
                o = n(144),
                a = n(64),
                i = n(102),
                s = n(153),
                u = n(131),
                p = n(163),
                d = n(166),
                l = t.topLevelTypes,
                c = o.canUseDOM && "documentMode" in document && 11 >= document.documentMode,
                f = {
                    select: {
                        phasedRegistrationNames: {
                            bubbled: p({
                                onSelect: null
                            }),
                            captured: p({
                                onSelectCapture: null
                            })
                        },
                        dependencies: [l.topBlur, l.topContextMenu, l.topFocus, l.topKeyDown, l.topMouseDown, l.topMouseUp, l.topSelectionChange]
                    }
                },
                m = null,
                h = null,
                v = null,
                P = !1,
                T = !1,
                N = p({
                    onSelect: null
                });
            e.exports = {
                eventTypes: f,
                extractEvents: function extractEvents(o, e, t, n, r) {
                    if (!T) return null;
                    switch (o) {
                        case l.topFocus:
                            (u(e) || "true" === e.contentEditable) && (m = e, h = t, v = null);
                            break;
                        case l.topBlur:
                            m = null, h = null, v = null;
                            break;
                        case l.topMouseDown:
                            P = !0;
                            break;
                        case l.topContextMenu:
                        case l.topMouseUp:
                            return P = !1, D(n, r);
                        case l.topSelectionChange:
                            if (c) break;
                        case l.topKeyDown:
                        case l.topKeyUp:
                            return D(n, r);
                    }
                    return null
                },
                didPutListener: function didPutListener(n, e) {
                    e === N && (T = !0)
                }
            }
        }, {
            102: 102,
            131: 131,
            144: 144,
            15: 15,
            153: 153,
            163: 163,
            166: 166,
            19: 19,
            64: 64
        }],
        97: [function(n, e) {
            "use strict";
            var t = Math.pow(2, 53);
            e.exports = {
                createReactRootIndex: function createReactRootIndex() {
                    return Math.ceil(Math.random() * 9007199254740992)
                }
            }
        }, {}],
        98: [function(n, e) {
            "use strict";
            var t = n(15),
                T = n(143),
                N = n(19),
                o = n(70),
                a = n(99),
                i = n(102),
                s = n(103),
                u = n(105),
                l = n(106),
                p = n(101),
                d = n(107),
                c = n(108),
                f = n(109),
                h = n(150),
                m = n(122),
                g = n(158),
                r = n(163),
                y = t.topLevelTypes,
                C = {
                    abort: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onAbort: !0
                            }),
                            captured: r({
                                onAbortCapture: !0
                            })
                        }
                    },
                    blur: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onBlur: !0
                            }),
                            captured: r({
                                onBlurCapture: !0
                            })
                        }
                    },
                    canPlay: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onCanPlay: !0
                            }),
                            captured: r({
                                onCanPlayCapture: !0
                            })
                        }
                    },
                    canPlayThrough: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onCanPlayThrough: !0
                            }),
                            captured: r({
                                onCanPlayThroughCapture: !0
                            })
                        }
                    },
                    click: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onClick: !0
                            }),
                            captured: r({
                                onClickCapture: !0
                            })
                        }
                    },
                    contextMenu: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onContextMenu: !0
                            }),
                            captured: r({
                                onContextMenuCapture: !0
                            })
                        }
                    },
                    copy: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onCopy: !0
                            }),
                            captured: r({
                                onCopyCapture: !0
                            })
                        }
                    },
                    cut: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onCut: !0
                            }),
                            captured: r({
                                onCutCapture: !0
                            })
                        }
                    },
                    doubleClick: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onDoubleClick: !0
                            }),
                            captured: r({
                                onDoubleClickCapture: !0
                            })
                        }
                    },
                    drag: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onDrag: !0
                            }),
                            captured: r({
                                onDragCapture: !0
                            })
                        }
                    },
                    dragEnd: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onDragEnd: !0
                            }),
                            captured: r({
                                onDragEndCapture: !0
                            })
                        }
                    },
                    dragEnter: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onDragEnter: !0
                            }),
                            captured: r({
                                onDragEnterCapture: !0
                            })
                        }
                    },
                    dragExit: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onDragExit: !0
                            }),
                            captured: r({
                                onDragExitCapture: !0
                            })
                        }
                    },
                    dragLeave: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onDragLeave: !0
                            }),
                            captured: r({
                                onDragLeaveCapture: !0
                            })
                        }
                    },
                    dragOver: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onDragOver: !0
                            }),
                            captured: r({
                                onDragOverCapture: !0
                            })
                        }
                    },
                    dragStart: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onDragStart: !0
                            }),
                            captured: r({
                                onDragStartCapture: !0
                            })
                        }
                    },
                    drop: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onDrop: !0
                            }),
                            captured: r({
                                onDropCapture: !0
                            })
                        }
                    },
                    durationChange: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onDurationChange: !0
                            }),
                            captured: r({
                                onDurationChangeCapture: !0
                            })
                        }
                    },
                    emptied: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onEmptied: !0
                            }),
                            captured: r({
                                onEmptiedCapture: !0
                            })
                        }
                    },
                    encrypted: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onEncrypted: !0
                            }),
                            captured: r({
                                onEncryptedCapture: !0
                            })
                        }
                    },
                    ended: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onEnded: !0
                            }),
                            captured: r({
                                onEndedCapture: !0
                            })
                        }
                    },
                    error: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onError: !0
                            }),
                            captured: r({
                                onErrorCapture: !0
                            })
                        }
                    },
                    focus: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onFocus: !0
                            }),
                            captured: r({
                                onFocusCapture: !0
                            })
                        }
                    },
                    input: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onInput: !0
                            }),
                            captured: r({
                                onInputCapture: !0
                            })
                        }
                    },
                    keyDown: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onKeyDown: !0
                            }),
                            captured: r({
                                onKeyDownCapture: !0
                            })
                        }
                    },
                    keyPress: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onKeyPress: !0
                            }),
                            captured: r({
                                onKeyPressCapture: !0
                            })
                        }
                    },
                    keyUp: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onKeyUp: !0
                            }),
                            captured: r({
                                onKeyUpCapture: !0
                            })
                        }
                    },
                    load: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onLoad: !0
                            }),
                            captured: r({
                                onLoadCapture: !0
                            })
                        }
                    },
                    loadedData: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onLoadedData: !0
                            }),
                            captured: r({
                                onLoadedDataCapture: !0
                            })
                        }
                    },
                    loadedMetadata: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onLoadedMetadata: !0
                            }),
                            captured: r({
                                onLoadedMetadataCapture: !0
                            })
                        }
                    },
                    loadStart: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onLoadStart: !0
                            }),
                            captured: r({
                                onLoadStartCapture: !0
                            })
                        }
                    },
                    mouseDown: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onMouseDown: !0
                            }),
                            captured: r({
                                onMouseDownCapture: !0
                            })
                        }
                    },
                    mouseMove: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onMouseMove: !0
                            }),
                            captured: r({
                                onMouseMoveCapture: !0
                            })
                        }
                    },
                    mouseOut: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onMouseOut: !0
                            }),
                            captured: r({
                                onMouseOutCapture: !0
                            })
                        }
                    },
                    mouseOver: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onMouseOver: !0
                            }),
                            captured: r({
                                onMouseOverCapture: !0
                            })
                        }
                    },
                    mouseUp: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onMouseUp: !0
                            }),
                            captured: r({
                                onMouseUpCapture: !0
                            })
                        }
                    },
                    paste: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onPaste: !0
                            }),
                            captured: r({
                                onPasteCapture: !0
                            })
                        }
                    },
                    pause: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onPause: !0
                            }),
                            captured: r({
                                onPauseCapture: !0
                            })
                        }
                    },
                    play: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onPlay: !0
                            }),
                            captured: r({
                                onPlayCapture: !0
                            })
                        }
                    },
                    playing: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onPlaying: !0
                            }),
                            captured: r({
                                onPlayingCapture: !0
                            })
                        }
                    },
                    progress: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onProgress: !0
                            }),
                            captured: r({
                                onProgressCapture: !0
                            })
                        }
                    },
                    rateChange: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onRateChange: !0
                            }),
                            captured: r({
                                onRateChangeCapture: !0
                            })
                        }
                    },
                    reset: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onReset: !0
                            }),
                            captured: r({
                                onResetCapture: !0
                            })
                        }
                    },
                    scroll: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onScroll: !0
                            }),
                            captured: r({
                                onScrollCapture: !0
                            })
                        }
                    },
                    seeked: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onSeeked: !0
                            }),
                            captured: r({
                                onSeekedCapture: !0
                            })
                        }
                    },
                    seeking: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onSeeking: !0
                            }),
                            captured: r({
                                onSeekingCapture: !0
                            })
                        }
                    },
                    stalled: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onStalled: !0
                            }),
                            captured: r({
                                onStalledCapture: !0
                            })
                        }
                    },
                    submit: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onSubmit: !0
                            }),
                            captured: r({
                                onSubmitCapture: !0
                            })
                        }
                    },
                    suspend: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onSuspend: !0
                            }),
                            captured: r({
                                onSuspendCapture: !0
                            })
                        }
                    },
                    timeUpdate: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onTimeUpdate: !0
                            }),
                            captured: r({
                                onTimeUpdateCapture: !0
                            })
                        }
                    },
                    touchCancel: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onTouchCancel: !0
                            }),
                            captured: r({
                                onTouchCancelCapture: !0
                            })
                        }
                    },
                    touchEnd: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onTouchEnd: !0
                            }),
                            captured: r({
                                onTouchEndCapture: !0
                            })
                        }
                    },
                    touchMove: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onTouchMove: !0
                            }),
                            captured: r({
                                onTouchMoveCapture: !0
                            })
                        }
                    },
                    touchStart: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onTouchStart: !0
                            }),
                            captured: r({
                                onTouchStartCapture: !0
                            })
                        }
                    },
                    volumeChange: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onVolumeChange: !0
                            }),
                            captured: r({
                                onVolumeChangeCapture: !0
                            })
                        }
                    },
                    waiting: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onWaiting: !0
                            }),
                            captured: r({
                                onWaitingCapture: !0
                            })
                        }
                    },
                    wheel: {
                        phasedRegistrationNames: {
                            bubbled: r({
                                onWheel: !0
                            }),
                            captured: r({
                                onWheelCapture: !0
                            })
                        }
                    }
                },
                b = {
                    topAbort: C.abort,
                    topBlur: C.blur,
                    topCanPlay: C.canPlay,
                    topCanPlayThrough: C.canPlayThrough,
                    topClick: C.click,
                    topContextMenu: C.contextMenu,
                    topCopy: C.copy,
                    topCut: C.cut,
                    topDoubleClick: C.doubleClick,
                    topDrag: C.drag,
                    topDragEnd: C.dragEnd,
                    topDragEnter: C.dragEnter,
                    topDragExit: C.dragExit,
                    topDragLeave: C.dragLeave,
                    topDragOver: C.dragOver,
                    topDragStart: C.dragStart,
                    topDrop: C.drop,
                    topDurationChange: C.durationChange,
                    topEmptied: C.emptied,
                    topEncrypted: C.encrypted,
                    topEnded: C.ended,
                    topError: C.error,
                    topFocus: C.focus,
                    topInput: C.input,
                    topKeyDown: C.keyDown,
                    topKeyPress: C.keyPress,
                    topKeyUp: C.keyUp,
                    topLoad: C.load,
                    topLoadedData: C.loadedData,
                    topLoadedMetadata: C.loadedMetadata,
                    topLoadStart: C.loadStart,
                    topMouseDown: C.mouseDown,
                    topMouseMove: C.mouseMove,
                    topMouseOut: C.mouseOut,
                    topMouseOver: C.mouseOver,
                    topMouseUp: C.mouseUp,
                    topPaste: C.paste,
                    topPause: C.pause,
                    topPlay: C.play,
                    topPlaying: C.playing,
                    topProgress: C.progress,
                    topRateChange: C.rateChange,
                    topReset: C.reset,
                    topScroll: C.scroll,
                    topSeeked: C.seeked,
                    topSeeking: C.seeking,
                    topStalled: C.stalled,
                    topSubmit: C.submit,
                    topSuspend: C.suspend,
                    topTimeUpdate: C.timeUpdate,
                    topTouchCancel: C.touchCancel,
                    topTouchEnd: C.touchEnd,
                    topTouchMove: C.touchMove,
                    topTouchStart: C.touchStart,
                    topVolumeChange: C.volumeChange,
                    topWaiting: C.waiting,
                    topWheel: C.wheel
                };
            for (var E in b) {
                b[E].dependencies = [E]
            }
            var _ = r({
                    onClick: null
                }),
                x = {};
            e.exports = {
                eventTypes: C,
                extractEvents: function extractEvents(h, e, t, n, r) {
                    var o = b[h];
                    if (!o) return null;
                    var E;
                    switch (h) {
                        case y.topAbort:
                        case y.topCanPlay:
                        case y.topCanPlayThrough:
                        case y.topDurationChange:
                        case y.topEmptied:
                        case y.topEncrypted:
                        case y.topEnded:
                        case y.topError:
                        case y.topInput:
                        case y.topLoad:
                        case y.topLoadedData:
                        case y.topLoadedMetadata:
                        case y.topLoadStart:
                        case y.topPause:
                        case y.topPlay:
                        case y.topPlaying:
                        case y.topProgress:
                        case y.topRateChange:
                        case y.topReset:
                        case y.topSeeked:
                        case y.topSeeking:
                        case y.topStalled:
                        case y.topSubmit:
                        case y.topSuspend:
                        case y.topTimeUpdate:
                        case y.topVolumeChange:
                        case y.topWaiting:
                            E = i;
                            break;
                        case y.topKeyPress:
                            if (0 === m(n)) return null;
                        case y.topKeyDown:
                        case y.topKeyUp:
                            E = u;
                            break;
                        case y.topBlur:
                        case y.topFocus:
                            E = s;
                            break;
                        case y.topClick:
                            if (2 === n.button) return null;
                        case y.topContextMenu:
                        case y.topDoubleClick:
                        case y.topMouseDown:
                        case y.topMouseMove:
                        case y.topMouseOut:
                        case y.topMouseOver:
                        case y.topMouseUp:
                            E = l;
                            break;
                        case y.topDrag:
                        case y.topDragEnd:
                        case y.topDragEnter:
                        case y.topDragExit:
                        case y.topDragLeave:
                        case y.topDragOver:
                        case y.topDragStart:
                        case y.topDrop:
                            E = p;
                            break;
                        case y.topTouchCancel:
                        case y.topTouchEnd:
                        case y.topTouchMove:
                        case y.topTouchStart:
                            E = d;
                            break;
                        case y.topScroll:
                            E = c;
                            break;
                        case y.topWheel:
                            E = f;
                            break;
                        case y.topCopy:
                        case y.topCut:
                        case y.topPaste:
                            E = a;
                    }
                    E ? void 0 : g(!1);
                    var _ = E.getPooled(o, t, n, r);
                    return N.accumulateTwoPhaseDispatches(_), _
                },
                didPutListener: function didPutListener(n, e) {
                    if (e === _) {
                        var t = o.getNode(n);
                        x[n] || (x[n] = T.listen(t, "click", h))
                    }
                },
                willDeleteListener: function willDeleteListener(n, e) {
                    e === _ && (x[n].remove(), delete x[n])
                }
            }
        }, {
            101: 101,
            102: 102,
            103: 103,
            105: 105,
            106: 106,
            107: 107,
            108: 108,
            109: 109,
            122: 122,
            143: 143,
            15: 15,
            150: 150,
            158: 158,
            163: 163,
            19: 19,
            70: 70,
            99: 99
        }],
        99: [function(n, e) {
            "use strict";

            function t(o, e, t, n) {
                a.call(this, o, e, t, n)
            }
            var a = n(102);
            a.augmentClass(t, {
                clipboardData: function clipboardData(t) {
                    return "clipboardData" in t ? t.clipboardData : window.clipboardData
                }
            }), e.exports = t
        }, {
            102: 102
        }],
        100: [function(n, e) {
            "use strict";

            function t(o, e, t, n) {
                a.call(this, o, e, t, n)
            }
            var a = n(102);
            a.augmentClass(t, {
                data: null
            }), e.exports = t
        }, {
            102: 102
        }],
        101: [function(n, e) {
            "use strict";

            function t(o, e, t, n) {
                a.call(this, o, e, t, n)
            }
            var a = n(106);
            a.augmentClass(t, {
                dataTransfer: null
            }), e.exports = t
        }, {
            106: 106
        }],
        102: [function(n, e) {
            "use strict";

            function t(d, e, t, n) {
                this.dispatchConfig = d, this.dispatchMarker = e, this.nativeEvent = t, this.target = n, this.currentTarget = n;
                var r = this.constructor.Interface;
                for (var o in r) {
                    if (r.hasOwnProperty(o)) {
                        var a = r[o];
                        a ? this[o] = a(t) : this[o] = t[o]
                    }
                }
                var i = null != t.defaultPrevented ? t.defaultPrevented : !1 === t.returnValue;
                i ? this.isDefaultPrevented = p.thatReturnsTrue : this.isDefaultPrevented = p.thatReturnsFalse, this.isPropagationStopped = p.thatReturnsFalse
            }
            var d = n(25),
                o = n(24),
                p = n(150),
                r = (n(168), {
                    type: null,
                    currentTarget: p.thatReturnsNull,
                    eventPhase: null,
                    bubbles: null,
                    cancelable: null,
                    timeStamp: function timeStamp(t) {
                        return t.timeStamp || Date.now()
                    },
                    defaultPrevented: null,
                    isTrusted: null
                });
            o(t.prototype, {
                preventDefault: function preventDefault() {
                    this.defaultPrevented = !0;
                    var t = this.nativeEvent;
                    t && (t.preventDefault ? t.preventDefault() : t.returnValue = !1, this.isDefaultPrevented = p.thatReturnsTrue)
                },
                stopPropagation: function stopPropagation() {
                    var t = this.nativeEvent;
                    t && (t.stopPropagation ? t.stopPropagation() : t.cancelBubble = !0, this.isPropagationStopped = p.thatReturnsTrue)
                },
                persist: function persist() {
                    this.isPersistent = p.thatReturnsTrue
                },
                isPersistent: p.thatReturnsFalse,
                destructor: function destructor() {
                    var n = this.constructor.Interface;
                    for (var e in n) {
                        this[e] = null
                    }
                    this.dispatchConfig = null, this.dispatchMarker = null, this.nativeEvent = null
                }
            }), t.Interface = r, t.augmentClass = function(a, e) {
                var t = this,
                    n = Object.create(t.prototype);
                o(n, a.prototype), a.prototype = n, a.prototype.constructor = a, a.Interface = o({}, t.Interface, e), a.augmentClass = t.augmentClass, d.addPoolingTo(a, d.fourArgumentPooler)
            }, d.addPoolingTo(t, d.fourArgumentPooler), e.exports = t
        }, {
            150: 150,
            168: 168,
            24: 24,
            25: 25
        }],
        103: [function(n, e) {
            "use strict";

            function t(o, e, t, n) {
                a.call(this, o, e, t, n)
            }
            var a = n(108);
            a.augmentClass(t, {
                relatedTarget: null
            }), e.exports = t
        }, {
            108: 108
        }],
        104: [function(n, e) {
            "use strict";

            function t(o, e, t, n) {
                a.call(this, o, e, t, n)
            }
            var a = n(102);
            a.augmentClass(t, {
                data: null
            }), e.exports = t
        }, {
            102: 102
        }],
        105: [function(n, e) {
            "use strict";

            function t(o, e, t, n) {
                d.call(this, o, e, t, n)
            }
            var d = n(108),
                o = n(122),
                r = n(123),
                a = n(124);
            d.augmentClass(t, {
                key: r,
                location: null,
                ctrlKey: null,
                shiftKey: null,
                altKey: null,
                metaKey: null,
                repeat: null,
                locale: null,
                getModifierState: a,
                charCode: function charCode(t) {
                    return "keypress" === t.type ? o(t) : 0
                },
                keyCode: function keyCode(t) {
                    return "keydown" === t.type || "keyup" === t.type ? t.keyCode : 0
                },
                which: function which(t) {
                    return "keypress" === t.type ? o(t) : "keydown" === t.type || "keyup" === t.type ? t.keyCode : 0
                }
            }), e.exports = t
        }, {
            108: 108,
            122: 122,
            123: 123,
            124: 124
        }],
        106: [function(n, e) {
            "use strict";

            function t(o, e, t, n) {
                d.call(this, o, e, t, n)
            }
            var d = n(108),
                o = n(111),
                r = n(124);
            d.augmentClass(t, {
                screenX: null,
                screenY: null,
                clientX: null,
                clientY: null,
                ctrlKey: null,
                shiftKey: null,
                altKey: null,
                metaKey: null,
                getModifierState: r,
                button: function button(n) {
                    var e = n.button;
                    return "which" in n ? e : 2 === e ? 2 : 4 === e ? 1 : 0
                },
                buttons: null,
                relatedTarget: function relatedTarget(t) {
                    return t.relatedTarget || (t.fromElement === t.srcElement ? t.toElement : t.fromElement)
                },
                pageX: function pageX(t) {
                    return "pageX" in t ? t.pageX : t.clientX + o.currentScrollLeft
                },
                pageY: function pageY(t) {
                    return "pageY" in t ? t.pageY : t.clientY + o.currentScrollTop
                }
            }), e.exports = t
        }, {
            108: 108,
            111: 111,
            124: 124
        }],
        107: [function(n, e) {
            "use strict";

            function t(o, e, t, n) {
                d.call(this, o, e, t, n)
            }
            var d = n(108),
                o = n(124);
            d.augmentClass(t, {
                touches: null,
                targetTouches: null,
                changedTouches: null,
                altKey: null,
                metaKey: null,
                ctrlKey: null,
                shiftKey: null,
                getModifierState: o
            }), e.exports = t
        }, {
            108: 108,
            124: 124
        }],
        108: [function(n, e) {
            "use strict";

            function t(o, e, t, n) {
                d.call(this, o, e, t, n)
            }
            var d = n(102),
                o = n(125);
            d.augmentClass(t, {
                view: function view(r) {
                    if (r.view) return r.view;
                    var e = o(r);
                    if (null != e && e.window === e) return e;
                    var t = e.ownerDocument;
                    return t ? t.defaultView || t.parentWindow : window
                },
                detail: function detail(t) {
                    return t.detail || 0
                }
            }), e.exports = t
        }, {
            102: 102,
            125: 125
        }],
        109: [function(n, e) {
            "use strict";

            function t(o, e, t, n) {
                a.call(this, o, e, t, n)
            }
            var a = n(106);
            a.augmentClass(t, {
                deltaX: function deltaX(t) {
                    return "deltaX" in t ? t.deltaX : "wheelDeltaX" in t ? -t.wheelDeltaX : 0
                },
                deltaY: function deltaY(t) {
                    return "deltaY" in t ? t.deltaY : "wheelDeltaY" in t ? -t.wheelDeltaY : "wheelDelta" in t ? -t.wheelDelta : 0
                },
                deltaZ: null,
                deltaMode: null
            }), e.exports = t
        }, {
            106: 106
        }],
        110: [function(n, e) {
            "use strict";
            var d = n(158),
                t = {
                    Mixin: {
                        reinitializeTransaction: function reinitializeTransaction() {
                            this.transactionWrappers = this.getTransactionWrappers(), this.wrapperInitData ? this.wrapperInitData.length = 0 : this.wrapperInitData = [], this._isInTransaction = !1
                        },
                        _isInTransaction: !1,
                        getTransactionWrappers: null,
                        isInTransaction: function isInTransaction() {
                            return !!this._isInTransaction
                        },
                        perform: function perform(r, e, t, n, o, a, i, p) {
                            this.isInTransaction() ? d(!1) : void 0;
                            var s, u;
                            try {
                                this._isInTransaction = !0, s = !0, this.initializeAll(0), u = r.call(e, t, n, o, a, i, p), s = !1
                            } finally {
                                try {
                                    if (s) try {
                                        this.closeAll(0)
                                    } catch (e) {} else this.closeAll(0)
                                } finally {
                                    this._isInTransaction = !1
                                }
                            }
                            return u
                        },
                        initializeAll: function initializeAll(o) {
                            for (var e = this.transactionWrappers, a = o, d; a < e.length; a++) {
                                d = e[a];
                                try {
                                    this.wrapperInitData[a] = t.OBSERVED_ERROR, this.wrapperInitData[a] = d.initialize ? d.initialize.call(this) : null
                                } finally {
                                    if (this.wrapperInitData[a] === t.OBSERVED_ERROR) try {
                                        this.initializeAll(a + 1)
                                    } catch (e) {}
                                }
                            }
                        },
                        closeAll: function closeAll(r) {
                            this.isInTransaction() ? void 0 : d(!1);
                            for (var e = this.transactionWrappers, a = r; a < e.length; a++) {
                                var p, s = e[a],
                                    i = this.wrapperInitData[a];
                                try {
                                    p = !0, i !== t.OBSERVED_ERROR && s.close && s.close.call(this, i), p = !1
                                } finally {
                                    if (p) try {
                                        this.closeAll(a + 1)
                                    } catch (e) {}
                                }
                            }
                            this.wrapperInitData.length = 0
                        }
                    },
                    OBSERVED_ERROR: {}
                };
            e.exports = t
        }, {
            158: 158
        }],
        111: [function(n, e) {
            "use strict";
            var t = {
                currentScrollLeft: 0,
                currentScrollTop: 0,
                refreshScrollValues: function refreshScrollValues(n) {
                    t.currentScrollLeft = n.x, t.currentScrollTop = n.y
                }
            };
            e.exports = t
        }, {}],
        112: [function(n, e) {
            "use strict";

            function t(o, e) {
                if (null == e ? a(!1) : void 0, null == o) return e;
                var t = Array.isArray(o),
                    n = Array.isArray(e);
                return t && n ? (o.push.apply(o, e), o) : t ? (o.push(e), o) : n ? [o].concat(e) : [o, e]
            }
            var a = n(158);
            e.exports = t
        }, {
            158: 158
        }],
        113: [function(n, e) {
            "use strict";

            function t(o) {
                for (var e = 1, p = 0, s = 0, u = o.length, a = -4 & u; a > s;) {
                    for (; s < Math.min(s + 4096, a); s += 4) {
                        p += (e += o.charCodeAt(s)) + (e += o.charCodeAt(s + 1)) + (e += o.charCodeAt(s + 2)) + (e += o.charCodeAt(s + 3))
                    }
                    e %= d, p %= d
                }
                for (; u > s; s++) {
                    p += e += o.charCodeAt(s)
                }
                return e %= d, p %= d, e | p << 16
            }
            var d = 65521;
            e.exports = t
        }, {}],
        114: [function(n, e) {
            "use strict";
            e.exports = !1
        }, {}],
        115: [function(n, e) {
            "use strict";
            var r = n(55),
                o = n(77),
                t = n(163),
                a = (n(168), t({
                    children: null
                }));
            e.exports = function(d, e) {
                var t = o.mergeProps(e, d.props);
                return !t.hasOwnProperty(a) && d.props.hasOwnProperty(a) && (t.children = d.props.children), r.createElement(d.type, t)
            }
        }, {
            163: 163,
            168: 168,
            55: 55,
            77: 77
        }],
        116: [function(n, e) {
            "use strict";

            function t(a, e) {
                var d = null == e || "boolean" == typeof e || "" === e;
                if (d) return "";
                var n = isNaN(e);
                return n || 0 === e || o.hasOwnProperty(a) && o[a] ? "" + e : ("string" == typeof e && (e = e.trim()), e + "px")
            }
            var r = n(4),
                o = r.isUnitlessNumber;
            e.exports = t
        }, {
            4: 4
        }],
        117: [function(n, e) {
            "use strict";

            function t(a, e, t, n, r) {
                return r
            }
            n(24), n(168);
            e.exports = t
        }, {
            168: 168,
            24: 24
        }],
        118: [function(n, e) {
            "use strict";

            function t(t) {
                return o[t]
            }
            var o = {
                    "&": "&amp;",
                    ">": "&gt;",
                    "<": "&lt;",
                    '"': "&quot;",
                    "'": "&#x27;"
                },
                r = /[&><"']/g;
            e.exports = function(n) {
                return ("" + n).replace(r, t)
            }
        }, {}],
        119: [function(n, e) {
            "use strict";
            var t = (n(39), n(66)),
                o = n(70),
                r = n(158);
            n(168);
            e.exports = function(n) {
                return null == n ? null : 1 === n.nodeType ? n : t.has(n) ? o.getNodeFromInstance(n) : (null != n.render && "function" == typeof n.render ? r(!1) : void 0, void r(!1))
            }
        }, {
            158: 158,
            168: 168,
            39: 39,
            66: 66,
            70: 70
        }],
        120: [function(n, e) {
            "use strict";

            function o(a, e, t) {
                var n = a,
                    r = void 0 === n[t];
                r && null != e && (n[t] = e)
            }
            var r = n(139);
            n(168);
            e.exports = function(n) {
                if (null == n) return n;
                var e = {};
                return r(n, o, e), e
            }
        }, {
            139: 139,
            168: 168
        }],
        121: [function(n, e) {
            "use strict";
            e.exports = function r(o, e, t) {
                Array.isArray(o) ? o.forEach(e, t) : o && e.call(t, o)
            }
        }, {}],
        122: [function(n, e) {
            "use strict";

            function t(o) {
                var e, r = o.keyCode;
                return "charCode" in o ? (e = o.charCode, 0 === e && 13 === r && (e = 13)) : e = r, 32 <= e || 13 === e ? e : 0
            }
            e.exports = t
        }, {}],
        123: [function(n, e) {
            "use strict";
            var t = n(122),
                o = {
                    Esc: "Escape",
                    Spacebar: " ",
                    Left: "ArrowLeft",
                    Up: "ArrowUp",
                    Right: "ArrowRight",
                    Down: "ArrowDown",
                    Del: "Delete",
                    Win: "OS",
                    Menu: "ContextMenu",
                    Apps: "ContextMenu",
                    Scroll: "ScrollLock",
                    MozPrintableKey: "Unidentified"
                },
                r = {
                    8: "Backspace",
                    9: "Tab",
                    12: "Clear",
                    13: "Enter",
                    16: "Shift",
                    17: "Control",
                    18: "Alt",
                    19: "Pause",
                    20: "CapsLock",
                    27: "Escape",
                    32: " ",
                    33: "PageUp",
                    34: "PageDown",
                    35: "End",
                    36: "Home",
                    37: "ArrowLeft",
                    38: "ArrowUp",
                    39: "ArrowRight",
                    40: "ArrowDown",
                    45: "Insert",
                    46: "Delete",
                    112: "F1",
                    113: "F2",
                    114: "F3",
                    115: "F4",
                    116: "F5",
                    117: "F6",
                    118: "F7",
                    119: "F8",
                    120: "F9",
                    121: "F10",
                    122: "F11",
                    123: "F12",
                    144: "NumLock",
                    145: "ScrollLock",
                    224: "Meta"
                };
            e.exports = function(a) {
                if (a.key) {
                    var e = o[a.key] || a.key;
                    if ("Unidentified" !== e) return e
                }
                if ("keypress" === a.type) {
                    var d = t(a);
                    return 13 === d ? "Enter" : String.fromCharCode(d)
                }
                return "keydown" === a.type || "keyup" === a.type ? r[a.keyCode] || "Unidentified" : ""
            }
        }, {
            122: 122
        }],
        124: [function(n, e) {
            "use strict";

            function t(a) {
                var e = this,
                    t = e.nativeEvent;
                if (t.getModifierState) return t.getModifierState(a);
                var n = o[a];
                return n ? !!t[n] : !1
            }
            var o = {
                Alt: "altKey",
                Control: "ctrlKey",
                Meta: "metaKey",
                Shift: "shiftKey"
            };
            e.exports = function() {
                return t
            }
        }, {}],
        125: [function(n, e) {
            "use strict";
            e.exports = function(n) {
                var e = n.target || n.srcElement || window;
                return 3 === e.nodeType ? e.parentNode : e
            }
        }, {}],
        126: [function(n, e) {
            "use strict";
            var r = "function" == typeof Symbol && Symbol.iterator;
            e.exports = function(n) {
                var e = n && (r && n[r] || n["@@iterator"]);
                return "function" == typeof e ? e : void 0
            }
        }, {}],
        127: [function(n, e) {
            "use strict";

            function d(t) {
                for (; t && t.firstChild;) {
                    t = t.firstChild
                }
                return t
            }

            function r(t) {
                for (; t;) {
                    if (t.nextSibling) return t.nextSibling;
                    t = t.parentNode
                }
            }

            function t(o, e) {
                for (var t = d(o), p = 0, s = 0; t;) {
                    if (3 === t.nodeType) {
                        if (s = p + t.textContent.length, e >= p && s >= e) return {
                            node: t,
                            offset: e - p
                        };
                        p = s
                    }
                    t = d(r(t))
                }
            }
            e.exports = t
        }, {}],
        128: [function(n, e) {
            "use strict";

            function t() {
                return !o && r.canUseDOM && (o = "textContent" in document.documentElement ? "textContent" : "innerText"), o
            }
            var r = n(144),
                o = null;
            e.exports = t
        }, {
            144: 144
        }],
        129: [function(n, e) {
            "use strict";

            function t(t) {
                return "function" == typeof t && "undefined" != typeof t.prototype && "function" == typeof t.prototype.mountComponent && "function" == typeof t.prototype.receiveComponent
            }

            function r(o) {
                var e;
                if (null === o || !1 === o) e = new a(r);
                else if ("object" == _typeof(o)) {
                    var i = o;
                    !i || "function" != typeof i.type && "string" != typeof i.type ? p(!1) : void 0, e = "string" == typeof i.type ? d.createInternalComponent(i) : t(i.type) ? new i.type(i) : new s
                } else "string" == typeof o || "number" == typeof o ? e = d.createInstanceForText(o) : p(!1);
                return e.construct(o), e._mountIndex = 0, e._mountImage = null, e
            }
            var o = n(38),
                a = n(57),
                d = n(73),
                i = n(24),
                p = n(158),
                s = (n(168), function() {});
            i(s.prototype, o.Mixin, {
                _instantiateReactComponent: r
            }), e.exports = r
        }, {
            158: 158,
            168: 168,
            24: 24,
            38: 38,
            57: 57,
            73: 73
        }],
        130: [function(n, e) {
            "use strict";

            function t(o, e) {
                if (!p.canUseDOM || e && !("addEventListener" in document)) return !1;
                var t = "on" + o,
                    n = t in document;
                if (!n) {
                    var a = document.createElement("div");
                    a.setAttribute(t, "return;"), n = "function" == typeof a[t]
                }
                return !n && d && "wheel" === o && (n = document.implementation.hasFeature("Events.wheel", "3.0")), n
            }
            var d, p = n(144);
            p.canUseDOM && (d = document.implementation && document.implementation.hasFeature && !0 !== document.implementation.hasFeature("", "")), e.exports = t
        }, {
            144: 144
        }],
        131: [function(n, e) {
            "use strict";
            var r = {
                color: !0,
                date: !0,
                datetime: !0,
                "datetime-local": !0,
                email: !0,
                month: !0,
                number: !0,
                password: !0,
                range: !0,
                search: !0,
                tel: !0,
                text: !0,
                time: !0,
                url: !0,
                week: !0
            };
            e.exports = function(n) {
                var e = n && n.nodeName && n.nodeName.toLowerCase();
                return e && ("input" === e && r[n.type] || "textarea" === e)
            }
        }, {}],
        132: [function(n, e) {
            "use strict";
            var t = n(55),
                o = n(158);
            e.exports = function(n) {
                return t.isValidElement(n) ? void 0 : o(!1), n
            }
        }, {
            158: 158,
            55: 55
        }],
        133: [function(n, e) {
            "use strict";
            var t = n(118);
            e.exports = function(n) {
                return "\"" + t(n) + "\""
            }
        }, {
            118: 118
        }],
        134: [function(n, e) {
            "use strict";
            var t = n(70);
            e.exports = t.renderSubtreeIntoContainer
        }, {
            70: 70
        }],
        135: [function(n, e) {
            "use strict";
            var t = n(144),
                r = /^[ \r\n\t\f]/,
                o = /<(!--|link|noscript|meta|script|style)[ \r\n\t\f\/>]/,
                a = function(n, e) {
                    n.innerHTML = e
                };
            if ("undefined" != typeof MSApp && MSApp.execUnsafeLocalFunction && (a = function(n, e) {
                    MSApp.execUnsafeLocalFunction(function() {
                        n.innerHTML = e
                    })
                }), t.canUseDOM) {
                var d = document.createElement("div");
                d.innerHTML = " ", "" === d.innerHTML && (a = function(a, e) {
                    if (a.parentNode && a.parentNode.replaceChild(a, a), r.test(e) || "<" === e[0] && o.test(e)) {
                        a.innerHTML = String.fromCharCode(65279) + e;
                        var t = a.firstChild;
                        1 === t.data.length ? a.removeChild(t) : t.deleteData(0, 1)
                    } else a.innerHTML = e
                })
            }
            e.exports = a
        }, {
            144: 144
        }],
        136: [function(n, e) {
            "use strict";
            var t = n(144),
                r = n(118),
                o = n(135),
                a = function(n, e) {
                    n.textContent = e
                };
            t.canUseDOM && ("textContent" in document.documentElement || (a = function(n, e) {
                o(n, r(e))
            })), e.exports = a
        }, {
            118: 118,
            135: 135,
            144: 144
        }],
        137: [function(n, e) {
            "use strict";
            var r = n(166);
            e.exports = function(o, e, t) {
                return !r(o.props, e) || !r(o.state, t)
            }
        }, {
            166: 166
        }],
        138: [function(n, e) {
            "use strict";

            function t(d, e) {
                var t = null === d || !1 === d,
                    n = null === e || !1 === e;
                if (t || n) return t == n;
                var r = _typeof(d),
                    o = _typeof(e);
                return "string" === r || "number" === r ? "string" === o || "number" === o : "object" === o && d.type === e.type && d.key === e.key
            }
            e.exports = t
        }, {}],
        139: [function(n, e) {
            "use strict";

            function t(t) {
                return s[t]
            }

            function x(n, e) {
                return n && null != n.key ? a(n.key) : e.toString(36)
            }

            function o(n) {
                return ("" + n).replace(c, t)
            }

            function a(t) {
                return "$" + o(t)
            }

            function i(o, h, t, n) {
                var r = _typeof(o);
                if (("undefined" === r || "boolean" === r) && (o = null), null === o || "string" === r || "number" === r || u.isValidElement(o)) return t(n, o, "" === h ? d + x(o, 0) : h), 1;
                var D, P, T = 0,
                    N = "" === h ? d : h + f;
                if (Array.isArray(o))
                    for (var m = 0; m < o.length; m++) {
                        D = o[m], P = N + x(D, m), T += i(D, P, t, n)
                    } else {
                        var M = l(o);
                        if (M) {
                            var y, R = M.call(o);
                            if (M !== o.entries)
                                for (var b = 0; !(y = R.next()).done;) {
                                    D = y.value, P = N + x(D, b++), T += i(D, P, t, n)
                                } else
                                    for (; !(y = R.next()).done;) {
                                        var S = y.value;
                                        S && (D = S[1], P = N + a(S[0]) + f + x(D, 0), T += i(D, P, t, n))
                                    }
                        } else "object" === r && (o + "", p(!1))
                    }
                return T
            }
            var u = (n(39), n(55)),
                r = n(65),
                l = n(126),
                p = n(158),
                d = (n(168), r.SEPARATOR),
                f = ":",
                s = {
                    "=": "=0",
                    ".": "=1",
                    ":": "=2"
                },
                c = /[=.:]/g;
            e.exports = function(o, e, t) {
                return null == o ? 0 : i(o, "", e, t)
            }
        }, {
            126: 126,
            158: 158,
            168: 168,
            39: 39,
            55: 55,
            65: 65
        }],
        140: [function(n, e) {
            "use strict";

            function y(t) {
                return Array.isArray(t) ? t.concat() : t && "object" == _typeof(t) ? a(new t.constructor, t) : t
            }

            function r(o, e, t) {
                Array.isArray(o) ? void 0 : i(!1);
                var n = e[t];
                Array.isArray(n) ? void 0 : i(!1)
            }

            function o(g, e) {
                if ("object" != _typeof(e) ? i(!1) : void 0, s.call(e, d)) return 1 !== Object.keys(e).length ? i(!1) : void 0, e[d];
                var t = y(g);
                if (s.call(e, f)) {
                    var C = e[f];
                    C && "object" == _typeof(C) ? void 0 : i(!1), t && "object" == _typeof(t) ? void 0 : i(!1), a(t, e[f])
                }
                s.call(e, l) && (r(g, e, l), e[l].forEach(function(n) {
                    t.push(n)
                })), s.call(e, c) && (r(g, e, c), e[c].forEach(function(n) {
                    t.unshift(n)
                })), s.call(e, p) && (Array.isArray(g) ? void 0 : i(!1), Array.isArray(e[p]) ? void 0 : i(!1), e[p].forEach(function(n) {
                    Array.isArray(n) ? void 0 : i(!1), t.splice.apply(t, n)
                })), s.call(e, h) && ("function" != typeof e[h] ? i(!1) : void 0, t = e[h](t));
                for (var b in e) {
                    u.hasOwnProperty(b) && u[b] || (t[b] = o(g[b], e[b]))
                }
                return t
            }
            var a = n(24),
                t = n(163),
                i = n(158),
                s = {}.hasOwnProperty,
                l = t({
                    $push: null
                }),
                c = t({
                    $unshift: null
                }),
                p = t({
                    $splice: null
                }),
                d = t({
                    $set: null
                }),
                f = t({
                    $merge: null
                }),
                h = t({
                    $apply: null
                }),
                u = {};
            [l, c, p, d, f, h].forEach(function(t) {
                u[t] = !0
            }), e.exports = o
        }, {
            158: 158,
            163: 163,
            24: 24
        }],
        141: [function(n, e) {
            "use strict";
            var t = (n(24), n(150)),
                r = (n(168), t);
            e.exports = r
        }, {
            150: 150,
            168: 168,
            24: 24
        }],
        142: [function(n, e) {
            "use strict";
            var a = n(158),
                r = {
                    addClass: function addClass(n, e) {
                        return /\s/.test(e) ? a(!1) : void 0, e && (n.classList ? n.classList.add(e) : r.hasClass(n, e) || (n.className = n.className + " " + e)), n
                    },
                    removeClass: function removeClass(n, e) {
                        return /\s/.test(e) ? a(!1) : void 0, e && (n.classList ? n.classList.remove(e) : r.hasClass(n, e) && (n.className = n.className.replace(new RegExp("(^|\\s)" + e + "(?:\\s|$)", "g"), "$1").replace(/\s+/g, " ").replace(/^\s*|\s*$/g, ""))), n
                    },
                    conditionClass: function conditionClass(o, e, t) {
                        return (t ? r.addClass : r.removeClass)(o, e)
                    },
                    hasClass: function hasClass(n, e) {
                        return /\s/.test(e) ? a(!1) : void 0, n.classList ? !!e && n.classList.contains(e) : -1 < (" " + n.className + " ").indexOf(" " + e + " ")
                    }
                };
            e.exports = r
        }, {
            158: 158
        }],
        143: [function(n, e) {
            "use strict";
            var o = n(150);
            e.exports = {
                listen: function listen(o, e, t) {
                    return o.addEventListener ? (o.addEventListener(e, t, !1), {
                        remove: function remove() {
                            o.removeEventListener(e, t, !1)
                        }
                    }) : o.attachEvent ? (o.attachEvent("on" + e, t), {
                        remove: function remove() {
                            o.detachEvent("on" + e, t)
                        }
                    }) : void 0
                },
                capture: function capture(r, e, t) {
                    return r.addEventListener ? (r.addEventListener(e, t, !0), {
                        remove: function remove() {
                            r.removeEventListener(e, t, !0)
                        }
                    }) : {
                        remove: o
                    }
                },
                registerDefault: function registerDefault() {}
            }
        }, {
            150: 150
        }],
        144: [function(n, e) {
            "use strict";
            var t = !("undefined" == typeof window || !window.document || !window.document.createElement),
                r = {
                    canUseDOM: t,
                    canUseWorkers: "undefined" != typeof Worker,
                    canUseEventListeners: t && !(!window.addEventListener && !window.attachEvent),
                    canUseViewport: t && !!window.screen,
                    isInWorker: !t
                };
            e.exports = r
        }, {}],
        145: [function(n, e) {
            "use strict";
            var t = /-(.)/g;
            e.exports = function(n) {
                return n.replace(t, function(n, e) {
                    return e.toUpperCase()
                })
            }
        }, {}],
        146: [function(n, e) {
            "use strict";
            var t = n(145),
                o = /^-ms-/;
            e.exports = function(n) {
                return t(n.replace(o, "ms-"))
            }
        }, {
            145: 145
        }],
        147: [function(n, e) {
            "use strict";

            function t(o, i) {
                var p = !0;
                e: for (; p;) {
                    var s = o,
                        r = i;
                    if (p = !1, s && r) {
                        if (s === r) return !0;
                        if (d(s)) return !1;
                        if (d(r)) {
                            o = s, i = r.parentNode, p = !0;
                            continue e
                        }
                        return s.contains ? s.contains(r) : s.compareDocumentPosition ? !!(16 & s.compareDocumentPosition(r)) : !1
                    }
                    return !1
                }
            }
            var d = n(160);
            e.exports = t
        }, {
            160: 160
        }],
        148: [function(n, e) {
            "use strict";

            function t(t) {
                return !!t && ("object" == _typeof(t) || "function" == typeof t) && "length" in t && !("setInterval" in t) && "number" != typeof t.nodeType && (Array.isArray(t) || "callee" in t || "item" in t)
            }
            var o = n(167);
            e.exports = function(n) {
                return t(n) ? Array.isArray(n) ? n.slice() : o(n) : [n]
            }
        }, {
            167: 167
        }],
        149: [function(n, e) {
            "use strict";

            function m(n) {
                var e = n.match(a);
                return e && e[1].toLowerCase()
            }

            function t(l, e) {
                var t = s;
                s ? void 0 : u(!1);
                var f = m(l),
                    o = f && i(f);
                if (o) {
                    t.innerHTML = o[1] + l + o[2];
                    for (var a = o[0]; a--;) {
                        t = t.lastChild
                    }
                } else t.innerHTML = l;
                var h = t.getElementsByTagName("script");
                h.length && (e ? void 0 : u(!1), r(h).forEach(e));
                for (var p = r(t.childNodes); t.lastChild;) {
                    t.removeChild(t.lastChild)
                }
                return p
            }
            var o = n(144),
                r = n(148),
                i = n(154),
                u = n(158),
                s = o.canUseDOM ? document.createElement("div") : null,
                a = /^\s*<(\w+)/;
            e.exports = t
        }, {
            144: 144,
            148: 148,
            154: 154,
            158: 158
        }],
        150: [function(n, e) {
            "use strict";

            function t(t) {
                return function() {
                    return t
                }
            }

            function r() {}
            r.thatReturns = t, r.thatReturnsFalse = t(!1), r.thatReturnsTrue = t(!0), r.thatReturnsNull = t(null), r.thatReturnsThis = function() {
                return this
            }, r.thatReturnsArgument = function(t) {
                return t
            }, e.exports = r
        }, {}],
        151: [function(n, e) {
            "use strict";
            e.exports = {}
        }, {}],
        152: [function(n, e) {
            "use strict";
            e.exports = function(t) {
                try {
                    t.focus()
                } catch (e) {}
            }
        }, {}],
        153: [function(n, e) {
            "use strict";
            e.exports = function() {
                if ("undefined" == typeof document) return null;
                try {
                    return document.activeElement || document.body
                } catch (t) {
                    return document.body
                }
            }
        }, {}],
        154: [function(n, e) {
            "use strict";
            var t = n(144),
                o = n(158),
                r = t.canUseDOM ? document.createElement("div") : null,
                a = {},
                i = [1, "<select multiple=\"true\">", "</select>"],
                s = [1, "<table>", "</table>"],
                u = [3, "<table><tbody><tr>", "</tr></tbody></table>"],
                l = [1, "<svg xmlns=\"http://www.w3.org/2000/svg\">", "</svg>"],
                p = {
                    "*": [1, "?<div>", "</div>"],
                    area: [1, "<map>", "</map>"],
                    col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
                    legend: [1, "<fieldset>", "</fieldset>"],
                    param: [1, "<object>", "</object>"],
                    tr: [2, "<table><tbody>", "</tbody></table>"],
                    optgroup: i,
                    option: i,
                    caption: s,
                    colgroup: s,
                    tbody: s,
                    tfoot: s,
                    thead: s,
                    td: u,
                    th: u
                };
            ["circle", "clipPath", "defs", "ellipse", "g", "image", "line", "linearGradient", "mask", "path", "pattern", "polygon", "polyline", "radialGradient", "rect", "stop", "text", "tspan"].forEach(function(t) {
                p[t] = l, a[t] = !0
            }), e.exports = function(t) {
                return r ? void 0 : o(!1), p.hasOwnProperty(t) || (t = "*"), a.hasOwnProperty(t) || ("*" === t ? r.innerHTML = "<link />" : r.innerHTML = "<" + t + "></" + t + ">", a[t] = !r.firstChild), a[t] ? p[t] : null
            }
        }, {
            144: 144,
            158: 158
        }],
        155: [function(n, e) {
            "use strict";
            e.exports = function(t) {
                return t === window ? {
                    x: window.pageXOffset || document.documentElement.scrollLeft,
                    y: window.pageYOffset || document.documentElement.scrollTop
                } : {
                    x: t.scrollLeft,
                    y: t.scrollTop
                }
            }
        }, {}],
        156: [function(n, e) {
            "use strict";
            var t = /([A-Z])/g;
            e.exports = function(n) {
                return n.replace(t, "-$1").toLowerCase()
            }
        }, {}],
        157: [function(n, e) {
            "use strict";
            var t = n(156),
                o = /^ms-/;
            e.exports = function(n) {
                return t(n).replace(o, "-ms-")
            }
        }, {
            156: 156
        }],
        158: [function(n, e) {
            "use strict";
            e.exports = function r(r, e, t, n, d, o, a, i) {
                if (!r) {
                    var p;
                    if (void 0 === e) p = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
                    else {
                        var u = [t, n, d, o, a, i],
                            l = 0;
                        p = new Error("Invariant Violation: " + e.replace(/%s/g, function() {
                            return u[l++]
                        }))
                    }
                    throw p.framesToPop = 1, p
                }
            }
        }, {}],
        159: [function(n, e) {
            "use strict";

            function t(t) {
                return !(!t || !("function" == typeof Node ? t instanceof Node : "object" == _typeof(t) && "number" == typeof t.nodeType && "string" == typeof t.nodeName))
            }
            e.exports = t
        }, {}],
        160: [function(n, e) {
            "use strict";
            var t = n(159);
            e.exports = function(n) {
                return t(n) && 3 == n.nodeType
            }
        }, {
            159: 159
        }],
        161: [function(n, e) {
            "use strict";

            function t(o) {
                o || (o = "");
                var a, d = arguments.length;
                if (1 < d)
                    for (var n = 1; d > n; n++) {
                        a = arguments[n], a && (o = (o ? o + " " : "") + a)
                    }
                return o
            }
            e.exports = t
        }, {}],
        162: [function(n, e) {
            "use strict";
            var o = n(158);
            e.exports = function o(r) {
                var e, a = {};
                r instanceof Object && !Array.isArray(r) ? void 0 : o(!1);
                for (e in r) {
                    r.hasOwnProperty(e) && (a[e] = e)
                }
                return a
            }
        }, {
            158: 158
        }],
        163: [function(n, e) {
            "use strict";
            e.exports = function r(n) {
                for (var e in n) {
                    if (n.hasOwnProperty(e)) return e
                }
                return null
            }
        }, {}],
        164: [function(n, e) {
            "use strict";

            function t(o, e, t) {
                if (!o) return null;
                var n = {};
                for (var r in o) {
                    d.call(o, r) && (n[r] = e.call(t, o[r], r, o))
                }
                return n
            }
            var d = Object.prototype.hasOwnProperty;
            e.exports = t
        }, {}],
        165: [function(n, e) {
            "use strict";
            e.exports = function(o) {
                var e = {};
                return function(t) {
                    return e.hasOwnProperty(t) || (e[t] = o.call(this, t)), e[t]
                }
            }
        }, {}],
        166: [function(n, e) {
            "use strict";

            function t(o, e) {
                if (o === e) return !0;
                if ("object" != _typeof(o) || null === o || "object" != _typeof(e) || null === e) return !1;
                var t = Object.keys(o),
                    n = Object.keys(e);
                if (t.length !== n.length) return !1;
                for (var d = r.bind(e), a = 0; a < t.length; a++) {
                    if (!d(t[a]) || o[t[a]] !== e[t[a]]) return !1
                }
                return !0
            }
            var r = Object.prototype.hasOwnProperty;
            e.exports = t
        }, {}],
        167: [function(n, e) {
            "use strict";

            function t(n) {
                var e = n.length;
                if (Array.isArray(n) || "object" != _typeof(n) && "function" != typeof n ? d(!1) : void 0, "number" != typeof e ? d(!1) : void 0, 0 === e || e - 1 in n ? void 0 : d(!1), n.hasOwnProperty) try {
                    return Array.prototype.slice.call(n)
                } catch (e) {}
                for (var t = Array(e), o = 0; e > o; o++) {
                    t[o] = n[o]
                }
                return t
            }
            var d = n(158);
            e.exports = t
        }, {
            158: 158
        }],
        168: [function(n, e) {
            "use strict";
            var t = n(150);
            e.exports = t
        }, {
            150: 150
        }]
    }, {}, [1])(1)
});
(function(a) {
    if ("function" == typeof define && define.amd) {
        define("filter_poodll/jquery.flip", ["jquery"], a)
    } else {
        a(jQuery)
    }
})(function(a) {
    var b = function(b, c) {
            b.data("flipped", !0);
            var e = "rotate" + b.data("axis");
            b.find(b.data("front")).css({
                transform: e + (b.data("reverse") ? "(-180deg)" : "(180deg)"),
                "z-index": "0"
            });
            b.find(b.data("back")).css({
                transform: e + "(0deg)",
                "z-index": "1"
            });
            b.one(d(), function() {
                a(this).trigger("flip:done");
                if (c !== void 0) {
                    c.call(this)
                }
            })
        },
        c = function(b, c) {
            b.data("flipped", !1);
            var e = "rotate" + b.data("axis");
            b.find(b.data("front")).css({
                transform: e + "(0deg)",
                "z-index": "1"
            });
            b.find(b.data("back")).css({
                transform: e + (b.data("reverse") ? "(180deg)" : "(-180deg)"),
                "z-index": "0"
            });
            b.one(d(), function() {
                a(this).trigger("flip:done");
                if (c !== void 0) {
                    c.call(this)
                }
            })
        },
        d = function() {
            var a, b = document.createElement("fakeelement"),
                c = {
                    transition: "transitionend",
                    OTransition: "oTransitionEnd",
                    MozTransition: "transitionend",
                    WebkitTransition: "webkitTransitionEnd"
                };
            for (a in c) {
                if (b.style[a] !== void 0) {
                    return c[a]
                }
            }
        };
    a.fn.flip = function(d, f) {
        if ("function" == typeof d) {
            f = d
        }
        this.each(function() {
            var g = a(this);
            if (d !== void 0 && ("boolean" == typeof d || "string" == typeof d)) {
                if ("toggle" == d) {
                    d = !g.data("flipped")
                }
                if (d) {
                    b(g, f)
                } else {
                    c(g, f)
                }
            } else if (!g.data("initiated")) {
                g.data("initiated", !0);
                var h = a.extend({
                    axis: "y",
                    reverse: !1,
                    trigger: "click",
                    speed: 500,
                    forceHeight: !1,
                    forceWidth: !1,
                    autoSize: !0,
                    front: "auto",
                    back: "auto"
                }, d);
                if ("auto" == h.front) {
                    h.front = 0 < g.find(".front").length ? ".front" : "div:first-child"
                } else if ("autostrict" == h.front) {
                    h.front = "div:first-child"
                }
                if ("auto" == h.back) {
                    h.back = 0 < g.find(".back").length ? ".back" : "div:first-child + div"
                } else if ("autostrict" == h.back) {
                    h.back = "div:first-child + div"
                }
                g.data("reverse", h.reverse);
                g.data("axis", h.axis);
                g.data("front", h.front);
                g.data("back", h.back);
                var i = "rotate" + ("x" == h.axis.toLowerCase() ? "x" : "y"),
                    j = 2 * g["outer" + ("rotatex" == i ? "Height" : "Width")]();
                g.find(g.data("back")).css({
                    transform: i + "(" + (h.reverse ? "180deg" : "-180deg") + ")"
                });
                g.css({
                    perspective: j,
                    position: "relative"
                });
                var k = h.speed / 1e3 || .5,
                    l = g.find(h.front).add(h.back, g);
                if (h.forceHeight) {
                    l.outerHeight(g.height())
                } else if (h.autoSize) {
                    l.css({
                        height: "100%"
                    })
                }
                if (h.forceWidth) {
                    l.outerWidth(g.width())
                } else if (h.autoSize) {
                    l.css({
                        width: "100%"
                    })
                }
                l.css({
                    "backface-visibility": "hidden",
                    "transform-style": "preserve-3d",
                    position: "absolute",
                    "z-index": "1"
                });
                l.find("*").css({
                    "backface-visibility": "hidden"
                });
                g.find(g.data("back")).css({
                    transform: i + "(" + (h.reverse ? "180deg" : "-180deg") + ")",
                    "z-index": "0"
                });
                if ((window.chrome || window.Intl && Intl.v8BreakIterator) && "CSS" in window) {
                    g.css({
                        "-webkit-transform-style": "preserve-3d"
                    })
                }
                setTimeout(function() {
                    l.css({
                        transition: "all " + k + "s ease-out"
                    });
                    if (f !== void 0) {
                        f.call(this)
                    }
                }, 20);
                if ("click" == h.trigger.toLowerCase()) {
                    g.on(a.fn.tap ? "tap.flip" : "click.flip", function(d) {
                        if (!d) {
                            d = window.event
                        }
                        if (g.find(a(d.target).closest("button, a, input[type=\"submit\"]")).length) {
                            return
                        }
                        if (g.data("flipped")) {
                            c(g)
                        } else {
                            b(g)
                        }
                    })
                } else if ("hover" == h.trigger.toLowerCase()) {
                    var m = function() {
                            g.off("mouseleave.flip");
                            b(g);
                            setTimeout(function() {
                                g.on("mouseleave.flip", n);
                                if (!g.is(":hover")) {
                                    c(g)
                                }
                            }, h.speed + 150)
                        },
                        n = function() {
                            c(g)
                        };
                    g.on("mouseenter.flip", m);
                    g.on("mouseleave.flip", n)
                }
            } else {
                if (d && (d.axis !== void 0 || d.reverse !== void 0)) {
                    e.call(this, d, function() {
                        g.trigger("flip:change");
                        if (f !== void 0) {
                            f.call(this)
                        }
                    })
                }
            }
        });
        return this
    };
    var e = function(b, c) {
        var d = !1;
        if (b.axis !== void 0 && a(this).data("axis") != b.axis.toLowerCase()) {
            a(this).data("axis", b.axis.toLowerCase());
            d = !0
        }
        if (b.reverse !== void 0 && a(this).data("reverse") != b.reverse) {
            a(this).data("reverse", b.reverse);
            d = !0
        }
        if (d) {
            var e = a(this).find(a(this).data("front")).add(a(this).data("back"), a(this)),
                f = e.css("transition");
            e.css({
                transition: "none"
            });
            var g = "rotate" + a(this).data("axis");
            if (a(this).data("flipped")) {
                a(this).find(a(this).data("front")).css({
                    transform: g + (a(this).data("reverse") ? "(-180deg)" : "(180deg)"),
                    "z-index": "0"
                })
            } else {
                a(this).find(a(this).data("back")).css({
                    transform: g + "(" + (a(this).data("reverse") ? "180deg" : "-180deg") + ")",
                    "z-index": "0"
                })
            }
            setTimeout(function() {
                e.css({
                    transition: f
                });
                c.call(this)
            }.bind(this), 0)
        } else {
            setTimeout(c.bind(this), 0)
        }
    }
});
define("filter_poodll/poodllrecorder", ["jquery", "core/log", "filter_poodll/poodll_flashrecorder", "filter_poodll/poodll_mediarecorder", "filter_poodll/poodll_uploadrecorder", "filter_poodll/poodll_mobilerecorder", "filter_poodll/poodll_flashsnapshotrecorder", "filter_poodll/poodll_snapshotrecorder", "filter_poodll/poodll_red5recorder"], function(a, b, c, d, e, f, g, h, j) {
    "use strict";
    b.debug("PoodLL Recorder: initialising");
    return {
        init: function init(k) {
            var l = "#amdopts_" + k.widgetid,
                m = a(l).get(0);
            if (m) {
                this.config = JSON.parse(m.value);
                a(l).remove()
            } else {
                b.debug("PoodLL Recorder: No config found on page. Giving up.");
                return
            }
            this.config.wwwroot = M.cfg.wwwroot;
            this.config.sesskey = M.cfg.sesskey;
            var n = this.config.selector;
            if (!n) {
                b.debug("unable to fetch element with selector:" + this.config.selector);
                return
            }
            for (var o = !1, p = 0; p < this.config.rec_order.length; p++) {
                switch (this.config.rec_order[p]) {
                    case "red5":
                        o = j;
                        break;
                    case "flashaudio":
                        o = c;
                        break;
                    case "media":
                        o = d;
                        break;
                    case "upload":
                        o = e;
                        break;
                    case "mobile":
                        o = f;
                        break;
                    case "flashsnapshot":
                        o = g;
                        break;
                    case "snapshot":
                        o = h;
                        break;
                }
                if (o.supports_current_browser(this.config)) {
                    o.embed(n, this.config);
                    return
                }
            }
            b.debug("none of available recorders works on this browser")
        }
    }
});
define("filter_poodll/poodll_mobilerecorder", ["jquery", "core/log", "filter_poodll/utils_amd", "filter_poodll/uploader", "filter_poodll/poodll_uploadrecorder"], function(a, b, c, d, e) {
    "use strict";
    b.debug("PoodLL Mobile Recorder: initialising");
    return {
        instanceprops: [],
        fetch_instance_props: function fetch_instance_props(a) {
            return this.instanceprops[a]
        },
        init_instance_props: function init_instance_props(a) {
            this.instanceprops[a] = {
                config: null,
                uploader: null,
                linkid: null
            }
        },
        supports_current_browser: function supports_current_browser(a) {
            if ("audio" != a.mediatype && "video" != a.mediatype) {
                return !1
            }
            var b = c.is_ios();
            return b
        },
        embed: function embed(a, b) {
            this.init_instance_props(b.widgetid);
            var c = this.fetch_instance_props(b.widgetid);
            c.config = b;
            c.uploader = d.clone();
            c.uploader.init(a, b);
            c.linkid = "filter_poodll_mobilerecorder_link_" + b.widgetid;
            switch (b.mediatype) {
                case "audio":
                    this.insert_upload_button(a, b.widgetid);
                    if (1 == b.showmobile) {
                        this.insert_audio_button(a, b.widgetid)
                    }
                    break;
                case "video":
                    this.insert_upload_button(a, b.widgetid);
                    if (1 == b.showmobile) {
                        this.insert_video_button(a, b.widgetid)
                    }
                    break;
            }
            this.register_events(a, b.widgetid);
            return !0
        },
        register_events: function register_events(b, c) {
            var d = this.fetch_instance_props(c),
                f = d.config,
                g = this;
            a("#" + d.linkid).on("mousedown touchstart", function() {
                g.confirm_s3_arrival(c);
                d.uploader.Output(M.util.get_string("recui_awaitingconfirmation", "filter_poodll"))
            });
            a("#" + d.linkid + "_uploadafile").on("mousedown touchstart", function() {
                a(b).empty();
                e.embed(b, f)
            })
        },
        insert_video_button: function insert_video_button(b, c) {
            var d = this.fetch_instance_props(c),
                e = "<a class =\"filter_poodll_mobilerecorderlink\" id=\"" + d.linkid + "\" href=\"poodllrecorder://?presignedurl=" + encodeURIComponent(d.config.quicktimesignedurl) + "&type=" + d.config.mediatype + "&quality=" + d.config.mobilequality + "&camera=" + d.config.mobilecamera + "&timelimit=" + d.config.timelimit + "\">" + M.util.get_string("recui_openrecorderapp", "filter_poodll") + "</a>";
            a(b).prepend(e)
        },
        insert_audio_button: function insert_audio_button(b, c) {
            var d = this.fetch_instance_props(c),
                e = "<a class =\"filter_poodll_mobilerecorderlink\"  id=\"" + d.linkid + "\" href=\"poodllrecorder://?presignedurl=" + encodeURIComponent(d.config.posturl) + "&type=" + d.config.mediatype + "&quality=" + d.config.mobilequality + "&camera=" + d.config.mobilecamera + "&timelimit=" + d.config.timelimit + "\">" + M.util.get_string("recui_openrecorderapp", "filter_poodll") + "</a>";
            a(b).prepend(e)
        },
        insert_upload_button: function insert_upload_button(b, c) {
            var d = this.fetch_instance_props(c),
                e = "<a class =\"filter_poodll_uploadafilelink\" id=\"" + d.linkid + "_uploadafile\" href=\"#\">" + M.util.get_string("recui_uploadafile", "filter_poodll") + "</a>";
            a(b).prepend(e)
        },
        confirm_s3_arrival: function confirm_s3_arrival(a) {
            var b = this.fetch_instance_props(a),
                c = new XMLHttpRequest,
                d = b.config,
                e = d.wwwroot + "/filter/poodll/poodllfilelib.php",
                f = "datatype=confirmarrival";
            f += "&mediatype=" + d.mediatype;
            f += "&filename=" + d.filename;
            c.open("POST", e, !0);
            c.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
            c.setRequestHeader("Cache-Control", "no-cache");
            c.setRequestHeader("Content-length", f.length);
            c.setRequestHeader("Connection", "close");
            c.addEventListener("load", function() {
                if (c.response && 0 < c.response.indexOf(d.filename)) {
                    b.uploader.pokeFilename(d.filename, b.uploader);
                    b.uploader.postprocess_s3_upload(b.uploader);
                    b.uploader.Output(M.util.get_string("recui_uploadsuccess", "filter_poodll"));
                    b.uploader.doCallback(b.uploader, d.filename)
                } else {
                    setTimeout(function() {
                        c.open("POST", e, !0);
                        c.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
                        c.setRequestHeader("Cache-Control", "no-cache");
                        c.setRequestHeader("Content-length", f.length);
                        c.setRequestHeader("Connection", "close");
                        c.send(f)
                    }, 2e3)
                }
            });
            c.send(f)
        }
    }
});
define("filter_poodll/utils_amd", ["jquery", "core/log"], function(a, b) {
    "use strict";
    b.debug("Filter PoodLL: utils initialising");
    return {
        timeouthandles: [],
        WhiteboardUploadHandler: function WhiteboardUploadHandler(b, c, d, e) {
            var f = a("#" + b + "_btn_upload_whiteboard")[0];
            f.disabled = !0;
            clearTimeout(this.timeouthandles[b]);
            var g = this.getCvs(b, c, d);
            this.pokeVectorData(b, c, d);
            e.uploadFile(g.toDataURL(), "image")
        },
        getCvs: function getCvs(a, b) {
            if (0 == a.indexOf("drawingboard_")) {
                var c = b.canvas
            } else {
                var c = b.canvasForExport()
            }
            return c
        },
        escapeColon: function escapeColon(a) {
            return a.replace(/:/, "\\:")
        },
        pokeVectorData: function pokeVectorData(c, d, e) {
            var f = "";
            if (0 == c.indexOf("drawingboard_")) {
                f = JSON.stringify(d.history, null, 2)
            } else {
                f = JSON.stringify(d.getSnapshot())
            }
            if ("undefined" != typeof e.vectorcontrol && "" !== e.vectorcontrol) {
                a("#" + this.escapeColon(e.vectorcontrol)).val(f);
                b.debug("Vectorcontrol:" + e.vectorcontrol)
            }
        },
        _concatenateWavBlobs: function _concatenateWavBlobs(a, b) {
            for (var c = [], d = 0, e = 0, f = a.length, g = 0; g < f; g++) {
                (function(h) {
                    var i = new FileReader;
                    i.onload = function() {
                        var a = this.result,
                            g = a.slice(44);
                        e += g.byteLength;
                        c[h] = g;
                        d++;
                        if (d == f) {
                            var i = a.slice(0, 44),
                                j = new DataView(i);
                            j.setUint32(40, e, !0);
                            c.unshift(i);
                            var k = new Blob(c, {
                                type: "audio/wav"
                            });
                            b(k)
                        }
                    };
                    i.readAsArrayBuffer(a[g])
                })(g)
            }
        },
        _standardConcatenateBlobs: function _standardConcatenateBlobs(a, b, c) {
            var f = [],
                g = 0;

            function d() {
                if (!a[g]) {
                    return e()
                }
                var b = new FileReader;
                b.onload = function(a) {
                    f.push(a.target.result);
                    g++;
                    d()
                };
                b.readAsArrayBuffer(a[g])
            }

            function e() {
                var a = 0;
                f.forEach(function(b) {
                    a += b.byteLength
                });
                var d = new Uint16Array(a),
                    e = 0;
                f.forEach(function(a) {
                    var b = a.byteLength;
                    if (0 != b % 2) {
                        a = a.slice(0, b - 1)
                    }
                    d.set(new Uint16Array(a), e);
                    e += b
                });
                var g = new Blob([d.buffer], {
                    type: b
                });
                c(g)
            }
            d()
        },
        _simpleConcatenateBlobs: function _simpleConcatenateBlobs(a, b) {
            return new Blob(a, {
                type: b
            })
        },
        doConcatenateBlobs: function doConcatenateBlobs(a, b) {
            switch (a[0].type) {
                case "audio/wav":
                case "audio/pcm":
                    this._concatenateWavBlobs(a, b);
                    break;
                case "audio/ogg":
                case "audio/webm":
                case "video/webm":
                default:
                    var c = this._simpleConcatenateBlobs(a, a[0].type);
                    b(c);
                    break;
                case "old default":
                    this._standardConcatenateBlobs(a, a[0].type, b);
            }
        },
        bytesToSize: function bytesToSize(a) {
            if (0 === a) {
                return "0 Bytes"
            }
            var b = parseInt(Math.floor(Math.log(a) / Math.log(1000)), 10);
            return (a / Math.pow(1000, b)).toPrecision(3) + " " + ["Bytes", "KB", "MB", "GB", "TB"][b]
        },
        getTimeLength: function getTimeLength(a) {
            var b = new Date(a);
            return b.getUTCHours() + " hours, " + b.getUTCMinutes() + " minutes and " + b.getUTCSeconds() + " second(s)"
        },
        has_mediarecorder: function has_mediarecorder() {
            return "undefined" != typeof MediaRecorder
        },
        can_html5_record: function can_html5_record(a) {
            if (navigator && navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
                if ("audio" == a) {
                    return !0
                } else {
                    return this.has_mediarecorder()
                }
            } else {
                return !1
            }
        },
        is_edge: function is_edge() {
            return -1 < navigator.userAgent.indexOf("Edge")
        },
        is_chrome: function is_chrome() {
            var a = window.chrome,
                b = window.navigator,
                c = b.vendor,
                d = -1 < b.userAgent.indexOf("OPR"),
                e = -1 < b.userAgent.indexOf("Edge"),
                f = b.userAgent.match("CriOS");
            if (f) {
                return !0
            } else if (null !== a && "undefined" != typeof a && "Google Inc." === c && !1 == d && !1 == e) {
                return !0
            } else {
                return !1
            }
        },
        is_safari: function is_safari() {
            return /^((?!chrome|android).)*safari/i.test(navigator.userAgent)
        },
        is_ios: function is_ios() {
            return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream
        },
        is_opera: function is_opera() {
            return "undefined" != typeof opera && navigator.userAgent && -1 !== navigator.userAgent.indexOf("OPR/")
        },
        is_android: function is_android() {
            var a = window.navigator.userAgent,
                b = -1 < a.indexOf("android") || -1 < a.indexOf("Android");
            return b
        },
        is_ie: function is_ie() {
            var a = !1,
                b = window.navigator.userAgent,
                c = b.indexOf("MSIE "),
                d = b.indexOf("Trident/"),
                e = b.indexOf("Edge/");
            if (-1 < c || -1 < d || -1 < e) {
                a = !0
            }
            return a
        },
        parseQueryString: function parseQueryString(a) {
            var b = {};
            a.replace(/([^?=&]+)(=([^&]*))?/g, function(a, c, d, e) {
                b[c] = e
            });
            return b
        }
    }
});
define("filter_poodll/media_refresher", ["jquery", "core/log"], function(a, b) {
    "use strict";
    b.debug("Media refresher: initialising");
    return {
        placeholderduration: null,
        mediaduration: null,
        alertconverted: null,
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        init: function init(a, b, c, d) {
            this.placeholderduration = b;
            this.mediaduration = c;
            this.alertconverted = d;
            this.check_updates(a, "firstpass")
        },
        should_be_checked: function should_be_checked(c) {
            b.debug("mediaduration: " + this.mediaduration);
            b.debug("placeholderduration: " + this.placeholderduration);
            b.debug("fixed to one mediaduration: " + parseFloat(this.mediaduration).toFixed(1));
            b.debug("fixed to one placeholderduration: " + parseFloat(this.placeholderduration).toFixed(1));
            if (!a.isNumeric(this.placeholderduration)) {
                return !1
            }
            if (!a.isNumeric(this.mediaduration)) {
                return !1
            }
            if (parseFloat(this.mediaduration).toFixed(1) != parseFloat(this.placeholderduration).toFixed(1)) {
                return !1
            }
            if ("" == c) {
                return !1
            }
            return !0
        },
        check_updates: function check_updates(a, c) {
            this.should_be_checked(a);
            if ("firstpass" == c && !this.should_be_checked(a)) {
                return
            }
            var d = new XMLHttpRequest,
                e = this;
            d.onreadystatechange = function() {
                if (4 === this.readyState) {
                    if (200 == d.status) {
                        var f = d.responseText,
                            g = JSON.parse(f);
                        if (g) {
                            switch (g.code) {
                                case "mediaready":
                                    e.alertconverted();
                                    break;
                                case "stillwaiting":
                                    setTimeout(function() {
                                        e.check_updates(a, "secondpass")
                                    }, 15e3);
                                    break;
                                case "notask":
                                    if ("secondpass" == c) {
                                        e.alertconverted()
                                    }
                                    break;
                                case "notloggedin":
                                default:
                            }
                        }
                    } else {
                        b.debug("Not 200 response:" + d.status)
                    }
                }
            };
            d.open("POST", M.cfg.wwwroot + "/filter/poodll/ajaxmediaquery.php", !0);
            d.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
            d.setRequestHeader("Cache-Control", "no-cache");
            d.send("filename=" + a)
        }
    }
});
define("filter_poodll/dlg_poodll", ["jquery", "jqueryui", "core/log"], function(a, b, c) {
    "use strict";
    c.debug("Poodll Dialog: initialising");
    return {
        dlgbox: null,
        headertext: "",
        init: function init() {},
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        setHeader: function setHeader(a) {
            this.headertext = a
        },
        setContent: function setContent(a) {
            this.clear();
            this.dlgbox.append(a)
        },
        clear: function clear() {
            this.dlgbox.children().last().remove()
        },
        open: function open() {
            this.dlgbox.toggle("slide", {
                direction: "left"
            }, 400)
        },
        close: function close() {
            var a = this;
            this.dlgbox.toggle("slide", {
                direction: "left",
                complete: a.onclose
            }, 400)
        },
        onclose: function onclose() {},
        test: function test() {
            c.debug("hio")
        },
        fetch_dialogue_box: function fetch_dialogue_box(a) {
            var b = "<div class=\"poodll_dialogue_box poodll_dialogue_box_" + a + " hide\"><div class=\"poodll_close_modal\">";
            b += "<i class=\"fa fa-window-close\" aria-hidden=\"true\"></div></i>";
            b += "<div class=\"poodll_dialogue_content\"><strong>" + this.headertext + "</strong></div>";
            b += "<div class=\"will_be_cleared\"></div></div>";
            return b
        },
        set_dialogue_box: function set_dialogue_box(a) {
            this.dlgbox = a;
            var b = this;
            a.find(".poodll_close_modal").click(function() {
                b.close()
            })
        }
    }
});
define("filter_poodll/dlg_devicesettings", ["jquery", "core/log", "filter_poodll/dlg_poodll"], function(a, b, c) {
    b.debug("Device settings dialog: initialising");
    return {
        dlg: null,
        pmr: null,
        instanceprops: null,
        dlgbox: null,
        mediatype: null,
        init: function init(a, b) {
            this.dlg = c.clone();
            this.dlg.setHeader("settings");
            this.pmr = a;
            this.instanceprops = b;
            this.mediatype = b.config.mediatype
        },
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        fetch_dialogue_box: function fetch_dialogue_box() {
            return this.dlg.fetch_dialogue_box("settings")
        },
        set_dialogue_box: function set_dialogue_box(a) {
            this.dlgbox = a;
            this.dlg.set_dialogue_box(a)
        },
        open: function open() {
            var a = this,
                c = this.instanceprops;
            navigator.mediaDevices.enumerateDevices().then(function(b) {
                var c = [],
                    d = [];
                b.forEach(function(a) {
                    switch (a.kind) {
                        case "audioinput":
                            c.push(a);
                            break;
                        case "videoinput":
                            d.push(a);
                            break;
                    }
                });
                var e = "<div class=\"devicesettings_select\"><span class=\"devicesettings_select_label\">Audio: </span>" + a.makeSelect(c, "audio") + "</div>",
                    f = "<div class=\"devicesettings_select\"><span class=\"devicesettings_select_label\">Video: </span>" + a.makeSelect(d, "video") + "</div>",
                    g = "<div class=\"filter_poodll_mediadevices\">";
                if ("video" == a.mediatype) {
                    g += e + "<br>" + f
                } else {
                    g += e
                }
                g += "</div>";
                a.dlg.setContent(g);
                a.registerEvents();
                if ("video" == a.instanceprops.config.mediatype) {
                    a.dlg.onclose = function() {
                        a.resetVideoUserInterface()
                    }
                }
                a.dlg.open()
            }).catch(function(a) {
                b.debug(a)
            })
        },
        registerEvents: function registerEvents() {
            var a = this,
                b = this.instanceprops,
                c = b.controlbar.preview[0];
            if (c) {
                c.pause()
            }
            if (b.mediaRecorder) {
                b.mediaRecorder.stop()
            }
            this.dlgbox.find(".select_settings_audio").change(function() {
                a.instanceprops.useraudiodeviceid = this.value
            });
            this.dlgbox.find(".select_settings_video").change(function() {
                a.instanceprops.uservideodeviceid = this.value
            })
        },
        resetVideoUserInterface: function resetVideoUserInterface() {
            var a = this.instanceprops,
                c = a.controlbar.preview[0],
                d = this.pmr,
                e = d.fetch_video_constraints(a);
            d.tidy_old_stream(a.controlbarid);
            navigator.mediaDevices.getUserMedia(e).then(function(b) {
                d.restream_preview_video_player(a.controlbarid, b)
            }).catch(function(a) {
                b.debug("location 4567");
                b.debug(a)
            })
        },
        makeSelect: function makeSelect(a, b) {
            if (1 == a.length && "" == a[0].label) {
                return "<div>No devices available yet.</div>"
            }
            switch (b) {
                case "audio":
                    var c = this.instanceprops.useraudiodeviceid;
                    break;
                case "video":
                    var c = this.instanceprops.uservideodeviceid;
            }
            var d = "<select class=\"select_settings_" + b + "\">";
            a.forEach(function(a) {
                var b = "";
                if (c == a.deviceId) {
                    b = "selected"
                }
                d += "<option value=\"" + a.deviceId + "\"  " + b + ">" + a.label + "</option>"
            });
            d += "</select>";
            return d
        }
    }
});
define("filter_poodll/poodll_snapshotrecorder", ["jquery", "core/log", "filter_poodll/utils_amd", "filter_poodll/uploader", "filter_poodll/webcam"], function(a, b, c, d, e) {
    "use strict";
    b.debug("PoodLL Snapshot Recorder: initialising");
    return {
        instanceprops: [],
        fetch_instance_props: function fetch_instance_props(a) {
            return this.instanceprops[a]
        },
        init_instance_props: function init_instance_props(a) {
            this.instanceprops[a] = {
                imagefile: !1,
                htmlthings: "",
                config: null,
                uploader: null
            }
        },
        supports_current_browser: function supports_current_browser(a) {
            var d = c.is_ios();
            if (d) {
                return !1
            } else {
                if ("snapshot" != a.mediatype) {
                    return !1
                }
                b.debug("PoodLL Snapshot Recorder: supports this browser");
                return !0
            }
        },
        embed: function embed(a, b) {
            this.init_instance_props(b.widgetid);
            var c = this.fetch_instance_props(b.widgetid);
            c.config = b;
            c.uploader = d.clone();
            c.uploader.init(a, b);
            this.insert_controls(a, b.widgetid);
            this.register_events(b.widgetid)
        },
        insert_controls: function insert_controls(b, c) {
            var d = this.fetch_instance_props(c),
                e = d.config,
                f = {
                    camera: e.widgetid + "_poodll_snapshot_camera",
                    preview: e.widgetid + "_poodll_snapshot_preview",
                    snapbutton: e.widgetid + "_poodll_take-snapshot",
                    savebutton: e.widgetid + "_poodll_save-snapshot",
                    cancelbutton: e.widgetid + "_poodll_cancel-snapshot"
                };
            d.htmlthings = f;
            var g = "<div id=\"" + f.camera + "\" style=\"width:320px; height:240px;\"></div>";
            g += "<div id=\"" + f.preview + "\" class=\"hide\" style=\"width:320px; height:240px;\"></div>";
            g += "<button type=\"button\" class=\"poodll_take-snapshot\" id=\"" + f.snapbutton + "\">" + M.util.get_string("recui_takesnapshot", "filter_poodll") + "</button>";
            g += "<button type=\"button\" class=\"poodll_cancel-snapshot\" id=\"" + f.cancelbutton + "\">" + M.util.get_string("recui_cancelsnapshot", "filter_poodll") + "</button>";
            g += "<button type=\"button\" class=\"poodll_save-recording\" id=\"" + f.savebutton + "\">" + M.util.get_string("recui_save", "filter_poodll") + "</button>";
            a(b).prepend(g)
        },
        register_events: function register_events(b) {
            var c = this.fetch_instance_props(b),
                d = c.config;
            e.set("swfURL", M.cfg.wwwroot + "/filter/poodll/3rdparty/webcam/webcam.swf");
            e.attach("#" + c.htmlthings.camera);
            a("#" + c.htmlthings.savebutton).on("click", function() {
                if (c.imagefile) {
                    var a = c.uploader.dataURItoBlob(c.imagefile, "image/jpeg");
                    c.uploader.uploadFile(a, "image/jpeg")
                } else {
                    c.uploader.Output(M.util.get_string("recui_nothingtosaveerror", "filter_poodll"))
                }
            });
            a("#" + c.htmlthings.cancelbutton).on("click", function() {
                c.imagefile = !1;
                a("#" + c.htmlthings.preview).addClass("hide").html("");
                a("#" + c.htmlthings.camera).removeClass("hide")
            });
            a("#" + c.htmlthings.snapbutton).on("click", function() {
                e.snap(function(b) {
                    c.imagefile = b;
                    a("#" + c.htmlthings.preview).html("<img src=\"" + b + "\"/>").removeClass("hide");
                    a("#" + c.htmlthings.camera).addClass("hide")
                })
            })
        }
    }
});
define("filter_poodll/poodll_red5recorder", ["jquery", "core/log", "filter_poodll/utils_amd", "filter_poodll/uploader", "filter_poodll/lzloader"], function(a, b, c, d, e) {
    "use strict";
    b.debug("PoodLL Red5 Recorder: initialising");
    return {
        supports_current_browser: function supports_current_browser(a) {
            var d = c.is_ios(),
                e = c.is_android();
            if (d || 1 > a.flashonandroid && e) {
                return !1
            } else {
                if ("audio" != a.mediatype && "video" != a.mediatype) {
                    return !1
                }
                b.debug("PoodLL Red5 Recorder: supports this browser");
                return !0
            }
        },
        embed: function embed(b, c) {
            switch (c.mediatype) {
                case "video":
                    var d = a.parseJSON(c.red5video_widgetjson);
                    break;
                case "audio":
                default:
                    var d = a.parseJSON(c.red5audio_widgetjson);
            }
            e.embed.swf(d)
        }
    }
});

function _defineProperty(e, t, o) {
    if (t in e) {
        Object.defineProperty(e, t, {
            value: o,
            enumerable: !0,
            configurable: !0,
            writable: !0
        })
    } else {
        e[t] = o
    }
    return e
}

function _typeof(e) {
    if ("function" == typeof Symbol && "symbol" == typeof Symbol.iterator) {
        _typeof = function(e) {
            return typeof e
        }
    } else {
        _typeof = function(e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        }
    }
    return _typeof(e)
}! function(o) {
    if ("object" == ("undefined" == typeof exports ? "undefined" : _typeof(exports)) && "undefined" != typeof module) module.exports = o();
    else if ("function" == typeof define && define.amd) define("filter_poodll/literallycanvas", [], o);
    else {
        var t;
        t = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this, t.LC = o()
    }
}(function() {
    return function p(d, e, t) {
        function a(o, r) {
            if (!e[o]) {
                if (!d[o]) {
                    var i = "function" == typeof require && require;
                    if (!r && i) return i(o, !0);
                    if (n) return n(o, !0);
                    var s = new Error("Cannot find module '" + o + "'");
                    throw s.code = "MODULE_NOT_FOUND", s
                }
                var l = e[o] = {
                    exports: {}
                };
                d[o][0].call(l.exports, function(e) {
                    var t = d[o][1][e];
                    return a(t ? t : e)
                }, l, l.exports, p, d, e, t)
            }
            return e[o].exports
        }
        for (var n = "function" == typeof require && require, o = 0; o < t.length; o++) {
            a(t[o])
        }
        return a
    }({
        1: [function(o, t) {
            "use strict";

            function e(r, t) {
                if (r === t) return !0;
                if ("object" != _typeof(r) || null === r || "object" != _typeof(t) || null === t) return !1;
                var e = Object.keys(r),
                    n = Object.keys(t);
                if (e.length !== n.length) return !1;
                for (var i = a.bind(t), o = 0; o < e.length; o++) {
                    if (!i(e[o]) || r[e[o]] !== t[e[o]]) return !1
                }
                return !0
            }
            var a = Object.prototype.hasOwnProperty;
            t.exports = e
        }, {}],
        2: [function(o, t) {
            t.exports = o("react/lib/ReactComponentWithPureRenderMixin")
        }, {
            "react/lib/ReactComponentWithPureRenderMixin": 3
        }],
        3: [function(o, t) {
            "use strict";
            var a = o("./shallowCompare");
            t.exports = {
                shouldComponentUpdate: function shouldComponentUpdate(o, t) {
                    return a(this, o, t)
                }
            }
        }, {
            "./shallowCompare": 4
        }],
        4: [function(o, t) {
            "use strict";
            var a = o("fbjs/lib/shallowEqual");
            t.exports = function(o, t, e) {
                return !a(o.props, t) || !a(o.state, e)
            }
        }, {
            "fbjs/lib/shallowEqual": 1
        }],
        5: [function(n, t) {
            var k, b, e, C, w, P, R, _, E, I, T, L, z, O, N, W = function(o, t) {
                    return function() {
                        return o.apply(t, arguments)
                    }
                },
                S = [].slice,
                v = [].indexOf || function(o) {
                    for (var t = 0, a = this.length; a > t; t++) {
                        if (t in this && this[t] === o) return t
                    }
                    return -1
                };
            w = n("./actions"), P = n("./bindEvents"), _ = n("./math"), E = n("./shapes"), R = E.createShape, O = E.shapeToJSON, b = E.JSONToShape, I = n("./canvasRenderer").renderShapeToContext, T = n("./svgRenderer").renderShapeToSVG, L = n("./renderSnapshotToImage"), z = n("./renderSnapshotToSVG"), C = n("../tools/Pencil"), N = n("./util"), k = "infinite", t.exports = e = function() {
                function e(o, t) {
                    this.setImageSize = W(this.setImageSize, this);
                    var e, a;
                    a = null, e = null, o instanceof HTMLElement ? (e = o, a = t) : a = o, this.opts = a || {}, this.config = {
                        zoomMin: a.zoomMin || .2,
                        zoomMax: a.zoomMax || 4,
                        zoomStep: a.zoomStep || .2
                    }, this.colors = {
                        primary: a.primaryColor || "#000",
                        secondary: a.secondaryColor || "#fff",
                        background: a.backgroundColor || "transparent"
                    }, this.watermarkImage = a.watermarkImage, this.watermarkScale = a.watermarkScale || 1, this.backgroundCanvas = document.createElement("canvas"), this.backgroundCtx = this.backgroundCanvas.getContext("2d"), this.canvas = document.createElement("canvas"), this.canvas.style["background-color"] = "transparent", this.buffer = document.createElement("canvas"), this.buffer.style["background-color"] = "transparent", this.ctx = this.canvas.getContext("2d"), this.bufferCtx = this.buffer.getContext("2d"), this.backingScale = N.getBackingScale(this.ctx), this.backgroundShapes = a.backgroundShapes || [], this._shapesInProgress = [], this.shapes = [], this.undoStack = [], this.redoStack = [], this.isDragging = !1, this.position = {
                        x: 0,
                        y: 0
                    }, this.scale = 1, this.setTool(new this.opts.tools[0](this)), this.width = a.imageSize.width || k, this.height = a.imageSize.height || k, this.setZoom(this.scale), a.snapshot && this.loadSnapshot(a.snapshot), this.isBound = !1, e && this.bindToElement(e), this.respondToSizeChange = function() {}
                }
                return e.prototype.bindToElement = function(o) {
                    var t, a;
                    return this.containerEl ? void console.warn("Trying to bind Literally Canvas to a DOM element more than once is unsupported.") : (this.containerEl = o, this._unsubscribeEvents = P(this, this.containerEl, this.opts.keyboardShortcuts), this.containerEl.style["background-color"] = this.colors.background, this.containerEl.appendChild(this.backgroundCanvas), this.containerEl.appendChild(this.canvas), this.isBound = !0, a = function(e) {
                        return function() {
                            return e.keepPanInImageBounds(), e.repaintAllLayers()
                        }
                    }(this), this.respondToSizeChange = N.matchElementSize(this.containerEl, [this.backgroundCanvas, this.canvas], this.backingScale, a), this.watermarkImage && (this.watermarkImage.onload = function(e) {
                        return function() {
                            return e.repaintLayer("background")
                        }
                    }(this)), null != (t = this.tool) && t.didBecomeActive(this), a())
                }, e.prototype._teardown = function() {
                    var e;
                    return null != (e = this.tool) && e.willBecomeInactive(this), "function" == typeof this._unsubscribeEvents && this._unsubscribeEvents(), this.tool = null, this.containerEl = null, this.isBound = !1
                }, e.prototype.trigger = function(o, t) {
                    return this.canvas.dispatchEvent(new CustomEvent(o, {
                        detail: t
                    })), null
                }, e.prototype.on = function(o, a) {
                    var t;
                    return t = function(e) {
                            return a(e.detail)
                        }, this.canvas.addEventListener(o, t),
                        function(a) {
                            return function() {
                                return a.canvas.removeEventListener(o, t)
                            }
                        }(this)
                }, e.prototype.getRenderScale = function() {
                    return this.scale * this.backingScale
                }, e.prototype.clientCoordsToDrawingCoords = function(o, t) {
                    return {
                        x: (o * this.backingScale - this.position.x) / this.getRenderScale(),
                        y: (t * this.backingScale - this.position.y) / this.getRenderScale()
                    }
                }, e.prototype.drawingCoordsToClientCoords = function(o, t) {
                    return {
                        x: o * this.getRenderScale() + this.position.x,
                        y: t * this.getRenderScale() + this.position.y
                    }
                }, e.prototype.setImageSize = function(o, t) {
                    return this.width = o || k, this.height = t || k, this.keepPanInImageBounds(), this.repaintAllLayers(), this.trigger("imageSizeChange", {
                        width: this.width,
                        height: this.height
                    })
                }, e.prototype.setTool = function(o) {
                    var t;
                    return this.isBound && null != (t = this.tool) && t.willBecomeInactive(this), this.tool = o, this.trigger("toolChange", {
                        tool: o
                    }), this.isBound ? this.tool.didBecomeActive(this) : void 0
                }, e.prototype.setShapesInProgress = function(e) {
                    return this._shapesInProgress = e
                }, e.prototype.pointerDown = function(o, t) {
                    var e;
                    return e = this.clientCoordsToDrawingCoords(o, t), this.tool.usesSimpleAPI ? (this.tool.begin(e.x, e.y, this), this.isDragging = !0, this.trigger("drawStart", {
                        tool: this.tool
                    })) : (this.isDragging = !0, this.trigger("lc-pointerdown", {
                        tool: this.tool,
                        x: e.x,
                        y: e.y,
                        rawX: o,
                        rawY: t
                    }))
                }, e.prototype.pointerMove = function(o, t) {
                    return N.requestAnimationFrame(function(e) {
                        return function() {
                            var a, n;
                            return a = e.clientCoordsToDrawingCoords(o, t), (null != (n = e.tool) ? n.usesSimpleAPI : 0) ? e.isDragging ? (e.tool["continue"](a.x, a.y, e), e.trigger("drawContinue", {
                                tool: e.tool
                            })) : void 0 : e.isDragging ? e.trigger("lc-pointerdrag", {
                                tool: e.tool,
                                x: a.x,
                                y: a.y,
                                rawX: o,
                                rawY: t
                            }) : e.trigger("lc-pointermove", {
                                tool: e.tool,
                                x: a.x,
                                y: a.y,
                                rawX: o,
                                rawY: t
                            })
                        }
                    }(this))
                }, e.prototype.pointerUp = function(o, t) {
                    var e;
                    return e = this.clientCoordsToDrawingCoords(o, t), this.tool.usesSimpleAPI ? this.isDragging ? (this.tool.end(e.x, e.y, this), this.isDragging = !1, this.trigger("drawEnd", {
                        tool: this.tool
                    })) : void 0 : (this.isDragging = !1, this.trigger("lc-pointerup", {
                        tool: this.tool,
                        x: e.x,
                        y: e.y,
                        rawX: o,
                        rawY: t
                    }))
                }, e.prototype.setColor = function(o, t) {
                    if (this.colors[o] = t, this.isBound) {
                        switch (o) {
                            case "background":
                                this.containerEl.style.backgroundColor = this.colors.background, this.repaintLayer("background");
                                break;
                            case "primary":
                                this.repaintLayer("main");
                                break;
                            case "secondary":
                                this.repaintLayer("main");
                        }
                        return this.trigger(o + "ColorChange", this.colors[o]), "background" === o ? this.trigger("drawingChange") : void 0
                    }
                }, e.prototype.getColor = function(e) {
                    return this.colors[e]
                }, e.prototype.saveShape = function(o, t, a) {
                    return null == t && (t = !0), null == a && (a = null), a || (a = this.shapes.length ? this.shapes[this.shapes.length - 1].id : null), this.execute(new w.AddShapeAction(this, o, a)), t && this.trigger("shapeSave", {
                        shape: o,
                        previousShapeId: a
                    }), this.trigger("drawingChange")
                }, e.prototype.pan = function(o, t) {
                    return this.setPan(this.position.x - o, this.position.y - t)
                }, e.prototype.keepPanInImageBounds = function() {
                    var o, a, i, s;
                    return a = this.getRenderScale(), o = this.position, i = o.x, s = o.y, this.width !== k && (i = this.canvas.width > this.width * a ? (this.canvas.width - this.width * a) / 2 : Math.max(Math.min(0, i), this.canvas.width - this.width * a)), this.height !== k && (s = this.canvas.height > this.height * a ? (this.canvas.height - this.height * a) / 2 : Math.max(Math.min(0, s), this.canvas.height - this.height * a)), this.position = {
                        x: i,
                        y: s
                    }
                }, e.prototype.setPan = function(o, t) {
                    return this.position = {
                        x: o,
                        y: t
                    }, this.keepPanInImageBounds(), this.repaintAllLayers(), this.trigger("pan", {
                        x: this.position.x,
                        y: this.position.y
                    })
                }, e.prototype.zoom = function(o) {
                    var t;
                    return t = this.scale + o, t = Math.max(t, this.config.zoomMin), t = Math.min(t, this.config.zoomMax), t = Math.round(100 * t) / 100, this.setZoom(t)
                }, e.prototype.setZoom = function(o) {
                    var t;
                    return t = this.scale, this.scale = o, this.position.x = _.scalePositionScalar(this.position.x, this.canvas.width, t, this.scale), this.position.y = _.scalePositionScalar(this.position.y, this.canvas.height, t, this.scale), this.keepPanInImageBounds(), this.repaintAllLayers(), this.trigger("zoom", {
                        oldScale: t,
                        newScale: this.scale
                    })
                }, e.prototype.setWatermarkImage = function(e) {
                    return this.watermarkImage = e, N.addImageOnload(e, function(e) {
                        return function() {
                            return e.repaintLayer("background")
                        }
                    }(this)), e.width ? this.repaintLayer("background") : void 0
                }, e.prototype.repaintAllLayers = function() {
                    var o, a, r, s;
                    for (s = ["background", "main"], o = 0, r = s.length; r > o; o++) {
                        a = s[o], this.repaintLayer(a)
                    }
                    return null
                }, e.prototype.repaintLayer = function(o, t) {
                    var a;
                    if (null == t && (t = "main" === o), this.isBound) {
                        switch (o) {
                            case "background":
                                this.backgroundCtx.clearRect(0, 0, this.backgroundCanvas.width, this.backgroundCanvas.height), a = function(e) {
                                    return function() {
                                        return e.repaintLayer("background")
                                    }
                                }(this), this.watermarkImage && this._renderWatermark(this.backgroundCtx, !0, a), this.draw(this.backgroundShapes, this.backgroundCtx, a);
                                break;
                            case "main":
                                a = function(e) {
                                    return function() {
                                        return e.repaintLayer("main", !0)
                                    }
                                }(this), t && (this.buffer.width = this.canvas.width, this.buffer.height = this.canvas.height, this.bufferCtx.clearRect(0, 0, this.buffer.width, this.buffer.height), this.draw(this.shapes, this.bufferCtx, a)), this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height), 0 < this.canvas.width && 0 < this.canvas.height && (this.ctx.fillStyle = "#ccc", this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height), this.clipped(function(e) {
                                    return function() {
                                        return e.ctx.clearRect(0, 0, e.canvas.width, e.canvas.height), e.ctx.drawImage(e.buffer, 0, 0)
                                    }
                                }(this), this.ctx), this.clipped(function(a) {
                                    return function() {
                                        return a.transformed(function() {
                                            var t, s, l, p, d;
                                            for (l = a._shapesInProgress, p = [], t = 0, s = l.length; s > t; t++) {
                                                d = l[t], p.push(I(a.ctx, d, {
                                                    bufferCtx: a.bufferCtx,
                                                    shouldOnlyDrawLatest: !0
                                                }))
                                            }
                                            return p
                                        }, a.ctx, a.bufferCtx)
                                    }
                                }(this), this.ctx, this.bufferCtx));
                        }
                        return this.trigger("repaint", {
                            layerKey: o
                        })
                    }
                }, e.prototype._renderWatermark = function(o, t, a) {
                    return null == t && (t = !0), this.watermarkImage.width ? (o.save(), o.translate(o.canvas.width / 2, o.canvas.height / 2), o.scale(this.watermarkScale, this.watermarkScale), t && o.scale(this.backingScale, this.backingScale), o.drawImage(this.watermarkImage, -this.watermarkImage.width / 2, -this.watermarkImage.height / 2), o.restore()) : void(this.watermarkImage.onload = a)
                }, e.prototype.drawShapeInProgress = function(o) {
                    return this.repaintLayer("main", !1), this.clipped(function(t) {
                        return function() {
                            return t.transformed(function() {
                                return I(t.ctx, o, {
                                    bufferCtx: t.bufferCtx,
                                    shouldOnlyDrawLatest: !0
                                })
                            }, t.ctx, t.bufferCtx)
                        }
                    }(this), this.ctx, this.bufferCtx)
                }, e.prototype.draw = function(a, r, e) {
                    var o;
                    if (a.length) return o = function() {
                        return function() {
                            var t, n, l, p;
                            for (l = [], t = 0, n = a.length; n > t; t++) {
                                p = a[t], l.push(I(r, p, {
                                    retryCallback: e
                                }))
                            }
                            return l
                        }
                    }(this), this.clipped(function(e) {
                        return function() {
                            return e.transformed(o, r)
                        }
                    }(this), r)
                }, e.prototype.clipped = function() {
                    var i, d, g, m, y, f, x, b, C, w, v, P;
                    for (g = arguments[0], i = 2 <= arguments.length ? S.call(arguments, 1) : [], v = this.width === k ? 0 : this.position.x, P = this.height === k ? 0 : this.position.y, w = function() {
                            switch (this.width) {
                                case k:
                                    return this.canvas.width;
                                default:
                                    return this.width * this.getRenderScale();
                            }
                        }.call(this), m = function() {
                            switch (this.height) {
                                case k:
                                    return this.canvas.height;
                                default:
                                    return this.height * this.getRenderScale();
                            }
                        }.call(this), y = 0, x = i.length; x > y; y++) {
                        d = i[y], d.save(), d.beginPath(), d.rect(v, P, w, m), d.clip()
                    }
                    for (g(), C = [], f = 0, b = i.length; b > f; f++) {
                        d = i[f], C.push(d.restore())
                    }
                    return C
                }, e.prototype.transformed = function() {
                    var l, p, d, c, g, u, m, y, f;
                    for (d = arguments[0], l = 2 <= arguments.length ? S.call(arguments, 1) : [], c = 0, u = l.length; u > c; c++) {
                        p = l[c], p.save(), p.translate(Math.floor(this.position.x), Math.floor(this.position.y)), f = this.getRenderScale(), p.scale(f, f)
                    }
                    for (d(), y = [], g = 0, m = l.length; m > g; g++) {
                        p = l[g], y.push(p.restore())
                    }
                    return y
                }, e.prototype.clear = function(o) {
                    var a, r;
                    return null == o && (o = !0), r = this.shapes, a = [], this.setShapesInProgress([]), this.execute(new w.ClearAction(this, r, a)), this.repaintLayer("main"), o && this.trigger("clear", null), this.trigger("drawingChange", {})
                }, e.prototype.execute = function(e) {
                    return this.undoStack.push(e), e["do"](), this.redoStack = []
                }, e.prototype.undo = function() {
                    var e;
                    if (this.undoStack.length) return e = this.undoStack.pop(), e.undo(), this.redoStack.push(e), this.trigger("undo", {
                        action: e
                    }), this.trigger("drawingChange", {})
                }, e.prototype.redo = function() {
                    var e;
                    if (this.redoStack.length) return e = this.redoStack.pop(), this.undoStack.push(e), e["do"](), this.trigger("redo", {
                        action: e
                    }), this.trigger("drawingChange", {})
                }, e.prototype.canUndo = function() {
                    return !!this.undoStack.length
                }, e.prototype.canRedo = function() {
                    return !!this.redoStack.length
                }, e.prototype.getPixel = function(o, t) {
                    var e, a;
                    return e = this.drawingCoordsToClientCoords(o, t), a = this.ctx.getImageData(e.x, e.y, 1, 1).data, a[3] ? "rgb(" + a[0] + ", " + a[1] + ", " + a[2] + ")" : null
                }, e.prototype.getContentBounds = function() {
                    return N.getBoundingRect(this.shapes.concat(this.backgroundShapes).map(function(e) {
                        return e.getBoundingRect()
                    }), this.width === k ? 0 : this.width, this.height === k ? 0 : this.height)
                }, e.prototype.getDefaultImageRect = function(o, a) {
                    var s;
                    return null == o && (o = {
                        width: 0,
                        height: 0
                    }), null == a && (a = {
                        top: 0,
                        right: 0,
                        bottom: 0,
                        left: 0
                    }), N.getDefaultImageRect(function() {
                        var o, a, n, l;
                        for (n = this.shapes.concat(this.backgroundShapes), l = [], o = 0, a = n.length; a > o; o++) {
                            s = n[o], l.push(s.getBoundingRect(this.ctx))
                        }
                        return l
                    }.call(this), o, a)
                }, e.prototype.getImage = function(e) {
                    return null == e && (e = {}), null == e.includeWatermark && (e.includeWatermark = !0), null == e.scaleDownRetina && (e.scaleDownRetina = !0), null == e.scale && (e.scale = 1), e.scaleDownRetina || (e.scale *= this.backingScale), e.includeWatermark && (e.watermarkImage = this.watermarkImage, e.watermarkScale = this.watermarkScale, e.scaleDownRetina || (e.watermarkScale *= this.backingScale)), L(this.getSnapshot(), e)
                }, e.prototype.canvasForExport = function() {
                    return this.repaintAllLayers(), N.combineCanvases(this.backgroundCanvas, this.canvas)
                }, e.prototype.canvasWithBackground = function(e) {
                    return N.combineCanvases(e, this.canvasForExport())
                }, e.prototype.getSnapshot = function(a) {
                    var l, p, d, c, h, g;
                    for (null == a && (a = null), null == a && (a = ["shapes", "imageSize", "colors", "position", "scale", "backgroundShapes"]), g = {}, c = ["colors", "position", "scale"], l = 0, d = c.length; d > l; l++) {
                        p = c[l], 0 <= v.call(a, p) && (g[p] = this[p])
                    }
                    return 0 <= v.call(a, "shapes") && (g.shapes = function() {
                        var o, a, r, s;
                        for (r = this.shapes, s = [], o = 0, a = r.length; a > o; o++) {
                            h = r[o], s.push(O(h))
                        }
                        return s
                    }.call(this)), 0 <= v.call(a, "backgroundShapes") && (g.backgroundShapes = function() {
                        var o, a, r, s;
                        for (r = this.backgroundShapes, s = [], o = 0, a = r.length; a > o; o++) {
                            h = r[o], s.push(O(h))
                        }
                        return s
                    }.call(this)), 0 <= v.call(a, "imageSize") && (g.imageSize = {
                        width: this.width,
                        height: this.height
                    }), g
                }, e.prototype.getSnapshotJSON = function() {
                    return console.warn("lc.getSnapshotJSON() is deprecated. use JSON.stringify(lc.getSnapshot()) instead."), JSON.stringify(this.getSnapshot())
                }, e.prototype.getSVGString = function(e) {
                    return null == e && (e = {}), z(this.getSnapshot(), e)
                }, e.prototype.loadSnapshot = function(a) {
                    var t, r, d, g, m, y, S, f, x, k;
                    if (a) {
                        if (a.colors)
                            for (y = ["primary", "secondary", "background"], t = 0, g = y.length; g > t; t++) {
                                d = y[t], this.setColor(d, a.colors[d])
                            }
                        if (a.shapes)
                            for (this.shapes = [], S = a.shapes, r = 0, m = S.length; m > r; r++) {
                                k = S[r], x = b(k), x && this.execute(new w.AddShapeAction(this, x))
                            }
                        return a.backgroundShapes && (this.backgroundShapes = function() {
                            var t, r, s, l;
                            for (s = a.backgroundShapes, l = [], t = 0, r = s.length; r > t; t++) {
                                f = s[t], l.push(b(f))
                            }
                            return l
                        }()), a.imageSize && (this.width = a.imageSize.width, this.height = a.imageSize.height), a.position && (this.position = a.position), a.scale && (this.scale = a.scale), this.repaintAllLayers(), this.trigger("snapshotLoad"), this.trigger("drawingChange", {})
                    }
                }, e.prototype.loadSnapshotJSON = function(e) {
                    return console.warn("lc.loadSnapshotJSON() is deprecated. use lc.loadSnapshot(JSON.parse(snapshot)) instead."), this.loadSnapshot(JSON.parse(e))
                }, e
            }()
        }, {
            "../tools/Pencil": 48,
            "./actions": 7,
            "./bindEvents": 8,
            "./canvasRenderer": 9,
            "./math": 14,
            "./renderSnapshotToImage": 15,
            "./renderSnapshotToSVG": 16,
            "./shapes": 17,
            "./svgRenderer": 18,
            "./util": 19
        }],
        6: [function(a, t) {
            var e, p, d, c;
            a("./fontmetrics.js"), c = function(l) {
                var t, p, d, c, g, u, m, y;
                for (p = l.split(" "), d = 0, g = 0, u = p.length; u > g; g++) {
                    c = p[g], m = parseInt(c.replace("px", ""), 10), isNaN(m) || (d = m)
                }
                if (!d) throw "Font size not found";
                return y = l.substring(p[0].length + 1).replace("bold ", "").replace("italic ", "").replace("underline ", ""), t = y, {
                    fontSize: d,
                    fontFamily: t
                }
            }, d = function(d, t, e) {
                var n, g, m, y, S, f, x, k, b, C;
                if (!t.length) return ["", ""];
                for (g = 0, f = 0, x = 0, C = !1;;) {
                    if (g += 1, m = g >= t.length, S = !m && t[g].match(/\s/), y = S || m, b = t.substring(0, g), n = e ? d.measureTextWidth(b).width <= e : !0, n && (x = g), y && C && (C = !1, n && (f = g)), C = !S, m || !n) {
                        if (n) return [t, ""];
                        if (0 < f) {
                            for (k = f + 1; k < t.length && t[k].match("/s/");) {
                                k += 1
                            }
                            return [t.substring(0, f), t.substring(k)]
                        }
                        return [t.substring(0, x), t.substring(x)]
                    }
                }
            }, p = function(o, t, e) {
                var n, g, m, y, S, f, x, k, b;
                for (b = t.split(/\r\n|\r|\n/g), m = [], n = 0, g = b.length; g > n; n++) {
                    if (k = b[n], S = d(o, k, e), y = S[0], x = S[1], y)
                        for (; y;) {
                            m.push(y), f = d(o, x, e), y = f[0], x = f[1]
                        } else m.push(k)
                }
                return m
            }, e = function() {
                function e(r, t, e, n, i) {
                    var o, s, d;
                    this.text = t, this.font = e, this.forcedWidth = n, this.forcedHeight = i, d = c(this.font), o = d.fontFamily, s = d.fontSize, r.font = this.font, r.textBaseline = "baseline", this.emDashWidth = r.measureTextWidth("\u2014", s, o).width, this.caratWidth = r.measureTextWidth("|", s, o).width, this.lines = p(r, this.text, this.forcedWidth), this.metricses = this.lines.map(function(t) {
                        return function(e) {
                            return r.measureText2(e || "X", s, t.font)
                        }
                    }(this)), this.metrics = {
                        ascent: Math.max.apply(Math, this.metricses.map(function(o) {
                            var t;
                            return t = o.ascent
                        })),
                        descent: Math.max.apply(Math, this.metricses.map(function(o) {
                            var t;
                            return t = o.descent
                        })),
                        fontsize: Math.max.apply(Math, this.metricses.map(function(o) {
                            var t;
                            return t = o.fontsize
                        })),
                        leading: Math.max.apply(Math, this.metricses.map(function(o) {
                            var t;
                            return t = o.leading
                        })),
                        width: Math.max.apply(Math, this.metricses.map(function(o) {
                            var t;
                            return t = o.width
                        })),
                        height: Math.max.apply(Math, this.metricses.map(function(o) {
                            var t;
                            return t = o.height
                        })),
                        bounds: {
                            minx: Math.min.apply(Math, this.metricses.map(function(o) {
                                var t;
                                return t = o.bounds, t.minx
                            })),
                            miny: Math.min.apply(Math, this.metricses.map(function(o) {
                                var t;
                                return t = o.bounds, t.miny
                            })),
                            maxx: Math.max.apply(Math, this.metricses.map(function(o) {
                                var t;
                                return t = o.bounds, t.maxx
                            })),
                            maxy: Math.max.apply(Math, this.metricses.map(function(o) {
                                var t;
                                return t = o.bounds, t.maxy
                            }))
                        }
                    }, this.boundingBoxWidth = Math.ceil(this.metrics.width)
                }
                return e.prototype.draw = function(l, t, e) {
                    var n, p, d, c, g, u;
                    for (l.textBaseline = "top", l.font = this.font, n = 0, g = this.lines, u = [], p = 0, d = g.length; d > p; p++) {
                        c = g[p], l.fillText(c, t, e + n * this.metrics.leading), u.push(n += 1)
                    }
                    return u
                }, e.prototype.getWidth = function(e) {
                    return null == e && (e = !1), this.forcedWidth ? this.forcedWidth : e ? this.metrics.bounds.maxx + this.caratWidth : this.metrics.bounds.maxx
                }, e.prototype.getHeight = function() {
                    return this.forcedHeight || this.metrics.leading * this.lines.length
                }, e
            }(), t.exports = e
        }, {
            "./fontmetrics.js": 11
        }],
        7: [function(o, t) {
            var e, a;
            a = function() {
                function e(o, t, e) {
                    this.lc = o, this.oldShapes = t, this.newShapes = e
                }
                return e.prototype["do"] = function() {
                    return this.lc.shapes = this.newShapes, this.lc.repaintLayer("main")
                }, e.prototype.undo = function() {
                    return this.lc.shapes = this.oldShapes, this.lc.repaintLayer("main")
                }, e
            }(), e = function() {
                function e(o, t, e) {
                    this.lc = o, this.shape = t, this.previousShapeId = null != e ? e : null
                }
                return e.prototype["do"] = function() {
                    var a, s, l, p, d, c;
                    if (this.lc.shapes.length && this.lc.shapes[this.lc.shapes.length - 1].id !== this.previousShapeId && null !== this.previousShapeId) {
                        for (p = [], a = !1, d = this.lc.shapes, s = 0, l = d.length; l > s; s++) {
                            c = d[s], p.push(c), c.id === this.previousShapeId && (p.push(this.shape), a = !0)
                        }
                        a || p.push(this.shape), this.lc.shapes = p
                    } else this.lc.shapes.push(this.shape);
                    return this.lc.repaintLayer("main")
                }, e.prototype.undo = function() {
                    var o, a, s, l, p;
                    if (this.lc.shapes[this.lc.shapes.length - 1].id === this.shape.id) this.lc.shapes.pop();
                    else {
                        for (s = [], l = this.lc.shapes, o = 0, a = l.length; a > o; o++) {
                            p = l[o], p.id !== this.shape.id && s.push(p)
                        }
                        lc.shapes = s
                    }
                    return this.lc.repaintLayer("main")
                }, e
            }(), t.exports = {
                ClearAction: a,
                AddShapeAction: e
            }
        }, {}],
        8: [function(a, t) {
            var e, n, p, l;
            p = function(o, t) {
                var e, a, s;
                return a = t.changedTouches[0].clientX, s = t.changedTouches[0].clientY, e = o.getBoundingClientRect(), [a - e.left, s - e.top]
            }, l = function(o, t) {
                var e;
                return e = o.getBoundingClientRect(), {
                    left: t.clientX - e.left,
                    top: t.clientY - e.top
                }
            }, n = function(e) {
                return null != e.buttons ? 1 === e.buttons : 0 < e.which
            }, t.exports = e = function(s, t, e) {
                var o, d, h, g, u, m;
                return null == e && (e = !1), m = [], d = function() {
                        return function(e) {
                            var o;
                            return e.preventDefault(), o = l(t, e), s.pointerMove(o.left, o.top)
                        }
                    }(this), h = function() {
                        return function(e) {
                            var o;
                            return e.preventDefault(), t.onselectstart = function() {
                                return !0
                            }, o = l(t, e), s.pointerUp(o.left, o.top), document.removeEventListener("mousemove", d), document.removeEventListener("mouseup", h), t.addEventListener("mousemove", d)
                        }
                    }(this), t.addEventListener("mousedown", function() {
                        return function(e) {
                            var a, n;
                            if ("canvas" === e.target.tagName.toLowerCase()) return a = !0, e.preventDefault(), t.onselectstart = function() {
                                return !1
                            }, n = l(t, e), s.pointerDown(n.left, n.top), t.removeEventListener("mousemove", d), document.addEventListener("mousemove", d), document.addEventListener("mouseup", h)
                        }
                    }(this)), u = function(e) {
                        return e.preventDefault(), s.pointerMove.apply(s, p(t, e))
                    }, g = function h(e) {
                        return e.preventDefault(), s.pointerUp.apply(s, p(t, e)), document.removeEventListener("touchmove", u), document.removeEventListener("touchend", g), document.removeEventListener("touchcancel", g)
                    }, t.addEventListener("touchstart", function(e) {
                        return "canvas" === e.target.tagName.toLowerCase() ? (e.preventDefault(), 1 === e.touches.length ? (s.pointerDown.apply(s, p(t, e)), document.addEventListener("touchmove", u), document.addEventListener("touchend", g), document.addEventListener("touchcancel", g)) : s.pointerMove.apply(s, p(t, e))) : void 0
                    }), e && (console.warn("Keyboard panning is deprecated."), o = function(t) {
                        switch (t.keyCode) {
                            case 37:
                                s.pan(-10, 0);
                                break;
                            case 38:
                                s.pan(0, -10);
                                break;
                            case 39:
                                s.pan(10, 0);
                                break;
                            case 40:
                                s.pan(0, 10);
                        }
                        return s.repaintAllLayers()
                    }, document.addEventListener("keydown", o), m.push(function() {
                        return document.removeEventListener(o)
                    })),
                    function() {
                        var o, a, r, s;
                        for (s = [], a = 0, r = m.length; r > a; a++) {
                            o = m[a], s.push(o())
                        }
                        return s
                    }
            }
        }, {}],
        9: [function(n, t) {
            var g, e, m, y, S, f, x, k, b, C, w;
            x = n("./lineEndCapShapes"), w = {}, e = function(o, t, e) {
                return w[o] = {
                    drawFunc: t,
                    drawLatestFunc: e
                }
            }, k = function() {}, C = function(o, t, e) {
                var a;
                if (null == e && (e = {}), null == e.shouldIgnoreUnsupportedShapes && (e.shouldIgnoreUnsupportedShapes = !1), null == e.retryCallback && (e.retryCallback = k), null == e.shouldOnlyDrawLatest && (e.shouldOnlyDrawLatest = !1), null == e.bufferCtx && (e.bufferCtx = null), a = e.bufferCtx, w[t.className]) return e.shouldOnlyDrawLatest && w[t.className].drawLatestFunc ? w[t.className].drawLatestFunc(o, a, t, e.retryCallback) : w[t.className].drawFunc(o, t, e.retryCallback);
                if (e.shouldIgnoreUnsupportedShapes) return console.warn("Can't render shape of type " + t.className + " to canvas");
                throw "Can't render shape of type " + t.className + " to canvas"
            }, b = function(o, t, e) {
                return C(o.getContext("2d"), t, e)
            }, e("Rectangle", function(o, t) {
                var e, a;
                return e = t.x, a = t.y, 0 != t.strokeWidth % 2 && (e += .5, a += .5), o.fillStyle = t.fillColor, o.fillRect(e, a, t.width, t.height), o.lineWidth = t.strokeWidth, o.strokeStyle = t.strokeColor, o.strokeRect(e, a, t.width, t.height)
            }), e("Ellipse", function(a, t) {
                var e, s, l, p;
                return a.save(), p = Math.floor(t.width / 2), l = Math.floor(t.height / 2), e = t.x + p, s = t.y + l, a.translate(e, s), a.scale(1, Math.abs(t.height / t.width)), a.beginPath(), a.arc(0, 0, Math.abs(p), 0, 2 * Math.PI), a.closePath(), a.restore(), a.fillStyle = t.fillColor, a.fill(), a.lineWidth = t.strokeWidth, a.strokeStyle = t.strokeColor, a.stroke()
            }), e("SelectionBox", function() {
                var o;
                return o = function(t, o, e) {
                        var a, n;
                        return a = o.x, n = o.y, 0 !== e ? (t.fillStyle = "#fff", t.fillRect(a, n, e, e), t.strokeStyle = "#000", t.strokeRect(a, n, e, e)) : void 0
                    },
                    function(t, e) {
                        return o(t, e.getTopLeftHandleRect(), e.handleSize), o(t, e.getTopRightHandleRect(), e.handleSize), o(t, e.getBottomLeftHandleRect(), e.handleSize), o(t, e.getBottomRightHandleRect(), e.handleSize), e.backgroundColor && (t.fillStyle = e.backgroundColor, t.fillRect(e._br.x - e.margin, e._br.y - e.margin, e._br.width + 2 * e.margin, e._br.height + 2 * e.margin)), t.lineWidth = 1, t.strokeStyle = "#000", t.setLineDash([2, 4]), t.strokeRect(e._br.x - e.margin, e._br.y - e.margin, e._br.width + 2 * e.margin, e._br.height + 2 * e.margin), t.setLineDash([])
                    }
            }()), e("Image", function(o, t, e) {
                return t.image.width ? 1 === t.scale ? o.drawImage(t.image, t.x, t.y) : o.drawImage(t.image, t.x, t.y, t.image.width * t.scale, t.image.height * t.scale) : e ? t.image.onload = e : void 0
            }), e("Line", function(a, t) {
                var e, l, p, d, c;
                if (t.x1 !== t.x2 || t.y1 !== t.y2) return l = t.x1, p = t.x2, d = t.y1, c = t.y2, 0 != t.strokeWidth % 2 && (l += .5, p += .5, d += .5, c += .5), a.lineWidth = t.strokeWidth, a.strokeStyle = t.color, a.lineCap = t.capStyle, t.dash && a.setLineDash(t.dash), a.beginPath(), a.moveTo(l, d), a.lineTo(p, c), a.stroke(), t.dash && a.setLineDash([]), e = Math.max(2.2 * t.strokeWidth, 5), t.endCapShapes[0] && x[t.endCapShapes[0]].drawToCanvas(a, l, d, Math.atan2(d - c, l - p), e, t.color), t.endCapShapes[1] ? x[t.endCapShapes[1]].drawToCanvas(a, p, c, Math.atan2(c - d, p - l), e, t.color) : void 0
            }), g = function(i, t, e, l) {
                var p, d, c, h;
                if (null == e && (e = !1), null == l && (l = "round"), t.length) {
                    for (i.lineCap = l, i.strokeStyle = t[0].color, i.lineWidth = t[0].size, i.beginPath(), 0 == t[0].size % 2 ? i.moveTo(t[0].x, t[0].y) : i.moveTo(t[0].x + .5, t[0].y + .5), h = t.slice(1), p = 0, d = h.length; d > p; p++) {
                        c = h[p], 0 == t[0].size % 2 ? i.lineTo(c.x, c.y) : i.lineTo(c.x + .5, c.y + .5)
                    }
                    return e ? i.closePath() : void 0
                }
            }, S = function(o, t) {
                return g(o, t.smoothedPoints), o.stroke()
            }, f = function(a, t, e) {
                var n, i, l;
                return e.tail ? (l = e.smoothedPoints.length - e.segmentSize * e.tailSize, i = l < 2 * e.segmentSize ? 0 : l, n = l + e.segmentSize + 1, g(t, e.smoothedPoints.slice(i, n)), t.stroke()) : (g(t, e.smoothedPoints), t.stroke())
            }, e("LinePath", S, f), m = function(o, t) {
                return o.save(), o.globalCompositeOperation = "destination-out", S(o, t), o.restore()
            }, y = function(o, t, e) {
                return o.save(), o.globalCompositeOperation = "destination-out", t.save(), t.globalCompositeOperation = "destination-out", f(o, t, e), o.restore(), t.restore()
            }, e("ErasedLinePath", m, y), e("Text", function(o, t) {
                return t.renderer || t._makeRenderer(o), o.fillStyle = t.color, t.renderer.draw(o, t.x, t.y)
            }), e("Polygon", function(o, t) {
                return o.fillStyle = t.fillColor, g(o, t.points, t.isClosed, "butt"), o.fill(), o.stroke()
            }), t.exports = {
                defineCanvasRenderer: e,
                renderShapeToCanvas: b,
                renderShapeToContext: C
            }
        }, {
            "./lineEndCapShapes": 12
        }],
        10: [function(o, t) {
            "use strict";
            t.exports = {
                imageURLPrefix: "lib/img",
                primaryColor: "hsla(0, 0%, 0%, 1)",
                secondaryColor: "hsla(0, 0%, 100%, 1)",
                backgroundColor: "transparent",
                strokeWidths: [1, 2, 5, 10, 20, 30],
                defaultStrokeWidth: 5,
                toolbarPosition: "top",
                keyboardShortcuts: !1,
                imageSize: {
                    width: "infinite",
                    height: "infinite"
                },
                backgroundShapes: [],
                watermarkImage: null,
                watermarkScale: 1,
                zoomMin: .2,
                zoomMax: 4,
                zoomStep: .2,
                snapshot: null,
                onInit: function onInit() {},
                tools: [o("../tools/Pencil"), o("../tools/Eraser"), o("../tools/Line"), o("../tools/Rectangle"), o("../tools/Ellipse"), o("../tools/Text"), o("../tools/Polygon"), o("../tools/Pan"), o("../tools/Eyedropper")]
            }
        }, {
            "../tools/Ellipse": 43,
            "../tools/Eraser": 44,
            "../tools/Eyedropper": 45,
            "../tools/Line": 46,
            "../tools/Pan": 47,
            "../tools/Pencil": 48,
            "../tools/Polygon": 49,
            "../tools/Rectangle": 50,
            "../tools/Text": 52
        }],
        11: [function() {
            "use strict";
            ! function() {
                if (!document.defaultView.getComputedStyle) throw "ERROR: 'document.defaultView.getComputedStyle' not found. This library only works in browsers that can report computed CSS values.";
                CanvasRenderingContext2D.prototype.measureTextWidth = CanvasRenderingContext2D.prototype.measureText;
                var l = function(t, o) {
                    return document.defaultView.getComputedStyle(t, null).getPropertyValue(o)
                };
                CanvasRenderingContext2D.prototype.measureText2 = function(t, e, n) {
                    var i = this.measureTextWidth(t),
                        r = !/\S/.test(t);
                    i.fontsize = e;
                    var o = document.createElement("div");
                    o.style.position = "absolute", o.style.opacity = 0, o.style.font = n, o.innerHTML = t + "<br/>" + t, document.body.appendChild(o), i.leading = 1.2 * e;
                    var s = l(o, "height");
                    if (s = s.replace("px", ""), s >= 2 * e && (i.leading = 0 | s / 2), document.body.removeChild(o), r) i.ascent = 0, i.descent = 0, i.bounds = {
                        minx: 0,
                        maxx: i.width,
                        miny: 0,
                        maxy: 0
                    }, i.height = 0;
                    else {
                        var b = document.createElement("canvas");
                        b.width = i.width + 100, b.height = 3 * e, b.style.opacity = 1, b.style.font = n;
                        var h = b.getContext("2d");
                        h.font = n;
                        var c = b.width,
                            u = b.height,
                            p = u / 2;
                        h.fillStyle = "white", h.fillRect(-1, -1, c + 2, u + 2), h.fillStyle = "black", h.fillText(t, 50, p);
                        for (var d = h.getImageData(0, 0, c, u).data, f = 0, C = 4 * c, m = d.length; ++f < m && 255 === d[f];) {}
                        var y = 0 | f / C;
                        for (f = m - 1; 0 < --f && 255 === d[f];) {}
                        var S = 0 | f / C;
                        for (f = 0; m > f && 255 === d[f];) {
                            f += C, f >= m && (f = f - m + 4)
                        }
                        var v = 0 | f % C / 4,
                            x = 1;
                        for (f = m - 3; 0 <= f && 255 === d[f];) {
                            f -= C, 0 > f && (f = m - 3 - 4 * x++)
                        }
                        var P = 0 | f % C / 4 + 1;
                        i.ascent = p - y, i.descent = S - p, i.bounds = {
                            minx: v - 50,
                            maxx: P - 50,
                            miny: 0,
                            maxy: S - y
                        }, i.height = 1 + (S - y)
                    }
                    return i
                }
            }()
        }, {}],
        12: [function(o, t) {
            t.exports = {
                arrow: function() {
                    var l;
                    return l = function(t, o, e, a, n) {
                        return [{
                            x: t + Math.cos(e + Math.PI / 2) * a / 2,
                            y: o + Math.sin(e + Math.PI / 2) * a / 2
                        }, {
                            x: t + Math.cos(e) * n,
                            y: o + Math.sin(e) * n
                        }, {
                            x: t + Math.cos(e - Math.PI / 2) * a / 2,
                            y: o + Math.sin(e - Math.PI / 2) * a / 2
                        }]
                    }, {
                        drawToCanvas: function drawToCanvas(t, e, n, i, r, o, s) {
                            var p;
                            return null == s && (s = 0), s = s || r, t.fillStyle = o, t.lineWidth = 0, t.strokeStyle = "transparent", t.beginPath(), p = l(e, n, i, r, s), t.moveTo(p[0].x, p[0].y), t.lineTo(p[1].x, p[1].y), t.lineTo(p[2].x, p[2].y), t.fill()
                        },
                        svg: function svg(t, e, n, i, r, o) {
                            var p;
                            return null == o && (o = 0), o = o || i, p = l(t, e, n, i, o), "<polygon fill='" + r + "' stroke='none' points='" + p.map(function(e) {
                                return e.x + "," + e.y
                            }) + "' />"
                        }
                    }
                }()
            }
        }, {}],
        13: [function(a, t) {
            var e, n, s;
            s = {}, n = function(e) {
                return s = e
            }, e = function(o) {
                var t;
                return t = s[o], t || o
            }, t.exports = {
                localize: n,
                _: e
            }
        }, {}],
        14: [function(n, t) {
            var e, r, l, p, d, c;
            e = n("./shapes").Point, c = n("./util"), l = {}, l.toPoly = function(s) {
                var t, d, c, g, u, m, y;
                for (m = [], y = [], d = 0, t = 0, c = s.length; c > t; t++) {
                    u = s[t], g = p(u, r(s, d)), m = m.concat([g[0]]), y = [g[1]].concat(y), d += 1
                }
                return m.concat(y)
            }, r = function r(o, t) {
                var e;
                return 3 > o.length && (e = {
                    x: 0,
                    y: 0
                }), e = 0 === t ? r(o, t + 1) : t === o.length - 1 ? r(o, t - 1) : l.diff(o[t - 1], o[t + 1])
            }, l.diff = function(o, t) {
                return {
                    x: t.x - o.x,
                    y: t.y - o.y
                }
            }, d = function(o) {
                var t;
                return t = l.len(o), {
                    x: o.x / t,
                    y: o.y / t
                }
            }, p = function(o, t) {
                return t = d(t), t.x = t.x * o.size / 2, t.y = t.y * o.size / 2, [{
                    x: o.x - t.y,
                    y: o.y + t.x,
                    color: o.color
                }, {
                    x: o.x + t.y,
                    y: o.y - t.x,
                    color: o.color
                }]
            }, l.len = function(e) {
                return Math.sqrt(Math.pow(e.x, 2) + Math.pow(e.y, 2))
            }, l.scalePositionScalar = function(a, t, e, n) {
                var i, s;
                return s = t * e, i = t * n, a + (s - i) / 2
            }, t.exports = l
        }, {
            "./shapes": 17,
            "./util": 19
        }],
        15: [function(a, t) {
            var g, n, m, y;
            y = a("./util"), n = a("./shapes").JSONToShape, g = "infinite", m = function(o, t, e) {
                return t.width ? (o.save(), o.translate(o.canvas.width / 2, o.canvas.height / 2), o.scale(e, e), o.drawImage(t, -t.width / 2, -t.height / 2), o.restore()) : void 0
            }, t.exports = function(r, t) {
                var o, i, s, S, f, x, k, b;
                return null == t && (t = {}), null == t.scale && (t.scale = 1), x = function() {
                    var t, a, s, l;
                    for (s = r.shapes, l = [], t = 0, a = s.length; a > t; t++) {
                        f = s[t], l.push(n(f))
                    }
                    return l
                }(), i = [], r.backgroundShapes && (i = function() {
                    var t, a, s, l;
                    for (s = r.backgroundShapes, l = [], t = 0, a = s.length; a > t; t++) {
                        f = s[t], l.push(n(f))
                    }
                    return l
                }()), null == t.margin && (t.margin = {
                    top: 0,
                    right: 0,
                    bottom: 0,
                    left: 0
                }), S = r.imageSize || {
                    width: g,
                    height: g
                }, s = r.colors || {
                    background: "transparent"
                }, o = x.concat(i), k = document.createElement("canvas"), b = k.getContext("2d"), t.rect ? (t.rect.x -= t.margin.left, t.rect.y -= t.margin.top, t.rect.width += t.margin.left + t.margin.right, t.rect.height += t.margin.top + t.margin.bottom) : t.rect = y.getDefaultImageRect(function() {
                    var a, n, r;
                    for (r = [], a = 0, n = o.length; n > a; a++) {
                        f = o[a], r.push(f.getBoundingRect(b))
                    }
                    return r
                }(), S, t.margin), k.width = t.rect.width * t.scale, k.height = t.rect.height * t.scale, b.fillStyle = s.background, b.fillRect(0, 0, k.width, k.height), t.rect.width && t.rect.height ? (t.watermarkImage && m(b, t.watermarkImage, t.watermarkScale), y.combineCanvases(k, y.renderShapes(i, t.rect, t.scale), y.renderShapes(x, t.rect, t.scale))) : null
            }
        }, {
            "./shapes": 17,
            "./util": 19
        }],
        16: [function(a, t) {
            var d, n, g;
            g = a("./util"), n = a("./shapes").JSONToShape, d = "infinite", t.exports = function(r, t) {
                var o, i, m, y, S, f, x, k;
                return null == t && (t = {}), k = function() {
                    var t, a, s, l;
                    for (s = r.shapes, l = [], t = 0, a = s.length; a > t; t++) {
                        x = s[t], l.push(n(x))
                    }
                    return l
                }(), i = [], r.backgroundShapes && (i = function() {
                    var t, a, s, l;
                    for (s = r.backgroundShapes, l = [], t = 0, a = s.length; a > t; t++) {
                        x = s[t], l.push(n(x))
                    }
                    return l
                }()), null == t.margin && (t.margin = {
                    top: 0,
                    right: 0,
                    bottom: 0,
                    left: 0
                }), f = r.imageSize || {
                    width: d,
                    height: d
                }, m = r.colors || {
                    background: "transparent"
                }, o = k.concat(i), S = document.createElement("canvas"), y = S.getContext("2d"), t.rect ? (t.rect.x -= t.margin.left, t.rect.y -= t.margin.top, t.rect.width += t.margin.left + t.margin.right, t.rect.height += t.margin.top + t.margin.bottom) : t.rect = g.getDefaultImageRect(function() {
                    var a, n, r;
                    for (r = [], a = 0, n = o.length; n > a; a++) {
                        x = o[a], r.push(x.getBoundingRect(y))
                    }
                    return r
                }(), f, t.margin), LC.renderShapesToSVG(i.concat(k), t.rect, m.background)
            }
        }, {
            "./shapes": 17,
            "./util": 19
        }],
        17: [function(n, t) {
            var u, e, P, R, _, E, I, T, L, z, O, N, W, B, D, U, A, M, F, G, H, J;
            J = n("./util"), P = n("./TextRenderer"), B = n("./lineEndCapShapes"), U = n("./canvasRenderer"), O = U.defineCanvasRenderer, M = U.renderShapeToContext, A = n("./svgRenderer"), N = A.defineSVGRenderer, F = A.renderShapeToSVG, H = {}, W = function(p, y) {
                var e, t, d, c, g, u, m, S;
                e = function(e, t, n, i, r, o, s, a, h, l, c, u, p, d, S, g) {
                    return y.constructor.call(this, e, t, n, i, r, o, s, a, h, l, c, u, p, d, S, g), this
                }, e.prototype.className = p, e.fromJSON = y.fromJSON, y.draw && (g = y.draw, u = y.draw || function(o, t, e) {
                    return this.draw(o, t, e)
                }, t = function(o, t, e) {
                    return g.call(t, o, e)
                }, d = function(o, t, e, a) {
                    return u.call(e, o, t, a)
                }, delete y.draw, y.drawLatest && delete y.drawLatest, O(p, t, d)), y.toSVG && (m = y.toSVG, S = function(e) {
                    return m.call(e)
                }, delete y.toSVG, N(p, S)), e.prototype.draw = function(o, t) {
                    return M(o, this, {
                        retryCallback: t
                    })
                }, e.prototype.drawLatest = function(o, t, e) {
                    return M(o, this, {
                        retryCallback: e,
                        bufferCtx: t,
                        shouldOnlyDrawLatest: !0
                    })
                }, e.prototype.toSVG = function() {
                    return F(this)
                };
                for (c in y) {
                    "fromJSON" !== c && (e.prototype[c] = y[c])
                }
                return H[p] = e, e
            }, z = function(p, t, e, n, i, r, o, s, a, h, l, c, u, S, d, f, g) {
                var m;
                return m = new H[p](t, e, n, i, r, o, s, a, h, l, c, u, S, d, f, g), m.id = J.getGUID(), m
            }, u = function(o) {
                var t, a, s, l;
                return t = o.className, a = o.data, s = o.id, t in H ? (l = H[t].fromJSON(a), l ? (s && (l.id = s), l) : (console.log("Unreadable shape:", t, a), null)) : (console.log("Unknown shape:", t, a), null)
            }, G = function(e) {
                return {
                    className: e.className,
                    data: e.toJSON(),
                    id: e.id
                }
            }, L = function u(o, t) {
                return t ? L(E(E(T(o))), t - 1) : o
            }, T = function(a) {
                var s, l, p, d, c;
                for (a = [a[0]].concat(a).concat(J.last(a)), c = [], s = 0, d = 0, l = a.length; l > d; d++) {
                    p = a[d], c[2 * s] = p, a[s + 1] && (c[2 * s + 1] = I(p, a[s + 1])), s += 1
                }
                return c
            }, E = function(a) {
                var t, s, l, p, d;
                for (t = [], s = 0, d = 0, l = a.length; l > d; d++) {
                    p = a[d], a[s + 1] && (t[s] = I(p, a[s + 1])), s += 1
                }
                return t
            }, I = function(o, t) {
                return z("Point", {
                    x: o.x + (t.x - o.x) / 2,
                    y: o.y + (t.y - o.y) / 2,
                    size: o.size + (t.size - o.size) / 2,
                    color: o.color
                })
            }, W("Image", {
                constructor: function constructor(e) {
                    return null == e && (e = {}), this.x = e.x || 0, this.y = e.y || 0, this.scale = e.scale || 1, this.image = e.image || null
                },
                getBoundingRect: function getBoundingRect() {
                    return {
                        x: this.x,
                        y: this.y,
                        width: this.image.width * this.scale,
                        height: this.image.height * this.scale
                    }
                },
                toJSON: function toJSON() {
                    return {
                        x: this.x,
                        y: this.y,
                        imageSrc: this.image.src,
                        imageObject: this.image,
                        scale: this.scale
                    }
                },
                fromJSON: function fromJSON(o) {
                    var t, a;
                    return t = null, (null != (a = o.imageObject) ? a.width : void 0) ? t = o.imageObject : (t = new Image, t.src = o.imageSrc), z("Image", {
                        x: o.x,
                        y: o.y,
                        image: t,
                        scale: o.scale
                    })
                },
                move: function move(e) {
                    return null == e && (e = {}), this.x = this.x - e.xDiff, this.y = this.y - e.yDiff
                },
                setUpperLeft: function setUpperLeft(e) {
                    return null == e && (e = {}), this.x = e.x, this.y = e.y
                }
            }), W("Rectangle", {
                constructor: function constructor(e) {
                    return null == e && (e = {}), this.x = e.x || 0, this.y = e.y || 0, this.width = e.width || 0, this.height = e.height || 0, this.strokeWidth = e.strokeWidth || 1, this.strokeColor = e.strokeColor || "black", this.fillColor = e.fillColor || "transparent"
                },
                getBoundingRect: function getBoundingRect() {
                    return {
                        x: this.x - this.strokeWidth / 2,
                        y: this.y - this.strokeWidth / 2,
                        width: this.width + this.strokeWidth,
                        height: this.height + this.strokeWidth
                    }
                },
                toJSON: function toJSON() {
                    return {
                        x: this.x,
                        y: this.y,
                        width: this.width,
                        height: this.height,
                        strokeWidth: this.strokeWidth,
                        strokeColor: this.strokeColor,
                        fillColor: this.fillColor
                    }
                },
                fromJSON: function fromJSON(e) {
                    return z("Rectangle", e)
                },
                move: function move(e) {
                    return null == e && (e = {}), this.x = this.x - e.xDiff, this.y = this.y - e.yDiff
                },
                setUpperLeft: function setUpperLeft(e) {
                    return null == e && (e = {}), this.x = e.x, this.y = e.y
                }
            }), W("Ellipse", {
                constructor: function constructor(e) {
                    return null == e && (e = {}), this.x = e.x || 0, this.y = e.y || 0, this.width = e.width || 0, this.height = e.height || 0, this.strokeWidth = e.strokeWidth || 1, this.strokeColor = e.strokeColor || "black", this.fillColor = e.fillColor || "transparent"
                },
                getBoundingRect: function getBoundingRect() {
                    return {
                        x: this.x - this.strokeWidth / 2,
                        y: this.y - this.strokeWidth / 2,
                        width: this.width + this.strokeWidth,
                        height: this.height + this.strokeWidth
                    }
                },
                toJSON: function toJSON() {
                    return {
                        x: this.x,
                        y: this.y,
                        width: this.width,
                        height: this.height,
                        strokeWidth: this.strokeWidth,
                        strokeColor: this.strokeColor,
                        fillColor: this.fillColor
                    }
                },
                fromJSON: function fromJSON(e) {
                    return z("Ellipse", e)
                },
                move: function move(e) {
                    return null == e && (e = {}), this.x = this.x - e.xDiff, this.y = this.y - e.yDiff
                },
                setUpperLeft: function setUpperLeft(e) {
                    return null == e && (e = {}), this.x = e.x, this.y = e.y
                }
            }), W("Line", {
                constructor: function constructor(e) {
                    return null == e && (e = {}), this.x1 = e.x1 || 0, this.y1 = e.y1 || 0, this.x2 = e.x2 || 0, this.y2 = e.y2 || 0, this.strokeWidth = e.strokeWidth || 1, this.color = e.color || "black", this.capStyle = e.capStyle || "round", this.endCapShapes = e.endCapShapes || [null, null], this.dash = e.dash || null
                },
                getBoundingRect: function getBoundingRect() {
                    return {
                        x: Math.min(this.x1, this.x2) - this.strokeWidth / 2,
                        y: Math.min(this.y1, this.y2) - this.strokeWidth / 2,
                        width: Math.abs(this.x2 - this.x1) + this.strokeWidth / 2,
                        height: Math.abs(this.y2 - this.y1) + this.strokeWidth / 2
                    }
                },
                toJSON: function toJSON() {
                    return {
                        x1: this.x1,
                        y1: this.y1,
                        x2: this.x2,
                        y2: this.y2,
                        strokeWidth: this.strokeWidth,
                        color: this.color,
                        capStyle: this.capStyle,
                        dash: this.dash,
                        endCapShapes: this.endCapShapes
                    }
                },
                fromJSON: function fromJSON(e) {
                    return z("Line", e)
                },
                move: function move(e) {
                    return null == e && (e = {}), this.x1 = this.x1 - e.xDiff, this.y1 = this.y1 - e.yDiff, this.x2 = this.x2 - e.xDiff, this.y2 = this.y2 - e.yDiff
                },
                setUpperLeft: function setUpperLeft(o) {
                    var a, r, s;
                    return null == o && (o = {}), a = this.getBoundingRect(), r = a.x - o.x, s = a.y - o.y, this.move({
                        xDiff: r,
                        yDiff: s
                    })
                }
            }), _ = function(a) {
                var t, s, l, p, d;
                if (!a.length) return !1;
                for (d = a[0].size, t = a[0].color, p = 0, s = a.length; s > p; p++) {
                    if (l = a[p], l.size === d && l.color === t || console.log(d, t, l.size, l.color), l.size !== d || l.color !== t) return !1
                }
                return !0
            }, R = function(i, l) {
                var e, t, p, d, c;
                return t = null, l.points ? t = function() {
                    var a, n, i, p;
                    for (i = l.points, p = [], n = 0, a = i.length; a > n; n++) {
                        e = i[n], p.push(u(e))
                    }
                    return p
                }() : l.pointCoordinatePairs && (t = function() {
                    var e, a, i, s, p;
                    for (i = l.pointCoordinatePairs, p = [], a = 0, e = i.length; e > a; a++) {
                        s = i[a], d = s[0], c = s[1], p.push(u({
                            className: "Point",
                            data: {
                                x: d,
                                y: c,
                                size: l.pointSize,
                                color: l.pointColor,
                                smooth: l.smooth
                            }
                        }))
                    }
                    return p
                }()), p = null, l.smoothedPointCoordinatePairs && (p = function() {
                    var e, a, i, s, p;
                    for (i = l.smoothedPointCoordinatePairs, p = [], a = 0, e = i.length; e > a; a++) {
                        s = i[a], d = s[0], c = s[1], p.push(u({
                            className: "Point",
                            data: {
                                x: d,
                                y: c,
                                size: l.pointSize,
                                color: l.pointColor,
                                smooth: l.smooth
                            }
                        }))
                    }
                    return p
                }()), t[0] ? z(i, {
                    points: t,
                    smoothedPoints: p,
                    order: l.order,
                    tailSize: l.tailSize,
                    smooth: l.smooth
                }) : null
            }, D = {
                constructor: function constructor(a) {
                    var s, l, p, d, c;
                    if (null == a && (a = {}), p = a.points || [], this.order = a.order || 3, this.tailSize = a.tailSize || 3, this.smooth = "smooth" in a ? a.smooth : !0, this.segmentSize = Math.pow(2, this.order), this.sampleSize = this.tailSize + 1, a.smoothedPoints) return this.points = a.points, this.smoothedPoints = a.smoothedPoints;
                    for (this.points = [], c = [], d = 0, s = p.length; s > d; d++) {
                        l = p[d], c.push(this.addPoint(l))
                    }
                    return c
                },
                getBoundingRect: function getBoundingRect() {
                    return J.getBoundingRect(this.points.map(function(e) {
                        return {
                            x: e.x - e.size / 2,
                            y: e.y - e.size / 2,
                            width: e.size,
                            height: e.size
                        }
                    }))
                },
                toJSON: function toJSON() {
                    var o, a;
                    return _(this.points) ? {
                        order: this.order,
                        tailSize: this.tailSize,
                        smooth: this.smooth,
                        pointCoordinatePairs: function() {
                            var e, o, s, l;
                            for (s = this.points, l = [], o = 0, e = s.length; e > o; o++) {
                                a = s[o], l.push([a.x, a.y])
                            }
                            return l
                        }.call(this),
                        smoothedPointCoordinatePairs: function() {
                            var e, o, s, l;
                            for (s = this.smoothedPoints, l = [], o = 0, e = s.length; e > o; o++) {
                                a = s[o], l.push([a.x, a.y])
                            }
                            return l
                        }.call(this),
                        pointSize: this.points[0].size,
                        pointColor: this.points[0].color
                    } : {
                        order: this.order,
                        tailSize: this.tailSize,
                        smooth: this.smooth,
                        points: function() {
                            var t, a, s, l;
                            for (s = this.points, l = [], a = 0, t = s.length; t > a; a++) {
                                o = s[a], l.push(G(o))
                            }
                            return l
                        }.call(this)
                    }
                },
                fromJSON: function fromJSON(e) {
                    return R("LinePath", e)
                },
                addPoint: function addPoint(e) {
                    return this.points.push(e), this.smooth ? !this.smoothedPoints || this.points.length < this.sampleSize ? this.smoothedPoints = L(this.points, this.order) : (this.tail = J.last(L(J.last(this.points, this.sampleSize), this.order), this.segmentSize * this.tailSize), this.smoothedPoints = this.smoothedPoints.slice(0, this.smoothedPoints.length - this.segmentSize * (this.tailSize - 1)).concat(this.tail)) : void(this.smoothedPoints = this.points)
                },
                move: function move(o) {
                    var a, s, l, p;
                    for (null == o && (o = {}), l = this.smooth ? this.smoothedPoints : this.points, p = 0, a = l.length; a > p; p++) {
                        s = l[p], s.move(o)
                    }
                    return this.points = this.smoothedPoints
                },
                setUpperLeft: function setUpperLeft(o) {
                    var a, r, s;
                    return null == o && (o = {}), a = this.getBoundingRect(), r = a.x - o.x, s = a.y - o.y, this.move({
                        xDiff: r,
                        yDiff: s
                    })
                }
            }, e = W("LinePath", D), W("ErasedLinePath", {
                constructor: D.constructor,
                toJSON: D.toJSON,
                addPoint: D.addPoint,
                getBoundingRect: D.getBoundingRect,
                fromJSON: function fromJSON(e) {
                    return R("ErasedLinePath", e)
                }
            }), W("Point", {
                constructor: function constructor(e) {
                    return null == e && (e = {}), this.x = e.x || 0, this.y = e.y || 0, this.size = e.size || 0, this.color = e.color || ""
                },
                getBoundingRect: function getBoundingRect() {
                    return {
                        x: this.x - this.size / 2,
                        y: this.y - this.size / 2,
                        width: this.size,
                        height: this.size
                    }
                },
                toJSON: function toJSON() {
                    return {
                        x: this.x,
                        y: this.y,
                        size: this.size,
                        color: this.color
                    }
                },
                fromJSON: function fromJSON(e) {
                    return z("Point", e)
                },
                move: function move(e) {
                    return null == e && (e = {}), this.x = this.x - e.xDiff, this.y = this.y - e.yDiff
                },
                setUpperLeft: function setUpperLeft(e) {
                    return null == e && (e = {}), this.x = e.x, this.y = e.y
                }
            }), W("Polygon", {
                constructor: function constructor(a) {
                    var s, l, p, d, c;
                    for (null == a && (a = {}), this.points = a.points, this.fillColor = a.fillColor || "white", this.strokeColor = a.strokeColor || "black", this.strokeWidth = a.strokeWidth, this.dash = a.dash || null, null == a.isClosed && (a.isClosed = !0), this.isClosed = a.isClosed, d = this.points, c = [], p = 0, s = d.length; s > p; p++) {
                        l = d[p], l.color = this.strokeColor, c.push(l.size = this.strokeWidth)
                    }
                    return c
                },
                addPoint: function addPoint(o, t) {
                    return this.points.push(LC.createShape("Point", {
                        x: o,
                        y: t
                    }))
                },
                getBoundingRect: function getBoundingRect() {
                    return J.getBoundingRect(this.points.map(function(e) {
                        return e.getBoundingRect()
                    }))
                },
                toJSON: function toJSON() {
                    return {
                        strokeWidth: this.strokeWidth,
                        fillColor: this.fillColor,
                        strokeColor: this.strokeColor,
                        dash: this.dash,
                        isClosed: this.isClosed,
                        pointCoordinatePairs: this.points.map(function(e) {
                            return [e.x, e.y]
                        })
                    }
                },
                fromJSON: function fromJSON(o) {
                    return o.points = o.pointCoordinatePairs.map(function(t) {
                        var e, a;
                        return e = t[0], a = t[1], z("Point", {
                            x: e,
                            y: a,
                            size: o.strokeWidth,
                            color: o.strokeColor
                        })
                    }), z("Polygon", o)
                },
                move: function move(a) {
                    var s, l, p, d, c;
                    for (null == a && (a = {}), d = this.points, c = [], p = 0, s = d.length; s > p; p++) {
                        l = d[p], c.push(l.move(a))
                    }
                    return c
                },
                setUpperLeft: function setUpperLeft(o) {
                    var a, r, s;
                    return null == o && (o = {}), a = this.getBoundingRect(), r = a.x - o.x, s = a.y - o.y, this.move({
                        xDiff: r,
                        yDiff: s
                    })
                }
            }), W("Text", {
                constructor: function constructor(e) {
                    return null == e && (e = {}), this.x = e.x || 0, this.y = e.y || 0, this.v = e.v || 0, this.text = e.text || "", this.color = e.color || "black", this.font = e.font || "18px sans-serif", this.forcedWidth = e.forcedWidth || null, this.forcedHeight = e.forcedHeight || null
                },
                _makeRenderer: function _makeRenderer(e) {
                    return e.lineHeight = 1.2, this.renderer = new P(e, this.text, this.font, this.forcedWidth, this.forcedHeight), 1 > this.v ? (console.log("repairing baseline"), this.v = 1, this.x -= this.renderer.metrics.bounds.minx, this.y -= this.renderer.metrics.leading - this.renderer.metrics.descent) : void 0
                },
                setText: function setText(e) {
                    return this.text = e, this.renderer = null
                },
                setFont: function setFont(e) {
                    return this.font = e, this.renderer = null
                },
                setPosition: function setPosition(o, t) {
                    return this.x = o, this.y = t
                },
                setSize: function setSize(o, t) {
                    return this.forcedWidth = Math.max(o, 0), this.forcedHeight = Math.max(t, 0), this.renderer = null
                },
                enforceMaxBoundingRect: function enforceMaxBoundingRect(o) {
                    var t, a, r;
                    return t = this.getBoundingRect(o.ctx), r = {
                        x: -o.position.x / o.scale,
                        y: -o.position.y / o.scale,
                        width: o.canvas.width / o.scale,
                        height: o.canvas.height / o.scale
                    }, t.x + t.width > r.x + r.width ? (a = t.x - r.x, this.forcedWidth = r.width - a - 10, this.renderer = null) : void 0
                },
                getBoundingRect: function getBoundingRect(o, t) {
                    if (null == t && (t = !1), !this.renderer) {
                        if (!o) throw "Must pass ctx if text hasn't been rendered yet";
                        this._makeRenderer(o)
                    }
                    return {
                        x: Math.floor(this.x),
                        y: Math.floor(this.y),
                        width: Math.ceil(this.renderer.getWidth(!0)),
                        height: Math.ceil(this.renderer.getHeight())
                    }
                },
                toJSON: function toJSON() {
                    return {
                        x: this.x,
                        y: this.y,
                        text: this.text,
                        color: this.color,
                        font: this.font,
                        forcedWidth: this.forcedWidth,
                        forcedHeight: this.forcedHeight,
                        v: this.v
                    }
                },
                fromJSON: function fromJSON(e) {
                    return z("Text", e)
                },
                move: function move(e) {
                    return null == e && (e = {}), this.x = this.x - e.xDiff, this.y = this.y - e.yDiff
                },
                setUpperLeft: function setUpperLeft(e) {
                    return null == e && (e = {}), this.x = e.x, this.y = e.y
                }
            }), W("SelectionBox", {
                constructor: function constructor(e) {
                    return null == e && (e = {}), this.shape = e.shape, null != e.handleSize ? this.handleSize = e.handleSize : this.handleSize = 10, this.margin = 4, this.backgroundColor = e.backgroundColor || null, this._br = this.shape.getBoundingRect(e.ctx)
                },
                toJSON: function toJSON() {
                    return {
                        shape: G(this.shape),
                        backgroundColor: this.backgroundColor
                    }
                },
                fromJSON: function fromJSON(a) {
                    var t, i, s, l;
                    return l = a.shape, i = a.handleSize, s = a.margin, t = a.backgroundColor, z("SelectionBox", {
                        shape: u(l),
                        backgroundColor: t
                    })
                },
                getTopLeftHandleRect: function getTopLeftHandleRect() {
                    return {
                        x: this._br.x - this.handleSize - this.margin,
                        y: this._br.y - this.handleSize - this.margin,
                        width: this.handleSize,
                        height: this.handleSize
                    }
                },
                getBottomLeftHandleRect: function getBottomLeftHandleRect() {
                    return {
                        x: this._br.x - this.handleSize - this.margin,
                        y: this._br.y + this._br.height + this.margin,
                        width: this.handleSize,
                        height: this.handleSize
                    }
                },
                getTopRightHandleRect: function getTopRightHandleRect() {
                    return {
                        x: this._br.x + this._br.width + this.margin,
                        y: this._br.y - this.handleSize - this.margin,
                        width: this.handleSize,
                        height: this.handleSize
                    }
                },
                getBottomRightHandleRect: function getBottomRightHandleRect() {
                    return {
                        x: this._br.x + this._br.width + this.margin,
                        y: this._br.y + this._br.height + this.margin,
                        width: this.handleSize,
                        height: this.handleSize
                    }
                },
                getBoundingRect: function getBoundingRect() {
                    return {
                        x: this._br.x - this.margin,
                        y: this._br.y - this.margin,
                        width: this._br.width + 2 * this.margin,
                        height: this._br.height + 2 * this.margin
                    }
                }
            }), t.exports = {
                defineShape: W,
                createShape: z,
                JSONToShape: u,
                shapeToJSON: G
            }
        }, {
            "./TextRenderer": 6,
            "./canvasRenderer": 9,
            "./lineEndCapShapes": 12,
            "./svgRenderer": 18,
            "./util": 19
        }],
        18: [function(a, t) {
            var e, l, n, p;
            l = a("./lineEndCapShapes"), p = {}, e = function(o, t) {
                return p[o] = t
            }, n = function(o, t) {
                if (null == t && (t = {}), null == t.shouldIgnoreUnsupportedShapes && (t.shouldIgnoreUnsupportedShapes = !1), p[o.className]) return p[o.className](o);
                if (t.shouldIgnoreUnsupportedShapes) return console.warn("Can't render shape of type " + o.className + " to SVG"), "";
                throw "Can't render shape of type " + o.className + " to SVG"
            }, e("Rectangle", function(l) {
                var t, p, d, c, g, u, m, y;
                return c = l.x, m = l.y, g = l.x + l.width, y = l.y + l.height, d = Math.min(c, g), u = Math.min(m, y), p = Math.max(c, g) - d, t = Math.max(m, y) - u, 0 != l.strokeWidth % 2 && (d += .5, u += .5), "<rect x='" + d + "' y='" + u + "' width='" + p + "' height='" + t + "' stroke='" + l.strokeColor + "' fill='" + l.fillColor + "' stroke-width='" + l.strokeWidth + "' />"
            }), e("SelectionBox", function() {
                return ""
            }), e("Ellipse", function(o) {
                var t, a, s, l;
                return l = Math.floor(o.width / 2), s = Math.floor(o.height / 2), t = o.x + l, a = o.y + s, "<ellipse cx='" + t + "' cy='" + a + "' rx='" + Math.abs(l) + "' ry='" + Math.abs(s) + "' stroke='" + o.strokeColor + "' fill='" + o.fillColor + "' stroke-width='" + o.strokeWidth + "' />"
            }), e("Image", function(e) {
                return "<image x='" + e.x + "' y='" + e.y + "' width='" + e.image.naturalWidth * e.scale + "' height='" + e.image.naturalHeight * e.scale + "' xlink:href='" + e.image.src + "' />"
            }), e("Line", function(r) {
                var t, p, d, c, g, u, m;
                return d = r.dash ? "stroke-dasharray='" + r.dash.join(", ") + "'" : "", p = "", t = Math.max(2.2 * r.strokeWidth, 5), c = r.x1, g = r.x2, u = r.y1, m = r.y2, 0 != r.strokeWidth % 2 && (c += .5, g += .5, u += .5, m += .5), r.endCapShapes[0] && (p += l[r.endCapShapes[0]].svg(c, u, Math.atan2(u - m, c - g), t, r.color)), r.endCapShapes[1] && (p += l[r.endCapShapes[1]].svg(g, m, Math.atan2(m - u, g - c), t, r.color)), "<g> <line x1='" + c + "' y1='" + u + "' x2='" + g + "' y2='" + m + "' " + d + " stroke-linecap='" + r.capStyle + "' stroke='" + r.color + " 'stroke-width='" + r.strokeWidth + "' /> " + p + " </g>"
            }), e("LinePath", function(e) {
                return "<polyline fill='none' points='" + e.smoothedPoints.map(function(o) {
                    var t;
                    return t = 0 == o.strokeWidth % 2 ? 0 : .5, o.x + t + "," + (o.y + t)
                }).join(" ") + "' stroke='" + e.points[0].color + "' stroke-linecap='round' stroke-width='" + e.points[0].size + "' />"
            }), e("ErasedLinePath", function() {
                return ""
            }), e("Polygon", function(e) {
                return e.isClosed ? "<polygon fill='" + e.fillColor + "' points='" + e.points.map(function(o) {
                    var t;
                    return t = 0 == o.strokeWidth % 2 ? 0 : .5, o.x + t + "," + (o.y + t)
                }).join(" ") + "' stroke='" + e.strokeColor + "' stroke-width='" + e.strokeWidth + "' />" : "<polyline fill='" + e.fillColor + "' points='" + e.points.map(function(o) {
                    var t;
                    return t = 0 == o.strokeWidth % 2 ? 0 : .5, o.x + t + "," + (o.y + t)
                }).join(" ") + "' stroke='none' /> <polyline fill='none' points='" + e.points.map(function(o) {
                    var t;
                    return t = 0 == o.strokeWidth % 2 ? 0 : .5, o.x + t + "," + (o.y + t)
                }).join(" ") + "' stroke='" + e.strokeColor + "' stroke-width='" + e.strokeWidth + "' />"
            }), e("Text", function(o) {
                var t, a, r;
                return r = o.forcedWidth ? "width='" + o.forcedWidth + "px'" : "", t = o.forcedHeight ? "height='" + o.forcedHeight + "px'" : "", a = o.text.split(/\r\n|\r|\n/g), o.renderer && (a = o.renderer.lines), "<text x='" + o.x + "' y='" + o.y + "' " + r + " " + t + " fill='" + o.color + "' style='font: " + o.font + ";'> " + a.map(function() {
                    return function(t, e) {
                        var a;
                        return a = 0 === e ? 0 : "1.2em", "<tspan x='" + o.x + "' dy='" + a + "' alignment-baseline='text-before-edge'> " + t + " </tspan>"
                    }
                }(this)).join("") + " </text>"
            }), t.exports = {
                defineSVGRenderer: e,
                renderShapeToSVG: n
            }
        }, {
            "./lineEndCapShapes": 12
        }],
        19: [function(n, t) {
            var e, l, p, d, c, h = [].slice;
            d = Array.prototype.slice, l = n("./canvasRenderer").renderShapeToContext, p = n("./svgRenderer").renderShapeToSVG, c = (e = {
                addImageOnload: function addImageOnload(o, t) {
                    var e;
                    return e = o.onload, o.onload = function() {
                        return "function" == typeof e && e(), t()
                    }, o
                },
                last: function last(o, t) {
                    return null == t && (t = null), t ? d.call(o, Math.max(o.length - t, 0)) : o[o.length - 1]
                },
                classSet: function classSet(o) {
                    var t, a;
                    t = [];
                    for (a in o) {
                        o[a] && t.push(a)
                    }
                    return t.join(" ")
                },
                matchElementSize: function matchElementSize(a, t, e, n) {
                    var o;
                    return null == n && (n = function() {}), o = function() {
                        return function() {
                            var i, l, p;
                            for (l = 0, p = t.length; p > l; l++) {
                                i = t[l], i.style.width = a.offsetWidth + "px", i.style.height = a.offsetHeight + "px", null != i.width && (i.setAttribute("width", i.offsetWidth * e), i.setAttribute("height", i.offsetHeight * e))
                            }
                            return n()
                        }
                    }(this), a.addEventListener("resize", o), window.addEventListener("resize", o), window.addEventListener("orientationchange", o), o(), o
                },
                combineCanvases: function combineCanvases() {
                    var a, l, p, d, c, g, u, m;
                    for (p = 1 <= arguments.length ? h.call(arguments, 0) : [], a = document.createElement("canvas"), a.width = p[0].width, a.height = p[0].height, c = 0, u = p.length; u > c; c++) {
                        l = p[c], a.width = Math.max(l.width, a.width), a.height = Math.max(l.height, a.height)
                    }
                    for (d = a.getContext("2d"), g = 0, m = p.length; m > g; g++) {
                        l = p[g], d.drawImage(l, 0, 0)
                    }
                    return a
                },
                renderShapes: function renderShapes(i, t, e, p) {
                    var d, c, g, u;
                    for (null == e && (e = 1), null == p && (p = null), p = p || document.createElement("canvas"), p.width = t.width * e, p.height = t.height * e, d = p.getContext("2d"), d.translate(-t.x * e, -t.y * e), d.scale(e, e), c = 0, g = i.length; g > c; c++) {
                        u = i[c], l(d, u)
                    }
                    return p
                },
                renderShapesToSVG: function renderShapesToSVG(r, t, e) {
                    var n, l, d, c;
                    return d = t.x, c = t.y, l = t.width, n = t.height, ("<svg xmlns='http://www.w3.org/2000/svg' width='" + l + "' height='" + n + "' viewBox='0 0 " + l + " " + n + "'> <rect width='" + l + "' height='" + n + "' x='0' y='0' fill='" + e + "' /> <g transform='translate(" + -d + ", " + -c + ")'> " + r.map(p).join("") + " </g> </svg>").replace(/(\r\n|\n|\r)/gm, "")
                },
                getBoundingRect: function getBoundingRect(p, t, e) {
                    var n, d, c, g, u, m, y;
                    if (!p.length) return {
                        x: 0,
                        y: 0,
                        width: t,
                        height: e
                    };
                    for (u = p[0].x, m = p[0].y, c = p[0].x + p[0].width, g = p[0].y + p[0].height, n = 0, d = p.length; d > n; n++) {
                        y = p[n], u = Math.floor(Math.min(y.x, u)), m = Math.floor(Math.min(y.y, m)), c = Math.ceil(Math.max(c, y.x + y.width)), g = Math.ceil(Math.max(g, y.y + y.height))
                    }
                    return u = t ? 0 : u, m = e ? 0 : m, c = t || c, g = e || g, {
                        x: u,
                        y: m,
                        width: c - u,
                        height: g - m
                    }
                },
                getDefaultImageRect: function getDefaultImageRect(a, t, s) {
                    var l, p, d;
                    return null == t && (t = {
                        width: 0,
                        height: 0
                    }), null == s && (s = {
                        top: 0,
                        right: 0,
                        bottom: 0,
                        left: 0
                    }), d = t.width, l = t.height, p = c.getBoundingRect(a, "infinite" === d ? 0 : d, "infinite" === l ? 0 : l), p.x -= s.left, p.y -= s.top, p.width += s.left + s.right, p.height += s.top + s.bottom, p
                },
                getBackingScale: function getBackingScale() {
                    return null == window.devicePixelRatio ? 1 : 1 < window.devicePixelRatio ? window.devicePixelRatio : 1
                },
                requestAnimationFrame: (window.requestAnimationFrame || window.setTimeout).bind(window),
                getGUID: function() {
                    var e;
                    return e = function() {
                            return Math.floor(65536 * (1 + Math.random())).toString(16).substring(1)
                        },
                        function() {
                            return e() + e() + "-" + e() + "-" + e() + "-" + e() + "-" + e() + e() + e()
                        }
                }()
            }, _defineProperty(e, "requestAnimationFrame", function requestAnimationFrame(e) {
                return window.requestAnimationFrame ? window.requestAnimationFrame(e) : window.webkitRequestAnimationFrame ? window.webkitRequestAnimationFrame(e) : window.mozRequestAnimationFrame ? window.mozRequestAnimationFrame(e) : setTimeout(e, 0)
            }), _defineProperty(e, "cancelAnimationFrame", function cancelAnimationFrame(e) {
                return window.cancelAnimationFrame ? window.cancelAnimationFrame(e) : window.webkitCancelRequestAnimationFrame ? window.webkitCancelRequestAnimationFrame(e) : window.webkitCancelAnimationFrame ? window.webkitCancelAnimationFrame(e) : window.mozCancelAnimationFrame ? window.mozCancelAnimationFrame(e) : clearTimeout(e)
            }), e), t.exports = c
        }, {
            "./canvasRenderer": 9,
            "./svgRenderer": 18
        }],
        20: [function() {
            "use strict";
            ! function() {
                function e(o, t) {
                    t = t || {
                        bubbles: !1,
                        cancelable: !1,
                        detail: void 0
                    };
                    var a = document.createEvent("CustomEvent");
                    return a.initCustomEvent(o, t.bubbles, t.cancelable, t.detail), a
                }
                e.prototype = window.CustomEvent.prototype, window.CustomEvent = e
            }()
        }, {}],
        21: [function(o, t) {
            "use strict";
            var e = !1;
            CanvasRenderingContext2D.prototype.setLineDash || (CanvasRenderingContext2D.prototype.setLineDash = function() {
                e || (console.warn("context2D.setLineDash is a no-op in this browser."), e = !0)
            }), t.exports = null
        }, {}],
        22: [function(C, t) {
            var P, e, n, R, _, E, I, T, L, z, O, N, W, B, D, U, A, M, F, G, H;
            C("./ie_customevent"), C("./ie_setLineDash"), P = C("./core/LiterallyCanvas"), I = C("./core/defaultOptions"), R = C("./core/canvasRenderer"), F = C("./core/svgRenderer"), M = C("./core/shapes"), H = C("./core/util"), D = C("./core/renderSnapshotToImage"), U = C("./core/renderSnapshotToSVG"), W = C("./core/localization").localize, e = C("./reactGUI/LiterallyCanvas"), O = C("./reactGUI/initDOM"), C("./optionsStyles/font"), C("./optionsStyles/stroke-width"), C("./optionsStyles/line-options-and-stroke-width"), C("./optionsStyles/polygon-and-stroke-width"), C("./optionsStyles/stroke-or-fill"), C("./optionsStyles/null"), L = C("./optionsStyles/optionsStyles").defineOptionsStyle, _ = {
                snapshotToShapes: function snapshotToShapes(a) {
                    var t, s, l, p, d;
                    for (l = a.shapes, p = [], t = 0, s = l.length; s > t; t++) {
                        d = l[t], p.push(M.JSONToShape(d))
                    }
                    return p
                },
                snapshotJSONToShapes: function snapshotJSONToShapes(e) {
                    return _.snapshotToShapes(JSON.parse(e))
                }
            }, n = C("./tools/base"), G = {
                Pencil: C("./tools/Pencil"),
                Eraser: C("./tools/Eraser"),
                Line: C("./tools/Line"),
                Rectangle: C("./tools/Rectangle"),
                Ellipse: C("./tools/Ellipse"),
                Text: C("./tools/Text"),
                Polygon: C("./tools/Polygon"),
                Pan: C("./tools/Pan"),
                Eyedropper: C("./tools/Eyedropper"),
                SelectShape: C("./tools/SelectShape"),
                Tool: n.Tool,
                ToolWithStroke: n.ToolWithStroke
            }, T = I.tools, E = I.imageURLPrefix, A = function(e) {
                return E = e, I.imageURLPrefix = e
            }, z = function(t, e) {
                var l, p, d, c, h;
                null == e && (e = {});
                for (c in I) {
                    c in e || (e[c] = I[c])
                }
                for (h = t.children, p = 0, d = h.length; d > p; p++) {
                    l = h[p], t.removeChild(l)
                }
                return C("./reactGUI/initDOM")(t, e)
            }, N = function(a, t) {
                var e, l, p;
                return p = a.className, -1 === [" ", " "].join(a.className).indexOf(" literally ") && (a.className = a.className + " literally"), a.className = a.className + " toolbar-hidden", e = document.createElement("div"), e.className = "lc-drawing", a.appendChild(e), l = new P(e, t), l.teardown = function() {
                    var t, o, r, d;
                    for (l._teardown(), d = a.children, o = 0, r = d.length; r > o; o++) {
                        t = d[o], a.removeChild(t)
                    }
                    return a.className = p
                }, "onInit" in t && t.onInit(l), l
            }, B = function(e) {
                return e.fn.literallycanvas = function(o) {
                    return null == o && (o = {}), this.each(function() {
                        return function(t, e) {
                            return e.literallycanvas = z(e, o)
                        }
                    }(this)), this
                }
            }, "undefined" != typeof window && (window.LC = {
                init: z
            }, window.$ && B(window.$)), t.exports = {
                init: z,
                registerJQueryPlugin: B,
                util: H,
                tools: G,
                setDefaultImageURLPrefix: A,
                defaultTools: T,
                defineOptionsStyle: L,
                LiterallyCanvasReactComponent: e,
                defineShape: M.defineShape,
                createShape: M.createShape,
                JSONToShape: M.JSONToShape,
                shapeToJSON: M.shapeToJSON,
                defineCanvasRenderer: R.defineCanvasRenderer,
                renderShapeToContext: R.renderShapeToContext,
                renderShapeToCanvas: R.renderShapeToCanvas,
                renderShapesToCanvas: H.renderShapes,
                defineSVGRenderer: F.defineSVGRenderer,
                renderShapeToSVG: F.renderShapeToSVG,
                renderShapesToSVG: H.renderShapesToSVG,
                snapshotToShapes: _.snapshotToShapes,
                snapshotJSONToShapes: _.snapshotJSONToShapes,
                renderSnapshotToImage: D,
                renderSnapshotToSVG: U,
                localize: W
            }
        }, {
            "./core/LiterallyCanvas": 5,
            "./core/canvasRenderer": 9,
            "./core/defaultOptions": 10,
            "./core/localization": 13,
            "./core/renderSnapshotToImage": 15,
            "./core/renderSnapshotToSVG": 16,
            "./core/shapes": 17,
            "./core/svgRenderer": 18,
            "./core/util": 19,
            "./ie_customevent": 20,
            "./ie_setLineDash": 21,
            "./optionsStyles/font": 23,
            "./optionsStyles/line-options-and-stroke-width": 24,
            "./optionsStyles/null": 25,
            "./optionsStyles/optionsStyles": 26,
            "./optionsStyles/polygon-and-stroke-width": 27,
            "./optionsStyles/stroke-or-fill": 28,
            "./optionsStyles/stroke-width": 29,
            "./reactGUI/LiterallyCanvas": 32,
            "./reactGUI/initDOM": 42,
            "./tools/Ellipse": 43,
            "./tools/Eraser": 44,
            "./tools/Eyedropper": 45,
            "./tools/Line": 46,
            "./tools/Pan": 47,
            "./tools/Pencil": 48,
            "./tools/Polygon": 49,
            "./tools/Rectangle": 50,
            "./tools/SelectShape": 51,
            "./tools/Text": 52,
            "./tools/base": 53
        }],
        23: [function(n, t) {
            var R, _, e, E, I, T, L, z, O, N, W, B, D, U, A, M, F, G, H, J, V, q, j;
            for (I = n("../reactGUI/React-shim"), O = n("./optionsStyles").defineOptionsStyle, z = n("../core/localization")._, T = [
                    ["Arial", "Arial,\"Helvetica Neue\",Helvetica,sans-serif"],
                    ["Arial Black", "\"Arial Black\",\"Arial Bold\",Gadget,sans-serif"],
                    ["Arial Narrow", "\"Arial Narrow\",Arial,sans-serif"],
                    ["Gill Sans", "\"Gill Sans\",\"Gill Sans MT\",Calibri,sans-serif"],
                    ["Helvetica", "\"Helvetica Neue\",Helvetica,Arial,sans-serif"],
                    ["Impact", "Impact,Haettenschweiler,\"Franklin Gothic Bold\",Charcoal,\"Helvetica Inserat\",\"Bitstream Vera Sans Bold\",\"Arial Black\",sans-serif"],
                    ["Tahoma", "Tahoma,Verdana,Segoe,sans-serif"],
                    ["Trebuchet MS", "\"Trebuchet MS\",\"Lucida Grande\",\"Lucida Sans Unicode\",\"Lucida Sans\",Tahoma,sans-serif"],
                    ["Verdana", "Verdana,Geneva,sans-serif"]
                ].map(function(o) {
                    var t, a;
                    return t = o[0], a = o[1], {
                        name: z(t),
                        value: a
                    }
                }), L = [
                    ["Baskerville", "Baskerville,\"Baskerville Old Face\",\"Hoefler Text\",Garamond,\"Times New Roman\",serif"],
                    ["Garamond", "Garamond,Baskerville,\"Baskerville Old Face\",\"Hoefler Text\",\"Times New Roman\",serif"],
                    ["Georgia", "Georgia,Times,\"Times New Roman\",serif"],
                    ["Hoefler Text", "\"Hoefler Text\",\"Baskerville Old Face\",Garamond,\"Times New Roman\",serif"],
                    ["Lucida Bright", "\"Lucida Bright\",Georgia,serif"],
                    ["Palatino", "Palatino,\"Palatino Linotype\",\"Palatino LT STD\",\"Book Antiqua\",Georgia,serif"],
                    ["Times New Roman", "TimesNewRoman,\"Times New Roman\",Times,Baskerville,Georgia,serif"]
                ].map(function(o) {
                    var t, a;
                    return t = o[0], a = o[1], {
                        name: z(t),
                        value: a
                    }
                }), e = [
                    ["Consolas/Monaco", "Consolas,monaco,\"Lucida Console\",monospace"],
                    ["Courier New", "\"Courier New\",Courier,\"Lucida Sans Typewriter\",\"Lucida Typewriter\",monospace"],
                    ["Lucida Sans Typewriter", "\"Lucida Sans Typewriter\",\"Lucida Console\",monaco,\"Bitstream Vera Sans Mono\",monospace"]
                ].map(function(o) {
                    var t, a;
                    return t = o[0], a = o[1], {
                        name: z(t),
                        value: a
                    }
                }), E = [
                    ["Copperplate", "Copperplate,\"Copperplate Gothic Light\",fantasy"],
                    ["Papyrus", "Papyrus,fantasy"],
                    ["Script", "\"Brush Script MT\",cursive"]
                ].map(function(o) {
                    var t, a;
                    return t = o[0], a = o[1], {
                        name: z(t),
                        value: a
                    }
                }), R = [
                    [z("Sans Serif"), T],
                    [z("Serif"), L],
                    [z("Monospace"), e],
                    [z("Other"), E]
                ], _ = {}, N = 0, D = T.length; D > N; N++) {
                H = T[N], G = H.name, j = H.value, _[G] = j
            }
            for (W = 0, U = L.length; U > W; W++) {
                J = L[W], G = J.name, j = J.value, _[G] = j
            }
            for (B = 0, A = e.length; A > B; B++) {
                V = e[B], G = V.name, j = V.value, _[G] = j
            }
            for (F = 0, M = E.length; M > F; F++) {
                q = E[F], G = q.name, j = q.value, _[G] = j
            }
            O("font", I.createClass({
                displayName: "FontOptions",
                getInitialState: function getInitialState() {
                    return {
                        isItalic: !1,
                        isBold: !1,
                        fontName: "Helvetica",
                        fontSizeIndex: 4
                    }
                },
                getFontSizes: function getFontSizes() {
                    return [9, 10, 12, 14, 18, 24, 36, 48, 64, 72, 96, 144, 288]
                },
                updateTool: function updateTool(o) {
                    var a, r, s;
                    null == o && (o = {});
                    for (s in this.state) {
                        s in o || (o[s] = this.state[s])
                    }
                    return a = this.getFontSizes()[o.fontSizeIndex], r = [], o.isItalic && r.push("italic"), o.isBold && r.push("bold"), r.push(a + "px"), r.push(_[o.fontName]), this.props.lc.tool.font = r.join(" "), this.props.lc.trigger("setFont", r.join(" "))
                },
                handleFontSize: function handleFontSize(o) {
                    var t;
                    return t = {
                        fontSizeIndex: o.target.value
                    }, this.setState(t), this.updateTool(t)
                },
                handleFontFamily: function handleFontFamily(o) {
                    var t;
                    return t = {
                        fontName: o.target.selectedOptions[0].innerHTML
                    }, this.setState(t), this.updateTool(t)
                },
                handleItalic: function handleItalic() {
                    var t;
                    return t = {
                        isItalic: !this.state.isItalic
                    }, this.setState(t), this.updateTool(t)
                },
                handleBold: function handleBold() {
                    var t;
                    return t = {
                        isBold: !this.state.isBold
                    }, this.setState(t), this.updateTool(t)
                },
                componentDidMount: function componentDidMount() {
                    return this.updateTool()
                },
                render: function render() {
                    var a, i, d, c, g, m, y, S, f, x;
                    return g = this.props.lc, S = I.DOM, i = S.div, d = S.input, f = S.select, y = S.option, a = S.br, c = S.label, x = S.span, m = S.optgroup, i({
                        className: "lc-font-settings"
                    }, f({
                        value: this.state.fontSizeIndex,
                        onChange: this.handleFontSize
                    }, this.getFontSizes().map(function() {
                        return function(o, t) {
                            return y({
                                value: t,
                                key: t
                            }, o + "px")
                        }
                    }(this))), f({
                        value: this.state.fontName,
                        onChange: this.handleFontFamily
                    }, R.map(function() {
                        return function(o) {
                            var t, a;
                            return a = o[0], t = o[1], m({
                                key: a,
                                label: a
                            }, t.map(function(o, t) {
                                return y({
                                    value: o.name,
                                    key: t
                                }, o.name)
                            }))
                        }
                    }(this))), x({}, c({
                        htmlFor: "italic"
                    }, z("italic")), d({
                        type: "checkbox",
                        id: "italic",
                        checked: this.state.isItalic,
                        onChange: this.handleItalic
                    })), x({}, c({
                        htmlFor: "bold"
                    }, z("bold")), d({
                        type: "checkbox",
                        id: "bold",
                        checked: this.state.isBold,
                        onChange: this.handleBold
                    })))
                }
            })), t.exports = {}
        }, {
            "../core/localization": 13,
            "../reactGUI/React-shim": 35,
            "./optionsStyles": 26
        }],
        24: [function(n, t) {
            var d, g, m, e, l;
            d = n("../reactGUI/React-shim"), l = n("./optionsStyles").defineOptionsStyle, g = d.createFactory(n("../reactGUI/StrokeWidthPicker")), e = n("../reactGUI/createSetStateOnEventMixin"), m = n("../core/util").classSet, l("line-options-and-stroke-width", d.createClass({
                displayName: "LineOptionsAndStrokeWidth",
                getState: function getState() {
                    return {
                        strokeWidth: this.props.tool.strokeWidth,
                        isDashed: this.props.tool.isDashed,
                        hasEndArrow: this.props.tool.hasEndArrow
                    }
                },
                getInitialState: function getInitialState() {
                    return this.getState()
                },
                mixins: [e("toolChange")],
                render: function render() {
                    var o, r, i, y, S, f, x, k, b, C;
                    return f = d.DOM, i = f.div, C = f.ul, S = f.li, y = f.img, k = function(e) {
                        return function() {
                            return e.props.tool.isDashed = !e.props.tool.isDashed, e.setState(e.getState())
                        }
                    }(this), b = function(e) {
                        return function() {
                            return e.props.tool.hasEndArrow = !e.props.tool.hasEndArrow, e.setState(e.getState())
                        }
                    }(this), r = m({
                        "square-toolbar-button": !0,
                        selected: this.state.isDashed
                    }), o = m({
                        "square-toolbar-button": !0,
                        selected: this.state.hasEndArrow
                    }), x = {
                        float: "left",
                        margin: 1
                    }, i({}, i({
                        className: r,
                        onClick: k,
                        style: x
                    }, y({
                        src: this.props.imageURLPrefix + "/dashed-line.png"
                    })), i({
                        className: o,
                        onClick: b,
                        style: x
                    }, y({
                        src: this.props.imageURLPrefix + "/line-with-arrow.png"
                    })), g({
                        tool: this.props.tool,
                        lc: this.props.lc
                    }))
                }
            })), t.exports = {}
        }, {
            "../core/util": 19,
            "../reactGUI/React-shim": 35,
            "../reactGUI/StrokeWidthPicker": 37,
            "../reactGUI/createSetStateOnEventMixin": 40,
            "./optionsStyles": 26
        }],
        25: [function(o, t) {
            var e, a;
            e = o("../reactGUI/React-shim"), a = o("./optionsStyles").defineOptionsStyle, a("null", e.createClass({
                displayName: "NoOptions",
                render: function render() {
                    return e.DOM.div()
                }
            })), t.exports = {}
        }, {
            "../reactGUI/React-shim": 35,
            "./optionsStyles": 26
        }],
        26: [function(a, t) {
            var n, e, s;
            n = a("../reactGUI/React-shim"), s = {}, e = function(o, t) {
                return s[o] = n.createFactory(t)
            }, t.exports = {
                optionsStyles: s,
                defineOptionsStyle: e
            }
        }, {
            "../reactGUI/React-shim": 35
        }],
        27: [function(a, t) {
            var p, d, e, n;
            p = a("../reactGUI/React-shim"), n = a("./optionsStyles").defineOptionsStyle, d = p.createFactory(a("../reactGUI/StrokeWidthPicker")), e = a("../reactGUI/createSetStateOnEventMixin"), n("polygon-and-stroke-width", p.createClass({
                displayName: "PolygonAndStrokeWidth",
                getState: function getState() {
                    return {
                        strokeWidth: this.props.tool.strokeWidth,
                        inProgress: !1
                    }
                },
                getInitialState: function getInitialState() {
                    return this.getState()
                },
                mixins: [e("toolChange")],
                componentDidMount: function componentDidMount() {
                    var o, a, s;
                    return s = [], this.unsubscribe = function() {
                        return function() {
                            var o, a, n, l;
                            for (l = [], a = 0, n = s.length; n > a; a++) {
                                o = s[a], l.push(o())
                            }
                            return l
                        }
                    }(this), a = function(e) {
                        return function() {
                            return e.state.inProgress ? void 0 : e.setState({
                                inProgress: !0
                            })
                        }
                    }(this), o = function(e) {
                        return function() {
                            return e.setState({
                                inProgress: !1
                            })
                        }
                    }(this), s.push(this.props.lc.on("lc-polygon-started", a)), s.push(this.props.lc.on("lc-polygon-stopped", o))
                },
                componentWillUnmount: function componentWillUnmount() {
                    return this.unsubscribe()
                },
                render: function render() {
                    var r, i, c, g, u, m, y, S;
                    return c = this.props.lc, S = p.DOM, r = S.div, i = S.img, m = function() {
                        return function() {
                            return c.trigger("lc-polygon-finishopen")
                        }
                    }(this), u = function() {
                        return function() {
                            return c.trigger("lc-polygon-finishclosed")
                        }
                    }(this), g = function() {
                        return function() {
                            return c.trigger("lc-polygon-cancel")
                        }
                    }(this), y = {}, this.state.inProgress || (y = {
                        display: "none"
                    }), r({}, r({
                        className: "polygon-toolbar horz-toolbar",
                        style: y
                    }, r({
                        className: "square-toolbar-button",
                        onClick: m
                    }, i({
                        src: this.props.imageURLPrefix + "/polygon-open.png"
                    })), r({
                        className: "square-toolbar-button",
                        onClick: u
                    }, i({
                        src: this.props.imageURLPrefix + "/polygon-closed.png"
                    })), r({
                        className: "square-toolbar-button",
                        onClick: g
                    }, i({
                        src: this.props.imageURLPrefix + "/polygon-cancel.png"
                    }))), r({}, d({
                        tool: this.props.tool,
                        lc: this.props.lc
                    })))
                }
            })), t.exports = {}
        }, {
            "../reactGUI/React-shim": 35,
            "../reactGUI/StrokeWidthPicker": 37,
            "../reactGUI/createSetStateOnEventMixin": 40,
            "./optionsStyles": 26
        }],
        28: [function(n, t) {
            "use strict";
            var e = n("../reactGUI/React-shim"),
                i = n("./optionsStyles"),
                r = i.defineOptionsStyle,
                o = n("../reactGUI/createSetStateOnEventMixin"),
                s = n("../core/localization")._;
            r("stroke-or-fill", e.createClass({
                displayName: "StrokeOrFillPicker",
                getState: function getState() {
                    return {
                        strokeOrFill: "stroke"
                    }
                },
                getInitialState: function getInitialState() {
                    return this.getState()
                },
                mixins: [o("toolChange")],
                onChange: function onChange(e) {
                    "stroke-or-fill-stroke" == e.target.id ? this.props.lc.tool.strokeOrFill = "stroke" : this.props.lc.tool.strokeOrFill = "fill", this.setState(this.getState())
                },
                render: function render() {
                    var o = this.props.lc;
                    return e.createElement("form", null, e.createElement("span", null, " ", s("Color to change:"), " "), e.createElement("span", null, e.createElement("input", {
                        type: "radio",
                        name: "stroke-or-fill",
                        value: "stroke",
                        id: "stroke-or-fill-stroke",
                        onChange: this.onChange,
                        checked: "stroke" == o.tool.strokeOrFill
                    }), e.createElement("label", {
                        htmlFor: "stroke-or-fill-stroke",
                        className: "label"
                    }, " ", s("stroke"))), e.createElement("span", null, e.createElement("input", {
                        type: "radio",
                        name: "stroke-or-fill",
                        value: "fill",
                        id: "stroke-or-fill-fill",
                        onChange: this.onChange,
                        checked: "fill" == o.tool.strokeOrFill
                    }), e.createElement("label", {
                        htmlFor: "stroke-or-fill-fill",
                        className: "label"
                    }, " ", s("fill"))))
                }
            })), t.exports = {}
        }, {
            "../core/localization": 13,
            "../reactGUI/React-shim": 35,
            "../reactGUI/createSetStateOnEventMixin": 40,
            "./optionsStyles": 26
        }],
        29: [function(o, t) {
            var e, a;
            a = o("./optionsStyles").defineOptionsStyle, e = o("../reactGUI/StrokeWidthPicker"), a("stroke-width", e), t.exports = {}
        }, {
            "../reactGUI/StrokeWidthPicker": 37,
            "./optionsStyles": 26
        }],
        30: [function(n, t) {
            var e, l, p, d, c;
            l = n("./React-shim"), c = n("./createSetStateOnEventMixin"), p = n("../core/localization")._, d = n("../core/util").classSet, e = l.createClass({
                displayName: "ClearButton",
                getState: function getState() {
                    return {
                        isEnabled: this.props.lc.canUndo()
                    }
                },
                getInitialState: function getInitialState() {
                    return this.getState()
                },
                mixins: [c("drawingChange")],
                render: function render() {
                    var o, a, r, s;
                    return a = l.DOM.div, r = this.props.lc, o = d({
                        "lc-clear": !0,
                        "toolbar-button": !0,
                        "fat-button": !0,
                        disabled: !this.state.isEnabled
                    }), s = r.canUndo() ? function() {
                        return function() {
                            return r.clear()
                        }
                    }(this) : function() {}, a({
                        className: o,
                        onClick: s
                    }, p("Clear"))
                }
            }), t.exports = e
        }, {
            "../core/localization": 13,
            "../core/util": 19,
            "./React-shim": 35,
            "./createSetStateOnEventMixin": 40
        }],
        31: [function(n, t) {
            var m, e, g, y, S, x, k, b, C, w, v, P;
            y = n("./React-shim"), g = n("react-addons-pure-render-mixin"), v = n("../core/util"), k = v.classSet, P = v.requestAnimationFrame, x = v.cancelAnimationFrame, S = n("../core/localization")._, w = function(a) {
                var o, s, l, p;
                return "transparent" === a ? {
                    hue: 0,
                    sat: 0,
                    light: 0,
                    alpha: 0
                } : "hsla" !== (null != a ? a.substring(0, 4) : void 0) ? null : (s = a.indexOf("("), p = a.indexOf(")"), l = a.substring(s + 1, p - s + 4), o = function() {
                    var t, i, s, p;
                    for (s = l.split(","), p = [], t = 0, i = s.length; i > t; t++) {
                        a = s[t], p.push(a.trim())
                    }
                    return p
                }(), {
                    hue: parseInt(o[0], 10),
                    sat: parseInt(o[1].substring(0, o[1].length - 1), 10),
                    light: parseInt(o[2].substring(0, o[2].length - 1), 10),
                    alpha: parseFloat(o[3])
                })
            }, b = function(o) {
                var t, a, s, l;
                return a = o.hue, l = o.sat, s = o.light, t = o.alpha, "hsla(" + a + ", " + l + "%, " + s + "%, " + t + ")"
            }, C = function(o) {
                var t, a, r;
                return t = o.hue, r = o.sat, a = o.light, "hsl(" + t + ", " + r + "%, " + a + "%)"
            }, m = y.createFactory(y.createClass({
                displayName: "ColorGrid",
                mixins: [g],
                render: function render() {
                    var l;
                    return (l = y.DOM.div)({}, this.props.rows.map(function(c) {
                        return function(e, t) {
                            return l({
                                className: "color-row",
                                key: t,
                                style: {
                                    width: 20 * e.length
                                }
                            }, e.map(function(e, t) {
                                var n, i, g, m, y, S, f, x;
                                return y = e.hue, f = e.sat, S = e.light, n = e.alpha, g = b(e), m = "hsl(" + y + ", " + f + "%, " + S + "%)", i = k({
                                    "color-cell": !0,
                                    selected: c.props.selectedColor === g
                                }), x = function(o) {
                                    return c.props.onChange(e, g), o.stopPropagation(), o.preventDefault()
                                }, l({
                                    className: i,
                                    onTouchStart: x,
                                    onTouchMove: x,
                                    onClick: x,
                                    style: {
                                        backgroundColor: m
                                    },
                                    key: t
                                })
                            }))
                        }
                    }(this)))
                }
            })), e = y.createClass({
                displayName: "ColorWell",
                mixins: [g],
                getInitialState: function getInitialState() {
                    var o, a;
                    return o = this.props.lc.colors[this.props.colorName], a = w(o), null == a && (a = {}), null == a.alpha && (a.alpha = 1), null == a.sat && (a.sat = 100), null == a.hue && (a.hue = 0), null == a.light && (a.light = 50), {
                        colorString: o,
                        alpha: a.alpha,
                        sat: 0 === a.sat ? 100 : a.sat,
                        isPickerVisible: !1,
                        hsla: a
                    }
                },
                componentDidMount: function componentDidMount() {
                    return this.unsubscribe = this.props.lc.on(this.props.colorName + "ColorChange", function(o) {
                        return function() {
                            var t;
                            return t = o.props.lc.colors[o.props.colorName], o.setState({
                                colorString: t
                            }), o.setHSLAFromColorString(t)
                        }
                    }(this))
                },
                componentWillUnmount: function componentWillUnmount() {
                    return this.unsubscribe()
                },
                setHSLAFromColorString: function setHSLAFromColorString(o) {
                    var t;
                    return t = w(o), t ? this.setState({
                        hsla: t,
                        alpha: t.alpha,
                        sat: t.sat
                    }) : this.setState({
                        hsla: null,
                        alpha: 1,
                        sat: 100
                    })
                },
                closePicker: function closePicker() {
                    return this.setState({
                        isPickerVisible: !1
                    })
                },
                togglePicker: function togglePicker() {
                    var o, a;
                    return o = !this.state.isPickerVisible, a = o && 0 === this.state.sat, this.setHSLAFromColorString(this.state.colorString), this.setState({
                        isPickerVisible: o,
                        sat: a ? 100 : this.state.sat
                    })
                },
                setColor: function setColor(e) {
                    return this.setState({
                        colorString: e
                    }), this.setHSLAFromColorString(e), this.props.lc.setColor(this.props.colorName, e)
                },
                setAlpha: function setAlpha(o) {
                    var t;
                    return this.setState({
                        alpha: o
                    }), this.state.hsla ? (t = this.state.hsla, t.alpha = o, this.setState({
                        hsla: t
                    }), this.setColor(b(t))) : void 0
                },
                setSat: function setSat(o) {
                    var t;
                    if (this.setState({
                            sat: o
                        }), isNaN(o)) throw "SAT";
                    return this.state.hsla ? (t = this.state.hsla, t.sat = o, this.setState({
                        hsla: t
                    }), this.setColor(b(t))) : void 0
                },
                render: function render() {
                    var o, a, r, s;
                    return s = y.DOM, a = s.div, r = s.label, o = s.br, a({
                        className: k({
                            "color-well": !0,
                            open: this.state.isPickerVisible
                        }),
                        onMouseLeave: this.closePicker,
                        style: {
                            float: "left",
                            textAlign: "center"
                        }
                    }, r({
                        float: "left"
                    }, this.props.label), o({}), a({
                        className: k({
                            "color-well-color-container": !0,
                            selected: this.state.isPickerVisible
                        }),
                        style: {
                            backgroundColor: "white"
                        },
                        onClick: this.togglePicker
                    }, a({
                        className: "color-well-checker color-well-checker-top-left"
                    }), a({
                        className: "color-well-checker color-well-checker-bottom-right",
                        style: {
                            left: "50%",
                            top: "50%"
                        }
                    }), a({
                        className: "color-well-color",
                        style: {
                            backgroundColor: this.state.colorString
                        }
                    }, " ")), this.renderPicker())
                },
                renderPicker: function renderPicker() {
                    var a, i, s, x, k, b, C, w, v, P, R, _, E, I;
                    if (P = y.DOM, i = P.div, C = P.label, k = P.input, !this.state.isPickerVisible) return null;
                    for (E = function() {
                            return function(t) {
                                return i({
                                    className: "color-row label",
                                    key: t,
                                    style: {
                                        lineHeight: "20px",
                                        height: 16
                                    }
                                }, t)
                            }
                        }(this), _ = function(t) {
                            return function() {
                                var e;
                                return e = t.props.lc.opts.imageURLPrefix + "/checkerboard-8x8.png", i({
                                    className: "color-row",
                                    key: "color",
                                    style: {
                                        position: "relative",
                                        backgroundImage: "url(" + e + ")",
                                        backgroundRepeat: "repeat",
                                        height: 24
                                    }
                                }, i({
                                    style: {
                                        position: "absolute",
                                        top: 0,
                                        right: 0,
                                        bottom: 0,
                                        left: 0,
                                        backgroundColor: t.state.colorString
                                    }
                                }))
                            }
                        }(this), I = [], I.push(function() {
                            var o, a;
                            for (a = [], x = o = 0; 100 >= o; x = o += 10) {
                                a.push({
                                    hue: 0,
                                    sat: 0,
                                    light: x,
                                    alpha: this.state.alpha
                                })
                            }
                            return a
                        }.call(this)), R = [0, 30, 60, 90, 120, 150, 180, 210, 240, 270, 300, 330], b = 0, w = R.length; w > b; b++) {
                        s = R[b], I.push(function() {
                            var e, o;
                            for (o = [], x = e = 10; 90 >= e; x = e += 8) {
                                o.push({
                                    hue: s,
                                    sat: this.state.sat,
                                    light: x,
                                    alpha: this.state.alpha
                                })
                            }
                            return o
                        }.call(this))
                    }
                    return v = function(o) {
                        return function(t, e) {
                            return o.setColor(e)
                        }
                    }(this), i({
                        className: "color-picker-popup"
                    }, _(), E(S("alpha")), k({
                        type: "range",
                        min: 0,
                        max: 1,
                        step: .01,
                        value: this.state.alpha,
                        onChange: function(o) {
                            return function(t) {
                                return o.setAlpha(parseFloat(t.target.value))
                            }
                        }(this)
                    }), E(S("saturation")), k((a = {
                        type: "range",
                        min: 0,
                        max: 100,
                        value: this.state.sat
                    }, _defineProperty(a, "max", 100), _defineProperty(a, "onChange", function(o) {
                        return function(t) {
                            return o.setSat(parseInt(t.target.value, 10))
                        }
                    }(this)), a)), m({
                        rows: I,
                        selectedColor: this.state.colorString,
                        onChange: v
                    }))
                }
            }), t.exports = e
        }, {
            "../core/localization": 13,
            "../core/util": 19,
            "./React-shim": 35,
            "react-addons-pure-render-mixin": 2
        }],
        32: [function(n, t) {
            "use strict";
            var g = n("../reactGUI/React-shim"),
                e = n("../reactGUI/ReactDOM-shim"),
                r = e.findDOMNode,
                o = n("../core/util"),
                i = o.classSet,
                a = n("./Picker"),
                h = n("./Options"),
                s = n("./createToolButton"),
                l = n("../core/LiterallyCanvas"),
                c = n("../core/defaultOptions");
            n("../optionsStyles/font"), n("../optionsStyles/stroke-width"), n("../optionsStyles/line-options-and-stroke-width"), n("../optionsStyles/polygon-and-stroke-width"), n("../optionsStyles/null");
            var p = g.createClass({
                    displayName: "CanvasContainer",
                    shouldComponentUpdate: function shouldComponentUpdate() {
                        return !1
                    },
                    render: function render() {
                        return g.createElement("div", {
                            key: "literallycanvas",
                            className: "lc-drawing with-gui"
                        })
                    }
                }),
                d = g.createClass({
                    displayName: "LiterallyCanvas",
                    getDefaultProps: function getDefaultProps() {
                        return c
                    },
                    bindToModel: function bindToModel() {
                        var e = r(this.canvas);
                        this.props;
                        this.lc.bindToElement(e), "function" == typeof this.lc.opts.onInit && this.lc.opts.onInit(this.lc)
                    },
                    componentWillMount: function componentWillMount() {
                        var o = this;
                        this.lc || (this.props.lc ? this.lc = this.props.lc : this.lc = new l(this.props), this.toolButtonComponents = this.lc.opts.tools.map(function(t) {
                            return s(new t(o.lc))
                        }))
                    },
                    componentDidMount: function componentDidMount() {
                        this.lc.isBound || this.bindToModel()
                    },
                    componentWillUnmount: function componentWillUnmount() {
                        this.lc && this.lc._teardown()
                    },
                    render: function render() {
                        var l = this,
                            t = this.lc,
                            e = this.toolButtonComponents,
                            n = (this.props, this.lc.opts),
                            r = n.imageURLPrefix,
                            o = n.toolbarPosition,
                            s = i({
                                "toolbar-at-top": "top" === o,
                                "toolbar-at-bottom": "bottom" === o,
                                "toolbar-hidden": "hidden" === o
                            });
                        return g.createElement("div", {
                            className: "literally " + s
                        }, g.createElement(p, {
                            ref: function ref(t) {
                                return l.canvas = t
                            }
                        }), g.createElement(a, {
                            lc: t,
                            toolButtonComponents: e,
                            imageURLPrefix: r
                        }), g.createElement(h, {
                            lc: t,
                            imageURLPrefix: r
                        }))
                    }
                });
            t.exports = d
        }, {
            "../core/LiterallyCanvas": 5,
            "../core/defaultOptions": 10,
            "../core/util": 19,
            "../optionsStyles/font": 23,
            "../optionsStyles/line-options-and-stroke-width": 24,
            "../optionsStyles/null": 25,
            "../optionsStyles/polygon-and-stroke-width": 27,
            "../optionsStyles/stroke-width": 29,
            "../reactGUI/React-shim": 35,
            "../reactGUI/ReactDOM-shim": 36,
            "./Options": 33,
            "./Picker": 34,
            "./createToolButton": 41
        }],
        33: [function(a, t) {
            var e, n, l, p;
            n = a("./React-shim"), l = a("./createSetStateOnEventMixin"), p = a("../optionsStyles/optionsStyles").optionsStyles, e = n.createClass({
                displayName: "Options",
                getState: function getState() {
                    var e;
                    return {
                        style: null != (e = this.props.lc.tool) ? e.optionsStyle : void 0,
                        tool: this.props.lc.tool
                    }
                },
                getInitialState: function getInitialState() {
                    return this.getState()
                },
                mixins: [l("toolChange")],
                renderBody: function renderBody() {
                    var e;
                    return e = "" + this.state.style, p[e] && p[e]({
                        lc: this.props.lc,
                        tool: this.state.tool,
                        imageURLPrefix: this.props.imageURLPrefix
                    })
                },
                render: function render() {
                    var e;
                    return (e = n.DOM.div)({
                        className: "lc-options horz-toolbar"
                    }, this.renderBody())
                }
            }), t.exports = e
        }, {
            "../optionsStyles/optionsStyles": 26,
            "./React-shim": 35,
            "./createSetStateOnEventMixin": 40
        }],
        34: [function(n, t) {
            var p, d, g, e, u, m, y, S;
            u = n("./React-shim"), p = u.createFactory(n("./ClearButton")), m = u.createFactory(n("./UndoRedoButtons")), y = u.createFactory(n("./ZoomButtons")), S = n("../core/localization")._, g = u.createFactory(n("./ColorWell")), d = u.createFactory(u.createClass({
                displayName: "ColorPickers",
                render: function render() {
                    var o, a;
                    return a = this.props.lc, (o = u.DOM.div)({
                        className: "lc-color-pickers"
                    }, g({
                        lc: a,
                        colorName: "primary",
                        label: S("stroke")
                    }), g({
                        lc: a,
                        colorName: "secondary",
                        label: S("fill")
                    }), g({
                        lc: a,
                        colorName: "background",
                        label: S("bg")
                    }))
                }
            })), e = u.createClass({
                displayName: "Picker",
                getInitialState: function getInitialState() {
                    return {
                        selectedToolIndex: 0
                    }
                },
                renderBody: function renderBody() {
                    var a, l, c, r, i;
                    return a = u.DOM.div, r = this.props, i = r.toolButtonComponents, c = r.lc, l = r.imageURLPrefix, a({
                        className: "lc-picker-contents"
                    }, i.map(function(o) {
                        return function(e, t) {
                            return e({
                                lc: c,
                                imageURLPrefix: l,
                                key: t,
                                isSelected: t === o.state.selectedToolIndex,
                                onSelect: function onSelect(a) {
                                    return c.setTool(a), o.setState({
                                        selectedToolIndex: t
                                    })
                                }
                            })
                        }
                    }(this)), 0 != i.length % 2 ? a({
                        className: "toolbar-button thin-button disabled"
                    }) : void 0, a({
                        style: {
                            position: "absolute",
                            bottom: 0,
                            left: 0,
                            right: 0
                        }
                    }, d({
                        lc: this.props.lc
                    }), m({
                        lc: c,
                        imageURLPrefix: l
                    }), y({
                        lc: c,
                        imageURLPrefix: l
                    }), p({
                        lc: c
                    })))
                },
                render: function render() {
                    var e;
                    return (e = u.DOM.div)({
                        className: "lc-picker"
                    }, this.renderBody())
                }
            }), t.exports = e
        }, {
            "../core/localization": 13,
            "./ClearButton": 30,
            "./ColorWell": 31,
            "./React-shim": 35,
            "./UndoRedoButtons": 38,
            "./ZoomButtons": 39
        }],
        35: [function(o, t) {
            var e;
            try {
                e = o("react")
            } catch (t) {
                e = window.React
            }
            if (null == e) throw "Can't find React";
            t.exports = e
        }, {
            react: "react"
        }],
        36: [function(o, t) {
            var e;
            try {
                e = o("react-dom")
            } catch (t) {
                e = window.ReactDOM
            }
            if (null == e) try {
                e = o("react")
            } catch (t) {
                e = window.React
            }
            if (null == e) throw "Can't find ReactDOM";
            t.exports = e
        }, {
            react: "react",
            "react-dom": "react-dom"
        }],
        37: [function(a, t) {
            var l, p, e;
            l = a("./React-shim"), e = a("../reactGUI/createSetStateOnEventMixin"), p = a("../core/util").classSet, t.exports = l.createClass({
                displayName: "StrokeWidthPicker",
                getState: function getState(e) {
                    return null == e && (e = this.props.tool), {
                        strokeWidth: e.strokeWidth
                    }
                },
                getInitialState: function getInitialState() {
                    return this.getState()
                },
                mixins: [e("toolDidUpdateOptions")],
                componentWillReceiveProps: function componentWillReceiveProps(e) {
                    return this.setState(this.getState(e.tool))
                },
                render: function render() {
                    var r, d, i, c, g, u, m;
                    return c = l.DOM, m = c.ul, i = c.li, u = c.svg, r = c.circle, d = c.div, g = this.props.lc.opts.strokeWidths, d({}, g.map(function(e) {
                        return function(t) {
                            var o, a;
                            return o = p({
                                "square-toolbar-button": !0,
                                selected: t === e.state.strokeWidth
                            }), a = 28, d({
                                key: t
                            }, d({
                                className: o,
                                onClick: function onClick() {
                                    return e.props.lc.trigger("setStrokeWidth", t)
                                }
                            }, u({
                                width: a - 2,
                                height: a - 2,
                                viewPort: "0 0 " + t + " " + t,
                                version: "1.1",
                                xmlns: "http://www.w3.org/2000/svg"
                            }, r({
                                cx: Math.ceil(a / 2 - 1),
                                cy: Math.ceil(a / 2 - 1),
                                r: t / 2
                            }))))
                        }
                    }(this)))
                }
            })
        }, {
            "../core/util": 19,
            "../reactGUI/createSetStateOnEventMixin": 40,
            "./React-shim": 35
        }],
        38: [function(n, t) {
            var g, e, p, d, m, c, u;
            g = n("./React-shim"), c = n("./createSetStateOnEventMixin"), m = n("../core/util").classSet, u = function(a) {
                return g.createClass({
                    displayName: "undo" === a ? "UndoButton" : "RedoButton",
                    getState: function getState() {
                        return {
                            isEnabled: function() {
                                switch (!1) {
                                    case "undo" !== a:
                                        return this.props.lc.canUndo();
                                    case "redo" !== a:
                                        return this.props.lc.canRedo();
                                }
                            }.call(this)
                        }
                    },
                    getInitialState: function getInitialState() {
                        return this.getState()
                    },
                    mixins: [c("drawingChange")],
                    render: function render() {
                        var t, i, y, S, f, x, k, b, C, w, v;
                        return k = g.DOM, i = k.div, S = k.img, b = this.props, f = b.lc, y = b.imageURLPrefix, v = "undo" === a ? "Undo" : "Redo", t = "lc-" + a + " " + m({
                            "toolbar-button": !0,
                            "thin-button": !0,
                            disabled: !this.state.isEnabled
                        }), x = function() {
                            switch (!1) {
                                case !!this.state.isEnabled:
                                    return function() {};
                                case "undo" !== a:
                                    return function() {
                                        return f.undo()
                                    };
                                case "redo" !== a:
                                    return function() {
                                        return f.redo()
                                    };
                            }
                        }.call(this), C = y + "/" + a + ".png", w = {
                            backgroundImage: "url(" + C + ")"
                        }, i({
                            className: t,
                            onClick: x,
                            title: v,
                            style: w
                        })
                    }
                })
            }, p = g.createFactory(u("undo")), e = g.createFactory(u("redo")), d = g.createClass({
                displayName: "UndoRedoButtons",
                render: function render() {
                    var o;
                    return (o = g.DOM.div)({
                        className: "lc-undo-redo"
                    }, p(this.props), e(this.props))
                }
            }), t.exports = d
        }, {
            "../core/util": 19,
            "./React-shim": 35,
            "./createSetStateOnEventMixin": 40
        }],
        39: [function(n, t) {
            var g, e, p, d, m, c, u;
            g = n("./React-shim"), c = n("./createSetStateOnEventMixin"), m = n("../core/util").classSet, u = function(a) {
                return g.createClass({
                    displayName: "in" === a ? "ZoomInButton" : "ZoomOutButton",
                    getState: function getState() {
                        return {
                            isEnabled: function() {
                                switch (!1) {
                                    case "in" !== a:
                                        return this.props.lc.scale < this.props.lc.config.zoomMax;
                                    case "out" !== a:
                                        return this.props.lc.scale > this.props.lc.config.zoomMin;
                                }
                            }.call(this)
                        }
                    },
                    getInitialState: function getInitialState() {
                        return this.getState()
                    },
                    mixins: [c("zoom")],
                    render: function render() {
                        var t, i, y, S, f, x, k, b, C, w, v;
                        return k = g.DOM, i = k.div, S = k.img, b = this.props, f = b.lc, y = b.imageURLPrefix, v = "in" === a ? "Zoom in" : "Zoom out", t = "lc-zoom-" + a + " " + m({
                            "toolbar-button": !0,
                            "thin-button": !0,
                            disabled: !this.state.isEnabled
                        }), x = function() {
                            switch (!1) {
                                case !!this.state.isEnabled:
                                    return function() {};
                                case "in" !== a:
                                    return function() {
                                        return f.zoom(f.config.zoomStep)
                                    };
                                case "out" !== a:
                                    return function() {
                                        return f.zoom(-f.config.zoomStep)
                                    };
                            }
                        }.call(this), C = y + "/zoom-" + a + ".png", w = {
                            backgroundImage: "url(" + C + ")"
                        }, i({
                            className: t,
                            onClick: x,
                            title: v,
                            style: w
                        })
                    }
                })
            }, d = g.createFactory(u("out")), p = g.createFactory(u("in")), e = g.createClass({
                displayName: "ZoomButtons",
                render: function render() {
                    var e;
                    return (e = g.DOM.div)({
                        className: "lc-zoom"
                    }, d(this.props), p(this.props))
                }
            }), t.exports = e
        }, {
            "../core/util": 19,
            "./React-shim": 35,
            "./createSetStateOnEventMixin": 40
        }],
        40: [function(o, t) {
            var e, a;
            e = o("./React-shim"), t.exports = a = function(e) {
                return {
                    componentDidMount: function componentDidMount() {
                        return this.unsubscribe = this.props.lc.on(e, function(e) {
                            return function() {
                                return e.setState(e.getState())
                            }
                        }(this))
                    },
                    componentWillUnmount: function componentWillUnmount() {
                        return this.unsubscribe()
                    }
                }
            }
        }, {
            "./React-shim": 35
        }],
        41: [function(a, t) {
            var g, m, y, e;
            g = a("./React-shim"), y = a("../core/util").classSet, m = a("../core/localization")._, e = function(o) {
                var t, r;
                return t = o.name, r = o.iconName, g.createFactory(g.createClass({
                    displayName: t,
                    getDefaultProps: function getDefaultProps() {
                        return {
                            isSelected: !1,
                            lc: null
                        }
                    },
                    componentWillMount: function componentWillMount() {
                        return this.props.isSelected ? this.props.lc.setTool(o) : void 0
                    },
                    render: function render() {
                        var e, n, i, S, x, k, b, C, w;
                        return b = g.DOM, n = b.div, S = b.img, C = this.props, i = C.imageURLPrefix, x = C.isSelected, k = C.onSelect, e = y({
                            "lc-pick-tool": !0,
                            "toolbar-button": !0,
                            "thin-button": !0,
                            selected: x
                        }), w = i + "/" + r + ".png", n({
                            className: e,
                            style: {
                                backgroundImage: "url(" + w + ")"
                            },
                            onClick: function onClick() {
                                return k(o)
                            },
                            title: m(t)
                        })
                    }
                }))
            }, t.exports = e
        }, {
            "../core/localization": 13,
            "../core/util": 19,
            "./React-shim": 35
        }],
        42: [function(n, t) {
            "use strict";

            function e(a, t) {
                var p = a.className,
                    n = new o(t);
                return r.render(l.createElement(s, {
                    lc: n
                }), a), n.teardown = function() {
                    n._teardown();
                    for (var t = 0; t < a.children.length; t++) {
                        a.removeChild(a.children[t])
                    }
                    a.className = p
                }, n
            }
            var l = n("./React-shim"),
                r = n("./ReactDOM-shim"),
                o = n("../core/LiterallyCanvas"),
                s = n("./LiterallyCanvas");
            t.exports = e
        }, {
            "../core/LiterallyCanvas": 5,
            "./LiterallyCanvas": 32,
            "./React-shim": 35,
            "./ReactDOM-shim": 36
        }],
        43: [function(n, t) {
            var e, l, p, d = function(o, t) {
                    function e() {
                        this.constructor = o
                    }
                    for (var a in t) {
                        s.call(t, a) && (o[a] = t[a])
                    }
                    return e.prototype = t.prototype, o.prototype = new e, o.__super__ = t.prototype, o
                },
                s = {}.hasOwnProperty;
            l = n("./base").ToolWithStroke, p = n("../core/shapes").createShape, t.exports = e = function(o) {
                function t() {
                    return t.__super__.constructor.apply(this, arguments)
                }
                return d(t, o), t.prototype.name = "Ellipse", t.prototype.iconName = "ellipse", t.prototype.begin = function(o, t, e) {
                    return this.currentShape = p("Ellipse", {
                        x: o,
                        y: t,
                        strokeWidth: this.strokeWidth,
                        strokeColor: e.getColor("primary"),
                        fillColor: e.getColor("secondary")
                    })
                }, t.prototype["continue"] = function(o, t, e) {
                    return this.currentShape.width = o - this.currentShape.x, this.currentShape.height = t - this.currentShape.y, e.drawShapeInProgress(this.currentShape)
                }, t.prototype.end = function(o, t, e) {
                    return e.saveShape(this.currentShape)
                }, t
            }(l)
        }, {
            "../core/shapes": 17,
            "./base": 53
        }],
        44: [function(n, t) {
            var e, l, p, d = function(o, t) {
                    function e() {
                        this.constructor = o
                    }
                    for (var a in t) {
                        s.call(t, a) && (o[a] = t[a])
                    }
                    return e.prototype = t.prototype, o.prototype = new e, o.__super__ = t.prototype, o
                },
                s = {}.hasOwnProperty;
            l = n("./Pencil"), p = n("../core/shapes").createShape, t.exports = e = function(o) {
                function t() {
                    return t.__super__.constructor.apply(this, arguments)
                }
                return d(t, o), t.prototype.name = "Eraser", t.prototype.iconName = "eraser", t.prototype.makePoint = function(o, t) {
                    return p("Point", {
                        x: o,
                        y: t,
                        size: this.strokeWidth,
                        color: "#000"
                    })
                }, t.prototype.makeShape = function() {
                    return p("ErasedLinePath")
                }, t
            }(l)
        }, {
            "../core/shapes": 17,
            "./Pencil": 48
        }],
        45: [function(n, t) {
            var e, l, p, d = function(o, t) {
                    function e() {
                        this.constructor = o
                    }
                    for (var a in t) {
                        s.call(t, a) && (o[a] = t[a])
                    }
                    return e.prototype = t.prototype, o.prototype = new e, o.__super__ = t.prototype, o
                },
                s = {}.hasOwnProperty;
            l = n("./base").Tool, p = function(o, t) {
                var e, a, s;
                return a = t.x, s = t.y, e = o.getImageData(a, s, 1, 1).data, e[3] ? "rgb(" + e[0] + ", " + e[1] + ", " + e[2] + ")" : null
            }, t.exports = e = function(o) {
                function a(e) {
                    a.__super__.constructor.call(this, e), this.strokeOrFill = "stroke"
                }
                return d(a, o), a.prototype.name = "Eyedropper", a.prototype.iconName = "eyedropper", a.prototype.optionsStyle = "stroke-or-fill", a.prototype.readColor = function(o, t, e) {
                    var n, l, d, c;
                    return c = e.getDefaultImageRect(), n = e.getImage(), d = p(n.getContext("2d"), {
                        x: o - c.x,
                        y: t - c.y
                    }), l = d || e.getColor("background"), "stroke" === this.strokeOrFill ? e.setColor("primary", d) : e.setColor("secondary", d)
                }, a.prototype.begin = function(o, t, e) {
                    return this.readColor(o, t, e)
                }, a.prototype["continue"] = function(o, t, e) {
                    return this.readColor(o, t, e)
                }, a
            }(l)
        }, {
            "./base": 53
        }],
        46: [function(n, t) {
            var e, l, p, d = function(o, t) {
                    function e() {
                        this.constructor = o
                    }
                    for (var a in t) {
                        s.call(t, a) && (o[a] = t[a])
                    }
                    return e.prototype = t.prototype, o.prototype = new e, o.__super__ = t.prototype, o
                },
                s = {}.hasOwnProperty;
            l = n("./base").ToolWithStroke, p = n("../core/shapes").createShape, t.exports = e = function(o) {
                function t() {
                    return t.__super__.constructor.apply(this, arguments)
                }
                return d(t, o), t.prototype.name = "Line", t.prototype.iconName = "line", t.prototype.optionsStyle = "line-options-and-stroke-width", t.prototype.begin = function(o, t, e) {
                    return this.currentShape = p("Line", {
                        x1: o,
                        y1: t,
                        x2: o,
                        y2: t,
                        strokeWidth: this.strokeWidth,
                        dash: function() {
                            switch (!1) {
                                case !this.isDashed:
                                    return [2 * this.strokeWidth, 4 * this.strokeWidth];
                                default:
                                    return null;
                            }
                        }.call(this),
                        endCapShapes: this.hasEndArrow ? [null, "arrow"] : null,
                        color: e.getColor("primary")
                    })
                }, t.prototype["continue"] = function(o, t, e) {
                    return this.currentShape.x2 = o, this.currentShape.y2 = t, e.drawShapeInProgress(this.currentShape)
                }, t.prototype.end = function(o, t, e) {
                    return e.saveShape(this.currentShape)
                }, t
            }(l)
        }, {
            "../core/shapes": 17,
            "./base": 53
        }],
        47: [function(n, t) {
            var e, l, p, d = function(o, t) {
                    function e() {
                        this.constructor = o
                    }
                    for (var a in t) {
                        s.call(t, a) && (o[a] = t[a])
                    }
                    return e.prototype = t.prototype, o.prototype = new e, o.__super__ = t.prototype, o
                },
                s = {}.hasOwnProperty;
            l = n("./base").Tool, p = n("../core/shapes").createShape, t.exports = e = function(o) {
                function t() {
                    return t.__super__.constructor.apply(this, arguments)
                }
                return d(t, o), t.prototype.name = "Pan", t.prototype.iconName = "pan", t.prototype.usesSimpleAPI = !1, t.prototype.didBecomeActive = function(a) {
                    var o;
                    return o = [], this.unsubscribe = function() {
                        return function() {
                            var e, a, s, l;
                            for (l = [], a = 0, s = o.length; s > a; a++) {
                                e = o[a], l.push(e())
                            }
                            return l
                        }
                    }(this), o.push(a.on("lc-pointerdown", function(t) {
                        return function(e) {
                            var o, n;
                            return o = e.rawX, n = e.rawY, t.oldPosition = a.position, t.pointerStart = {
                                x: o,
                                y: n
                            }
                        }
                    }(this))), o.push(a.on("lc-pointerdrag", function(t) {
                        return function(e) {
                            var n, s, l;
                            return s = e.rawX, l = e.rawY, n = {
                                x: (s - t.pointerStart.x) * a.backingScale,
                                y: (l - t.pointerStart.y) * a.backingScale
                            }, a.setPan(t.oldPosition.x + n.x, t.oldPosition.y + n.y)
                        }
                    }(this)))
                }, t.prototype.willBecomeInactive = function() {
                    return this.unsubscribe()
                }, t
            }(l)
        }, {
            "../core/shapes": 17,
            "./base": 53
        }],
        48: [function(n, t) {
            var e, l, p, d = function(o, t) {
                    function e() {
                        this.constructor = o
                    }
                    for (var a in t) {
                        s.call(t, a) && (o[a] = t[a])
                    }
                    return e.prototype = t.prototype, o.prototype = new e, o.__super__ = t.prototype, o
                },
                s = {}.hasOwnProperty;
            l = n("./base").ToolWithStroke, p = n("../core/shapes").createShape, t.exports = e = function(o) {
                function t() {
                    return t.__super__.constructor.apply(this, arguments)
                }
                return d(t, o), t.prototype.name = "Pencil", t.prototype.iconName = "pencil", t.prototype.eventTimeThreshold = 10, t.prototype.begin = function(o, t, e) {
                    return this.color = e.getColor("primary"), this.currentShape = this.makeShape(), this.currentShape.addPoint(this.makePoint(o, t, e)), this.lastEventTime = Date.now()
                }, t.prototype["continue"] = function(o, t, e) {
                    var a;
                    return a = Date.now() - this.lastEventTime, a > this.eventTimeThreshold ? (this.lastEventTime += a, this.currentShape.addPoint(this.makePoint(o, t, e)), e.drawShapeInProgress(this.currentShape)) : void 0
                }, t.prototype.end = function(o, t, e) {
                    return e.saveShape(this.currentShape), this.currentShape = void 0
                }, t.prototype.makePoint = function(o, t) {
                    return p("Point", {
                        x: o,
                        y: t,
                        size: this.strokeWidth,
                        color: this.color
                    })
                }, t.prototype.makeShape = function() {
                    return p("LinePath")
                }, t
            }(l)
        }, {
            "../core/shapes": 17,
            "./base": 53
        }],
        49: [function(n, t) {
            var e, l, p, d = function(o, t) {
                    function e() {
                        this.constructor = o
                    }
                    for (var a in t) {
                        s.call(t, a) && (o[a] = t[a])
                    }
                    return e.prototype = t.prototype, o.prototype = new e, o.__super__ = t.prototype, o
                },
                s = {}.hasOwnProperty;
            l = n("./base").ToolWithStroke, p = n("../core/shapes").createShape, t.exports = e = function(o) {
                function l() {
                    return l.__super__.constructor.apply(this, arguments)
                }
                return d(l, o), l.prototype.name = "Polygon", l.prototype.iconName = "polygon", l.prototype.usesSimpleAPI = !1, l.prototype.didBecomeActive = function(p) {
                    var e, t, d, c, g, u, m;
                    return l.__super__.didBecomeActive.call(this, p), m = [], this.polygonUnsubscribe = function() {
                        return function() {
                            var o, a, r, s;
                            for (s = [], a = 0, r = m.length; r > a; a++) {
                                o = m[a], s.push(o())
                            }
                            return s
                        }
                    }(this), this.points = null, this.maybePoint = null, d = function(t) {
                        return function() {
                            return t._getWillFinish() ? t._close(p) : (p.trigger("lc-polygon-started"), t.points ? t.points.push(t.maybePoint) : t.points = [t.maybePoint], t.maybePoint = {
                                x: t.maybePoint.x,
                                y: t.maybePoint.y
                            }, p.setShapesInProgress(t._getShapes(p)), p.repaintLayer("main"))
                        }
                    }(this), t = function(t) {
                        return function(e) {
                            var o, a;
                            return o = e.x, a = e.y, t.maybePoint ? (t.maybePoint.x = o, t.maybePoint.y = a, p.setShapesInProgress(t._getShapes(p)), p.repaintLayer("main")) : void 0
                        }
                    }(this), e = function(t) {
                        return function(e) {
                            var o, a;
                            return o = e.x, a = e.y, t.maybePoint = {
                                x: o,
                                y: a
                            }, p.setShapesInProgress(t._getShapes(p)), p.repaintLayer("main")
                        }
                    }(this), u = function(t) {
                        return function() {
                            return t.maybePoint = {
                                x: 1 / 0,
                                y: 1 / 0
                            }, t._close(p)
                        }
                    }(this), g = function(t) {
                        return function() {
                            return t.maybePoint = t.points[0], t._close(p)
                        }
                    }(this), c = function(t) {
                        return function() {
                            return t._cancel(p)
                        }
                    }(this), m.push(p.on("drawingChange", function(t) {
                        return function() {
                            return t._cancel(p)
                        }
                    }(this))), m.push(p.on("lc-pointerdown", e)), m.push(p.on("lc-pointerdrag", t)), m.push(p.on("lc-pointermove", t)), m.push(p.on("lc-pointerup", d)), m.push(p.on("lc-polygon-finishopen", u)), m.push(p.on("lc-polygon-finishclosed", g)), m.push(p.on("lc-polygon-cancel", c))
                }, l.prototype.willBecomeInactive = function(e) {
                    return l.__super__.willBecomeInactive.call(this, e), (this.points || this.maybePoint) && this._cancel(e), this.polygonUnsubscribe()
                }, l.prototype._getArePointsClose = function(o, t) {
                    return 10 > Math.abs(o.x - t.x) + Math.abs(o.y - t.y)
                }, l.prototype._getWillClose = function() {
                    return this.points && 1 < this.points.length && this.maybePoint ? this._getArePointsClose(this.points[0], this.maybePoint) : !1
                }, l.prototype._getWillFinish = function() {
                    return this.points && 1 < this.points.length && this.maybePoint ? this._getArePointsClose(this.points[0], this.maybePoint) || this._getArePointsClose(this.points[this.points.length - 1], this.maybePoint) : !1
                }, l.prototype._cancel = function(e) {
                    return e.trigger("lc-polygon-stopped"), this.maybePoint = null, this.points = null, e.setShapesInProgress([]), e.repaintLayer("main")
                }, l.prototype._close = function(e) {
                    return e.trigger("lc-polygon-stopped"), e.setShapesInProgress([]), 2 < this.points.length && e.saveShape(this._getShape(e, !1)), this.maybePoint = null, this.points = null
                }, l.prototype._getShapes = function(o, t) {
                    var a;
                    return null == t && (t = !0), a = this._getShape(o, t), a ? [a] : []
                }, l.prototype._getShape = function(o, t) {
                    var a;
                    return null == t && (t = !0), a = [], this.points && (a = a.concat(this.points)), !t && 3 > a.length ? null : (t && this.maybePoint && a.push(this.maybePoint), 1 < a.length ? p("Polygon", {
                        isClosed: this._getWillClose(),
                        strokeColor: o.getColor("primary"),
                        fillColor: o.getColor("secondary"),
                        strokeWidth: this.strokeWidth,
                        points: a.map(function(e) {
                            return p("Point", e)
                        })
                    }) : null)
                }, l.prototype.optionsStyle = "polygon-and-stroke-width", l
            }(l)
        }, {
            "../core/shapes": 17,
            "./base": 53
        }],
        50: [function(n, t) {
            var e, l, p, d = function(o, t) {
                    function e() {
                        this.constructor = o
                    }
                    for (var a in t) {
                        s.call(t, a) && (o[a] = t[a])
                    }
                    return e.prototype = t.prototype, o.prototype = new e, o.__super__ = t.prototype, o
                },
                s = {}.hasOwnProperty;
            l = n("./base").ToolWithStroke, p = n("../core/shapes").createShape, t.exports = e = function(o) {
                function t() {
                    return t.__super__.constructor.apply(this, arguments)
                }
                return d(t, o), t.prototype.name = "Rectangle", t.prototype.iconName = "rectangle", t.prototype.begin = function(o, t, e) {
                    return this.currentShape = p("Rectangle", {
                        x: o,
                        y: t,
                        strokeWidth: this.strokeWidth,
                        strokeColor: e.getColor("primary"),
                        fillColor: e.getColor("secondary")
                    })
                }, t.prototype["continue"] = function(o, t, e) {
                    return this.currentShape.width = o - this.currentShape.x, this.currentShape.height = t - this.currentShape.y, e.drawShapeInProgress(this.currentShape)
                }, t.prototype.end = function(o, t, e) {
                    return e.saveShape(this.currentShape)
                }, t
            }(l)
        }, {
            "../core/shapes": 17,
            "./base": 53
        }],
        51: [function(n, t) {
            var e, l, p, d = function(o, t) {
                    function e() {
                        this.constructor = o
                    }
                    for (var a in t) {
                        s.call(t, a) && (o[a] = t[a])
                    }
                    return e.prototype = t.prototype, o.prototype = new e, o.__super__ = t.prototype, o
                },
                s = {}.hasOwnProperty;
            l = n("./base").Tool, p = n("../core/shapes").createShape, t.exports = e = function(o) {
                function t() {
                    this.selectCanvas = document.createElement("canvas"), this.selectCanvas.style["background-color"] = "transparent", this.selectCtx = this.selectCanvas.getContext("2d")
                }
                return d(t, o), t.prototype.name = "SelectShape", t.prototype.usesSimpleAPI = !1, t.prototype.didBecomeActive = function(o) {
                    var t, a, s, l;
                    return l = [], this._selectShapeUnsubscribe = function() {
                        return function() {
                            var o, a, r, s;
                            for (s = [], a = 0, r = l.length; r > a; a++) {
                                o = l[a], s.push(o())
                            }
                            return s
                        }
                    }(this), t = function(t) {
                        return function(e) {
                            var n, l, d, c;
                            return d = e.x, c = e.y, t.didDrag = !1, l = t._getPixel(d, c, o, t.selectCtx), t.selectedShape = o.shapes[l], null != t.selectedShape ? (o.trigger("shapeSelected", {
                                selectedShape: t.selectedShape
                            }), o.setShapesInProgress([t.selectedShape, p("SelectionBox", {
                                shape: t.selectedShape,
                                handleSize: 0
                            })]), o.repaintLayer("main"), n = t.selectedShape.getBoundingRect(), t.dragOffset = {
                                x: d - n.x,
                                y: c - n.y
                            }) : void 0
                        }
                    }(this), a = function(t) {
                        return function(e) {
                            var a, n;
                            return a = e.x, n = e.y, null != t.selectedShape ? (t.didDrag = !0, t.selectedShape.setUpperLeft({
                                x: a - t.dragOffset.x,
                                y: n - t.dragOffset.y
                            }), o.setShapesInProgress([t.selectedShape, p("SelectionBox", {
                                shape: t.selectedShape,
                                handleSize: 0
                            })]), o.repaintLayer("main")) : void 0
                        }
                    }(this), s = function(t) {
                        return function(e) {
                            var a, n;
                            return a = e.x, n = e.y, t.didDrag ? (t.didDrag = !1, o.trigger("shapeMoved", {
                                shape: t.selectedShape
                            }), o.trigger("drawingChange", {}), o.repaintLayer("main"), t._drawSelectCanvas(o)) : void 0
                        }
                    }(this), l.push(o.on("lc-pointerdown", t)), l.push(o.on("lc-pointerdrag", a)), l.push(o.on("lc-pointerup", s)), this._drawSelectCanvas(o)
                }, t.prototype.willBecomeInactive = function(e) {
                    return this._selectShapeUnsubscribe(), e.setShapesInProgress([])
                }, t.prototype._drawSelectCanvas = function(o) {
                    var t;
                    return this.selectCanvas.width = o.canvas.width, this.selectCanvas.height = o.canvas.height, this.selectCtx.clearRect(0, 0, this.selectCanvas.width, this.selectCanvas.height), t = o.shapes.map(function(o) {
                        return function(t, e) {
                            return p("SelectionBox", {
                                shape: t,
                                handleSize: 0,
                                backgroundColor: "#" + o._intToHex(e)
                            })
                        }
                    }(this)), o.draw(t, this.selectCtx)
                }, t.prototype._intToHex = function(e) {
                    return ("000000" + e.toString(16)).slice(-6)
                }, t.prototype._getPixel = function(a, t, e, n) {
                    var i, s;
                    return i = e.drawingCoordsToClientCoords(a, t), s = n.getImageData(i.x, i.y, 1, 1).data, s[3] ? parseInt(this._rgbToHex(s[0], s[1], s[2]), 16) : null
                }, t.prototype._componentToHex = function(o) {
                    var t;
                    return t = o.toString(16), ("0" + t).slice(-2)
                }, t.prototype._rgbToHex = function(o, t, e) {
                    return "" + this._componentToHex(o) + this._componentToHex(t) + this._componentToHex(e)
                }, t
            }(l)
        }, {
            "../core/shapes": 17,
            "./base": 53
        }],
        52: [function(n, t) {
            var e, l, p, d, c = function(o, t) {
                    function e() {
                        this.constructor = o
                    }
                    for (var n in t) {
                        a.call(t, n) && (o[n] = t[n])
                    }
                    return e.prototype = t.prototype, o.prototype = new e, o.__super__ = t.prototype, o
                },
                a = {}.hasOwnProperty;
            l = n("./base").Tool, p = n("../core/shapes").createShape, d = function(o, t) {
                return o.x < t.x ? !1 : o.y < t.y ? !1 : o.x > t.x + t.width ? !1 : !(o.y > t.y + t.height)
            }, t.exports = e = function(o) {
                function t() {
                    this.text = "", this.font = "bold 18px sans-serif", this.currentShape = null, this.currentShapeState = null, this.initialShapeBoundingRect = null, this.dragAction = null, this.didDrag = !1
                }
                return c(t, o), t.prototype.name = "Text", t.prototype.iconName = "text", t.prototype.didBecomeActive = function(o) {
                    var t, a, r;
                    return a = [], this.unsubscribe = function() {
                        return function() {
                            var o, n, s, l;
                            for (l = [], n = 0, s = a.length; s > n; n++) {
                                o = a[n], l.push(o())
                            }
                            return l
                        }
                    }(this), t = function(t) {
                        return function() {
                            return t._ensureNotEditing(o), t._clearCurrentShape(o), o.repaintLayer("main")
                        }
                    }(this), r = function(t) {
                        return function() {
                            return t._updateInputEl(o)
                        }
                    }(this), a.push(o.on("drawingChange", t)), a.push(o.on("zoom", r)), a.push(o.on("imageSizeChange", r)), a.push(o.on("snapshotLoad", function(t) {
                        return function() {
                            return t._clearCurrentShape(o), o.repaintLayer("main")
                        }
                    }(this))), a.push(o.on("primaryColorChange", function(t) {
                        return function(e) {
                            return t.currentShape ? (t.currentShape.color = e, t._updateInputEl(o), o.repaintLayer("main")) : void 0
                        }
                    }(this))), a.push(o.on("setFont", function(t) {
                        return function(e) {
                            return t.currentShape ? (t.font = e, t.currentShape.setFont(e), t._setShapesInProgress(o), t._updateInputEl(o), o.repaintLayer("main")) : void 0
                        }
                    }(this)))
                }, t.prototype.willBecomeInactive = function(e) {
                    return this.currentShape && (this._ensureNotEditing(e), this.commit(e)), this.unsubscribe()
                }, t.prototype.setText = function(e) {
                    return this.text = e
                }, t.prototype._ensureNotEditing = function(e) {
                    return "editing" === this.currentShapeState ? this._exitEditingState(e) : void 0
                }, t.prototype._clearCurrentShape = function(e) {
                    return this.currentShape = null, this.initialShapeBoundingRect = null, this.currentShapeState = null, e.setShapesInProgress([])
                }, t.prototype.commit = function(e) {
                    return this.currentShape.text && e.saveShape(this.currentShape), this._clearCurrentShape(e), e.repaintLayer("main")
                }, t.prototype._getSelectionShape = function(o, t) {
                    return null == t && (t = null), p("SelectionBox", {
                        shape: this.currentShape,
                        ctx: o,
                        backgroundColor: t
                    })
                }, t.prototype._setShapesInProgress = function(e) {
                    switch (this.currentShapeState) {
                        case "selected":
                            return e.setShapesInProgress([this._getSelectionShape(e.ctx), this.currentShape]);
                        case "editing":
                            return e.setShapesInProgress([this._getSelectionShape(e.ctx, "#fff")]);
                        default:
                            return e.setShapesInProgress([this.currentShape]);
                    }
                }, t.prototype.begin = function(o, t, e) {
                    var n, s, l, c;
                    return this.dragAction = "none", this.didDrag = !1, "selected" === this.currentShapeState || "editing" === this.currentShapeState ? (n = this.currentShape.getBoundingRect(e.ctx), c = this._getSelectionShape(e.ctx), l = c.getBoundingRect(), s = {
                        x: o,
                        y: t
                    }, d(s, n) && (this.dragAction = "move"), d(s, c.getBottomRightHandleRect()) && (this.dragAction = "resizeBottomRight"), d(s, c.getTopLeftHandleRect()) && (this.dragAction = "resizeTopLeft"), d(s, c.getBottomLeftHandleRect()) && (this.dragAction = "resizeBottomLeft"), d(s, c.getTopRightHandleRect()) && (this.dragAction = "resizeTopRight"), "none" === this.dragAction && "editing" === this.currentShapeState && (this.dragAction = "stop-editing", this._exitEditingState(e))) : (this.color = e.getColor("primary"), this.currentShape = p("Text", {
                        x: o,
                        y: t,
                        text: this.text,
                        color: this.color,
                        font: this.font,
                        v: 1
                    }), this.dragAction = "place", this.currentShapeState = "selected"), "none" === this.dragAction ? void this.commit(e) : (this.initialShapeBoundingRect = this.currentShape.getBoundingRect(e.ctx), this.dragOffset = {
                        x: o - this.initialShapeBoundingRect.x,
                        y: t - this.initialShapeBoundingRect.y
                    }, this._setShapesInProgress(e), e.repaintLayer("main"))
                }, t.prototype["continue"] = function(a, t, e) {
                    var n, s, l;
                    if ("none" !== this.dragAction) {
                        switch (n = this.initialShapeBoundingRect, l = n.x + n.width, s = n.y + n.height, this.dragAction) {
                            case "place":
                                this.currentShape.x = a, this.currentShape.y = t, this.didDrag = !0;
                                break;
                            case "move":
                                this.currentShape.x = a - this.dragOffset.x, this.currentShape.y = t - this.dragOffset.y, this.didDrag = !0;
                                break;
                            case "resizeBottomRight":
                                this.currentShape.setSize(a - (this.dragOffset.x - this.initialShapeBoundingRect.width) - n.x, t - (this.dragOffset.y - this.initialShapeBoundingRect.height) - n.y);
                                break;
                            case "resizeTopLeft":
                                this.currentShape.setSize(l - a + this.dragOffset.x, s - t + this.dragOffset.y), this.currentShape.setPosition(a - this.dragOffset.x, t - this.dragOffset.y);
                                break;
                            case "resizeBottomLeft":
                                this.currentShape.setSize(l - a + this.dragOffset.x, t - (this.dragOffset.y - this.initialShapeBoundingRect.height) - n.y), this.currentShape.setPosition(a - this.dragOffset.x, this.currentShape.y);
                                break;
                            case "resizeTopRight":
                                this.currentShape.setSize(a - (this.dragOffset.x - this.initialShapeBoundingRect.width) - n.x, s - t + this.dragOffset.y), this.currentShape.setPosition(this.currentShape.x, t - this.dragOffset.y);
                        }
                        return this._setShapesInProgress(e), e.repaintLayer("main"), this._updateInputEl(e)
                    }
                }, t.prototype.end = function(o, t, e) {
                    return this.currentShape ? (this.currentShape.setSize(this.currentShape.forcedWidth, 0), "selected" === this.currentShapeState && ("place" === this.dragAction || "move" === this.dragAction && !this.didDrag) && this._enterEditingState(e), this._setShapesInProgress(e), e.repaintLayer("main"), this._updateInputEl(e)) : void 0
                }, t.prototype._enterEditingState = function(o) {
                    var t;
                    if (this.currentShapeState = "editing", this.inputEl) throw "State error";
                    return this.inputEl = document.createElement("textarea"), this.inputEl.className = "text-tool-input", this.inputEl.style.position = "absolute", this.inputEl.style.transformOrigin = "0px 0px", this.inputEl.style.backgroundColor = "transparent", this.inputEl.style.border = "none", this.inputEl.style.outline = "none", this.inputEl.style.margin = "0", this.inputEl.style.padding = "4px", this.inputEl.style.zIndex = "1000", this.inputEl.style.overflow = "hidden", this.inputEl.style.resize = "none", this.inputEl.value = this.currentShape.text, this.inputEl.addEventListener("mousedown", function(e) {
                        return e.stopPropagation()
                    }), this.inputEl.addEventListener("touchstart", function(e) {
                        return e.stopPropagation()
                    }), t = function(t) {
                        return function(e) {
                            return t.currentShape.setText(e.target.value), t.currentShape.enforceMaxBoundingRect(o), t._setShapesInProgress(o), o.repaintLayer("main"), t._updateInputEl(o), e.stopPropagation()
                        }
                    }(this), this.inputEl.addEventListener("keydown", function(t) {
                        return function() {
                            return t._updateInputEl(o, !0)
                        }
                    }(this)), this.inputEl.addEventListener("keyup", t), this.inputEl.addEventListener("change", t), this._updateInputEl(o), o.containerEl.appendChild(this.inputEl), this.inputEl.focus(), this._setShapesInProgress(o)
                }, t.prototype._exitEditingState = function(e) {
                    return this.currentShapeState = "selected", e.containerEl.removeChild(this.inputEl), this.inputEl = null, this._setShapesInProgress(e), e.repaintLayer("main")
                }, t.prototype._updateInputEl = function(o, t) {
                    var a, r;
                    return null == t && (t = !1), this.inputEl ? (a = this.currentShape.getBoundingRect(o.ctx, !0), this.inputEl.style.font = this.currentShape.font, this.inputEl.style.color = this.currentShape.color, this.inputEl.style.left = o.position.x / o.backingScale + a.x * o.scale - 4 + "px", this.inputEl.style.top = o.position.y / o.backingScale + a.y * o.scale - 4 + "px", t && !this.currentShape.forcedWidth ? this.inputEl.style.width = a.width + 10 + this.currentShape.renderer.emDashWidth + "px" : this.inputEl.style.width = a.width + 12 + "px", t ? this.inputEl.style.height = a.height + 10 + this.currentShape.renderer.metrics.leading + "px" : this.inputEl.style.height = a.height + 10 + "px", r = "scale(" + o.scale + ")", this.inputEl.style.transform = r, this.inputEl.style.webkitTransform = r, this.inputEl.style.MozTransform = r, this.inputEl.style.msTransform = r, this.inputEl.style.OTransform = r) : void 0
                }, t.prototype.optionsStyle = "font", t
            }(l)
        }, {
            "../core/shapes": 17,
            "./base": 53
        }],
        53: [function(n, t) {
            var e, l, p, d = function(o, t) {
                    function e() {
                        this.constructor = o
                    }
                    for (var a in t) {
                        s.call(t, a) && (o[a] = t[a])
                    }
                    return e.prototype = t.prototype, o.prototype = new e, o.__super__ = t.prototype, o
                },
                s = {}.hasOwnProperty;
            p = {}, p.Tool = e = function() {
                function e() {}
                return e.prototype.name = null, e.prototype.iconName = null, e.prototype.usesSimpleAPI = !0, e.prototype.begin = function() {}, e.prototype["continue"] = function() {}, e.prototype.end = function() {}, e.prototype.optionsStyle = null, e.prototype.didBecomeActive = function() {}, e.prototype.willBecomeInactive = function() {}, e
            }(), p.ToolWithStroke = l = function(o) {
                function t(e) {
                    this.strokeWidth = e.opts.defaultStrokeWidth
                }
                return d(t, o), t.prototype.optionsStyle = "stroke-width", t.prototype.didBecomeActive = function(o) {
                    var a;
                    return a = [], this.unsubscribe = function() {
                        return function() {
                            var e, o, s, l;
                            for (l = [], o = 0, s = a.length; s > o; o++) {
                                e = a[o], l.push(e())
                            }
                            return l
                        }
                    }(this), a.push(o.on("setStrokeWidth", function(t) {
                        return function(e) {
                            return t.strokeWidth = e, o.trigger("toolDidUpdateOptions")
                        }
                    }(this)))
                }, t.prototype.willBecomeInactive = function() {
                    return this.unsubscribe()
                }, t
            }(e), t.exports = p
        }, {}]
    }, {}, [22])(22)
});
define("filter_poodll/poodll_mediaskins", ["jquery", "core/log", "filter_poodll/poodll_basemediaskin", "filter_poodll/poodll_onetwothreemediaskin", "filter_poodll/poodll_goldmediaskin", "filter_poodll/poodll_bmrmediaskin", "filter_poodll/poodll_shadowmediaskin", "filter_poodll/poodll_splitmediaskin", "filter_poodll/poodll_fbmediaskin", "filter_poodll/poodll_pushmediaskin", "filter_poodll/poodll_readaloudmediaskin", "filter_poodll/poodll_readseedmediaskin", "filter_poodll/poodll_oncemediaskin", "filter_poodll/poodll_freshmediaskin", "filter_poodll/poodll_uploadmediaskin", "filter_poodll/poodll_warningmediaskin"], function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    "use strict";
    b.debug("PoodLL Media Skins: initialising");
    return {
        fetch_skin_clone: function fetch_skin_clone(a) {
            var b = "";
            switch (a) {
                case "onetwothree":
                    b = d.clone();
                    break;
                case "gold":
                    b = e.clone();
                    break;
                case "burntrose":
                case "bmr":
                    b = f.clone();
                    break;
                case "fluencybuilder":
                    b = i.clone();
                    break;
                case "push":
                    b = j.clone();
                    break;
                case "readaloud":
                    b = k.clone();
                    break;
                case "readseed":
                    b = l.clone();
                    break;
                case "shadow":
                    b = g.clone();
                    break;
                case "split":
                    b = h.clone();
                    break;
                case "once":
                    b = m.clone();
                    break;
                case "fresh":
                    b = n.clone();
                    break;
                case "upload":
                    b = o.clone();
                    break;
                case "warning":
                    b = p.clone();
                    break;
                case "plain":
                case "standard":
                default:
                    b = c.clone();
            }
            return b
        }
    }
});
define("filter_poodll/anim_ripple", ["jquery", "core/log"], function(a, b) {
    "use strict";
    b.debug("anim_ripple: initialising");
    return {
        analyser: null,
        cvs: null,
        cvsctx: null,
        drawparams: {
            rippleColor: "#0",
            lineWidth: 2
        },
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        init: function init(a, b) {
            this.cvs = b;
            this.cvsctx = b.getContext("2d");
            this.analyser = a
        },
        setDrawParam: function setDrawParam(a, b) {
            this.drawparams[a] = b
        },
        clear: function clear() {
            this.cvsctx.clearRect(0, 0, this.cvs.width, this.cvs.height)
        },
        start: function start() {
            this.analyser.core.fftSize = 2048;
            var a = this.analyser.core.fftSize,
                b = new Uint8Array(a),
                c = this.cvs.width,
                d = this.cvs.height,
                e = this.cvsctx,
                f = this.analyser;
            this.clear();
            var g = this,
                h = function() {
                    requestAnimationFrame(h);
                    if (!f.theinterval) {
                        return
                    }
                    f.core.getByteTimeDomainData(b);
                    e.clearRect(0, 0, c, d);
                    e.lineWidth = g.drawparams.lineWidth;
                    e.setLineDash([15, 5]);
                    e.strokeStyle = g.drawparams.rippleColor;
                    e.beginPath();
                    if (0 < a) {
                        var j = 1 + a / 5
                    }
                    for (var k = 0; k < a; k = k + j) {
                        var l = b[k] / 128;
                        e.arc(c / 2, d / 2, 50 + l * (d - 100) / 4, 0, 2 * Math.PI)
                    }
                    e.stroke()
                };
            h()
        }
    }
});
define("filter_poodll/anim_fbars", ["jquery", "core/log"], function(a, b) {
    "use strict";
    b.debug("anim_freq bars: initialising");
    return {
        analyser: null,
        cvs: null,
        cvsctx: null,
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        init: function init(a, b) {
            this.cvs = b;
            this.cvsctx = b.getContext("2d");
            this.analyser = a
        },
        clear: function clear() {
            this.cvsctx.clearRect(0, 0, this.cvs.width, this.cvs.height)
        },
        start: function start() {
            this.analyser.core.fftSize = 256;
            var a = this.analyser.core.frequencyBinCount,
                b = new Uint8Array(a),
                c = this.cvs.width,
                d = this.cvs.height,
                e = this.cvsctx,
                f = this.analyser;
            this.clear();
            var g = function() {
                requestAnimationFrame(g);
                if (!f.theinterval) {
                    return
                }
                f.core.getByteFrequencyData(b);
                e.clearRect(0, 0, c, d);
                for (var h = 2.5 * (c / a), j, k = 0, l = 0; l < a; l++) {
                    j = b[l];
                    e.fillStyle = "rgb(" + (j + 100) + ",50,50)";
                    e.fillRect(k, d - j / 2, h, j / 2);
                    k += h + 1
                }
            };
            g()
        }
    }
});
define("filter_poodll/poodll_pushmediaskin", ["jquery", "jqueryui", "core/log", "filter_poodll/utils_amd", "filter_poodll/upskin_radial", "filter_poodll/upskin_bar", "filter_poodll/anim_hwave_mic", "filter_poodll/dlg_devicesettings"], function(a, b, c, d, e, f, g, h) {
    "use strict";
    c.debug("PoodLL Push Skin: initialising");
    return {
        instanceprops: null,
        pmr: null,
        devsettings: null,
        therecanim: null,
        buttonmode: null,
        strings: null,
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        init: function init(a, b) {
            this.instanceprops = a;
            this.pmr = b;
            this.devsettings = h.clone();
            this.devsettings.init(b, a);
            this.strings = this.pmr.fetch_strings();
            this.strings.recui_pushtospeak = M.util.get_string("recui_pushtospeak", "filter_poodll")
        },
        fetch_instanceprops: function fetch_instanceprops() {
            return this.instanceprops
        },
        onUploadSuccess: function onUploadSuccess(a) {
            this.set_visual_mode("allfinished", a)
        },
        onUploadFailure: function onUploadFailure() {},
        fetch_status_bar: function fetch_status_bar(a) {
            return "<div class=\"poodll_status_" + a + "\" width=\"320\" height=\"50\">00:00:00</div>"
        },
        fetch_preview_audio: function fetch_preview_audio(a) {
            return "<audio class=\"poodll_preview_" + a + " hide\"></audio>"
        },
        fetch_preview_video: function fetch_preview_video(a) {
            return this.fetch_preview_audio(a)
        },
        fetch_resource_audio: function fetch_resource_audio(a) {
            return "<audio class=\"poodll_resourceplayer_" + a + " hide\" ></audio>"
        },
        fetch_resource_video: function fetch_resource_video(a) {
            return this.fetch_resource_audio(a)
        },
        onfinalspeechcapture: function onfinalspeechcapture() {
            this.just_stop()
        },
        onMediaError: function onMediaError(a) {
            console.error("media error", a)
        },
        onMediaSuccess_video: function onMediaSuccess_video(a) {
            this.fetch_instanceprops();
            this.set_visual_mode("startbuttonrecording", a)
        },
        onMediaSuccess_audio: function onMediaSuccess_audio(a) {
            var b = this.fetch_instanceprops(a);
            b.controlbar.preview.attr("src", null);
            b.uploader.Output("");
            this.therecanim.start();
            b.timer.reset();
            b.timer.start();
            this.update_status(a);
            this.set_visual_mode("startbuttonrecording", a)
        },
        handle_timer_update: function handle_timer_update(a) {
            var b = this.fetch_instanceprops();
            b.controlbar.status.html(b.timer.fetch_display_time());
            if (0 == b.timer.seconds && 0 < b.timer.initseconds) {
                this.stop_and_upload(a)
            }
        },
        update_status: function update_status() {
            var a = this.fetch_instanceprops();
            a.controlbar.status.html(a.timer.fetch_display_time())
        },
        fetch_uploader_skin: function fetch_uploader_skin(a, b) {
            var c = this.fetch_instanceprops(),
                d = f.clone();
            d.init(c.config, b, c.controlbar.playcanvas, c.controlbar.status);
            return d
        },
        set_button_style: function set_button_style(b) {
            a.each(["testbuttonready", "testbuttonrecording", "startbuttonready", "startbuttoncountdown", "startbuttonrecording", "uploading", "allfinished"], function(b, c) {
                a(".poodll_mediarecorderbox_push").removeClass("poodll_mediarecorder_push_" + c);
                a(".poodll_mediarecorderbox_push").removeClass("push_canclick")
            });
            a(".poodll_mediarecorderbox_push").addClass("poodll_mediarecorder_push_" + b);
            if ("testbuttonready" == b || "startbuttonready" == b) {
                a(".poodll_mediarecorderbox_push").addClass("push_canclick")
            }
        },
        set_visual_mode: function set_visual_mode(a) {
            var b = this,
                c = this.fetch_instanceprops();
            this.buttonmode = a;
            c.config.hermes.postMessage({
                type: "recorderstatus",
                status: a
            });
            switch (a) {
                case "startbuttonready":
                    c.controlbar.thecaption.text(b.strings.recui_pushtospeak);
                    c.controlbar.thecaption.show();
                    c.controlbar.playcanvas.hide();
                    c.controlbar.status.hide();
                    c.controlbar.settingsicon.hide();
                    b.set_button_style(a);
                    break;
                case "startbuttonrecording":
                    c.controlbar.thecaption.hide();
                    c.controlbar.playcanvas.show();
                    b.set_button_style(a);
                    c.controlbar.status.hide();
                    break;
                case "uploading":
                    c.controlbar.thecaption.html("<i class=\"fa fa-spinner fa-spin fa-3x fa-fw\"></i>");
                    c.controlbar.thecaption.show();
                    c.controlbar.playcanvas.hide();
                    b.set_button_style(a);
                    c.controlbar.status.hide();
                    break;
                case "allfinished":
                    c.controlbar.thecaption.text("Finished");
                    c.controlbar.thecaption.show();
                    c.controlbar.playcanvas.hide();
                    c.controlbar.status.hide();
                    b.set_button_style(a);
                    break;
            }
        },
        insert_controlbar_video: function insert_controlbar_video(a, b, c, d) {
            return this.prepare_controlbar_audio(a, b, c, d)
        },
        insert_controlbar_audio: function insert_controlbar_audio(a, b, c, d) {
            var e = this.prepare_controlbar(a, b, c, d, "audio");
            return e
        },
        prepare_controlbar: function prepare_controlbar(b, c, d) {
            var e = this.fetch_instanceprops(),
                f = e.config.media_skin_style,
                g = this.fetch_status_bar("push"),
                h = "<div class=\"poodll_mediarecorderholder_push " + "poodll_mediarecorder_audio" + "\" id=\"holder_" + c + "\">";
            h += "<div class=\"poodll_mediarecorderbox_push\" id=\"" + c + "\">";
            h += this.devsettings.fetch_dialogue_box();
            h += e.downloaddialog.fetch_dialogue_box();
            h += e.errordialog.fetch_dialogue_box();
            h += "<div class=\"style-holder " + f + "\">";
            h += d, h += "<div class=\"settingsicon\" id=\"settingsicon_" + c + "\"><button type=\"button\" class=\"btn btn-info btn-lg\" data-toggle=\"modal\" data-target=\"#myModal\"><i class=\"fa fa-cogs\" aria-hidden=\"true\"></i></button></div>";
            h += "<canvas id=\"" + c + "_playcanvas\" class=\"poodll_mediarecorder_playcanvas_push\" width=\"180\" height=\"50\"></canvas>";
            h += "<span id=\"" + c + "_caption\" class=\"poodll_mediarecorder_caption_push\"></span>";
            h += "<span id=\"" + c + "_bogusstartbutton\" class=\"poodll_mediarecorder_bogusstartbutton_push\"></span>";
            h += "<span id=\"" + c + "_bogusstopbutton\" class=\"poodll_mediarecorder_bogusstopbutton_push\"></span>";
            h += g, h += "</div></div></div>";
            a(b).prepend(h);
            var i = {
                settingsdialog: a("#" + c + " .poodll_dialogue_box_settings"),
                downloaddialog: a("#" + c + " .poodll_dialogue_box_download"),
                errorsdialog: a("#" + c + " .poodll_dialogue_box_errors"),
                settingsicon: a("#" + c + " .settingsicon"),
                status: a("#" + c + " .poodll_status_push"),
                preview: a("#" + c + " .poodll_preview_push"),
                bigbutton: a("#" + c + ".poodll_mediarecorderbox_push"),
                playcanvas: a("#" + c + "_playcanvas"),
                thecaption: a("#" + c + "_caption"),
                themicicon: a("#" + c + "_micicon"),
                stopbutton: a("#" + c + " .poodll_mediarecorder_bogusstopbutton_push"),
                startbutton: a("#" + c + " .poodll_mediarecorder_bogusstartbutton_push")
            };
            e.downloaddialog.set_dialogue_box(i.downloaddialog);
            e.errordialog.set_dialogue_box(i.errorsdialog);
            this.devsettings.set_dialogue_box(i.settingsdialog);
            return i
        },
        register_controlbar_events_video: function register_controlbar_events_video(a, b) {
            return this.register_controlbar_events_audio(a, b)
        },
        register_controlbar_events_audio: function register_controlbar_events_audio(b, d) {
            var f = this,
                h = this.pmr,
                i = this.fetch_instanceprops();
            i.config.recanim = "hwave_mic";
            var e = g.clone();
            f.therecanim = e;
            e.init(i.audioanalyser, i.controlbar.playcanvas.get(0));
            this.set_visual_mode("startbuttonready");
            i.controlbar.bigbutton.click(function(g) {
                c.debug(g.target);
                var e = !1;
                if (g.target === f || a(g.target).hasClass("style-holder") || a(g.target).hasClass("poodll_mediarecorderbox_push") || a(g.target).hasClass("poodll_mediarecorder_caption_push") || a(g.target).hasClass("poodll_mediarecorder_playcanvas_push")) {
                    e = !0
                }
                if (!e) {
                    return
                }
                switch (f.buttonmode) {
                    case "startbuttonready":
                        var j = {};
                        j.type = "recorderstatus";
                        j.status = "startbuttonrecording";
                        i.config.hermes.postMessage(j);
                        i.timer.disable();
                        h.do_start_audio(i, b);
                        f.set_visual_mode("startbuttonrecording");
                        break;
                    case "startbuttonrecording":
                        f.just_stop(d);
                        break;
                    case "oldstartbuttonready":
                        var k = function() {
                            var a = new Date().getTime(),
                                c = a - l;
                            if (c > m) {
                                i.timer.enable();
                                h.do_start_audio(i, b)
                            } else {
                                var d = !1;
                                if (0 > n && 0 < c) {
                                    d = m / 1e3
                                } else if (1e3 > n && 1e3 < c) {
                                    d = m / 1e3 - 1
                                } else if (2e3 > n && 2e3 < c) {
                                    d = m / 1e3 - 2
                                }
                                if (d) {
                                    var e = {
                                        type: "countdownstatus",
                                        status: d
                                    };
                                    i.config.hermes.postMessage(e)
                                }
                                n = c;
                                setTimeout(k, 100)
                            }
                        };
                        i.config.hermes.enable();
                        f.set_visual_mode("startbuttoncountdown");
                        var l = new Date().getTime(),
                            m = 3e3,
                            n = -1;
                        setTimeout(k, 100);
                        break;
                    case "stopbutton":
                        f.stop_and_upload();
                }
            });
            i.controlbar.settingsicon.click(function(a) {
                c.debug("we no proapagato");
                a.stopPropagation();
                if (!f.uploaded) {
                    f.devsettings.open()
                } else {
                    i.downloaddialog.open()
                }
            });
            window.onbeforeunload = function() {}
        },
        just_stop: function just_stop() {
            var a = this.pmr,
                b = this.fetch_instanceprops(),
                c = this.therecanim;
            if (b.mediaRecorder) {
                a.do_stop_audio(b)
            }
            c.clear();
            b.config.hermes.enable();
            this.set_visual_mode("startbuttonready")
        },
        stop_and_upload: function stop_and_upload(a) {
            var b = this,
                c = this.pmr,
                d = this.fetch_instanceprops(),
                e = b.therecanim;
            c.do_stop_audio(d);
            e.clear();
            d.timer.stop();
            b.update_status(a);
            var f = function() {
                if (d.blobs && 0 < d.blobs.length) {
                    c.do_save_audio(d);
                    d.uploaded = !0
                } else {
                    setTimeout(f, 200)
                }
            };
            setTimeout(f, 200);
            b.set_visual_mode("uploading")
        },
        enable_button: function enable_button(b) {
            a(b).attr("disabled", !1);
            a(b).removeClass("pmr_disabled")
        },
        disable_button: function disable_button(b) {
            a(b).attr("disabled", !0);
            a(b).addClass("pmr_disabled")
        }
    }
});
define("filter_poodll/anim_hwave_mic", ["jquery", "core/log"], function(a, b) {
    "use strict";
    b.debug("anim_horizontal_wave_mic: initialising");
    return {
        analyser: null,
        cvs: null,
        cvsctx: null,
        sounddetected: !1,
        imgone: null,
        imgoneloaded: !1,
        drawparams: {
            micColor: "#CCCCCC",
            wavColor: "#CCCCCC",
            lineWidth: 2
        },
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        setDrawParam: function setDrawParam(a, b) {
            this.drawparams[a] = b
        },
        init: function init(a, b) {
            this.cvs = b;
            this.cvsctx = b.getContext("2d");
            this.cvsctx.textAlign = "center";
            this.analyser = a;
            var c = this;
            this.imgone = new Image;
            this.imgone.addEventListener("load", function() {
                c.imgoneloaded = !0
            });
            this.imgone.src = M.cfg.wwwroot + "/filter/poodll/pix/svg/mic.svg"
        },
        clear: function clear() {
            if (!this.imgoneloaded) {
                var a = this;
                this.imgone.addEventListener("load", function() {
                    a.imgoneloaded = !0;
                    a.clear()
                });
                return
            }
            this.cvsctx.clearRect(0, 0, this.cvs.width, this.cvs.height);
            this.cvsctx.beginPath();
            this.cvsctx.lineWidth = this.drawparams.lineWidth;
            this.cvsctx.strokeStyle = this.drawparams.wavColor;
            this.cvsctx.moveTo(0, this.cvs.height / 2);
            this.cvsctx.lineTo(this.cvs.width, this.cvs.height / 2);
            this.cvsctx.stroke();
            this.drawMic(this.cvsctx, this.cvs.width, this.cvs.height, this.imgone)
        },
        drawMic: function drawMic(a, b, c, d) {
            var e = (b - d.width) / 2,
                f = (c - d.height) / 2;
            a.drawImage(d, e, f)
        },
        start: function start() {
            this.analyser.core.fftSize = 2048;
            var a = this.analyser.core.fftSize,
                b = new Uint8Array(a),
                c = this.cvs.width,
                d = this.cvs.height,
                e = this.cvsctx,
                f = this.analyser,
                g = this;
            this.clear();
            var h = function() {
                requestAnimationFrame(h);
                if (!f.theinterval) {
                    return
                }
                f.core.getByteTimeDomainData(b);
                e.clearRect(0, 0, c, d);
                e.lineWidth = g.drawparams.lineWidth;
                e.strokeStyle = g.drawparams.wavColor;
                e.beginPath();
                var j = 0;
                if (0 < a) {
                    var k = b[a - 1];
                    if (128 != k) {
                        g.sounddetected = !0
                    }
                }
                for (var l = 0; l < a; l++) {
                    var m = b[l] / 128,
                        n = m * d / 2;
                    if (0 == l) {
                        e.moveTo(j, n)
                    } else {
                        e.lineTo(j, n)
                    }
                    j += 2 * c / a
                }
                e.lineTo(c, d / 2);
                e.stroke();
                g.drawMic(e, c, d, g.imgone)
            };
            h()
        }
    }
});
define("filter_poodll/react_amd", ["jquery", "core/log", "filter_poodll/react-with-addons"], function(a, b, c) {
    "use strict";
    b.debug("Filter PoodLL: revealjs initialising");
    window.React = c;
    return {}
});
define("filter_poodll/literallycanvas_amd", ["jquery", "core/log", "filter_poodll/utils_amd", "filter_poodll/uploader", "filter_poodll/react_amd", "filter_poodll/literallycanvas"], function(a, b, c, d, e, f) {
    "use strict";
    b.debug("Filter PoodLL: literallycanvas.js initialising");
    return {
        instanceprops: [],
        loadliterallycanvas: function loadliterallycanvas(b) {
            var c = "#amdopts_" + b.recorderid,
                e = a(c).get(0);
            if (e) {
                b = JSON.parse(e.value);
                this.config = b;
                a(c).remove()
            }
            var g = "#" + b.recorderid + "_literally",
                h = a(g)[0],
                i = 4,
                j = .2;
            if (0 < b.whiteboardnozoom) {
                i = 1;
                j = 1
            }
            if (b.backgroundimage) {
                var k = a("#" + b.recorderid + "_separate-background-image")[0],
                    l = new Image;
                l.src = k.src;
                l.crossOrigin = "Anonymous";
                var m = f.createShape("Image", {
                        x: 0,
                        y: 0,
                        image: l,
                        scale: 1
                    }),
                    n = f.init(h, {
                        imageURLPrefix: b.imageurlprefix,
                        backgroundColor: b.backgroundcolor,
                        backgroundShapes: [m],
                        recorderid: b.recorderid,
                        zoomMax: i,
                        zoomMin: j
                    })
            } else {
                var n = f.init(h, {
                    imageURLPrefix: b.imageurlprefix,
                    backgroundColor: b.backgroundcolor,
                    recorderid: b.recorderid,
                    zoomMax: i,
                    zoomMin: j
                })
            }
            b.lc = n;
            var o = b.vectordata;
            if (o) {
                if (0 == o.indexOf("{\"shapes\"") || 0 == o.indexOf("{\"colors\"")) {
                    n.loadSnapshot(JSON.parse(o))
                }
            }
            b.uploader = d.clone();
            b.uploader.init(g, b);
            this.instanceprops[b.recorderid] = b;
            this.registerEvents(b.recorderid)
        },
        registerEvents: function registerEvents(b) {
            var d = this,
                e = this.instanceprops[b];
            if (e.autosave) {
                e.lc.on("drawingChange", function() {
                    var d = a("#" + b + "_messages")[0],
                        f = a("#" + b + "_btn_upload_whiteboard")[0];
                    if (d) {
                        if (f) {
                            f.disabled = !1
                        }
                        d.innerHTML = "";
                        var g = c.timeouthandles[b];
                        if (g) {
                            clearTimeout(g)
                        }
                        c.timeouthandles[b] = setTimeout(function() {
                            c.WhiteboardUploadHandler(b, e.lc, e, e.uploader)
                        }, e.autosave)
                    }
                })
            } else {
                e.lc.on("drawingChange", function() {
                    var c = a("#" + b + "_messages");
                    if (c) {
                        c.innerHTML = "File has not been saved."
                    }
                })
            }
            var f = a("#" + b + "_btn_upload_whiteboard");
            if (f) {
                if (e.autosave) {
                    f.click(function() {
                        c.WhiteboardUploadHandler(b, e.lc, e, e.uploader)
                    })
                } else {
                    f.click(function() {
                        var a = c.getCvs(b, e.lc, e);
                        c.pokeVectorData(b, e.lc, e);
                        e.uploader.uploadFile(a.toDataURL(), "image")
                    })
                }
            }
        }
    }
});
define("filter_poodll/anim_hwave_fresh", ["jquery", "core/log"], function(a, b) {
    "use strict";
    b.debug("anim_horizontal_wave: initialising");
    return {
        analyser: null,
        cvs: null,
        cvsctx: null,
        drawparams: {
            wavColor: "#6DDC6F",
            barColor: "#ad2323",
            shadowOffsetX: 0,
            shadowOffsetY: 0,
            shadowBlur: 10,
            shadowColor: "#fff",
            font: "18px Arial",
            textAlign: "center",
            textBaseline: "middle"
        },
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        init: function init(a, b) {
            this.cvs = b;
            this.cvsctx = b.getContext("2d");
            this.analyser = a;
            this.clear()
        },
        setDrawParam: function setDrawParam(a, b) {
            this.drawparams[a] = b
        },
        clear: function clear() {
            this.cvsctx.clearRect(0, 0, this.cvs.width, this.cvs.height);
            this.cvsctx.lineWidth = 2;
            this.cvsctx.strokeStyle = this.drawparams.wavColor;
            this.cvsctx.beginPath();
            this.cvsctx.moveTo(0, this.cvs.height / 2);
            this.cvsctx.lineTo(this.cvs.width, this.cvs.height / 2);
            this.cvsctx.stroke()
        },
        start: function start() {
            this.analyser.core.fftSize = 2048;
            var a = this.analyser.core.fftSize,
                b = new Uint8Array(a),
                c = this.cvs.width,
                d = this.cvs.height,
                e = this.cvsctx,
                f = this.analyser;
            this.clear();
            var g = this,
                h = function() {
                    requestAnimationFrame(h);
                    if (!f.theinterval) {
                        return
                    }
                    f.core.getByteTimeDomainData(b);
                    e.clearRect(0, 0, c, d);
                    e.lineWidth = 2;
                    e.strokeStyle = g.drawparams.wavColor;
                    e.beginPath();
                    for (var j = 0, k = 0; k < a; k++) {
                        var l = b[k] / 128,
                            m = l * d / 2;
                        if (0 == k) {
                            e.moveTo(j, m)
                        } else {
                            e.lineTo(j, m)
                        }
                        j += 1 * c / a
                    }
                    e.lineTo(c, d / 2);
                    e.stroke()
                };
            h()
        }
    }
});

function _typeof(a) {
    if ("function" == typeof Symbol && "symbol" == typeof Symbol.iterator) {
        _typeof = function(a) {
            return typeof a
        }
    } else {
        _typeof = function(a) {
            return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
        }
    }
    return _typeof(a)
}(function(b) {
    var e;

    function c() {
        var a = Error.apply(this, arguments);
        a.name = this.name = "FlashError";
        this.stack = a.stack;
        this.message = a.message
    }

    function d() {
        var a = Error.apply(this, arguments);
        a.name = this.name = "WebcamError";
        this.stack = a.stack;
        this.message = a.message
    }
    IntermediateInheritor = function IntermediateInheritor() {};
    IntermediateInheritor.prototype = Error.prototype;
    c.prototype = new IntermediateInheritor;
    d.prototype = new IntermediateInheritor;
    var f = {
        version: "1.0.15",
        protocol: location.protocol.match(/https/i) ? "https" : "http",
        loaded: !1,
        live: !1,
        userMedia: !0,
        params: {
            width: 0,
            height: 0,
            dest_width: 0,
            dest_height: 0,
            image_format: "jpeg",
            jpeg_quality: 90,
            enable_flash: !0,
            force_flash: !1,
            flip_horiz: !1,
            fps: 30,
            upload_name: "webcam",
            constraints: null,
            swfURL: "",
            flashNotDetectedText: "ERROR: No Adobe Flash Player detected.  Webcam.js relies on Flash for browsers that do not support getUserMedia (like yours).",
            noInterfaceFoundText: "No supported webcam interface found.",
            unfreeze_snap: !0
        },
        errors: {
            FlashError: c,
            WebcamError: d
        },
        hooks: {},
        init: function init() {
            var a = this;
            this.mediaDevices = navigator.mediaDevices && navigator.mediaDevices.getUserMedia ? navigator.mediaDevices : navigator.mozGetUserMedia || navigator.webkitGetUserMedia ? {
                getUserMedia: function getUserMedia(b) {
                    return new Promise(function(c, d) {
                        (navigator.mozGetUserMedia || navigator.webkitGetUserMedia).call(navigator, b, c, d)
                    })
                }
            } : null;
            b.URL = b.URL || b.webkitURL || b.mozURL || b.msURL;
            this.userMedia = this.userMedia && !!this.mediaDevices && !!b.URL;
            if (navigator.userAgent.match(/Firefox\D+(\d+)/)) {
                if (21 > parseInt(RegExp.$1, 10)) this.userMedia = null
            }
            if (this.userMedia) {
                b.addEventListener("beforeunload", function() {
                    a.reset()
                })
            }
        },
        attach: function attach(g) {
            if ("string" == typeof g) {
                g = document.getElementById(g) || document.querySelector(g)
            }
            if (!g) {
                return this.dispatch("error", new d("Could not locate DOM element to attach to."))
            }
            this.container = g;
            g.innerHTML = "";
            var j = document.createElement("div");
            g.appendChild(j);
            this.peg = j;
            if (!this.params.width) this.params.width = g.offsetWidth;
            if (!this.params.height) this.params.height = g.offsetHeight;
            if (!this.params.width || !this.params.height) {
                return this.dispatch("error", new d("No width and/or height for webcam.  Please call set() first, or attach to a visible element."))
            }
            if (!this.params.dest_width) this.params.dest_width = this.params.width;
            if (!this.params.dest_height) this.params.dest_height = this.params.height;
            this.userMedia = e === void 0 ? this.userMedia : e;
            if (this.params.force_flash) {
                e = this.userMedia;
                this.userMedia = null
            }
            if ("number" != typeof this.params.fps) this.params.fps = 30;
            var i = this.params.width / this.params.dest_width,
                k = this.params.height / this.params.dest_height;
            if (this.userMedia) {
                var o = document.createElement("video");
                o.setAttribute("autoplay", "autoplay");
                o.style.width = "" + this.params.dest_width + "px";
                o.style.height = "" + this.params.dest_height + "px";
                if (1 != i || 1 != k) {
                    g.style.overflow = "hidden";
                    o.style.webkitTransformOrigin = "0px 0px";
                    o.style.mozTransformOrigin = "0px 0px";
                    o.style.msTransformOrigin = "0px 0px";
                    o.style.oTransformOrigin = "0px 0px";
                    o.style.transformOrigin = "0px 0px";
                    o.style.webkitTransform = "scaleX(" + i + ") scaleY(" + k + ")";
                    o.style.mozTransform = "scaleX(" + i + ") scaleY(" + k + ")";
                    o.style.msTransform = "scaleX(" + i + ") scaleY(" + k + ")";
                    o.style.oTransform = "scaleX(" + i + ") scaleY(" + k + ")";
                    o.style.transform = "scaleX(" + i + ") scaleY(" + k + ")"
                }
                g.appendChild(o);
                this.video = o;
                var n = this;
                this.mediaDevices.getUserMedia({
                    audio: !1,
                    video: this.params.constraints || {
                        mandatory: {
                            minWidth: this.params.dest_width,
                            minHeight: this.params.dest_height
                        }
                    }
                }).then(function(a) {
                    o.onloadedmetadata = function() {
                        n.stream = a;
                        n.loaded = !0;
                        n.live = !0;
                        n.dispatch("load");
                        n.dispatch("live");
                        n.flip()
                    };
                    o.srcObject = a || a
                }).catch(function(a) {
                    if (n.params.enable_flash && n.detectFlash()) {
                        setTimeout(function() {
                            n.params.force_flash = 1;
                            n.attach(g)
                        }, 1)
                    } else {
                        n.dispatch("error", a)
                    }
                })
            } else if (this.params.enable_flash && this.detectFlash()) {
                b.Webcam = f;
                var h = document.createElement("div");
                h.innerHTML = this.getSWFHTML();
                g.appendChild(h)
            } else {
                this.dispatch("error", new d(this.params.noInterfaceFoundText))
            }
            if (this.params.crop_width && this.params.crop_height) {
                var l = Math.floor(this.params.crop_width * i),
                    c = Math.floor(this.params.crop_height * k);
                g.style.width = "" + l + "px";
                g.style.height = "" + c + "px";
                g.style.overflow = "hidden";
                g.scrollLeft = Math.floor(this.params.width / 2 - l / 2);
                g.scrollTop = Math.floor(this.params.height / 2 - c / 2)
            } else {
                g.style.width = "" + this.params.width + "px";
                g.style.height = "" + this.params.height + "px"
            }
        },
        reset: function reset() {
            if (this.preview_active) this.unfreeze();
            this.unflip();
            if (this.userMedia) {
                if (this.stream) {
                    if (this.stream.getVideoTracks) {
                        var a = this.stream.getVideoTracks();
                        if (a && a[0] && a[0].stop) a[0].stop()
                    } else if (this.stream.stop) {
                        this.stream.stop()
                    }
                }
                delete this.stream;
                delete this.video
            }
            if (!0 !== this.userMedia) {
                this.getMovie()._releaseCamera()
            }
            if (this.container) {
                this.container.innerHTML = "";
                delete this.container
            }
            this.loaded = !1;
            this.live = !1
        },
        set: function set() {
            if (1 == arguments.length) {
                for (var a in arguments[0]) {
                    this.params[a] = arguments[0][a]
                }
            } else {
                this.params[arguments[0]] = arguments[1]
            }
        },
        on: function on(a, b) {
            a = a.replace(/^on/i, "").toLowerCase();
            if (!this.hooks[a]) this.hooks[a] = [];
            this.hooks[a].push(b)
        },
        off: function off(b, c) {
            b = b.replace(/^on/i, "").toLowerCase();
            if (this.hooks[b]) {
                if (c) {
                    var d = this.hooks[b].indexOf(c);
                    if (-1 < d) this.hooks[b].splice(d, 1)
                } else {
                    this.hooks[b] = []
                }
            }
        },
        dispatch: function dispatch() {
            var a = arguments[0].replace(/^on/i, "").toLowerCase(),
                e = Array.prototype.slice.call(arguments, 1);
            if (this.hooks[a] && this.hooks[a].length) {
                for (var f = 0, g = this.hooks[a].length, h; f < g; f++) {
                    h = this.hooks[a][f];
                    if ("function" == typeof h) {
                        h.apply(this, e)
                    } else if ("object" == _typeof(h) && 2 == h.length) {
                        h[0][h[1]].apply(h[0], e)
                    } else if (b[h]) {
                        b[h].apply(b, e)
                    }
                }
                return !0
            } else if ("error" == a) {
                if (e[0] instanceof c || e[0] instanceof d) {
                    message = e[0].message
                } else {
                    message = "Could not access webcam: " + e[0].name + ": " + e[0].message + " " + e[0].toString()
                }
                alert("Webcam.js Error: " + message)
            }
            return !1
        },
        setSWFLocation: function setSWFLocation(a) {
            this.set("swfURL", a)
        },
        detectFlash: function detectFlash() {
            var a = b,
                c = navigator,
                d = !1;
            if ("undefined" != typeof c.plugins && "object" === _typeof(c.plugins["Shockwave Flash"])) {
                var e = c.plugins["Shockwave Flash"].description;
                if (e && "undefined" != typeof c.mimeTypes && c.mimeTypes["application/x-shockwave-flash"] && c.mimeTypes["application/x-shockwave-flash"].enabledPlugin) {
                    d = !0
                }
            } else if ("undefined" != typeof a.ActiveXObject) {
                try {
                    var f = new ActiveXObject("ShockwaveFlash.ShockwaveFlash");
                    if (f) {
                        var g = f.GetVariable("$version");
                        if (g) d = !0
                    }
                } catch (a) {}
            }
            return d
        },
        getSWFHTML: function getSWFHTML() {
            var a = "",
                d = this.params.swfURL;
            if (location.protocol.match(/file/)) {
                this.dispatch("error", new c("Flash does not work from local disk.  Please run from a web server."));
                return "<h3 style=\"color:red\">ERROR: the Webcam.js Flash fallback does not work from local disk.  Please run it from a web server.</h3>"
            }
            if (!this.detectFlash()) {
                this.dispatch("error", new c("Adobe Flash Player not found.  Please install from get.adobe.com/flashplayer and try again."));
                return "<h3 style=\"color:red\">" + this.params.flashNotDetectedText + "</h3>"
            }
            if (!d) {
                for (var e = "", f = document.getElementsByTagName("script"), g = 0, j = f.length, k; g < j; g++) {
                    k = f[g].getAttribute("src");
                    if (k && k.match(/\/webcam(\.min)?\.js/)) {
                        e = k.replace(/\/webcam(\.min)?\.js.*$/, "");
                        g = j
                    }
                }
                if (e) d = e + "/webcam.swf";
                else d = "webcam.swf"
            }
            if (b.localStorage && !localStorage.getItem("visited")) {
                this.params.new_user = 1;
                localStorage.setItem("visited", 1)
            }
            var m = "";
            for (var n in this.params) {
                if (m) m += "&";
                m += n + "=" + escape(this.params[n])
            }
            a += "<object classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" type=\"application/x-shockwave-flash\" codebase=\"" + this.protocol + "://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=9,0,0,0\" width=\"" + this.params.width + "\" height=\"" + this.params.height + "\" id=\"webcam_movie_obj\" align=\"middle\"><param name=\"wmode\" value=\"opaque\" /><param name=\"allowScriptAccess\" value=\"always\" /><param name=\"allowFullScreen\" value=\"false\" /><param name=\"movie\" value=\"" + d + "\" /><param name=\"loop\" value=\"false\" /><param name=\"menu\" value=\"false\" /><param name=\"quality\" value=\"best\" /><param name=\"bgcolor\" value=\"#ffffff\" /><param name=\"flashvars\" value=\"" + m + "\"/><embed id=\"webcam_movie_embed\" src=\"" + d + "\" wmode=\"opaque\" loop=\"false\" menu=\"false\" quality=\"best\" bgcolor=\"#ffffff\" width=\"" + this.params.width + "\" height=\"" + this.params.height + "\" name=\"webcam_movie_embed\" align=\"middle\" allowScriptAccess=\"always\" allowFullScreen=\"false\" type=\"application/x-shockwave-flash\" pluginspage=\"http://www.macromedia.com/go/getflashplayer\" flashvars=\"" + m + "\"></embed></object>";
            return a
        },
        getMovie: function getMovie() {
            if (!this.loaded) return this.dispatch("error", new c("Flash Movie is not loaded yet"));
            var a = document.getElementById("webcam_movie_obj");
            if (!a || !a._snap) a = document.getElementById("webcam_movie_embed");
            if (!a) this.dispatch("error", new c("Cannot locate Flash movie in DOM"));
            return a
        },
        freeze: function freeze() {
            var b = this,
                c = this.params;
            if (this.preview_active) this.unfreeze();
            var d = this.params.width / this.params.dest_width,
                a = this.params.height / this.params.dest_height;
            this.unflip();
            var e = c.crop_width || c.dest_width,
                f = c.crop_height || c.dest_height,
                g = document.createElement("canvas");
            g.width = e;
            g.height = f;
            var h = g.getContext("2d");
            this.preview_canvas = g;
            this.preview_context = h;
            if (1 != d || 1 != a) {
                g.style.webkitTransformOrigin = "0px 0px";
                g.style.mozTransformOrigin = "0px 0px";
                g.style.msTransformOrigin = "0px 0px";
                g.style.oTransformOrigin = "0px 0px";
                g.style.transformOrigin = "0px 0px";
                g.style.webkitTransform = "scaleX(" + d + ") scaleY(" + a + ")";
                g.style.mozTransform = "scaleX(" + d + ") scaleY(" + a + ")";
                g.style.msTransform = "scaleX(" + d + ") scaleY(" + a + ")";
                g.style.oTransform = "scaleX(" + d + ") scaleY(" + a + ")";
                g.style.transform = "scaleX(" + d + ") scaleY(" + a + ")"
            }
            this.snap(function() {
                g.style.position = "relative";
                g.style.left = "" + b.container.scrollLeft + "px";
                g.style.top = "" + b.container.scrollTop + "px";
                b.container.insertBefore(g, b.peg);
                b.container.style.overflow = "hidden";
                b.preview_active = !0
            }, g)
        },
        unfreeze: function unfreeze() {
            if (this.preview_active) {
                this.container.removeChild(this.preview_canvas);
                delete this.preview_context;
                delete this.preview_canvas;
                this.preview_active = !1;
                this.flip()
            }
        },
        flip: function flip() {
            if (this.params.flip_horiz) {
                var a = this.container.style;
                a.webkitTransform = "scaleX(-1)";
                a.mozTransform = "scaleX(-1)";
                a.msTransform = "scaleX(-1)";
                a.oTransform = "scaleX(-1)";
                a.transform = "scaleX(-1)";
                a.filter = "FlipH";
                a.msFilter = "FlipH"
            }
        },
        unflip: function unflip() {
            if (this.params.flip_horiz) {
                var a = this.container.style;
                a.webkitTransform = "scaleX(1)";
                a.mozTransform = "scaleX(1)";
                a.msTransform = "scaleX(1)";
                a.oTransform = "scaleX(1)";
                a.transform = "scaleX(1)";
                a.filter = "";
                a.msFilter = ""
            }
        },
        savePreview: function savePreview(b, c) {
            var d = this.params,
                a = this.preview_canvas,
                e = this.preview_context;
            if (c) {
                var f = c.getContext("2d");
                f.drawImage(a, 0, 0)
            }
            b(c ? null : a.toDataURL("image/" + d.image_format, d.jpeg_quality / 100), a, e);
            if (this.params.unfreeze_snap) this.unfreeze()
        },
        snap: function snap(b, c) {
            var e = this,
                f = this.params;
            if (!this.loaded) return this.dispatch("error", new d("Webcam is not loaded yet"));
            if (!b) return this.dispatch("error", new d("Please provide a callback function or canvas to snap()"));
            if (this.preview_active) {
                this.savePreview(b, c);
                return null
            }
            var g = document.createElement("canvas");
            g.width = this.params.dest_width;
            g.height = this.params.dest_height;
            var i = g.getContext("2d");
            if (this.params.flip_horiz) {
                i.translate(f.dest_width, 0);
                i.scale(-1, 1)
            }
            var a = function() {
                if (this.src && this.width && this.height) {
                    i.drawImage(this, 0, 0, f.dest_width, f.dest_height)
                }
                if (f.crop_width && f.crop_height) {
                    var d = document.createElement("canvas");
                    d.width = f.crop_width;
                    d.height = f.crop_height;
                    var a = d.getContext("2d");
                    a.drawImage(g, Math.floor(f.dest_width / 2 - f.crop_width / 2), Math.floor(f.dest_height / 2 - f.crop_height / 2), f.crop_width, f.crop_height, 0, 0, f.crop_width, f.crop_height);
                    i = a;
                    g = d
                }
                if (c) {
                    var e = c.getContext("2d");
                    e.drawImage(g, 0, 0)
                }
                b(c ? null : g.toDataURL("image/" + f.image_format, f.jpeg_quality / 100), g, i)
            };
            if (this.userMedia) {
                i.drawImage(this.video, 0, 0, this.params.dest_width, this.params.dest_height);
                a()
            } else {
                var j = this.getMovie()._snap(),
                    h = new Image;
                h.onload = a;
                h.src = "data:image/" + this.params.image_format + ";base64," + j
            }
            return null
        },
        configure: function configure(a) {
            if (!a) a = "camera";
            this.getMovie()._configure(a)
        },
        flashNotify: function flashNotify(a, b) {
            switch (a) {
                case "flashLoadComplete":
                    this.loaded = !0;
                    this.dispatch("load");
                    break;
                case "cameraLive":
                    this.live = !0;
                    this.dispatch("live");
                    break;
                case "error":
                    this.dispatch("error", new c(b));
                    break;
                default:
                    break;
            }
        },
        b64ToUint6: function b64ToUint6(a) {
            return 64 < a && 91 > a ? a - 65 : 96 < a && 123 > a ? a - 71 : 47 < a && 58 > a ? a + 4 : 43 === a ? 62 : 47 === a ? 63 : 0
        },
        base64DecToArr: function base64DecToArr(b, d) {
            for (var e = b.replace(/[^A-Za-z0-9\+\/]/g, ""), a = e.length, f = d ? Math.ceil((3 * a + 1 >> 2) / d) * d : 3 * a + 1 >> 2, g = new Uint8Array(f), i, j, k = 0, m = 0, p = 0; p < a; p++) {
                j = 3 & p;
                k |= this.b64ToUint6(e.charCodeAt(p)) << 18 - 6 * j;
                if (3 === j || 1 == a - p) {
                    for (i = 0; 3 > i && m < f; i++, m++) {
                        g[m] = 255 & k >>> (24 & 16 >>> i)
                    }
                    k = 0
                }
            }
            return g
        },
        upload: function upload(b, c, d) {
            var a = this.params.upload_name || "webcam",
                e = "";
            if (b.match(/^data\:image\/(\w+)/)) e = RegExp.$1;
            else throw "Cannot locate image format in Data URI";
            var g = b.replace(/^data\:image\/\w+\;base64\,/, ""),
                j = new XMLHttpRequest;
            j.open("POST", c, !0);
            if (j.upload && j.upload.addEventListener) {
                j.upload.addEventListener("progress", function(a) {
                    if (a.lengthComputable) {
                        var b = a.loaded / a.total;
                        f.dispatch("uploadProgress", b, a)
                    }
                }, !1)
            }
            var k = this;
            j.onload = function() {
                if (d) d.apply(k, [j.status, j.responseText, j.statusText]);
                f.dispatch("uploadComplete", j.status, j.responseText, j.statusText)
            };
            var m = new Blob([this.base64DecToArr(g)], {
                    type: "image/" + e
                }),
                h = new FormData;
            h.append(a, m, a + "." + e.replace(/e/, ""));
            j.send(h)
        }
    };
    f.init();
    if ("function" == typeof define && define.amd) {
        define("filter_poodll/webcam", function() {
            return f
        })
    } else if ("object" === ("undefined" == typeof module ? "undefined" : _typeof(module)) && module.exports) {
        module.exports = f
    } else {
        b.Webcam = f
    }
})(window);
define("filter_poodll/anim_progress_radial", ["jquery", "core/log"], function(a, b) {
    "use strict";
    b.debug("Radial Progress: initialising");
    return {
        playcanvas: null,
        context: null,
        x: null,
        y: null,
        currenttime: 0,
        enabled: !1,
        showpercent: !1,
        drawparams: {
            lineWidth: 10,
            barColor: "#ad2323",
            shadowOffsetX: 0,
            shadowOffsetY: 0,
            shadowBlur: 10,
            shadowColor: "#fff",
            font: "18px Arial",
            textAlign: "center",
            textBaseline: "middle"
        },
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        init: function init(a, b, c) {
            this.playcanvas = a.get(0);
            this.x = this.playcanvas.width / 2;
            this.y = this.playcanvas.height / 2;
            this.context = this.playcanvas.getContext("2d");
            if (c) {
                this.showpercent = c
            }
            if (c) {
                this.setDrawParam("barColor", b)
            }
        },
        setDrawParam: function setDrawParam(a, b) {
            this.drawparams[a] = b
        },
        clear: function clear() {
            this.context.clearRect(0, 0, this.playcanvas.width, this.playcanvas.height)
        },
        fetchCurrent: function fetchCurrent() {
            return 0
        },
        stop: function stop() {
            this.enabled = !1
        },
        start: function start() {
            this.clear();
            this.enabled = !0;
            var a = this;
            this.context.lineWidth = this.drawparams.lineWidth;
            this.context.strokeStyle = this.drawparams.barColor;
            this.context.setLineDash([]);
            this.context.shadowOffsetX = this.drawparams.shadowOffsetX;
            this.context.shadowOffsetY = this.drawparams.shadowOffsetY;
            this.context.shadowBlur = this.drawparams.shadowBlur;
            this.context.shadowColor = this.drawparams.shadowColor;
            this.context.font = this.drawparams.font;
            this.context.textAlign = this.drawparams.textAlign;
            this.context.textBaseline = this.drawparams.textBaseline;
            var b = function() {
                if (!a.enabled) {
                    return
                }
                a.clear();
                var c = Math.min(a.x, a.y) - a.context.lineWidth,
                    d = 2 * Math.PI,
                    e = Math.PI / 2,
                    f = a.fetchCurrent();
                a.context.beginPath();
                a.context.arc(a.x, a.y, c, -e, d * f - e, !1);
                if (a.showpercent) {
                    a.context.fillText(parseInt(100 * f) + "%", a.x, a.y)
                }
                a.context.stroke();
                var g = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;
                g(b)
            };
            b()
        }
    }
});
define("filter_poodll/poodll_qrscanner", ["jquery", "core/log"], function(e, t) {
    "use strict";
    t.debug("poodll_qrscanner is now loaded");
    var P = {
        checkAndNudgePoints: function(e, t) {
            for (var i = I.width, o = I.height, r = !0, a = 0; a < t.length && r; a += 2) {
                var n = Math.floor(t[a]),
                    d = Math.floor(t[a + 1]);
                if (-1 > n || n > i || -1 > d || d > o) {
                    throw "Error.checkAndNudgePoints "
                }
                r = !1;
                if (-1 == n) {
                    t[a] = 0;
                    r = !0
                } else if (n == i) {
                    t[a] = i - 1;
                    r = !0
                }
                if (-1 == d) {
                    t[a + 1] = 0;
                    r = !0
                } else if (d == o) {
                    t[a + 1] = o - 1;
                    r = !0
                }
            }
            r = !0;
            for (var a = t.length - 2; 0 <= a && r; a -= 2) {
                var n = Math.floor(t[a]),
                    d = Math.floor(t[a + 1]);
                if (-1 > n || n > i || -1 > d || d > o) {
                    throw "Error.checkAndNudgePoints "
                }
                r = !1;
                if (-1 == n) {
                    t[a] = 0;
                    r = !0
                } else if (n == i) {
                    t[a] = i - 1;
                    r = !0
                }
                if (-1 == d) {
                    t[a + 1] = 0;
                    r = !0
                } else if (d == o) {
                    t[a + 1] = o - 1;
                    r = !0
                }
            }
        }
    };
    P.sampleGrid3 = function(e, t, i) {
        for (var o = new c(t), r = Array(t << 1), a = 0; a < t; a++) {
            for (var n = r.length, d = a + .5, s = 0; s < n; s += 2) {
                r[s] = (s >> 1) + .5;
                r[s + 1] = d
            }
            i.transformPoints1(r);
            P.checkAndNudgePoints(e, r);
            try {
                for (var s = 0, l; s < n; s += 2) {
                    l = e[Math.floor(r[s]) + I.width * Math.floor(r[s + 1])];
                    if (l) o.set_Renamed(s >> 1, a)
                }
            } catch (e) {
                throw "Error.checkAndNudgePoints"
            }
        }
        return o
    };
    P.sampleGridx = function(e, t, i, o, r, n, d, s, l, c, f, g, u, h, m, b, C, _) {
        var p = a.quadrilateralToQuadrilateral(i, o, r, n, d, s, l, c, f, g, u, h, m, b, C, _);
        return P.sampleGrid3(e, t, p)
    };

    function i(e, t) {
        this.count = e;
        this.dataCodewords = t;
        this.__defineGetter__("Count", function() {
            return this.count
        });
        this.__defineGetter__("DataCodewords", function() {
            return this.dataCodewords
        })
    }

    function o(e, t, i) {
        this.ecCodewordsPerBlock = e;
        if (i) this.ecBlocks = [t, i];
        else this.ecBlocks = Array(t);
        this.__defineGetter__("ECCodewordsPerBlock", function() {
            return this.ecCodewordsPerBlock
        });
        this.__defineGetter__("TotalECCodewords", function() {
            return this.ecCodewordsPerBlock * this.NumBlocks
        });
        this.__defineGetter__("NumBlocks", function() {
            for (var e = 0, t = 0; t < this.ecBlocks.length; t++) {
                e += this.ecBlocks[t].length
            }
            return e
        });
        this.getECBlocks = function() {
            return this.ecBlocks
        }
    }

    function r(e, t, o, r, a, n) {
        this.versionNumber = e;
        this.alignmentPatternCenters = t;
        this.ecBlocks = [o, r, a, n];
        for (var d = 0, s = o.ECCodewordsPerBlock, l = o.getECBlocks(), f = 0, g; f < l.length; f++) {
            g = l[f];
            d += g.Count * (g.DataCodewords + s)
        }
        this.totalCodewords = d;
        this.__defineGetter__("VersionNumber", function() {
            return this.versionNumber
        });
        this.__defineGetter__("AlignmentPatternCenters", function() {
            return this.alignmentPatternCenters
        });
        this.__defineGetter__("TotalCodewords", function() {
            return this.totalCodewords
        });
        this.__defineGetter__("DimensionForVersion", function() {
            return 17 + 4 * this.versionNumber
        });
        this.buildFunctionPattern = function() {
            var e = this.DimensionForVersion,
                t = new c(e);
            t.setRegion(0, 0, 9, 9);
            t.setRegion(e - 8, 0, 8, 9);
            t.setRegion(0, e - 8, 9, 8);
            for (var o = this.alignmentPatternCenters.length, r = 0, a; r < o; r++) {
                a = this.alignmentPatternCenters[r] - 2;
                for (var n = 0; n < o; n++) {
                    if (0 == r && (0 == n || n == o - 1) || r == o - 1 && 0 == n) {
                        continue
                    }
                    t.setRegion(this.alignmentPatternCenters[n] - 2, a, 5, 5)
                }
            }
            t.setRegion(6, 9, 1, e - 17);
            t.setRegion(9, 6, e - 17, 1);
            if (6 < this.versionNumber) {
                t.setRegion(e - 11, 0, 3, 6);
                t.setRegion(0, e - 11, 6, 3)
            }
            return t
        };
        this.getECBlocksForLevel = function(e) {
            return this.ecBlocks[e.ordinal()]
        }
    }
    r.VERSION_DECODE_INFO = [31892, 34236, 39577, 42195, 48118, 51042, 55367, 58893, 63784, 68472, 70749, 76311, 79154, 84390, 87683, 92361, 96236, 102084, 102881, 110507, 110734, 117786, 119615, 126325, 127568, 133589, 136944, 141498, 145311, 150283, 152622, 158308, 161089, 167017];
    r.VERSIONS = function() {
        return [new r(1, [], new o(7, new i(1, 19)), new o(10, new i(1, 16)), new o(13, new i(1, 13)), new o(17, new i(1, 9))), new r(2, [6, 18], new o(10, new i(1, 34)), new o(16, new i(1, 28)), new o(22, new i(1, 22)), new o(28, new i(1, 16))), new r(3, [6, 22], new o(15, new i(1, 55)), new o(26, new i(1, 44)), new o(18, new i(2, 17)), new o(22, new i(2, 13))), new r(4, [6, 26], new o(20, new i(1, 80)), new o(18, new i(2, 32)), new o(26, new i(2, 24)), new o(16, new i(4, 9))), new r(5, [6, 30], new o(26, new i(1, 108)), new o(24, new i(2, 43)), new o(18, new i(2, 15), new i(2, 16)), new o(22, new i(2, 11), new i(2, 12))), new r(6, [6, 34], new o(18, new i(2, 68)), new o(16, new i(4, 27)), new o(24, new i(4, 19)), new o(28, new i(4, 15))), new r(7, [6, 22, 38], new o(20, new i(2, 78)), new o(18, new i(4, 31)), new o(18, new i(2, 14), new i(4, 15)), new o(26, new i(4, 13), new i(1, 14))), new r(8, [6, 24, 42], new o(24, new i(2, 97)), new o(22, new i(2, 38), new i(2, 39)), new o(22, new i(4, 18), new i(2, 19)), new o(26, new i(4, 14), new i(2, 15))), new r(9, [6, 26, 46], new o(30, new i(2, 116)), new o(22, new i(3, 36), new i(2, 37)), new o(20, new i(4, 16), new i(4, 17)), new o(24, new i(4, 12), new i(4, 13))), new r(10, [6, 28, 50], new o(18, new i(2, 68), new i(2, 69)), new o(26, new i(4, 43), new i(1, 44)), new o(24, new i(6, 19), new i(2, 20)), new o(28, new i(6, 15), new i(2, 16))), new r(11, [6, 30, 54], new o(20, new i(4, 81)), new o(30, new i(1, 50), new i(4, 51)), new o(28, new i(4, 22), new i(4, 23)), new o(24, new i(3, 12), new i(8, 13))), new r(12, [6, 32, 58], new o(24, new i(2, 92), new i(2, 93)), new o(22, new i(6, 36), new i(2, 37)), new o(26, new i(4, 20), new i(6, 21)), new o(28, new i(7, 14), new i(4, 15))), new r(13, [6, 34, 62], new o(26, new i(4, 107)), new o(22, new i(8, 37), new i(1, 38)), new o(24, new i(8, 20), new i(4, 21)), new o(22, new i(12, 11), new i(4, 12))), new r(14, [6, 26, 46, 66], new o(30, new i(3, 115), new i(1, 116)), new o(24, new i(4, 40), new i(5, 41)), new o(20, new i(11, 16), new i(5, 17)), new o(24, new i(11, 12), new i(5, 13))), new r(15, [6, 26, 48, 70], new o(22, new i(5, 87), new i(1, 88)), new o(24, new i(5, 41), new i(5, 42)), new o(30, new i(5, 24), new i(7, 25)), new o(24, new i(11, 12), new i(7, 13))), new r(16, [6, 26, 50, 74], new o(24, new i(5, 98), new i(1, 99)), new o(28, new i(7, 45), new i(3, 46)), new o(24, new i(15, 19), new i(2, 20)), new o(30, new i(3, 15), new i(13, 16))), new r(17, [6, 30, 54, 78], new o(28, new i(1, 107), new i(5, 108)), new o(28, new i(10, 46), new i(1, 47)), new o(28, new i(1, 22), new i(15, 23)), new o(28, new i(2, 14), new i(17, 15))), new r(18, [6, 30, 56, 82], new o(30, new i(5, 120), new i(1, 121)), new o(26, new i(9, 43), new i(4, 44)), new o(28, new i(17, 22), new i(1, 23)), new o(28, new i(2, 14), new i(19, 15))), new r(19, [6, 30, 58, 86], new o(28, new i(3, 113), new i(4, 114)), new o(26, new i(3, 44), new i(11, 45)), new o(26, new i(17, 21), new i(4, 22)), new o(26, new i(9, 13), new i(16, 14))), new r(20, [6, 34, 62, 90], new o(28, new i(3, 107), new i(5, 108)), new o(26, new i(3, 41), new i(13, 42)), new o(30, new i(15, 24), new i(5, 25)), new o(28, new i(15, 15), new i(10, 16))), new r(21, [6, 28, 50, 72, 94], new o(28, new i(4, 116), new i(4, 117)), new o(26, new i(17, 42)), new o(28, new i(17, 22), new i(6, 23)), new o(30, new i(19, 16), new i(6, 17))), new r(22, [6, 26, 50, 74, 98], new o(28, new i(2, 111), new i(7, 112)), new o(28, new i(17, 46)), new o(30, new i(7, 24), new i(16, 25)), new o(24, new i(34, 13))), new r(23, [6, 30, 54, 74, 102], new o(30, new i(4, 121), new i(5, 122)), new o(28, new i(4, 47), new i(14, 48)), new o(30, new i(11, 24), new i(14, 25)), new o(30, new i(16, 15), new i(14, 16))), new r(24, [6, 28, 54, 80, 106], new o(30, new i(6, 117), new i(4, 118)), new o(28, new i(6, 45), new i(14, 46)), new o(30, new i(11, 24), new i(16, 25)), new o(30, new i(30, 16), new i(2, 17))), new r(25, [6, 32, 58, 84, 110], new o(26, new i(8, 106), new i(4, 107)), new o(28, new i(8, 47), new i(13, 48)), new o(30, new i(7, 24), new i(22, 25)), new o(30, new i(22, 15), new i(13, 16))), new r(26, [6, 30, 58, 86, 114], new o(28, new i(10, 114), new i(2, 115)), new o(28, new i(19, 46), new i(4, 47)), new o(28, new i(28, 22), new i(6, 23)), new o(30, new i(33, 16), new i(4, 17))), new r(27, [6, 34, 62, 90, 118], new o(30, new i(8, 122), new i(4, 123)), new o(28, new i(22, 45), new i(3, 46)), new o(30, new i(8, 23), new i(26, 24)), new o(30, new i(12, 15), new i(28, 16))), new r(28, [6, 26, 50, 74, 98, 122], new o(30, new i(3, 117), new i(10, 118)), new o(28, new i(3, 45), new i(23, 46)), new o(30, new i(4, 24), new i(31, 25)), new o(30, new i(11, 15), new i(31, 16))), new r(29, [6, 30, 54, 78, 102, 126], new o(30, new i(7, 116), new i(7, 117)), new o(28, new i(21, 45), new i(7, 46)), new o(30, new i(1, 23), new i(37, 24)), new o(30, new i(19, 15), new i(26, 16))), new r(30, [6, 26, 52, 78, 104, 130], new o(30, new i(5, 115), new i(10, 116)), new o(28, new i(19, 47), new i(10, 48)), new o(30, new i(15, 24), new i(25, 25)), new o(30, new i(23, 15), new i(25, 16))), new r(31, [6, 30, 56, 82, 108, 134], new o(30, new i(13, 115), new i(3, 116)), new o(28, new i(2, 46), new i(29, 47)), new o(30, new i(42, 24), new i(1, 25)), new o(30, new i(23, 15), new i(28, 16))), new r(32, [6, 34, 60, 86, 112, 138], new o(30, new i(17, 115)), new o(28, new i(10, 46), new i(23, 47)), new o(30, new i(10, 24), new i(35, 25)), new o(30, new i(19, 15), new i(35, 16))), new r(33, [6, 30, 58, 86, 114, 142], new o(30, new i(17, 115), new i(1, 116)), new o(28, new i(14, 46), new i(21, 47)), new o(30, new i(29, 24), new i(19, 25)), new o(30, new i(11, 15), new i(46, 16))), new r(34, [6, 34, 62, 90, 118, 146], new o(30, new i(13, 115), new i(6, 116)), new o(28, new i(14, 46), new i(23, 47)), new o(30, new i(44, 24), new i(7, 25)), new o(30, new i(59, 16), new i(1, 17))), new r(35, [6, 30, 54, 78, 102, 126, 150], new o(30, new i(12, 121), new i(7, 122)), new o(28, new i(12, 47), new i(26, 48)), new o(30, new i(39, 24), new i(14, 25)), new o(30, new i(22, 15), new i(41, 16))), new r(36, [6, 24, 50, 76, 102, 128, 154], new o(30, new i(6, 121), new i(14, 122)), new o(28, new i(6, 47), new i(34, 48)), new o(30, new i(46, 24), new i(10, 25)), new o(30, new i(2, 15), new i(64, 16))), new r(37, [6, 28, 54, 80, 106, 132, 158], new o(30, new i(17, 122), new i(4, 123)), new o(28, new i(29, 46), new i(14, 47)), new o(30, new i(49, 24), new i(10, 25)), new o(30, new i(24, 15), new i(46, 16))), new r(38, [6, 32, 58, 84, 110, 136, 162], new o(30, new i(4, 122), new i(18, 123)), new o(28, new i(13, 46), new i(32, 47)), new o(30, new i(48, 24), new i(14, 25)), new o(30, new i(42, 15), new i(32, 16))), new r(39, [6, 26, 54, 82, 110, 138, 166], new o(30, new i(20, 117), new i(4, 118)), new o(28, new i(40, 47), new i(7, 48)), new o(30, new i(43, 24), new i(22, 25)), new o(30, new i(10, 15), new i(67, 16))), new r(40, [6, 30, 58, 86, 114, 142, 170], new o(30, new i(19, 118), new i(6, 119)), new o(28, new i(18, 47), new i(31, 48)), new o(30, new i(34, 24), new i(34, 25)), new o(30, new i(20, 15), new i(61, 16)))]
    }();
    r.getVersionForNumber = function(e) {
        if (1 > e || 40 < e) {
            throw "ArgumentException"
        }
        return r.VERSIONS[e - 1]
    };
    r.getProvisionalVersionForDimension = function(e) {
        if (1 != e % 4) {
            throw "Error getProvisionalVersionForDimension"
        }
        try {
            return r.getVersionForNumber(e - 17 >> 2)
        } catch (e) {
            throw "Error getVersionForNumber"
        }
    };
    r.decodeVersionInformation = function(e) {
        for (var t = 4294967295, o = 0, a = 0, n; a < r.VERSION_DECODE_INFO.length; a++) {
            n = r.VERSION_DECODE_INFO[a];
            if (n == e) {
                return this.getVersionForNumber(a + 7)
            }
            var d = s.numBitsDiffering(e, n);
            if (d < t) {
                o = a + 7;
                t = d
            }
        }
        if (3 >= t) {
            return this.getVersionForNumber(o)
        }
        return null
    };

    function a(e, t, i, o, r, n, d, s, l) {
        this.a11 = e;
        this.a12 = o;
        this.a13 = d;
        this.a21 = t;
        this.a22 = r;
        this.a23 = s;
        this.a31 = i;
        this.a32 = n;
        this.a33 = l;
        this.transformPoints1 = function(e) {
            for (var t = e.length, o = this.a11, r = this.a12, a = this.a13, n = this.a21, d = this.a22, s = this.a23, l = this.a31, c = this.a32, f = this.a33, g = 0; g < t; g += 2) {
                var u = e[g],
                    h = e[g + 1],
                    m = a * u + s * h + f;
                e[g] = (o * u + n * h + l) / m;
                e[g + 1] = (r * u + d * h + c) / m
            }
        };
        this.transformPoints2 = function(e, t) {
            for (var o = e.length, r = 0; r < o; r++) {
                var a = e[r],
                    n = t[r],
                    d = this.a13 * a + this.a23 * n + this.a33;
                e[r] = (this.a11 * a + this.a21 * n + this.a31) / d;
                t[r] = (this.a12 * a + this.a22 * n + this.a32) / d
            }
        };
        this.buildAdjoint = function() {
            return new a(this.a22 * this.a33 - this.a23 * this.a32, this.a23 * this.a31 - this.a21 * this.a33, this.a21 * this.a32 - this.a22 * this.a31, this.a13 * this.a32 - this.a12 * this.a33, this.a11 * this.a33 - this.a13 * this.a31, this.a12 * this.a31 - this.a11 * this.a32, this.a12 * this.a23 - this.a13 * this.a22, this.a13 * this.a21 - this.a11 * this.a23, this.a11 * this.a22 - this.a12 * this.a21)
        };
        this.times = function(e) {
            return new a(this.a11 * e.a11 + this.a21 * e.a12 + this.a31 * e.a13, this.a11 * e.a21 + this.a21 * e.a22 + this.a31 * e.a23, this.a11 * e.a31 + this.a21 * e.a32 + this.a31 * e.a33, this.a12 * e.a11 + this.a22 * e.a12 + this.a32 * e.a13, this.a12 * e.a21 + this.a22 * e.a22 + this.a32 * e.a23, this.a12 * e.a31 + this.a22 * e.a32 + this.a32 * e.a33, this.a13 * e.a11 + this.a23 * e.a12 + this.a33 * e.a13, this.a13 * e.a21 + this.a23 * e.a22 + this.a33 * e.a23, this.a13 * e.a31 + this.a23 * e.a32 + this.a33 * e.a33)
        }
    }
    a.quadrilateralToQuadrilateral = function(e, t, i, o, r, a, n, d, s, l, c, f, g, u, h, m) {
        var b = this.quadrilateralToSquare(e, t, i, o, r, a, n, d),
            C = this.squareToQuadrilateral(s, l, c, f, g, u, h, m);
        return C.times(b)
    };
    a.squareToQuadrilateral = function(e, t, i, o, r, n, d, s) {
        var l = s - n,
            c = t - o + n - s;
        if (0 == l && 0 == c) {
            return new a(i - e, r - i, e, o - t, n - o, t, 0, 0, 1)
        } else {
            var f = i - r,
                g = d - r,
                u = e - i + r - d,
                h = o - n,
                m = f * l - g * h,
                b = (u * l - g * c) / m,
                C = (f * c - u * h) / m;
            return new a(i - e + b * i, d - e + C * d, e, o - t + b * o, s - t + C * s, t, b, C, 1)
        }
    };
    a.quadrilateralToSquare = function(e, t, i, o, r, a, n, d) {
        return this.squareToQuadrilateral(e, t, i, o, r, a, n, d).buildAdjoint()
    };

    function n(e, t) {
        this.bits = e;
        this.points = t
    }

    function d(e) {
        this.image = e;
        this.resultPointCallback = null;
        this.sizeOfBlackWhiteBlackRun = function(e, t, i, o) {
            var r = Math.abs(o - t) > Math.abs(i - e);
            if (r) {
                var a = e;
                e = t;
                t = a;
                a = i;
                i = o;
                o = a
            }
            for (var n = Math.abs(i - e), d = Math.abs(o - t), s = -n >> 1, l = t < o ? 1 : -1, c = e < i ? 1 : -1, f = 0, g = e, u = t; g != i; g += c) {
                var h = r ? u : g,
                    m = r ? g : u;
                if (1 == f) {
                    if (this.image[h + m * I.width]) {
                        f++
                    }
                } else {
                    if (!this.image[h + m * I.width]) {
                        f++
                    }
                }
                if (3 == f) {
                    var b = g - e,
                        C = u - t;
                    return Math.sqrt(b * b + C * C)
                }
                s += d;
                if (0 < s) {
                    if (u == o) {
                        break
                    }
                    u += l;
                    s -= n
                }
            }
            var _ = i - e,
                p = o - t;
            return Math.sqrt(_ * _ + p * p)
        };
        this.sizeOfBlackWhiteBlackRunBothWays = function(e, t, i, o) {
            var r = this.sizeOfBlackWhiteBlackRun(e, t, i, o),
                a = 1,
                n = e - (i - e);
            if (0 > n) {
                a = e / (e - n);
                n = 0
            } else if (n >= I.width) {
                a = (I.width - 1 - e) / (n - e);
                n = I.width - 1
            }
            var d = Math.floor(t - (o - t) * a);
            a = 1;
            if (0 > d) {
                a = t / (t - d);
                d = 0
            } else if (d >= I.height) {
                a = (I.height - 1 - t) / (d - t);
                d = I.height - 1
            }
            n = Math.floor(e + (n - e) * a);
            r += this.sizeOfBlackWhiteBlackRun(e, t, n, d);
            return r - 1
        };
        this.calculateModuleSizeOneWay = function(e, t) {
            var i = this.sizeOfBlackWhiteBlackRunBothWays(Math.floor(e.X), Math.floor(e.Y), Math.floor(t.X), Math.floor(t.Y)),
                o = this.sizeOfBlackWhiteBlackRunBothWays(Math.floor(t.X), Math.floor(t.Y), Math.floor(e.X), Math.floor(e.Y));
            if (isNaN(i)) {
                return o / 7
            }
            if (isNaN(o)) {
                return i / 7
            }
            return (i + o) / 14
        };
        this.calculateModuleSize = function(e, t, i) {
            return (this.calculateModuleSizeOneWay(e, t) + this.calculateModuleSizeOneWay(e, i)) / 2
        };
        this.distance = function(e, t) {
            var i = e.X - t.X,
                o = e.Y - t.Y;
            return Math.sqrt(i * i + o * o)
        };
        this.computeDimension = function(e, t, i, o) {
            var r = Math.round(this.distance(e, t) / o),
                a = Math.round(this.distance(e, i) / o),
                n = (r + a >> 1) + 7;
            switch (3 & n) {
                case 0:
                    n++;
                    break;
                case 2:
                    n--;
                    break;
                case 3:
                    throw "Error";
            }
            return n
        };
        this.findAlignmentInRegion = function(e, t, i, o) {
            var r = Math.floor(o * e),
                a = Math.max(0, t - r),
                n = Math.min(I.width - 1, t + r);
            if (n - a < 3 * e) {
                throw "Error"
            }
            var d = Math.max(0, i - r),
                s = Math.min(I.height - 1, i + r),
                l = new k(this.image, a, d, n - a, s - d, e, this.resultPointCallback);
            return l.find()
        };
        this.createTransform = function(e, t, i, o, r) {
            var n = r - 3.5,
                d, s, l, c;
            if (null != o) {
                d = o.X;
                s = o.Y;
                l = c = n - 3
            } else {
                d = t.X - e.X + i.X;
                s = t.Y - e.Y + i.Y;
                l = c = n
            }
            var f = a.quadrilateralToQuadrilateral(3.5, 3.5, n, 3.5, l, c, 3.5, n, e.X, e.Y, t.X, t.Y, d, s, i.X, i.Y);
            return f
        };
        this.sampleGrid = function(e, t, i) {
            return P.sampleGrid3(e, i, t)
        };
        this.processFinderPatternInfo = function(e) {
            var t = e.TopLeft,
                o = e.TopRight,
                a = e.BottomLeft,
                d = this.calculateModuleSize(t, o, a);
            if (1 > d) {
                throw "Error"
            }
            var s = this.computeDimension(t, o, a, d),
                l = r.getProvisionalVersionForDimension(s),
                c = l.DimensionForVersion - 7,
                f = null;
            if (0 < l.AlignmentPatternCenters.length) {
                for (var g = o.X - t.X + a.X, u = o.Y - t.Y + a.Y, h = 1 - 3 / c, m = Math.floor(t.X + h * (g - t.X)), b = Math.floor(t.Y + h * (u - t.Y)), C = 4; 16 >= C; C <<= 1) {
                    f = this.findAlignmentInRegion(d, m, b, C);
                    break
                }
            }
            var _ = this.createTransform(t, o, a, f, s),
                p = this.sampleGrid(this.image, _, s),
                k;
            if (null == f) {
                k = [a, t, o]
            } else {
                k = [a, t, o, f]
            }
            return new n(p, k)
        };
        this.detect = function() {
            var e = new _().findFinderPattern(this.image);
            return this.processFinderPatternInfo(e)
        }
    }
    var S = [
            [21522, 0],
            [20773, 1],
            [24188, 2],
            [23371, 3],
            [17913, 4],
            [16590, 5],
            [20375, 6],
            [19104, 7],
            [30660, 8],
            [29427, 9],
            [32170, 10],
            [30877, 11],
            [26159, 12],
            [25368, 13],
            [27713, 14],
            [26998, 15],
            [5769, 16],
            [5054, 17],
            [7399, 18],
            [6608, 19],
            [1890, 20],
            [597, 21],
            [3340, 22],
            [2107, 23],
            [13663, 24],
            [12392, 25],
            [16177, 26],
            [14854, 27],
            [9396, 28],
            [8579, 29],
            [11994, 30],
            [11245, 31]
        ],
        B = [0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4];

    function s(e) {
        this.errorCorrectionLevel = l.forBits(3 & e >> 3);
        this.dataMask = 7 & e;
        this.__defineGetter__("ErrorCorrectionLevel", function() {
            return this.errorCorrectionLevel
        });
        this.__defineGetter__("DataMask", function() {
            return this.dataMask
        });
        this.GetHashCode = function() {
            return this.errorCorrectionLevel.ordinal() << 3 | this.dataMask
        };
        this.Equals = function(e) {
            var t = e;
            return this.errorCorrectionLevel == t.errorCorrectionLevel && this.dataMask == t.dataMask
        }
    }
    s.numBitsDiffering = function(e, t) {
        e ^= t;
        return B[15 & e] + B[15 & m(e, 4)] + B[15 & m(e, 8)] + B[15 & m(e, 12)] + B[15 & m(e, 16)] + B[15 & m(e, 20)] + B[15 & m(e, 24)] + B[15 & m(e, 28)]
    };
    s.decodeFormatInformation = function(e) {
        var t = s.doDecodeFormatInformation(e);
        if (null != t) {
            return t
        }
        return s.doDecodeFormatInformation(e ^ 21522)
    };
    s.doDecodeFormatInformation = function(e) {
        for (var t = 4294967295, o = 0, r = 0; r < S.length; r++) {
            var a = S[r],
                n = a[0];
            if (n == e) {
                return new s(a[1])
            }
            var d = this.numBitsDiffering(e, n);
            if (d < t) {
                o = a[1];
                t = d
            }
        }
        if (3 >= t) {
            return new s(o)
        }
        return null
    };

    function l(e, t, i) {
        this.ordinal_Renamed_Field = e;
        this.bits = t;
        this.name = i;
        this.__defineGetter__("Bits", function() {
            return this.bits
        });
        this.__defineGetter__("Name", function() {
            return this.name
        });
        this.ordinal = function() {
            return this.ordinal_Renamed_Field
        }
    }
    l.forBits = function(e) {
        if (0 > e || e >= D.length) {
            throw "ArgumentException"
        }
        return D[e]
    };
    var E = new l(0, 1, "L"),
        x = new l(1, 0, "M"),
        M = new l(2, 3, "Q"),
        y = new l(3, 2, "H"),
        D = [x, E, y, M];

    function c(e, t) {
        if (!t) t = e;
        if (1 > e || 1 > t) {
            throw "Both dimensions must be greater than 0"
        }
        this.width = e;
        this.height = t;
        var o = e >> 5;
        if (0 != (31 & e)) {
            o++
        }
        this.rowSize = o;
        this.bits = Array(o * t);
        for (var r = 0; r < this.bits.length; r++) {
            this.bits[r] = 0
        }
        this.__defineGetter__("Width", function() {
            return this.width
        });
        this.__defineGetter__("Height", function() {
            return this.height
        });
        this.__defineGetter__("Dimension", function() {
            if (this.width != this.height) {
                throw "Can't call getDimension() on a non-square matrix"
            }
            return this.width
        });
        this.get_Renamed = function(e, t) {
            var i = t * this.rowSize + (e >> 5);
            return 0 != (1 & m(this.bits[i], 31 & e))
        };
        this.set_Renamed = function(e, t) {
            var i = t * this.rowSize + (e >> 5);
            this.bits[i] |= 1 << (31 & e)
        };
        this.flip = function(e, t) {
            var i = t * this.rowSize + (e >> 5);
            this.bits[i] ^= 1 << (31 & e)
        };
        this.clear = function() {
            for (var e = this.bits.length, t = 0; t < e; t++) {
                this.bits[t] = 0
            }
        };
        this.setRegion = function(e, t, i, o) {
            if (0 > t || 0 > e) {
                throw "Left and top must be nonnegative"
            }
            if (1 > o || 1 > i) {
                throw "Height and width must be at least 1"
            }
            var r = e + i,
                a = t + o;
            if (a > this.height || r > this.width) {
                throw "The region must fit inside the matrix"
            }
            for (var n = t, d; n < a; n++) {
                d = n * this.rowSize;
                for (var s = e; s < r; s++) {
                    this.bits[d + (s >> 5)] |= 1 << (31 & s)
                }
            }
        }
    }

    function f(e, t) {
        this.numDataCodewords = e;
        this.codewords = t;
        this.__defineGetter__("NumDataCodewords", function() {
            return this.numDataCodewords
        });
        this.__defineGetter__("Codewords", function() {
            return this.codewords
        })
    }
    f.getDataBlocks = function(e, t, o) {
        if (e.length != t.TotalCodewords) {
            throw "ArgumentException"
        }
        for (var r = t.getECBlocksForLevel(o), a = 0, n = r.getECBlocks(), d = 0; d < n.length; d++) {
            a += n[d].Count
        }
        for (var s = Array(a), l = 0, c = 0, g; c < n.length; c++) {
            g = n[c];
            for (var d = 0; d < g.Count; d++) {
                var u = g.DataCodewords,
                    h = r.ECCodewordsPerBlock + u;
                s[l++] = new f(u, Array(h))
            }
        }
        var m = s[0].codewords.length,
            b = s.length - 1;
        while (0 <= b) {
            var C = s[b].codewords.length;
            if (C == m) {
                break
            }
            b--
        }
        b++;
        for (var _ = m - r.ECCodewordsPerBlock, p = 0, d = 0; d < _; d++) {
            for (var c = 0; c < l; c++) {
                s[c].codewords[d] = e[p++]
            }
        }
        for (var c = b; c < l; c++) {
            s[c].codewords[_] = e[p++]
        }
        for (var k = s[0].codewords.length, d = _; d < k; d++) {
            for (var c = 0, w; c < l; c++) {
                w = c < b ? d : d + 1;
                s[c].codewords[w] = e[p++]
            }
        }
        return s
    };

    function g(e) {
        var t = e.Dimension;
        if (21 > t || 1 != (3 & t)) {
            throw "Error BitMatrixParser"
        }
        this.bitMatrix = e;
        this.parsedVersion = null;
        this.parsedFormatInfo = null;
        this.copyBit = function(e, t, i) {
            return this.bitMatrix.get_Renamed(e, t) ? 1 | i << 1 : i << 1
        };
        this.readFormatInformation = function() {
            if (null != this.parsedFormatInfo) {
                return this.parsedFormatInfo
            }
            for (var e = 0, t = 0; 6 > t; t++) {
                e = this.copyBit(t, 8, e)
            }
            e = this.copyBit(7, 8, e);
            e = this.copyBit(8, 8, e);
            e = this.copyBit(8, 7, e);
            for (var o = 5; 0 <= o; o--) {
                e = this.copyBit(8, o, e)
            }
            this.parsedFormatInfo = s.decodeFormatInformation(e);
            if (null != this.parsedFormatInfo) {
                return this.parsedFormatInfo
            }
            var r = this.bitMatrix.Dimension;
            e = 0;
            for (var t = r - 1; t >= r - 8; t--) {
                e = this.copyBit(t, 8, e)
            }
            for (var o = r - 7; o < r; o++) {
                e = this.copyBit(8, o, e)
            }
            this.parsedFormatInfo = s.decodeFormatInformation(e);
            if (null != this.parsedFormatInfo) {
                return this.parsedFormatInfo
            }
            throw "Error readFormatInformation"
        };
        this.readVersion = function() {
            if (null != this.parsedVersion) {
                return this.parsedVersion
            }
            var e = this.bitMatrix.Dimension,
                t = e - 17 >> 2;
            if (6 >= t) {
                return r.getVersionForNumber(t)
            }
            for (var o = 0, a = e - 11, n = 5; 0 <= n; n--) {
                for (var d = e - 9; d >= a; d--) {
                    o = this.copyBit(d, n, o)
                }
            }
            this.parsedVersion = r.decodeVersionInformation(o);
            if (null != this.parsedVersion && this.parsedVersion.DimensionForVersion == e) {
                return this.parsedVersion
            }
            o = 0;
            for (var d = 5; 0 <= d; d--) {
                for (var n = e - 9; n >= a; n--) {
                    o = this.copyBit(d, n, o)
                }
            }
            this.parsedVersion = r.decodeVersionInformation(o);
            if (null != this.parsedVersion && this.parsedVersion.DimensionForVersion == e) {
                return this.parsedVersion
            }
            throw "Error readVersion"
        };
        this.readCodewords = function() {
            var e = this.readFormatInformation(),
                t = this.readVersion(),
                o = v.forReference(e.DataMask),
                r = this.bitMatrix.Dimension;
            o.unmaskBitMatrix(this.bitMatrix, r);
            for (var a = t.buildFunctionPattern(), n = !0, d = Array(t.TotalCodewords), s = 0, l = 0, c = 0, f = r - 1; 0 < f; f -= 2) {
                if (6 == f) {
                    f--
                }
                for (var g = 0, u; g < r; g++) {
                    u = n ? r - 1 - g : g;
                    for (var h = 0; 2 > h; h++) {
                        if (!a.get_Renamed(f - h, u)) {
                            c++;
                            l <<= 1;
                            if (this.bitMatrix.get_Renamed(f - h, u)) {
                                l |= 1
                            }
                            if (8 == c) {
                                d[s++] = l;
                                c = 0;
                                l = 0
                            }
                        }
                    }
                }
                n ^= !0
            }
            if (s != t.TotalCodewords) {
                throw "Error readCodewords"
            }
            return d
        }
    }
    var v = {};
    v.forReference = function(e) {
        if (0 > e || 7 < e) {
            throw "System.ArgumentException"
        }
        return v.DATA_MASKS[e]
    };
    v.DATA_MASKS = [new function() {
        this.unmaskBitMatrix = function(e, t) {
            for (var o = 0; o < t; o++) {
                for (var r = 0; r < t; r++) {
                    if (this.isMasked(o, r)) {
                        e.flip(r, o)
                    }
                }
            }
        };
        this.isMasked = function(e, t) {
            return 0 == (1 & e + t)
        }
    }, new function() {
        this.unmaskBitMatrix = function(e, t) {
            for (var o = 0; o < t; o++) {
                for (var r = 0; r < t; r++) {
                    if (this.isMasked(o, r)) {
                        e.flip(r, o)
                    }
                }
            }
        };
        this.isMasked = function(e) {
            return 0 == (1 & e)
        }
    }, new function() {
        this.unmaskBitMatrix = function(e, t) {
            for (var o = 0; o < t; o++) {
                for (var r = 0; r < t; r++) {
                    if (this.isMasked(o, r)) {
                        e.flip(r, o)
                    }
                }
            }
        };
        this.isMasked = function(e, t) {
            return 0 == t % 3
        }
    }, new function() {
        this.unmaskBitMatrix = function(e, t) {
            for (var o = 0; o < t; o++) {
                for (var r = 0; r < t; r++) {
                    if (this.isMasked(o, r)) {
                        e.flip(r, o)
                    }
                }
            }
        };
        this.isMasked = function(e, t) {
            return 0 == (e + t) % 3
        }
    }, new function() {
        this.unmaskBitMatrix = function(e, t) {
            for (var o = 0; o < t; o++) {
                for (var r = 0; r < t; r++) {
                    if (this.isMasked(o, r)) {
                        e.flip(r, o)
                    }
                }
            }
        };
        this.isMasked = function(e, t) {
            return 0 == (1 & m(e, 1) + t / 3)
        }
    }, new function() {
        this.unmaskBitMatrix = function(e, t) {
            for (var o = 0; o < t; o++) {
                for (var r = 0; r < t; r++) {
                    if (this.isMasked(o, r)) {
                        e.flip(r, o)
                    }
                }
            }
        };
        this.isMasked = function(e, t) {
            var i = e * t;
            return 0 == (1 & i) + i % 3
        }
    }, new function() {
        this.unmaskBitMatrix = function(e, t) {
            for (var o = 0; o < t; o++) {
                for (var r = 0; r < t; r++) {
                    if (this.isMasked(o, r)) {
                        e.flip(r, o)
                    }
                }
            }
        };
        this.isMasked = function(e, t) {
            var i = e * t;
            return 0 == (1 & (1 & i) + i % 3)
        }
    }, new function() {
        this.unmaskBitMatrix = function(e, t) {
            for (var o = 0; o < t; o++) {
                for (var r = 0; r < t; r++) {
                    if (this.isMasked(o, r)) {
                        e.flip(r, o)
                    }
                }
            }
        };
        this.isMasked = function(e, t) {
            return 0 == (1 & (1 & e + t) + e * t % 3)
        }
    }];

    function u(e, t) {
        if (null == t || 0 == t.length) {
            throw "System.ArgumentException"
        }
        this.field = e;
        var o = t.length;
        if (1 < o && 0 == t[0]) {
            var r = 1;
            while (r < o && 0 == t[r]) {
                r++
            }
            if (r == o) {
                this.coefficients = e.Zero.coefficients
            } else {
                this.coefficients = Array(o - r);
                for (var a = 0; a < this.coefficients.length; a++) {
                    this.coefficients[a] = 0
                }
                for (var n = 0; n < this.coefficients.length; n++) {
                    this.coefficients[n] = t[r + n]
                }
            }
        } else {
            this.coefficients = t
        }
        this.__defineGetter__("Zero", function() {
            return 0 == this.coefficients[0]
        });
        this.__defineGetter__("Degree", function() {
            return this.coefficients.length - 1
        });
        this.__defineGetter__("Coefficients", function() {
            return this.coefficients
        });
        this.getCoefficient = function(e) {
            return this.coefficients[this.coefficients.length - 1 - e]
        };
        this.evaluateAt = function(e) {
            if (0 == e) {
                return this.getCoefficient(0)
            }
            var t = this.coefficients.length;
            if (1 == e) {
                for (var o = 0, r = 0; r < t; r++) {
                    o = h.addOrSubtract(o, this.coefficients[r])
                }
                return o
            }
            for (var a = this.coefficients[0], r = 1; r < t; r++) {
                a = h.addOrSubtract(this.field.multiply(e, a), this.coefficients[r])
            }
            return a
        };
        this.addOrSubtract = function(t) {
            if (this.field != t.field) {
                throw "GF256Polys do not have same GF256 field"
            }
            if (this.Zero) {
                return t
            }
            if (t.Zero) {
                return this
            }
            var o = this.coefficients,
                r = t.coefficients;
            if (o.length > r.length) {
                var a = o;
                o = r;
                r = a
            }
            for (var n = Array(r.length), d = r.length - o.length, s = 0; s < d; s++) {
                n[s] = r[s]
            }
            for (var l = d; l < r.length; l++) {
                n[l] = h.addOrSubtract(o[l - d], r[l])
            }
            return new u(e, n)
        };
        this.multiply1 = function(e) {
            if (this.field != e.field) {
                throw "GF256Polys do not have same GF256 field"
            }
            if (this.Zero || e.Zero) {
                return this.field.Zero
            }
            for (var t = this.coefficients, o = t.length, r = e.coefficients, a = r.length, n = Array(o + a - 1), d = 0, s; d < o; d++) {
                s = t[d];
                for (var l = 0; l < a; l++) {
                    n[d + l] = h.addOrSubtract(n[d + l], this.field.multiply(s, r[l]))
                }
            }
            return new u(this.field, n)
        };
        this.multiply2 = function(e) {
            if (0 == e) {
                return this.field.Zero
            }
            if (1 == e) {
                return this
            }
            for (var t = this.coefficients.length, o = Array(t), r = 0; r < t; r++) {
                o[r] = this.field.multiply(this.coefficients[r], e)
            }
            return new u(this.field, o)
        };
        this.multiplyByMonomial = function(e, t) {
            if (0 > e) {
                throw "System.ArgumentException"
            }
            if (0 == t) {
                return this.field.Zero
            }
            for (var o = this.coefficients.length, r = Array(o + e), a = 0; a < r.length; a++) {
                r[a] = 0
            }
            for (var a = 0; a < o; a++) {
                r[a] = this.field.multiply(this.coefficients[a], t)
            }
            return new u(this.field, r)
        };
        this.divide = function(e) {
            if (this.field != e.field) {
                throw "GF256Polys do not have same GF256 field"
            }
            if (e.Zero) {
                throw "Divide by 0"
            }
            var t = this.field.Zero,
                i = this,
                o = e.getCoefficient(e.Degree),
                r = this.field.inverse(o);
            while (i.Degree >= e.Degree && !i.Zero) {
                var a = i.Degree - e.Degree,
                    n = this.field.multiply(i.getCoefficient(i.Degree), r),
                    d = e.multiplyByMonomial(a, n),
                    s = this.field.buildMonomial(a, n);
                t = t.addOrSubtract(s);
                i = i.addOrSubtract(d)
            }
            return [t, i]
        }
    }

    function h(e) {
        this.expTable = Array(256);
        this.logTable = Array(256);
        for (var t = 1, o = 0; 256 > o; o++) {
            this.expTable[o] = t;
            t <<= 1;
            if (256 <= t) {
                t ^= e
            }
        }
        for (var o = 0; 255 > o; o++) {
            this.logTable[this.expTable[o]] = o
        }
        var r = [, ];
        r[0] = 0;
        this.zero = new u(this, Array(r));
        var a = [, ];
        a[0] = 1;
        this.one = new u(this, Array(a));
        this.__defineGetter__("Zero", function() {
            return this.zero
        });
        this.__defineGetter__("One", function() {
            return this.one
        });
        this.buildMonomial = function(e, t) {
            if (0 > e) {
                throw "System.ArgumentException"
            }
            if (0 == t) {
                return this.zero
            }
            for (var o = Array(e + 1), r = 0; r < o.length; r++) {
                o[r] = 0
            }
            o[0] = t;
            return new u(this, o)
        };
        this.exp = function(e) {
            return this.expTable[e]
        };
        this.log = function(e) {
            if (0 == e) {
                throw "System.ArgumentException"
            }
            return this.logTable[e]
        };
        this.inverse = function(e) {
            if (0 == e) {
                throw "System.ArithmeticException"
            }
            return this.expTable[255 - this.logTable[e]]
        };
        this.multiply = function(e, t) {
            if (0 == e || 0 == t) {
                return 0
            }
            if (1 == e) {
                return t
            }
            if (1 == t) {
                return e
            }
            return this.expTable[(this.logTable[e] + this.logTable[t]) % 255]
        }
    }
    h.QR_CODE_FIELD = new h(285);
    h.DATA_MATRIX_FIELD = new h(301);
    h.addOrSubtract = function(e, t) {
        return e ^ t
    };
    var F = {
        rsDecoder: new function(e) {
            this.field = e;
            this.decode = function(e, t) {
                for (var o = new u(this.field, e), r = Array(t), a = 0; a < r.length; a++) {
                    r[a] = 0
                }
                for (var n = !1, d = !0, a = 0, s; a < t; a++) {
                    s = o.evaluateAt(this.field.exp(n ? a + 1 : a));
                    r[r.length - 1 - a] = s;
                    if (0 != s) {
                        d = !1
                    }
                }
                if (d) {
                    return
                }
                for (var l = new u(this.field, r), c = this.runEuclideanAlgorithm(this.field.buildMonomial(t, 1), l, t), f = c[0], g = c[1], m = this.findErrorLocations(f), b = this.findErrorMagnitudes(g, m, n), a = 0, C; a < m.length; a++) {
                    C = e.length - 1 - this.field.log(m[a]);
                    if (0 > C) {
                        throw "ReedSolomonException Bad error location"
                    }
                    e[C] = h.addOrSubtract(e[C], b[a])
                }
            };
            this.runEuclideanAlgorithm = function(e, i, o) {
                if (e.Degree < i.Degree) {
                    var n = e;
                    e = i;
                    i = n
                }
                var d = e,
                    l = i,
                    c = this.field.One,
                    f = this.field.Zero,
                    g = this.field.Zero,
                    u = this.field.One;
                while (l.Degree >= Math.floor(o / 2)) {
                    var h = d,
                        m = c,
                        C = g;
                    d = l;
                    c = f;
                    g = u;
                    if (d.Zero) {
                        throw "r_{i-1} was zero"
                    }
                    l = h;
                    var _ = this.field.Zero,
                        p = d.getCoefficient(d.Degree),
                        k = this.field.inverse(p);
                    while (l.Degree >= d.Degree && !l.Zero) {
                        var w = l.Degree - d.Degree,
                            P = this.field.multiply(l.getCoefficient(l.Degree), k);
                        _ = _.addOrSubtract(this.field.buildMonomial(w, P));
                        l = l.addOrSubtract(d.multiplyByMonomial(w, P))
                    }
                    f = _.multiply1(c).addOrSubtract(m);
                    u = _.multiply1(g).addOrSubtract(C)
                }
                var S = u.getCoefficient(0);
                if (0 == S) {
                    throw "ReedSolomonException sigmaTilde(0) was zero"
                }
                var B = this.field.inverse(S),
                    M = u.multiply2(B),
                    E = l.multiply2(B);
                return [M, E]
            };
            this.findErrorLocations = function(t) {
                var o = t.Degree;
                if (1 == o) {
                    return Array(t.getCoefficient(1))
                }
                for (var r = Array(o), a = 0, n = 1; 256 > n && a < o; n++) {
                    if (0 == t.evaluateAt(n)) {
                        r[a] = this.field.inverse(n);
                        a++
                    }
                }
                if (a != o) {
                    throw "Error locator degree does not match number of roots"
                }
                return r
            };
            this.findErrorMagnitudes = function(e, t, o) {
                for (var r = t.length, a = Array(r), n = 0; n < r; n++) {
                    for (var d = this.field.inverse(t[n]), s = 1, l = 0; l < r; l++) {
                        if (n != l) {
                            s = this.field.multiply(s, h.addOrSubtract(1, this.field.multiply(t[l], d)))
                        }
                    }
                    a[n] = this.field.multiply(e.evaluateAt(d), this.field.inverse(s));
                    if (o) {
                        a[n] = this.field.multiply(a[n], d)
                    }
                }
                return a
            }
        }(h.QR_CODE_FIELD)
    };
    F.correctErrors = function(e, t) {
        for (var o = e.length, r = Array(o), a = 0; a < o; a++) {
            r[a] = 255 & e[a]
        }
        var n = e.length - t;
        try {
            F.rsDecoder.decode(r, n)
        } catch (e) {
            throw e
        }
        for (var a = 0; a < t; a++) {
            e[a] = r[a]
        }
    };
    F.decode = function(e) {
        for (var t = new g(e), o = t.readVersion(), r = t.readFormatInformation().ErrorCorrectionLevel, a = t.readCodewords(), n = f.getDataBlocks(a, o, r), d = 0, s = 0; s < n.length; s++) {
            d += n[s].NumDataCodewords
        }
        for (var l = Array(d), c = 0, u = 0; u < n.length; u++) {
            var h = n[u],
                m = h.Codewords,
                b = h.NumDataCodewords;
            F.correctErrors(m, b);
            for (var s = 0; s < b; s++) {
                l[c++] = m[s]
            }
        }
        var C = new w(l, o.VersionNumber, r.Bits);
        return C
    };
    var I = {
        imagedata: null,
        video: !1,
        width: 0,
        height: 0,
        qrCodeSymbol: null,
        debug: !1,
        maxImgSize: 1048576,
        interval: 500,
        sizeOfDataLengthInfo: [
            [10, 9, 8, 8],
            [12, 11, 16, 10],
            [14, 13, 16, 12]
        ],
        callback: null
    };
    I.startWebCam = function(e) {
        I.videoId = e;
        I.video = document.getElementById(I.videoId);
        var t = I.video.play();
        if (t !== void 0) {
            t.then(function() {}).catch(function() {})
        }
        if (navigator.getUserMedia) {
            navigator.getUserMedia({
                audio: !1,
                video: {
                    facingMode: "environment"
                }
            }, I.webCamSuccess, I.webCamError)
        }
    };
    I.stopWebCam = function() {
        I.video.pause()
    };
    I.webCamSuccess = function(e) {
        I.localstream = e;
        I.video.srcObject = e;
        I.video.controls = !1;
        I.video.volume = 0
    };
    I.webCamError = function() {
        I.stopScan()
    };
    I.startScan = function(e) {
        I.canvasid = "qr-canvas" + e;
        var i = document.getElementById(e);
        I.canvas_qr2 = document.createElement("canvas");
        I.canvas_qr2.id = I.canvasid;
        I.qrcontext2 = I.canvas_qr2.getContext("2d");
        I.canvas_qr2.width = I.video.videoWidth;
        I.canvas_qr2.height = I.video.videoHeight;
        I.gUM = !0;
        var o = function() {
            if (I.gUM) {
                try {
                    if (0 == i.videoWidth) {
                        setTimeout(o, I.interval);
                        return
                    } else {
                        I.canvas_qr2.width = i.videoWidth;
                        I.canvas_qr2.height = i.videoHeight
                    }
                    I.qrcontext2.drawImage(i, 0, 0);
                    try {
                        I.decode()
                    } catch (i) {
                        t.debug(i);
                        setTimeout(o, I.interval)
                    }
                } catch (i) {
                    t.debug(i);
                    setTimeout(o, I.interval)
                }
            }
        };
        o()
    };
    I.stopScan = function() {
        I.gUM = !1
    };
    I.decode = function(e) {
        if (e) {
            var t = e,
                i = I.canvas_qr2.getContext("2d")
        } else {
            var t = I.canvas_qr2,
                i = I.qrcontext2
        }
        I.width = t.width;
        I.height = t.height;
        I.imagedata = i.getImageData(0, 0, I.width, I.height);
        I.result = I.process(i);
        if (null != I.callback) I.callback(I.result);
        return I.result
    };
    I.isUrl = function(e) {
        var t = /(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?/;
        return t.test(e)
    };
    I.decode_url = function(i) {
        var o = "";
        try {
            o = escape(i)
        } catch (r) {
            t.debug(r);
            o = i
        }
        var r = "";
        try {
            r = decodeURIComponent(o)
        } catch (i) {
            t.debug(i);
            r = o
        }
        return r
    };
    I.decode_utf8 = function(e) {
        if (I.isUrl(e)) return I.decode_url(e);
        else return e
    };
    I.process = function(e) {
        var o = new Date().getTime(),
            r = I.grayScaleToBitmap(I.grayscale());
        if (I.debug) {
            for (var a = 0; a < I.height; a++) {
                for (var n = 0, s; n < I.width; n++) {
                    s = 4 * n + 4 * (a * I.width);
                    I.imagedata.data[s] = r[n + a * I.width] ? 0 : 0;
                    I.imagedata.data[s + 1] = r[n + a * I.width] ? 0 : 0;
                    I.imagedata.data[s + 2] = r[n + a * I.width] ? 255 : 0
                }
            }
            e.putImageData(I.imagedata, 0, 0)
        }
        var l = new d(r),
            c = l.detect();
        if (I.debug) {
            for (var a = 0; a < c.bits.Height; a++) {
                for (var n = 0, s; n < c.bits.Width; n++) {
                    s = 2 * (4 * n) + 4 * (2 * a * I.width);
                    I.imagedata.data[s] = c.bits.get_Renamed(n, a) ? 0 : 0;
                    I.imagedata.data[s + 1] = c.bits.get_Renamed(n, a) ? 0 : 0;
                    I.imagedata.data[s + 2] = c.bits.get_Renamed(n, a) ? 255 : 0
                }
            }
            e.putImageData(I.imagedata, 0, 0)
        }
        for (var f = F.decode(c.bits), g = f.DataByte, u = "", h = 0; h < g.length; h++) {
            for (var m = 0; m < g[h].length; m++) {
                u += String.fromCharCode(g[h][m])
            }
        }
        var b = new Date().getTime();
        t.debug(b - o);
        return I.decode_utf8(u)
    };
    I.getPixel = function(e, t) {
        if (I.width < e) {
            throw "point error"
        }
        if (I.height < t) {
            throw "point error"
        }
        var i = 4 * e + 4 * (t * I.width),
            o = (33 * I.imagedata.data[i] + 34 * I.imagedata.data[i + 1] + 33 * I.imagedata.data[i + 2]) / 100;
        return o
    };
    I.binarize = function(e) {
        for (var t = Array(I.width * I.height), i = 0; i < I.height; i++) {
            for (var o = 0, r; o < I.width; o++) {
                r = I.getPixel(o, i);
                t[o + i * I.width] = r <= e ? !0 : !1
            }
        }
        return t
    };
    I.getMiddleBrightnessPerArea = function(e) {
        for (var t = 4, o = Math.floor(I.width / t), r = Math.floor(I.height / t), a = Array(t), n = 0; n < t; n++) {
            a[n] = Array(t);
            for (var d = 0; d < t; d++) {
                a[n][d] = [0, 0]
            }
        }
        for (var s = 0; s < t; s++) {
            for (var l = 0; l < t; l++) {
                a[l][s][0] = 255;
                for (var c = 0; c < r; c++) {
                    for (var f = 0, g; f < o; f++) {
                        g = e[o * l + f + (r * s + c) * I.width];
                        if (g < a[l][s][0]) a[l][s][0] = g;
                        if (g > a[l][s][1]) a[l][s][1] = g
                    }
                }
            }
        }
        for (var u = Array(t), h = 0; h < t; h++) {
            u[h] = Array(t)
        }
        for (var s = 0; s < t; s++) {
            for (var l = 0; l < t; l++) {
                u[l][s] = Math.floor((a[l][s][0] + a[l][s][1]) / 2)
            }
        }
        return u
    };
    I.grayScaleToBitmap = function(e) {
        for (var t = I.getMiddleBrightnessPerArea(e), i = t.length, o = Math.floor(I.width / i), r = Math.floor(I.height / i), a = new ArrayBuffer(I.width * I.height), n = new Uint8Array(a), d = 0; d < i; d++) {
            for (var s = 0; s < i; s++) {
                for (var l = 0; l < r; l++) {
                    for (var c = 0; c < o; c++) {
                        n[o * s + c + (r * d + l) * I.width] = e[o * s + c + (r * d + l) * I.width] < t[s][d] ? !0 : !1
                    }
                }
            }
        }
        return n
    };
    I.grayscale = function() {
        for (var e = new ArrayBuffer(I.width * I.height), t = new Uint8Array(e), i = 0; i < I.height; i++) {
            for (var o = 0, r; o < I.width; o++) {
                r = I.getPixel(o, i);
                t[o + i * I.width] = r
            }
        }
        return t
    };

    function m(e, t) {
        if (0 <= e) return e >> t;
        else return (e >> t) + (2 << ~t)
    }
    var R = 8,
        G = 2;
    I.orderBestPatterns = function(e) {
        function t(e, t) {
            var i = e.X - t.X,
                o = e.Y - t.Y;
            return Math.sqrt(i * i + o * o)
        }

        function i(e, t, i) {
            var o = t.x,
                r = t.y;
            return (i.x - o) * (e.y - r) - (i.y - r) * (e.x - o)
        }
        var o = t(e[0], e[1]),
            r = t(e[1], e[2]),
            a = t(e[0], e[2]),
            n, d, s;
        if (r >= o && r >= a) {
            d = e[0];
            n = e[1];
            s = e[2]
        } else if (a >= r && a >= o) {
            d = e[1];
            n = e[0];
            s = e[2]
        } else {
            d = e[2];
            n = e[0];
            s = e[1]
        }
        if (0 > i(n, d, s)) {
            var l = n;
            n = s;
            s = l
        }
        e[0] = n;
        e[1] = d;
        e[2] = s
    };

    function b(e, t, i) {
        this.x = e;
        this.y = t;
        this.count = 1;
        this.estimatedModuleSize = i;
        this.__defineGetter__("EstimatedModuleSize", function() {
            return this.estimatedModuleSize
        });
        this.__defineGetter__("Count", function() {
            return this.count
        });
        this.__defineGetter__("X", function() {
            return this.x
        });
        this.__defineGetter__("Y", function() {
            return this.y
        });
        this.incrementCount = function() {
            this.count++
        };
        this.aboutEquals = function(e, t, i) {
            if (Math.abs(t - this.y) <= e && Math.abs(i - this.x) <= e) {
                var o = Math.abs(e - this.estimatedModuleSize);
                return 1 >= o || 1 >= o / this.estimatedModuleSize
            }
            return !1
        }
    }

    function C(e) {
        this.bottomLeft = e[0];
        this.topLeft = e[1];
        this.topRight = e[2];
        this.__defineGetter__("BottomLeft", function() {
            return this.bottomLeft
        });
        this.__defineGetter__("TopLeft", function() {
            return this.topLeft
        });
        this.__defineGetter__("TopRight", function() {
            return this.topRight
        })
    }

    function _() {
        this.image = null;
        this.possibleCenters = [];
        this.hasSkipped = !1;
        this.crossCheckStateCount = [0, 0, 0, 0, 0];
        this.resultPointCallback = null;
        this.__defineGetter__("CrossCheckStateCount", function() {
            this.crossCheckStateCount[0] = 0;
            this.crossCheckStateCount[1] = 0;
            this.crossCheckStateCount[2] = 0;
            this.crossCheckStateCount[3] = 0;
            this.crossCheckStateCount[4] = 0;
            return this.crossCheckStateCount
        });
        this.foundPatternCross = function(e) {
            for (var t = 0, o = 0, r; 5 > o; o++) {
                r = e[o];
                if (0 == r) {
                    return !1
                }
                t += r
            }
            if (7 > t) {
                return !1
            }
            var a = Math.floor((t << R) / 7),
                n = Math.floor(a / 2);
            return Math.abs(a - (e[0] << R)) < n && Math.abs(a - (e[1] << R)) < n && Math.abs(3 * a - (e[2] << R)) < 3 * n && Math.abs(a - (e[3] << R)) < n && Math.abs(a - (e[4] << R)) < n
        };
        this.centerFromEnd = function(e, t) {
            return t - e[4] - e[3] - e[2] / 2
        };
        this.crossCheckVertical = function(e, t, o, r) {
            var a = this.image,
                n = I.height,
                d = this.CrossCheckStateCount,
                s = e;
            while (0 <= s && a[t + s * I.width]) {
                d[2]++;
                s--
            }
            if (0 > s) {
                return NaN
            }
            while (0 <= s && !a[t + s * I.width] && d[1] <= o) {
                d[1]++;
                s--
            }
            if (0 > s || d[1] > o) {
                return NaN
            }
            while (0 <= s && a[t + s * I.width] && d[0] <= o) {
                d[0]++;
                s--
            }
            if (d[0] > o) {
                return NaN
            }
            s = e + 1;
            while (s < n && a[t + s * I.width]) {
                d[2]++;
                s++
            }
            if (s == n) {
                return NaN
            }
            while (s < n && !a[t + s * I.width] && d[3] < o) {
                d[3]++;
                s++
            }
            if (s == n || d[3] >= o) {
                return NaN
            }
            while (s < n && a[t + s * I.width] && d[4] < o) {
                d[4]++;
                s++
            }
            if (d[4] >= o) {
                return NaN
            }
            var l = d[0] + d[1] + d[2] + d[3] + d[4];
            if (5 * Math.abs(l - r) >= 2 * r) {
                return NaN
            }
            return this.foundPatternCross(d) ? this.centerFromEnd(d, s) : NaN
        };
        this.crossCheckHorizontal = function(e, t, i, o) {
            var r = this.image,
                a = I.width,
                n = this.CrossCheckStateCount,
                d = e;
            while (0 <= d && r[d + t * I.width]) {
                n[2]++;
                d--
            }
            if (0 > d) {
                return NaN
            }
            while (0 <= d && !r[d + t * I.width] && n[1] <= i) {
                n[1]++;
                d--
            }
            if (0 > d || n[1] > i) {
                return NaN
            }
            while (0 <= d && r[d + t * I.width] && n[0] <= i) {
                n[0]++;
                d--
            }
            if (n[0] > i) {
                return NaN
            }
            d = e + 1;
            while (d < a && r[d + t * I.width]) {
                n[2]++;
                d++
            }
            if (d == a) {
                return NaN
            }
            while (d < a && !r[d + t * I.width] && n[3] < i) {
                n[3]++;
                d++
            }
            if (d == a || n[3] >= i) {
                return NaN
            }
            while (d < a && r[d + t * I.width] && n[4] < i) {
                n[4]++;
                d++
            }
            if (n[4] >= i) {
                return NaN
            }
            var s = n[0] + n[1] + n[2] + n[3] + n[4];
            if (5 * Math.abs(s - o) >= o) {
                return NaN
            }
            return this.foundPatternCross(n) ? this.centerFromEnd(n, d) : NaN
        };
        this.handlePossibleCenter = function(e, t, i) {
            var o = e[0] + e[1] + e[2] + e[3] + e[4],
                r = this.centerFromEnd(e, i),
                a = this.crossCheckVertical(t, Math.floor(r), e[2], o);
            if (!isNaN(a)) {
                r = this.crossCheckHorizontal(Math.floor(r), Math.floor(a), e[2], o);
                if (!isNaN(r)) {
                    for (var n = o / 7, d = !1, s = this.possibleCenters.length, l = 0, c; l < s; l++) {
                        c = this.possibleCenters[l];
                        if (c.aboutEquals(n, a, r)) {
                            c.incrementCount();
                            d = !0;
                            break
                        }
                    }
                    if (!d) {
                        var f = new b(r, a, n);
                        this.possibleCenters.push(f);
                        if (null != this.resultPointCallback) {
                            this.resultPointCallback.foundPossibleResultPoint(f)
                        }
                    }
                    return !0
                }
            }
            return !1
        };
        this.selectBestPatterns = function() {
            var e = this.possibleCenters.length;
            if (3 > e) {
                throw "Couldn't find enough finder patterns (found " + e + ")"
            }
            if (3 < e) {
                for (var t = 0, o = 0, r = 0, a; r < e; r++) {
                    a = this.possibleCenters[r].EstimatedModuleSize;
                    t += a;
                    o += a * a
                }
                var n = t / e;
                this.possibleCenters.sort(function(e, t) {
                    var i = Math.abs(t.EstimatedModuleSize - n),
                        o = Math.abs(e.EstimatedModuleSize - n);
                    if (i < o) {
                        return -1
                    } else if (i == o) {
                        return 0
                    } else {
                        return 1
                    }
                });
                for (var d = Math.sqrt(o / e - n * n), s = Math.max(.2 * n, d), r = this.possibleCenters.length - 1, l; 0 <= r; r--) {
                    l = this.possibleCenters[r];
                    if (Math.abs(l.EstimatedModuleSize - n) > s) {
                        this.possibleCenters.splice(r, 1)
                    }
                }
            }
            if (3 < this.possibleCenters.length) {
                this.possibleCenters.sort(function(e, t) {
                    if (e.count > t.count) {
                        return -1
                    }
                    if (e.count < t.count) {
                        return 1
                    }
                    return 0
                })
            }
            return [this.possibleCenters[0], this.possibleCenters[1], this.possibleCenters[2]]
        };
        this.findRowSkip = function() {
            var e = this.possibleCenters.length;
            if (1 >= e) {
                return 0
            }
            for (var t = null, o = 0, r; o < e; o++) {
                r = this.possibleCenters[o];
                if (r.Count >= G) {
                    if (null == t) {
                        t = r
                    } else {
                        this.hasSkipped = !0;
                        return Math.floor((Math.abs(t.X - r.X) - Math.abs(t.Y - r.Y)) / 2)
                    }
                }
            }
            return 0
        };
        this.haveMultiplyConfirmedCenters = function() {
            for (var e = 0, t = 0, o = this.possibleCenters.length, r = 0, a; r < o; r++) {
                a = this.possibleCenters[r];
                if (a.Count >= G) {
                    e++;
                    t += a.EstimatedModuleSize
                }
            }
            if (3 > e) {
                return !1
            }
            for (var n = t / o, d = 0, r = 0; r < o; r++) {
                a = this.possibleCenters[r];
                d += Math.abs(a.EstimatedModuleSize - n)
            }
            return d <= .05 * t
        };
        this.findFinderPattern = function(e) {
            this.image = e;
            var t = I.height,
                o = I.width,
                r = Math.floor(3 * t / (4 * 57));
            if (r < 3 || !1) {
                r = 3
            }
            for (var a = !1, n = [, , , , , ], d = r - 1; d < t && !a; d += r) {
                n[0] = 0;
                n[1] = 0;
                n[2] = 0;
                n[3] = 0;
                n[4] = 0;
                for (var s = 0, l = 0; l < o; l++) {
                    if (e[l + d * I.width]) {
                        if (1 == (1 & s)) {
                            s++
                        }
                        n[s]++
                    } else {
                        if (0 == (1 & s)) {
                            if (4 == s) {
                                if (this.foundPatternCross(n)) {
                                    var c = this.handlePossibleCenter(n, d, l);
                                    if (c) {
                                        r = 2;
                                        if (this.hasSkipped) {
                                            a = this.haveMultiplyConfirmedCenters()
                                        } else {
                                            var f = this.findRowSkip();
                                            if (f > n[2]) {
                                                d += f - n[2] - r;
                                                l = o - 1
                                            }
                                        }
                                    } else {
                                        do {
                                            l++
                                        } while (l < o && !e[l + d * I.width]);
                                        l--
                                    }
                                    s = 0;
                                    n[0] = 0;
                                    n[1] = 0;
                                    n[2] = 0;
                                    n[3] = 0;
                                    n[4] = 0
                                } else {
                                    n[0] = n[2];
                                    n[1] = n[3];
                                    n[2] = n[4];
                                    n[3] = 1;
                                    n[4] = 0;
                                    s = 3
                                }
                            } else {
                                n[++s]++
                            }
                        } else {
                            n[s]++
                        }
                    }
                }
                if (this.foundPatternCross(n)) {
                    var c = this.handlePossibleCenter(n, d, o);
                    if (c) {
                        r = n[0];
                        if (this.hasSkipped) {
                            a = this.haveMultiplyConfirmedCenters()
                        }
                    }
                }
            }
            var g = this.selectBestPatterns();
            I.orderBestPatterns(g);
            return new C(g)
        }
    }

    function p(e, t, i) {
        this.x = e;
        this.y = t;
        this.count = 1;
        this.estimatedModuleSize = i;
        this.__defineGetter__("EstimatedModuleSize", function() {
            return this.estimatedModuleSize
        });
        this.__defineGetter__("Count", function() {
            return this.count
        });
        this.__defineGetter__("X", function() {
            return Math.floor(this.x)
        });
        this.__defineGetter__("Y", function() {
            return Math.floor(this.y)
        });
        this.incrementCount = function() {
            this.count++
        };
        this.aboutEquals = function(e, t, i) {
            if (Math.abs(t - this.y) <= e && Math.abs(i - this.x) <= e) {
                var o = Math.abs(e - this.estimatedModuleSize);
                return 1 >= o || 1 >= o / this.estimatedModuleSize
            }
            return !1
        }
    }

    function k(e, t, o, r, a, n, d) {
        this.image = e;
        this.possibleCenters = [];
        this.startX = t;
        this.startY = o;
        this.width = r;
        this.height = a;
        this.moduleSize = n;
        this.crossCheckStateCount = [0, 0, 0];
        this.resultPointCallback = d;
        this.centerFromEnd = function(e, t) {
            return t - e[2] - e[1] / 2
        };
        this.foundPatternCross = function(e) {
            for (var t = this.moduleSize, o = 0; 3 > o; o++) {
                if (Math.abs(t - e[o]) >= t / 2) {
                    return !1
                }
            }
            return !0
        };
        this.crossCheckVertical = function(e, t, o, r) {
            var a = this.image,
                n = I.height,
                d = this.crossCheckStateCount;
            d[0] = 0;
            d[1] = 0;
            d[2] = 0;
            var s = e;
            while (0 <= s && a[t + s * I.width] && d[1] <= o) {
                d[1]++;
                s--
            }
            if (0 > s || d[1] > o) {
                return NaN
            }
            while (0 <= s && !a[t + s * I.width] && d[0] <= o) {
                d[0]++;
                s--
            }
            if (d[0] > o) {
                return NaN
            }
            s = e + 1;
            while (s < n && a[t + s * I.width] && d[1] <= o) {
                d[1]++;
                s++
            }
            if (s == n || d[1] > o) {
                return NaN
            }
            while (s < n && !a[t + s * I.width] && d[2] <= o) {
                d[2]++;
                s++
            }
            if (d[2] > o) {
                return NaN
            }
            var l = d[0] + d[1] + d[2];
            if (5 * Math.abs(l - r) >= 2 * r) {
                return NaN
            }
            return this.foundPatternCross(d) ? this.centerFromEnd(d, s) : NaN
        };
        this.handlePossibleCenter = function(e, t, i) {
            var o = e[0] + e[1] + e[2],
                r = this.centerFromEnd(e, i),
                a = this.crossCheckVertical(t, Math.floor(r), 2 * e[1], o);
            if (!isNaN(a)) {
                for (var n = (e[0] + e[1] + e[2]) / 3, d = this.possibleCenters.length, s = 0, l; s < d; s++) {
                    l = this.possibleCenters[s];
                    if (l.aboutEquals(n, a, r)) {
                        return new p(r, a, n)
                    }
                }
                var c = new p(r, a, n);
                this.possibleCenters.push(c);
                if (null != this.resultPointCallback) {
                    this.resultPointCallback.foundPossibleResultPoint(c)
                }
            }
            return null
        };
        this.find = function() {
            for (var t = this.startX, a = this.height, n = t + r, d = [0, 0, 0], s = 0, l; s < a; s++) {
                l = o + (a >> 1) + (0 == (1 & s) ? s + 1 >> 1 : -(s + 1 >> 1));
                d[0] = 0;
                d[1] = 0;
                d[2] = 0;
                var c = t;
                while (c < n && !e[c + I.width * l]) {
                    c++
                }
                var f = 0;
                while (c < n) {
                    if (e[c + l * I.width]) {
                        if (1 == f) {
                            d[f]++
                        } else {
                            if (2 == f) {
                                if (this.foundPatternCross(d)) {
                                    var g = this.handlePossibleCenter(d, l, c);
                                    if (null != g) {
                                        return g
                                    }
                                }
                                d[0] = d[2];
                                d[1] = 1;
                                d[2] = 0;
                                f = 1
                            } else {
                                d[++f]++
                            }
                        }
                    } else {
                        if (1 == f) {
                            f++
                        }
                        d[f]++
                    }
                    c++
                }
                if (this.foundPatternCross(d)) {
                    var g = this.handlePossibleCenter(d, l, n);
                    if (null != g) {
                        return g
                    }
                }
            }
            if (!(0 == this.possibleCenters.length)) {
                return this.possibleCenters[0]
            }
            throw "Couldn't find enough alignment patterns"
        }
    }

    function w(e, t, i) {
        this.blockPointer = 0;
        this.bitPointer = 7;
        this.dataLength = 0;
        this.blocks = e;
        this.numErrorCorrectionCode = i;
        if (9 >= t) this.dataLengthMode = 0;
        else if (10 <= t && 26 >= t) this.dataLengthMode = 1;
        else if (27 <= t && 40 >= t) this.dataLengthMode = 2;
        this.getNextBits = function(e) {
            var t = 0;
            if (e < this.bitPointer + 1) {
                for (var o = 0, r = 0; r < e; r++) {
                    o += 1 << r
                }
                o <<= this.bitPointer - e + 1;
                t = (this.blocks[this.blockPointer] & o) >> this.bitPointer - e + 1;
                this.bitPointer -= e;
                return t
            } else if (e < this.bitPointer + 1 + 8) {
                for (var a = 0, r = 0; r < this.bitPointer + 1; r++) {
                    a += 1 << r
                }
                t = (this.blocks[this.blockPointer] & a) << e - (this.bitPointer + 1);
                this.blockPointer++;
                t += this.blocks[this.blockPointer] >> 8 - (e - (this.bitPointer + 1));
                this.bitPointer = this.bitPointer - e % 8;
                if (0 > this.bitPointer) {
                    this.bitPointer = 8 + this.bitPointer
                }
                return t
            } else if (e < this.bitPointer + 1 + 16) {
                for (var a = 0, n = 0, r = 0; r < this.bitPointer + 1; r++) {
                    a += 1 << r
                }
                var d = (this.blocks[this.blockPointer] & a) << e - (this.bitPointer + 1);
                this.blockPointer++;
                var s = this.blocks[this.blockPointer] << e - (this.bitPointer + 1 + 8);
                this.blockPointer++;
                for (var r = 0; r < e - (this.bitPointer + 1 + 8); r++) {
                    n += 1 << r
                }
                n <<= 8 - (e - (this.bitPointer + 1 + 8));
                var l = (this.blocks[this.blockPointer] & n) >> 8 - (e - (this.bitPointer + 1 + 8));
                t = d + s + l;
                this.bitPointer = this.bitPointer - (e - 8) % 8;
                if (0 > this.bitPointer) {
                    this.bitPointer = 8 + this.bitPointer
                }
                return t
            } else {
                return 0
            }
        };
        this.NextMode = function() {
            if (this.blockPointer > this.blocks.length - this.numErrorCorrectionCode - 2) return 0;
            else return this.getNextBits(4)
        };
        this.getDataLength = function(e) {
            var t = 0;
            while (!0) {
                if (1 == e >> t) break;
                t++
            }
            return this.getNextBits(I.sizeOfDataLengthInfo[this.dataLengthMode][t])
        };
        this.getRomanAndFigureString = function(e) {
            var t = e,
                i = 0,
                o = "",
                r = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", " ", "$", "%", "*", "+", "-", ".", "/", ":"];
            do {
                if (1 < t) {
                    i = this.getNextBits(11);
                    var a = Math.floor(i / 45),
                        n = i % 45;
                    o += r[a];
                    o += r[n];
                    t -= 2
                } else if (1 == t) {
                    i = this.getNextBits(6);
                    o += r[i];
                    t -= 1
                }
            } while (0 < t);
            return o
        };
        this.getFigureString = function(e) {
            var t = e,
                i = 0,
                o = "";
            do {
                if (3 <= t) {
                    i = this.getNextBits(10);
                    if (100 > i) o += "0";
                    if (10 > i) o += "0";
                    t -= 3
                } else if (2 == t) {
                    i = this.getNextBits(7);
                    if (10 > i) o += "0";
                    t -= 2
                } else if (1 == t) {
                    i = this.getNextBits(4);
                    t -= 1
                }
                o += i
            } while (0 < t);
            return o
        };
        this.get8bitByteArray = function(e) {
            var t = e,
                i = 0,
                o = [];
            do {
                i = this.getNextBits(8);
                o.push(i);
                t--
            } while (0 < t);
            return o
        };
        this.getKanjiString = function(e) {
            var t = e,
                i = 0,
                o = "";
            do {
                i = this.getNextBits(13);
                var r = i % 192,
                    a = i / 192,
                    n = (a << 8) + r,
                    d = 0;
                if (40956 >= n + 33088) {
                    d = n + 33088
                } else {
                    d = n + 49472
                }
                o += String.fromCharCode(d);
                t--
            } while (0 < t);
            return o
        };
        this.parseECIValue = function() {
            var e = 0,
                t = this.getNextBits(8);
            if (0 == (128 & t)) {
                e = 127 & t
            }
            if (128 == (192 & t)) {
                var i = this.getNextBits(8);
                e = (63 & t) << 8 | i
            }
            if (192 == (224 & t)) {
                var o = this.getNextBits(8);
                e = (31 & t) << 16 | o
            }
            return e
        };
        this.__defineGetter__("DataByte", function() {
            var e = [],
                t = 1,
                i = 2,
                o = 4,
                r = 7,
                a = 8;
            do {
                var n = this.NextMode();
                if (0 == n) {
                    if (0 < e.length) break;
                    else throw "Empty data block"
                }
                if (n != t && n != i && n != o && n != a && n != r) {
                    throw "Invalid mode: " + n + " in (block:" + this.blockPointer + " bit:" + this.bitPointer + ")"
                }
                if (n == r) {
                    var d = this.parseECIValue()
                } else {
                    var s = this.getDataLength(n);
                    if (1 > s) throw "Invalid data length: " + s;
                    switch (n) {
                        case t:
                            for (var l = this.getFigureString(s), c = Array(l.length), f = 0; f < l.length; f++) {
                                c[f] = l.charCodeAt(f)
                            }
                            e.push(c);
                            break;
                        case i:
                            for (var l = this.getRomanAndFigureString(s), c = Array(l.length), f = 0; f < l.length; f++) {
                                c[f] = l.charCodeAt(f)
                            }
                            e.push(c);
                            break;
                        case o:
                            var d = this.get8bitByteArray(s);
                            e.push(d);
                            break;
                        case a:
                            var l = this.getKanjiString(s);
                            e.push(l);
                            break;
                    }
                }
            } while (!0);
            return e
        })
    }
    return {
        startWebCam: function startWebCam(e) {
            I.startWebCam(e)
        },
        stopWebCam: function stopWebCam() {
            I.stopWebCam()
        },
        startScan: function startScan(e) {
            I.startScan(e)
        },
        stopScan: function stopScan() {
            I.stopScan()
        },
        setCallback: function setCallback(e) {
            I.callback = e
        },
        decode: function decode(e) {
            I.decode(e)
        }
    }
});
define("filter_poodll/poodll_fbmediaskin", ["jquery", "core/log", "filter_poodll/utils_amd"], function(a, b) {
    "use strict";
    b.debug("PoodLL Fluencybuilder Skin: initialising");
    return {
        instanceprops: null,
        pmr: null,
        uploaded: !1,
        clone: function clone() {
            return a.extend(!0, {}, this)
        },
        init: function init(a, b) {
            this.instanceprops = a;
            this.instanceprops.warmedup = !1;
            this.pmr = b
        },
        fetch_instanceprops: function fetch_instanceprops() {
            return this.instanceprops
        },
        onUploadSuccess: function onUploadSuccess(b) {
            a("#" + b + " > .poodll_save-recording").hide();
            a("#" + b + " > .poodll_savedsuccessfully").show()
        },
        onUploadFailure: function onUploadFailure() {},
        fetch_status_bar: function fetch_status_bar(a) {
            return "<div class=\"poodll_status_" + a + " hide\"></div>"
        },
        fetch_preview_audio: function fetch_preview_audio(a) {
            return "<audio class=\"poodll_checkplayer_" + a + " hide\" ></audio>"
        },
        fetch_model_audio: function fetch_model_audio() {
            var a = "<audio class=\"poodll_modelplayer_fluencybuilder hide\" src=\"" + M.cfg.wwwroot + "/filter/poodll/ding.mp3\"></audio>";
            return a
        },
        fetch_preview_video: function fetch_preview_video(a) {
            return "<video class=\"poodll_checkplayer_" + a + "\" width=\"320\" height=\"240\"></video>"
        },
        fetch_resource_audio: function fetch_resource_audio(a) {
            var b = "<audio class=\"poodll_resourceplayer_" + a + " hide\" src=\"" + M.cfg.wwwroot + "/filter/poodll/ding.mp3\" ></audio>";
            return b
        },
        fetch_resource_video: function fetch_resource_video(a) {
            return "<video class=\"poodll_resourceplayer_" + a + " hide\" src=\"@@RESOURCEURLx@@\" ></video>"
        },
        fetch_uploader_skin: function fetch_uploader_skin() {
            return !1
        },
        fetch_ding_player: function fetch_ding_player() {
            var a = "<audio class=\"poodll_dingplayer_fluencybuilder hide\"  src=\"" + M.cfg.wwwroot + "/filter/poodll/ding.mp3\" ></audio>";
            return a
        },
        onMediaError: function onMediaError(a) {
            console.error("media error", a)
        },
        onMediaSuccess_video: function onMediaSuccess_video(a) {
            var b = this.fetch_instanceprops(a);
            this.highlight_button("bwrapper_start-recording", a);
            b.uploader.Output("");
            b.timer.reset();
            b.timer.start();
            this.update_status(a);
            b.controlbar.stopbutton.attr("disabled", !1);
            b.controlbar.savebutton.attr("disabled", !1)
        },
        onMediaSuccess_audio: function onMediaSuccess_audio(a) {
            var b = this.fetch_instanceprops(a);
            b.controlbar.checkplayer.attr("src", null);
            this.pmr.do_pause_audio(b)
        },
        handle_timer_update: function handle_timer_update(a) {
            var b = this.fetch_instanceprops(a);
            this.update_status(a);
            if (0 == b.timer.seconds && 0 < b.timer.initseconds) {
                b.controlbar.stoprecbutton.click()
            }
        },
        update_status: function update_status() {},
        insert_controlbar_video: function insert_controlbar_video(a, b, c, d) {
            var e = this.prepare_controlbar(a, b, c, d, "video");
            return e
        },
        insert_controlbar_audio: function insert_controlbar_audio(a, b, c, d) {
            var e = this.prepare_controlbar(a, b, c, d, "audio");
            return e
        },
        prepare_controlbar: function prepare_controlbar(b, c, d, e, f) {
            var g = this.fetch_instanceprops(c),
                h = g.config.media_skin_style,
                i = "video" == f ? "poodll_mediarecorder_video" : "poodll_mediarecorder_audio",
                e = e.replace("@@RESOURCEURL@@", g.config.resource),
                j = this.fetch_model_audio();
            j = j.replace("@@MODELURL@@", g.config.resource2);
            var k = this.fetch_ding_player(),
                l = this.fetch_status_bar("fluencybuilder"),
                m = "poodll_mediarecorder_size_auto";
            switch (g.config.size) {
                case "small":
                    m = "poodll_mediarecorder_size_small";
                    break;
                case "big":
                    m = "poodll_mediarecorder_size_big";
                    break;
                case "auto":
                    m = "poodll_mediarecorder_size_auto";
            }
            var n = "<div class=\"poodll_mediarecorderholder_fluencybuilder " + i + " " + m + "\" id=\"holder_" + c + "\">";
            n += "<div class=\"poodll_mediarecorderbox_fluencybuilder\" id=\"" + c + "\">";
            n += "<div class=\"style-holder " + h + "\">";
            n += l, n += k, n += j, n += d, n += e, n += "<div class=\"fb_bwrapper bwrapper_play-resource mod_fluencybuilder_autobutton_inactive\"><button type=\"button\" class=\"poodll_mediarecorder_button_fluencybuilder poodll_play-resource_fluencybuilder\"><i class=\"fa fa-assistive-listening-systems\" aria-hidden=\"true\"></i></button></div>";
            n += "<div class=\"fb_bwrapper bwrapper_start-recording mod_fluencybuilder_autobutton_inactive\"><button type=\"button\" class=\"poodll_mediarecorder_button_fluencybuilder poodll_start-recording_fluencybuilder\" disabled><i class=\"fa fa-microphone\" aria-hidden=\"true\"></i></button></div>";
            n += "<div class=\"fb_bwrapper bwrapper_play-model mod_fluencybuilder_autobutton_inactive\"> <button type=\"button\" class=\"poodll_mediarecorder_button_fluencybuilder poodll_play-model_fluencybuilder\" disabled><i class=\"fa fa-play-circle\" aria-hidden=\"true\"></i></button></div>";
            n += "<button type=\"button\" class=\"poodll_mediarecorder_button_fluencybuilder poodll_play-recording_fluencybuilder hide\">" + M.util.get_string("recui_play", "filter_poodll") + "</button>";
            n += "<button type=\"button\" class=\"poodll_mediarecorder_button_fluencybuilder poodll_stop-playing_fluencybuilder hide\">stopplay</button>";
            n += "<button type=\"button\" class=\"poodll_mediarecorder_button_fluencybuilder poodll_stop-recording_fluencybuilder hide\">" + M.util.get_string("recui_stop", "filter_poodll") + "</button>";
            n += "<button type=\"button\" class=\"poodll_save-recording_fluencybuilder pmr_disabled hide\">" + M.util.get_string("recui_save", "filter_poodll") + "</button>";
            n += "</div></div></div>";
            a(b).prepend(n);
            var o = {
                status: a("#" + c + "  .poodll_status_fluencybuilder"),
                dingplayer: a("#" + c + "  .poodll_dingplayer_fluencybuilder"),
                modelplayer: a("#" + c + "  .poodll_modelplayer_fluencybuilder"),
                resourceplayer: a("#" + c + "  .poodll_resourceplayer_fluencybuilder"),
                checkplayer: a("#" + c + "  .poodll_checkplayer_fluencybuilder"),
                resourcebutton: a("#" + c + "  .poodll_play-resource_fluencybuilder"),
                startbutton: a("#" + c + "  .poodll_start-recording_fluencybuilder"),
                stoprecbutton: a("#" + c + "  .poodll_stop-recording_fluencybuilder"),
                stopbutton: a("#" + c + "  .poodll_stop-playing_fluencybuilder"),
                playbutton: a("#" + c + "  .poodll_play-recording_fluencybuilder"),
                playmodelbutton: a("#" + c + "  .poodll_play-model_fluencybuilder"),
                savebutton: a("#" + c + "  .poodll_save-recording_fluencybuilder"),
                resourcewrapper: a("#" + c + "  .bwrapper_play-resource"),
                startrecwrapper: a("#" + c + "  .bwrapper_start-recording"),
                playmodelwrapper: a("#" + c + "  .bwrapper_play-model")
            };
            return o
        },
        register_controlbar_events_video: function register_controlbar_events_video(a, b) {
            return this.register_controlbar_events_audio(a, b)
        },
        play_ding: function play_ding(a, b) {
            var c = this.fetch_instanceprops(b);
            c.controlbar.dingplayer[0].play();
            switch (a) {
                case "click_start":
                    c.controlbar.startbutton.click();
                    break;
                case "click_play":
                    c.controlbar.playmodelbutton.click();
                    break;
                case "show_dialog":
                    alert("dialog");
                    break;
                default:
                    c.controlbar.dingplayer[0].onended = null;
            }
        },
        highlight_button: function highlight_button(b, c) {
            var d = a("#" + c + "  .fb_bwrapper");
            a(d).each(function() {
                if (a(this).hasClass(b)) {
                    a(this).removeClass("mod_fluencybuilder_autobutton_inactive");
                    a(this).addClass("mod_fluencybuilder_autobutton_active")
                } else {
                    a(this).removeClass("mod_fluencybuilder_autobutton_active");
                    a(this).addClass("mod_fluencybuilder_autobutton_inactive")
                }
            })
        },
        warmup_recorder: function warmup_recorder(b, c) {
            var d = this.fetch_instanceprops(b);
            this.pmr.warmup_context(d);
            this.pmr.warmup_preview(d);
            this.pmr.do_start_audio(d, c);
            var e = d.controlbar.modelplayer.get(0),
                f = d.controlbar.dingplayer.get(0),
                g = d.controlbar.resourceplayer.get(0);
            if (!d.warmedup) {
                try {
                    g.play();
                    f.play();
                    e.play();
                    g.pause();
                    f.pause();
                    e.pause()
                } catch (a) {}
            }
            var h = M.cfg.wwwroot + "/filter/poodll/ding.mp3";
            a(e).attr("src", d.config.resource2);
            a(f).attr("src", h);
            a(g).attr("src", d.config.resource);
            d.warmedup = !0
        },
        register_controlbar_events_audio: function register_controlbar_events_audio(a, b) {
            var c = this,
                d = this.pmr,
                e = this.fetch_instanceprops(b);
            e.controlbar.resourceplayer.on("ended", function() {
                if (e.warmedup) {
                    c.play_ding("click_start", b)
                }
            });
            e.controlbar.modelplayer.on("ended", function() {
                c.highlight_button("", b)
            });
            e.controlbar.startbutton.click(function() {
                d.do_resume_audio(e);
                c.highlight_button("bwrapper_start-recording", b);
                e.uploader.Output("");
                e.timer.reset();
                e.timer.start();
                c.update_status(b);
                e.controlbar.stopbutton.attr("disabled", !1);
                e.controlbar.savebutton.attr("disabled", !1)
            });
            e.controlbar.stoprecbutton.click(function() {
                d.do_stop_audio(e);
                c.play_ding("click_play", b);
                e.timer.stop();
                c.update_status(b)
            });
            e.controlbar.stopbutton.click(function() {
                c.highlight_button("none", b);
                e.timer.stop();
                c.update_status(b)
            });
            e.controlbar.playmodelbutton.click(function() {
                var a = e.controlbar.modelplayer.get(0);
                a.play();
                c.highlight_button("bwrapper_play-model", b)
            });
            e.controlbar.playbutton.click(function() {
                var a = e.controlbar.checkplayer.get(0);
                d.do_play_audio(e, a)
            });
            e.controlbar.resourcebutton.click(function() {
                c.warmup_recorder(b, a);
                c.disable_button(this);
                var d = e.controlbar.resourceplayer.get(0);
                d.play();
                c.highlight_button("bwrapper_play-resource", b)
            });
            e.controlbar.savebutton.click(function() {
                c.disable_button(this);
                if (e.blobs && 0 < e.blobs.length) {
                    d.do_save_audio(e);
                    c.uploaded = !0;
                    c.disable_button(e.controlbar.startbutton)
                } else {
                    e.uploader.Output(M.util.get_string("recui_nothingtosaveerror", "filter_poodll"))
                }
                return !1
            });
            window.onbeforeunload = function() {
                c.enable_button(e.controlbar.startbutton);
                var a = e.controlbar.checkplayer;
                if (a && a.get(0)) {
                    a.get(0).pause()
                }
            }
        },
        enable_button: function enable_button(b) {
            a(b).prop("disabled", !1)
        },
        disable_button: function disable_button(b) {
            a(b).prop("disabled", !0)
        },
        show_button: function show_button(a) {
            a.show()
        },
        hide_button: function hide_button(a) {
            a.hide()
        }
    }
});
define("report_competency/user_course_navigation", ["jquery"], function(a) {
    var b = function(b, c, d, e, f, g) {
        this._baseUrl = d;
        this._userId = e + "";
        this._courseId = f;
        this._moduleId = g;
        a(b).on("change", this._userChanged.bind(this));
        a(c).on("change", this._moduleChanged.bind(this))
    };
    b.prototype._userChanged = function(b) {
        var c = a(b.target).val(),
            d = "?user=" + c + "&id=" + this._courseId + "&mod=" + this._moduleId;
        document.location = this._baseUrl + d
    };
    b.prototype._moduleChanged = function(b) {
        var c = a(b.target).val(),
            d = "?mod=" + c + "&id=" + this._courseId + "&user=" + this._userId;
        document.location = this._baseUrl + d
    };
    b.prototype._userId = null;
    b.prototype._moduleId = null;
    b.prototype._courseId = null;
    b.prototype._baseUrl = null;
    return b
});
define("report_competency/grading_popup", ["jquery", "core/notification", "core/str", "core/ajax", "core/log", "core/templates", "tool_lp/dialogue"], function(a, b, c, d, f, g, h) {
    var i = function(b, c) {
        this._regionSelector = b;
        this._userCompetencySelector = c;
        a(this._regionSelector).on("click", this._userCompetencySelector, this._handleClick.bind(this))
    };
    i.prototype._handleClick = function(c) {
        var e = a(c.target).closest(this._userCompetencySelector),
            g = a(e).data("competencyid"),
            h = a(e).data("courseid"),
            i = a(e).data("userid");
        f.debug("Clicked on cell: competencyId=" + g + ", courseId=" + h + ", userId=" + i);
        var j = d.call([{
            methodname: "tool_lp_data_for_user_competency_summary_in_course",
            args: {
                userid: i,
                competencyid: g,
                courseid: h
            }
        }, {
            methodname: "core_competency_user_competency_viewed_in_course",
            args: {
                userid: i,
                competencyid: g,
                courseid: h
            }
        }]);
        a.when.apply(a, j).then(function(a) {
            this._contextLoaded.bind(this)(a)
        }.bind(this)).catch(b.exception)
    };
    i.prototype._contextLoaded = function(a) {
        var d = this;
        a.displayuser = !0;
        g.render("tool_lp/user_competency_summary_in_course", a).done(function(a, e) {
            c.get_string("usercompetencysummary", "report_competency").done(function(b) {
                new h(b, a, g.runTemplateJS.bind(g, e), d._refresh.bind(d), !0)
            }).fail(b.exception)
        }).fail(b.exception)
    };
    i.prototype._refresh = function() {
        var c = a(this._regionSelector),
            e = c.data("courseid"),
            f = c.data("moduleid"),
            g = c.data("userid");
        if ("" === f) {
            f = 0
        }
        d.call([{
            methodname: "report_competency_data_for_report",
            args: {
                courseid: e,
                userid: g,
                moduleid: f
            },
            done: this._pageContextLoaded.bind(this),
            fail: b.exception
        }])
    };
    i.prototype._pageContextLoaded = function(a) {
        var c = this;
        g.render("report_competency/report", a).done(function(a, b) {
            g.replaceNode(c._regionSelector, a, b)
        }).fail(b.exception)
    };
    i.prototype._regionSelector = null;
    i.prototype._userCompetencySelector = null;
    return i
});
define("report_insights/message_users", ["jquery", "core/str", "core/log", "core/modal_factory", "core/modal_events", "core/templates", "core/notification", "core/ajax"], function(a, b, c, d, e, f, g, h) {
    var i = {
            BULKACTIONSELECT: "#formactionid"
        },
        j = function(a, b) {
            this.actionName = b;
            this.attachEventListeners(a)
        };
    j.prototype.actionName = null;
    j.prototype.modal = null;
    j.prototype.attachEventListeners = function(b) {
        a(b + " button[data-bulk-sendmessage]").on("click", function(b) {
            b.preventDefault();
            var d = a(b.currentTarget),
                e = {},
                f = d.data("prediction-to-user-id");
            a(".insights-list input[data-togglegroup^=\"insight-bulk-action\"][data-toggle=\"slave\"]:checked").each(function(b, d) {
                var g = a(d).closest("tr[data-prediction-id]").data("prediction-id");
                if ("undefined" == typeof f[g]) {
                    c.error("Unknown user for prediction " + g);
                    return
                }
                var h = f[g];
                e[g] = h
            });
            if (0 === Object.keys(e).length) {
                return this
            }
            this.showSendMessage(e);
            return this
        }.bind(this))
    };
    j.prototype.showSendMessage = function(c) {
        var g = new Set(Object.values(c));
        if (0 == g.length) {
            return a.Deferred().resolve().promise()
        }
        var h = null;
        if (1 == g.size) {
            h = b.get_string("sendbulkmessagesingle", "core_message")
        } else {
            h = b.get_string("sendbulkmessage", "core_message", g.size)
        }
        return a.when(d.create({
            type: d.types.SAVE_CANCEL,
            body: f.render("core_user/send_bulk_message", {})
        }), h).then(function(b, d) {
            this.modal = b;
            this.modal.setTitle(d);
            this.modal.setSaveButtonText(d);
            this.modal.getRoot().on(e.hidden, function() {
                a(i.BULKACTIONSELECT).focus();
                this.modal.getRoot().remove()
            }.bind(this));
            this.modal.getRoot().on(e.save, this.submitSendMessage.bind(this, c));
            this.modal.show();
            return this.modal
        }.bind(this))
    };
    j.prototype.submitSendMessage = function(a) {
        var c = this.modal.getRoot().find("form textarea").val(),
            d = [],
            e = new Set(Object.values(a));
        e.forEach(function(a) {
            d.push({
                touserid: a,
                text: c
            })
        });
        var f = this.actionName,
            i = null;
        return h.call([{
            methodname: "core_message_send_instant_messages",
            args: {
                messages: d
            }
        }])[0].then(function(a) {
            if (1 == a.length) {
                return b.get_string("sendbulkmessagesentsingle", "core_message")
            } else {
                return b.get_string("sendbulkmessagesent", "core_message", a.length)
            }
        }).then(function(b) {
            i = b;
            return h.call([{
                methodname: "report_insights_action_executed",
                args: {
                    actionname: f,
                    predictionids: Object.keys(a)
                }
            }])[0]
        }).then(function() {
            g.addNotification({
                message: i,
                type: "success"
            });
            return !0
        }).catch(g.exception)
    };
    return {
        init: function init(a, b) {
            return new j(a, b)
        }
    }
});
define("report_insights/actions", ["jquery", "core/str", "core/ajax", "core/notification", "core/url", "core/modal_factory", "core/modal_events"], function(a, b, c, d, e, f, g) {
    return {
        initBulk: function initBulk(h) {
            var i = function(a, b, f) {
                return c.call([{
                    methodname: "report_insights_action_executed",
                    args: {
                        predictionids: a,
                        actionname: f
                    }
                }])[0].then(function() {
                    var a = !1;
                    b.forEach(function(b) {
                        if (!1 === a) {
                            a = b.closest("table")
                        }
                        b.remove()
                    });
                    if (0 === a.find("tbody > tr").length) {
                        var c = {
                            contextid: a.closest("div.insight-container").data("context-id"),
                            modelid: a.closest("div.insight-container").data("model-id")
                        };
                        window.location.assign(e.relativeUrl("report/insights/insights.php", c, !1))
                    }
                }).catch(d.exception)
            };
            a(h + " [data-bulk-actionname]").on("click", function(c) {
                c.preventDefault();
                var e = a(c.currentTarget),
                    h = e.data("bulk-actionname"),
                    j = e.text().trim(),
                    k = [],
                    l = [];
                a(".insights-list input[data-togglegroup^=\"insight-bulk-action-\"][data-toggle=\"slave\"]:checked").each(function() {
                    var b = a(this).closest("tr[data-prediction-id]");
                    l.push(b);
                    k.push(b.data("prediction-id"))
                });
                if (0 === k.length) {
                    return this
                }
                var m = [];
                b.get_strings([{
                    key: "confirmbulkaction",
                    component: "report_insights",
                    param: {
                        action: j,
                        nitems: k.length
                    }
                }, {
                    key: "confirm",
                    component: "moodle"
                }]).then(function(a) {
                    m = a;
                    return f.create({
                        type: f.types.SAVE_CANCEL,
                        title: j,
                        body: m[0]
                    })
                }).then(function(a) {
                    a.setSaveButtonText(m[1]);
                    a.show();
                    a.getRoot().on(g.save, function() {
                        return i(k, l, h)
                    });
                    return a
                }).catch(d.exception);
                return this
            })
        }
    }
});
define("report_progress/completion_override", ["jquery", "core/ajax", "core/str", "core/modal_factory", "core/modal_events", "core/notification", "core/custom_interaction_events", "core/templates"], function(a, b, c, d, e, f, g, h) {
    var i, j, k = function(a, b) {
            return 0 < a ? "i/completion-" + b + "-y-override" : "i/completion-" + b + "-n-override"
        },
        l = function(a) {
            h.render("core/loading", {}).then(function(c) {
                j.append(c);
                return b.call([{
                    methodname: "core_completion_override_activity_completion_status",
                    args: a
                }])[0]
            }).then(function(b) {
                var d = 0 < b.state ? 1 : 0,
                    e = d ? "completion-y-override" : "completion-n-override";
                c.get_string(e, "completion", i).then(function(a) {
                    var b = {
                        state: a,
                        date: "",
                        user: j.attr("data-userfullname"),
                        activity: j.attr("data-activityname")
                    };
                    return c.get_string("progress-title", "completion", b)
                }).then(function(a) {
                    var b = j.attr("data-completiontracking");
                    return h.renderPix(k(d, b), "core", a)
                }).then(function(b) {
                    var c = 0 < d ? 0 : 1;
                    j.find(".loading-icon").remove();
                    j.data("changecompl", a.userid + "-" + a.cmid + "-" + c);
                    j.attr("data-changecompl", a.userid + "-" + a.cmid + "-" + c);
                    j.children("img").replaceWith(b)
                }).catch(f.exception)
            }).catch(f.exception)
        },
        m = function(b, g) {
            g.originalEvent.preventDefault();
            g.originalEvent.stopPropagation();
            b.preventDefault();
            b.stopPropagation();
            j = a(b.currentTarget);
            var h = j.data("changecompl").split("-"),
                i = {
                    userid: h[0],
                    cmid: h[1],
                    newstate: h[2]
                },
                k = 1 == i.newstate ? "completion-y" : "completion-n";
            c.get_strings([{
                key: k,
                component: "completion"
            }]).then(function(a) {
                return c.get_strings([{
                    key: "confirm",
                    component: "moodle"
                }, {
                    key: "areyousureoverridecompletion",
                    component: "completion",
                    param: a[0]
                }])
            }).then(function(a) {
                return d.create({
                    type: d.types.SAVE_CANCEL,
                    title: a[0],
                    body: a[1]
                })
            }).then(function(a) {
                a.getRoot().on(e.save, function() {
                    l(i)
                });
                a.getRoot().on(e.hidden, function() {
                    j.focus();
                    a.destroy()
                });
                a.show()
            }).catch(f.exception)
        };
    return {
        init: function init(b) {
            i = b;
            a("#completion-progress a.changecompl").each(function(a, b) {
                g.define(b, [g.events.activate])
            });
            a("#completion-progress").on(g.events.activate, "a.changecompl", function(a, b) {
                m(a, b)
            })
        }
    }
});
define("gradingform_guide/grades/grader/gradingpanel/comments/selectors", ["exports"], function(a) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    a.default = void 0;
    a.default = {
        frequentComment: "[data-gradingform_guide-role=\"frequent-comment\"]",
        criterion: "[data-gradingform-guide-role=\"criterion\"]",
        remark: "[data-gradingform-guide-role=\"remark\"]"
    };
    return a.default
});
define("gradingform_guide/grades/grader/gradingpanel/comments", ["exports", "./comments/selectors"], function(a, b) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    a.init = void 0;
    b = function(a) {
        return a && a.__esModule ? a : {
            default: a
        }
    }(b);
    a.init = function init(a) {
        var c = document.querySelector("#".concat(a));
        c.addEventListener("click", function(a) {
            if (!a.target.matches(b.default.frequentComment)) {
                return
            }
            a.preventDefault();
            var c = a.target.closest(b.default.frequentComment),
                d = c.closest(b.default.criterion),
                e = d.querySelector(b.default.remark);
            if (!e) {
                return
            }
            if (e.value.trim()) {
                e.value += "\n".concat(c.innerHTML)
            } else {
                e.value += c.innerHTML
            }
        })
    }
});
define("gradingform_guide/grades/grader/gradingpanel", ["exports", "core/ajax", "core_grades/grades/grader/gradingpanel/normalise", "core_grades/grades/grader/gradingpanel/comparison", "jquery"], function(a, b, c, d, e) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    a.storeCurrentGrade = a.fetchCurrentGrade = void 0;
    e = function(a) {
        return a && a.__esModule ? a : {
            default: a
        }
    }(e);

    function f(a, b, c, d, e, f, g) {
        try {
            var h = a[f](g),
                i = h.value
        } catch (a) {
            c(a);
            return
        }
        if (h.done) {
            b(i)
        } else {
            Promise.resolve(i).then(d, e)
        }
    }

    function g(a) {
        return function() {
            var b = this,
                c = arguments;
            return new Promise(function(d, e) {
                var i = a.apply(b, c);

                function g(a) {
                    f(i, d, e, g, h, "next", a)
                }

                function h(a) {
                    f(i, d, e, g, h, "throw", a)
                }
                g(void 0)
            })
        }
    }
    a.fetchCurrentGrade = function fetchCurrentGrade(a, c, d, e) {
        return (0, b.call)([{
            methodname: "gradingform_guide_grader_gradingpanel_fetch",
            args: {
                component: a,
                contextid: c,
                itemname: d,
                gradeduserid: e
            }
        }])[0]
    };
    var h = function() {
        var a = g(regeneratorRuntime.mark(function a(f, g, h, i, j, k) {
            var l;
            return regeneratorRuntime.wrap(function(a) {
                while (1) {
                    switch (a.prev = a.next) {
                        case 0:
                            l = k.querySelector("form");
                            if (!(!0 === (0, d.compareData)(l))) {
                                a.next = 9;
                                break
                            }
                            a.t0 = c.normaliseResult;
                            a.next = 5;
                            return (0, b.call)([{
                                methodname: "gradingform_guide_grader_gradingpanel_store",
                                args: {
                                    component: f,
                                    contextid: g,
                                    itemname: h,
                                    gradeduserid: i,
                                    notifyuser: j,
                                    formdata: (0, e.default)(l).serialize()
                                }
                            }])[0];
                        case 5:
                            a.t1 = a.sent;
                            return a.abrupt("return", (0, a.t0)(a.t1));
                        case 9:
                            return a.abrupt("return", "");
                        case 10:
                        case "end":
                            return a.stop();
                    }
                }
            }, a)
        }));
        return function() {
            return a.apply(this, arguments)
        }
    }();
    a.storeCurrentGrade = h
});
define("gradingform_guide/comment_chooser", ["jquery", "core/templates", "core/notification", "core/yui"], function(a, b, c) {
    return {
        initialise: function initialise(d, e, f, g) {
            function h(b, c) {
                var e = "<label>" + M.util.get_string("insertcomment", "gradingform_guide") + "</label>",
                    g = "comment-chooser-" + d + "-cancel",
                    h = "<button id=\"" + g + "\">" + M.util.get_string("cancel", "moodle") + "</button>",
                    i = new M.core.dialogue({
                        modal: !0,
                        headerContent: e,
                        bodyContent: b,
                        footerContent: h,
                        focusAfterHide: "#" + f,
                        id: "comments-chooser-dialog-" + d
                    });
                a("#" + g).click(function() {
                    i.hide()
                });
                a.each(c, function(b, c) {
                    var e = "#comment-option-" + d + "-" + c.id;
                    a(e).click(function() {
                        var b = a("#" + f),
                            d = b.val();
                        if ("" !== a.trim(d)) {
                            d += "\n"
                        }
                        d += c.description;
                        b.val(d);
                        i.hide()
                    });
                    a(document).off("keypress", e).on("keypress", e, function() {
                        var b = event.which || event.keyCode;
                        if (13 == b || 32 == b) {
                            a(e).click()
                        }
                    })
                });
                i.after("visibleChange", function(a) {
                    if (a.prevVal && !a.newVal) {
                        this.destroy()
                    }
                }, i);
                i.show()
            }

            function i() {
                b.render("gradingform_guide/comment_chooser", {
                    criterionId: d,
                    comments: g
                }).done(function(a) {
                    h(a, g)
                }).fail(c.exception)
            }
            a("#" + e).click(function(a) {
                a.preventDefault();
                i()
            })
        }
    }
});
define("gradingform_rubric/grades/grader/gradingpanel", ["exports", "core/ajax", "core_grades/grades/grader/gradingpanel/normalise", "core_grades/grades/grader/gradingpanel/comparison", "jquery"], function(a, b, c, d, e) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    a.storeCurrentGrade = a.fetchCurrentGrade = void 0;
    e = function(a) {
        return a && a.__esModule ? a : {
            default: a
        }
    }(e);

    function f(a, b, c, d, e, f, g) {
        try {
            var h = a[f](g),
                i = h.value
        } catch (a) {
            c(a);
            return
        }
        if (h.done) {
            b(i)
        } else {
            Promise.resolve(i).then(d, e)
        }
    }

    function g(a) {
        return function() {
            var b = this,
                c = arguments;
            return new Promise(function(d, e) {
                var i = a.apply(b, c);

                function g(a) {
                    f(i, d, e, g, h, "next", a)
                }

                function h(a) {
                    f(i, d, e, g, h, "throw", a)
                }
                g(void 0)
            })
        }
    }
    a.fetchCurrentGrade = function fetchCurrentGrade(a, c, d, e) {
        return (0, b.call)([{
            methodname: "gradingform_rubric_grader_gradingpanel_fetch",
            args: {
                component: a,
                contextid: c,
                itemname: d,
                gradeduserid: e
            }
        }])[0]
    };
    var h = function() {
        var a = g(regeneratorRuntime.mark(function a(f, g, h, i, j, k) {
            var l;
            return regeneratorRuntime.wrap(function(a) {
                while (1) {
                    switch (a.prev = a.next) {
                        case 0:
                            l = k.querySelector("form");
                            if (!(!0 === (0, d.compareData)(l))) {
                                a.next = 9;
                                break
                            }
                            a.t0 = c.normaliseResult;
                            a.next = 5;
                            return (0, b.call)([{
                                methodname: "gradingform_rubric_grader_gradingpanel_store",
                                args: {
                                    component: f,
                                    contextid: g,
                                    itemname: h,
                                    gradeduserid: i,
                                    notifyuser: j,
                                    formdata: (0, e.default)(l).serialize()
                                }
                            }])[0];
                        case 5:
                            a.t1 = a.sent;
                            return a.abrupt("return", (0, a.t0)(a.t1));
                        case 9:
                            return a.abrupt("return", "");
                        case 10:
                        case "end":
                            return a.stop();
                    }
                }
            }, a)
        }));
        return function() {
            return a.apply(this, arguments)
        }
    }();
    a.storeCurrentGrade = h
});
define("tool_analytics/model", ["jquery", "core/str", "core/log", "core/notification", "core/modal_factory", "core/modal_events", "core/templates"], function(b, c, d, e, f, g, h) {
    var i = {
            clear: {
                title: {
                    key: "clearpredictions",
                    component: "tool_analytics"
                },
                body: {
                    key: "clearmodelpredictions",
                    component: "tool_analytics"
                }
            },
            delete: {
                title: {
                    key: "delete",
                    component: "tool_analytics"
                },
                body: {
                    key: "deletemodelconfirmation",
                    component: "tool_analytics"
                }
            }
        },
        j = function(a) {
            var c = b(a).closest("[data-model-name]");
            if (c.length) {
                return c.attr("data-model-name")
            } else {
                d.error("Unexpected DOM error - unable to obtain the model name");
                return ""
            }
        };
    return {
        confirmAction: function confirmAction(a, h) {
            b("[data-action-id=\"" + a + "\"]").on("click", function(k) {
                k.preventDefault();
                var l = b(k.currentTarget);
                if ("undefined" == typeof i[h]) {
                    d.error("Action \"" + h + "\" is not allowed.");
                    return
                }
                var a = [i[h].title, i[h].body];
                a[1].param = j(l);
                var m = c.get_strings(a),
                    n = f.create({
                        type: f.types.SAVE_CANCEL
                    });
                b.when(m, n).then(function(a, b) {
                    b.setTitle(a[0]);
                    b.setBody(a[1]);
                    b.setSaveButtonText(a[0]);
                    b.getRoot().on(g.save, function() {
                        window.location.href = l.attr("href")
                    });
                    b.show();
                    return b
                }).fail(e.exception)
            })
        },
        selectEvaluationOptions: function selectEvaluationOptions(a, d) {
            b("[data-action-id=\"" + a + "\"]").on("click", function(i) {
                i.preventDefault();
                var j = b(i.currentTarget),
                    a = b(this).attr("data-timesplitting-methods"),
                    k = c.get_strings([{
                        key: "evaluatemodel",
                        component: "tool_analytics"
                    }, {
                        key: "evaluate",
                        component: "tool_analytics"
                    }]),
                    l = f.create({
                        type: f.types.SAVE_CANCEL
                    }),
                    m = h.render("tool_analytics/evaluation_options", {
                        trainedexternally: d,
                        timesplittingmethods: JSON.parse(a)
                    });
                b.when(k, l).then(function(a, c) {
                    c.getRoot().on(g.hidden, c.destroy.bind(c));
                    c.setTitle(a[0]);
                    c.setSaveButtonText(a[1]);
                    c.setBody(m);
                    c.getRoot().on(g.save, function() {
                        var a = b("input[name='evaluationmode']:checked").val();
                        if ("trainedmodel" == a) {
                            j.attr("href", j.attr("href") + "&mode=trainedmodel")
                        }
                        var c = b("#id-evaluation-timesplitting").val();
                        j.attr("href", j.attr("href") + "&timesplitting=" + c);
                        window.location.href = j.attr("href")
                    });
                    c.show();
                    return c
                }).fail(e.exception)
            })
        },
        selectExportOptions: function selectExportOptions(a, d) {
            b("[data-action-id=\"" + a + "\"]").on("click", function(i) {
                i.preventDefault();
                var j = b(i.currentTarget);
                if (!d) {
                    j.attr("href", j.attr("href") + "&action=exportmodel&includeweights=0");
                    window.location.href = j.attr("href");
                    return
                }
                var a = c.get_strings([{
                        key: "export",
                        component: "tool_analytics"
                    }]),
                    k = f.create({
                        type: f.types.SAVE_CANCEL
                    }),
                    l = h.render("tool_analytics/export_options", {});
                b.when(a, k).then(function(a, c) {
                    c.getRoot().on(g.hidden, c.destroy.bind(c));
                    c.setTitle(a[0]);
                    c.setSaveButtonText(a[0]);
                    c.setBody(l);
                    c.getRoot().on(g.save, function() {
                        var a = b("input[name='exportoption']:checked").val();
                        if ("exportdata" == a) {
                            j.attr("href", j.attr("href") + "&action=exportdata")
                        } else {
                            j.attr("href", j.attr("href") + "&action=exportmodel");
                            if (b("#id-includeweights").is(":checked")) {
                                j.attr("href", j.attr("href") + "&includeweights=1")
                            } else {
                                j.attr("href", j.attr("href") + "&includeweights=0")
                            }
                        }
                        window.location.href = j.attr("href")
                    });
                    c.show();
                    return c
                }).fail(e.exception)
            })
        }
    }
});
define("tool_analytics/log_info", ["jquery", "core/str", "core/modal_factory", "core/notification"], function(a, b, c, d) {
    return {
        loadInfo: function loadInfo(e, f) {
            var g = a("[data-model-log-id=\"" + e + "\"]");
            b.get_string("loginfo", "tool_analytics").then(function(b) {
                var d = a("<ul>");
                f.forEach(function(a) {
                    d.append("<li>" + a + "</li>")
                });
                d.append("</ul>");
                return c.create({
                    title: b,
                    body: d.html(),
                    large: !0
                }, g)
            }).catch(d.exception)
        }
    }
});
define("tool_analytics/potential-contexts", ["jquery", "core/ajax"], function(a, b) {
    return {
        processResults: function processResults(b, c) {
            var d = [];
            if (a.isArray(c)) {
                a.each(c, function(a, b) {
                    d.push({
                        value: b.id,
                        label: b.name
                    })
                });
                return d
            } else {
                return c
            }
        },
        transport: function transport(c, d, e, f) {
            var g, h = a(c).attr("modelid") || null;
            g = b.call([{
                methodname: "tool_analytics_potential_contexts",
                args: {
                    query: d,
                    modelid: h
                }
            }]);
            g[0].then(e).fail(f)
        }
    }
});
define("tool_dataprivacy/purposesactions", ["jquery", "core/ajax", "core/notification", "core/str", "core/modal_factory", "core/modal_events"], function(a, b, c, d, e, f) {
    var g = {
            DELETE: "[data-action=\"deletepurpose\"]"
        },
        h = function() {
            this.registerEvents()
        };
    h.prototype.registerEvents = function() {
        a(g.DELETE).click(function(g) {
            g.preventDefault();
            var h = a(this).data("id"),
                i = a(this).data("name");
            d.get_strings([{
                key: "deletepurpose",
                component: "tool_dataprivacy"
            }, {
                key: "deletepurposetext",
                component: "tool_dataprivacy",
                param: i
            }, {
                key: "delete"
            }]).then(function(d) {
                var g = d[0],
                    i = d[1],
                    j = d[2];
                return e.create({
                    title: g,
                    body: i,
                    type: e.types.SAVE_CANCEL
                }).then(function(d) {
                    d.setSaveButtonText(j);
                    d.getRoot().on(f.save, function() {
                        b.call([{
                            methodname: "tool_dataprivacy_delete_purpose",
                            args: {
                                id: h
                            }
                        }])[0].done(function(b) {
                            if (b.result) {
                                a("tr[data-purposeid=\"" + h + "\"]").remove()
                            } else {
                                c.addNotification({
                                    message: b.warnings[0].message,
                                    type: "error"
                                })
                            }
                        }).fail(c.exception)
                    });
                    d.getRoot().on(f.hidden, function() {
                        d.destroy()
                    });
                    return d
                })
            }).done(function(a) {
                a.show()
            }).fail(c.exception)
        })
    };
    return {
        init: function init() {
            return new h
        }
    }
});
define("tool_dataprivacy/effective_retention_period", ["jquery"], function(a) {
    var b = {
            PURPOSE_SELECT: "#id_purposeid",
            RETENTION_FIELD: "#fitem_id_retention_current [data-fieldtype=static]"
        },
        c = function(a) {
            this.purposeRetentionPeriods = a;
            this.registerEventListeners()
        },
        d = function() {
            a(b.PURPOSE_SELECT).off("change")
        };
    c.prototype.purposeRetentionPeriods = [];
    c.prototype.registerEventListeners = function() {
        a(b.PURPOSE_SELECT).on("change", function(c) {
            var d = a(c.currentTarget).val(),
                e = this.purposeRetentionPeriods[d];
            a(b.RETENTION_FIELD).text(e)
        }.bind(this))
    };
    return {
        init: function init(a) {
            d();
            return new c(a)
        }
    }
});
define("tool_dataprivacy/categoriesactions", ["jquery", "core/ajax", "core/notification", "core/str", "core/modal_factory", "core/modal_events"], function(a, b, c, d, e, f) {
    var g = {
            DELETE: "[data-action=\"deletecategory\"]"
        },
        h = function() {
            this.registerEvents()
        };
    h.prototype.registerEvents = function() {
        a(g.DELETE).click(function(g) {
            g.preventDefault();
            var h = a(this).data("id"),
                i = a(this).data("name");
            d.get_strings([{
                key: "deletecategory",
                component: "tool_dataprivacy"
            }, {
                key: "deletecategorytext",
                component: "tool_dataprivacy",
                param: i
            }, {
                key: "delete"
            }]).then(function(d) {
                var g = d[0],
                    i = d[1],
                    j = d[2];
                return e.create({
                    title: g,
                    body: i,
                    type: e.types.SAVE_CANCEL
                }).then(function(d) {
                    d.setSaveButtonText(j);
                    d.getRoot().on(f.save, function() {
                        b.call([{
                            methodname: "tool_dataprivacy_delete_category",
                            args: {
                                id: h
                            }
                        }])[0].done(function(b) {
                            if (b.result) {
                                a("tr[data-categoryid=\"" + h + "\"]").remove()
                            } else {
                                c.addNotification({
                                    message: b.warnings[0].message,
                                    type: "error"
                                })
                            }
                        }).fail(c.exception)
                    });
                    d.getRoot().on(f.hidden, function() {
                        d.destroy()
                    });
                    return d
                })
            }).done(function(a) {
                a.show()
            }).fail(c.exception)
        })
    };
    return {
        init: function init() {
            return new h
        }
    }
});
define("tool_dataprivacy/data_request_modal", ["jquery", "core/notification", "core/custom_interaction_events", "core/modal", "core/modal_registry", "tool_dataprivacy/events"], function(a, b, c, d, e, f) {
    var g = !1,
        h = {
            APPROVE_BUTTON: "[data-action=\"approve\"]",
            DENY_BUTTON: "[data-action=\"deny\"]",
            COMPLETE_BUTTON: "[data-action=\"complete\"]"
        },
        i = function(a) {
            d.call(this, a)
        };
    i.TYPE = "tool_dataprivacy-data_request";
    i.prototype = Object.create(d.prototype);
    i.prototype.constructor = i;
    i.prototype.registerEventListeners = function() {
        d.prototype.registerEventListeners.call(this);
        this.getModal().on(c.events.activate, h.APPROVE_BUTTON, function(b, c) {
            var d = a.Event(f.approve);
            this.getRoot().trigger(d, this);
            if (!d.isDefaultPrevented()) {
                this.hide();
                c.originalEvent.preventDefault()
            }
        }.bind(this));
        this.getModal().on(c.events.activate, h.DENY_BUTTON, function(b, c) {
            var d = a.Event(f.deny);
            this.getRoot().trigger(d, this);
            if (!d.isDefaultPrevented()) {
                this.hide();
                c.originalEvent.preventDefault()
            }
        }.bind(this));
        this.getModal().on(c.events.activate, h.COMPLETE_BUTTON, function(b, c) {
            var d = a.Event(f.complete);
            this.getRoot().trigger(d, this);
            if (!d.isDefaultPrevented()) {
                this.hide();
                c.originalEvent.preventDefault()
            }
        }.bind(this))
    };
    if (!g) {
        e.register(i.TYPE, i, "tool_dataprivacy/data_request_modal");
        g = !0
    }
    return i
});
define("tool_dataprivacy/events", [], function() {
    return {
        approve: "tool_dataprivacy-data_request:approve",
        bulkApprove: "tool_dataprivacy-data_request:bulk_approve",
        deny: "tool_dataprivacy-data_request:deny",
        bulkDeny: "tool_dataprivacy-data_request:bulk_deny",
        complete: "tool_dataprivacy-data_request:complete"
    }
});
define("tool_dataprivacy/request_filter", ["jquery", "core/form-autocomplete", "core/str", "core/notification"], function(a, b, c, d) {
    var e = {
            REQUEST_FILTERS: "#request-filters"
        },
        f = function init() {
            c.get_strings([{
                key: "filter",
                component: "moodle"
            }, {
                key: "nofiltersapplied",
                component: "moodle"
            }]).then(function(a) {
                var c = a[0],
                    d = a[1];
                return b.enhance(e.REQUEST_FILTERS, !1, "", c, !1, !0, d, !0)
            }).fail(d.exception);
            var f = a(e.REQUEST_FILTERS).val();
            a(e.REQUEST_FILTERS).on("change", function() {
                var b = a(this).val();
                if (f.join(",") !== b.join(",")) {
                    if (0 === b.length) {
                        a("#filters-cleared").val(1)
                    }
                    a(this.form).submit()
                }
            })
        };
    return {
        init: function init() {
            f()
        }
    }
});
define("tool_dataprivacy/data_deletion", ["jquery", "core/ajax", "core/notification", "core/str", "core/modal_factory", "core/modal_events"], function(a, b, c, d, e, f) {
    var h = {
            MARK_FOR_DELETION: "[data-action=\"markfordeletion\"]",
            SELECT_ALL: "[data-action=\"selectall\"]"
        },
        i = {
            SELECTCONTEXT: ".selectcontext"
        },
        j = function() {
            this.registerEvents()
        };
    j.prototype.registerEvents = function() {
        a(h.MARK_FOR_DELETION).click(function(b) {
            b.preventDefault();
            var c = [];
            a(i.SELECTCONTEXT).each(function() {
                var b = a(this);
                if (b.is(":checked")) {
                    c.push(b.val())
                }
            });
            g(c)
        });
        a(h.SELECT_ALL).change(function(b) {
            b.preventDefault();
            var c = a(this);
            if (c.is(":checked")) {
                a(i.SELECTCONTEXT).attr("checked", "checked")
            } else {
                a(i.SELECTCONTEXT).removeAttr("checked")
            }
        })
    };

    function g(a) {
        var g = "";
        d.get_strings([{
            key: "confirm",
            component: "moodle"
        }, {
            key: "confirmcontextdeletion",
            component: "tool_dataprivacy"
        }]).then(function(a) {
            g = a[0];
            var b = a[1];
            return e.create({
                title: g,
                body: b,
                type: e.types.SAVE_CANCEL
            })
        }).then(function(d) {
            d.setSaveButtonText(g);
            d.getRoot().on(f.save, function() {
                b.call([{
                    methodname: "tool_dataprivacy_confirm_contexts_for_deletion",
                    args: {
                        ids: a
                    }
                }])[0].done(function(a) {
                    if (a.result) {
                        window.location.reload()
                    } else {
                        c.addNotification({
                            message: a.warnings[0].message,
                            type: "error"
                        })
                    }
                }).fail(c.exception)
            });
            d.getRoot().on(f.hidden, function() {
                d.destroy()
            });
            return d
        }).done(function(a) {
            a.show()
        }).fail(c.exception)
    }
    return j
});
define("tool_dataprivacy/requestactions", ["jquery", "core/ajax", "core/notification", "core/str", "core/modal_factory", "core/modal_events", "core/templates", "tool_dataprivacy/data_request_modal", "tool_dataprivacy/events"], function(a, b, c, d, e, f, g, h, i) {
    var q = {
            APPROVE_REQUEST: "[data-action=\"approve\"]",
            DENY_REQUEST: "[data-action=\"deny\"]",
            VIEW_REQUEST: "[data-action=\"view\"]",
            MARK_COMPLETE: "[data-action=\"complete\"]",
            CHANGE_BULK_ACTION: "[id=\"bulk-action\"]",
            CONFIRM_BULK_ACTION: "[id=\"confirm-bulk-action\"]",
            SELECT_ALL: "[data-action=\"selectall\"]"
        },
        r = {
            APPROVE: 1,
            DENY: 2
        },
        s = {
            SELECT_REQUEST: ".selectrequests"
        },
        t = function() {
            this.registerEvents()
        };
    t.prototype.registerEvents = function() {
        a(q.VIEW_REQUEST).click(function(d) {
            d.preventDefault();
            var k = a(this).data("requestid"),
                m = b.call([{
                    methodname: "tool_dataprivacy_get_data_request",
                    args: {
                        requestid: k
                    }
                }]);
            a.when(m[0]).then(function(a) {
                if (a.result) {
                    return a.result
                }
                c.addNotification({
                    message: a.warnings[0].message,
                    type: "error"
                });
                return !1
            }).then(function(a) {
                var b = g.render("tool_dataprivacy/request_details", a),
                    c = {
                        approvedeny: a.approvedeny,
                        canmarkcomplete: a.canmarkcomplete
                    };
                return e.create({
                    title: a.typename,
                    body: b,
                    type: h.TYPE,
                    large: !0,
                    templateContext: c
                })
            }).then(function(a) {
                a.getRoot().on(i.approve, function() {
                    o(i.approve, j(k))
                });
                a.getRoot().on(i.deny, function() {
                    o(i.deny, l(k))
                });
                a.getRoot().on(i.complete, function() {
                    p("tool_dataprivacy_mark_complete", {
                        requestid: k
                    })
                });
                a.getRoot().on(f.hidden, function() {
                    a.destroy()
                });
                a.show()
            }).catch(c.exception)
        });
        a(q.APPROVE_REQUEST).click(function(b) {
            b.preventDefault();
            var c = a(this).data("requestid");
            o(i.approve, j(c))
        });
        a(q.DENY_REQUEST).click(function(b) {
            b.preventDefault();
            var c = a(this).data("requestid");
            o(i.deny, l(c))
        });
        a(q.MARK_COMPLETE).click(function(b) {
            b.preventDefault();
            var c = a(this).data("requestid");
            o(i.complete, n(c))
        });
        a(q.CONFIRM_BULK_ACTION).click(function() {
            var b = [],
                e = "",
                f = {},
                g = [{
                    key: "selectbulkaction",
                    component: "tool_dataprivacy"
                }, {
                    key: "selectdatarequests",
                    component: "tool_dataprivacy"
                }, {
                    key: "ok"
                }],
                h = parseInt(a("#bulk-action").val());
            if (h != r.APPROVE && h != r.DENY) {
                d.get_strings(g).done(function(a) {
                    c.alert("", a[0], a[2])
                }).fail(c.exception);
                return
            }
            a(".selectrequests:checked").each(function() {
                b.push(a(this).val())
            });
            if (1 > b.length) {
                d.get_strings(g).done(function(a) {
                    c.alert("", a[1], a[2])
                }).fail(c.exception);
                return
            }
            switch (h) {
                case r.APPROVE:
                    e = i.bulkApprove;
                    f = k(b);
                    break;
                case r.DENY:
                    e = i.bulkDeny;
                    f = m(b);
            }
            o(e, f)
        });
        a(q.SELECT_ALL).change(function(b) {
            b.preventDefault();
            var c = a(this).is(":checked");
            a(s.SELECT_REQUEST).prop("checked", c)
        })
    };

    function j(a) {
        return {
            wsfunction: "tool_dataprivacy_approve_data_request",
            wsparams: {
                requestid: a
            }
        }
    }

    function k(a) {
        return {
            wsfunction: "tool_dataprivacy_bulk_approve_data_requests",
            wsparams: {
                requestids: a
            }
        }
    }

    function l(a) {
        return {
            wsfunction: "tool_dataprivacy_deny_data_request",
            wsparams: {
                requestid: a
            }
        }
    }

    function m(a) {
        return {
            wsfunction: "tool_dataprivacy_bulk_deny_data_requests",
            wsparams: {
                requestids: a
            }
        }
    }

    function n(a) {
        return {
            wsfunction: "tool_dataprivacy_mark_complete",
            wsparams: {
                requestid: a
            }
        }
    }

    function o(a, b) {
        var g = [];
        switch (a) {
            case i.approve:
                g = [{
                    key: "approverequest",
                    component: "tool_dataprivacy"
                }, {
                    key: "confirmapproval",
                    component: "tool_dataprivacy"
                }];
                break;
            case i.bulkApprove:
                g = [{
                    key: "bulkapproverequests",
                    component: "tool_dataprivacy"
                }, {
                    key: "confirmbulkapproval",
                    component: "tool_dataprivacy"
                }];
                break;
            case i.deny:
                g = [{
                    key: "denyrequest",
                    component: "tool_dataprivacy"
                }, {
                    key: "confirmdenial",
                    component: "tool_dataprivacy"
                }];
                break;
            case i.bulkDeny:
                g = [{
                    key: "bulkdenyrequests",
                    component: "tool_dataprivacy"
                }, {
                    key: "confirmbulkdenial",
                    component: "tool_dataprivacy"
                }];
                break;
            case i.complete:
                g = [{
                    key: "markcomplete",
                    component: "tool_dataprivacy"
                }, {
                    key: "confirmcompletion",
                    component: "tool_dataprivacy"
                }];
                break;
        }
        var h = "";
        d.get_strings(g).then(function(a) {
            h = a[0];
            var b = a[1];
            return e.create({
                title: h,
                body: b,
                type: e.types.SAVE_CANCEL
            })
        }).then(function(a) {
            a.setSaveButtonText(h);
            a.getRoot().on(f.save, function() {
                p(b.wsfunction, b.wsparams)
            });
            a.getRoot().on(f.hidden, function() {
                a.destroy()
            });
            a.show()
        }).catch(c.exception)
    }

    function p(a, d) {
        b.call([{
            methodname: a,
            args: d
        }])[0].done(function(a) {
            if (a.result) {
                window.location.reload()
            } else {
                c.addNotification({
                    message: a.warnings[0].message,
                    type: "error"
                })
            }
        }).fail(c.exception)
    }
    return t
});
define("tool_dataprivacy/form-user-selector", ["jquery", "core/ajax", "core/templates"], function(a, b, c) {
    return {
        processResults: function processResults(b, c) {
            var d = [];
            a.each(c, function(a, b) {
                d.push({
                    value: b.id,
                    label: b._label
                })
            });
            return d
        },
        transport: function transport(d, e, f, g) {
            var h = b.call([{
                methodname: "tool_dataprivacy_get_users",
                args: {
                    query: e
                }
            }]);
            h[0].then(function(b) {
                var d = [],
                    e = 0;
                a.each(b, function(a, b) {
                    d.push(c.render("tool_dataprivacy/form-user-selector-suggestion", b))
                });
                return a.when.apply(a.when, d).then(function() {
                    var c = arguments;
                    a.each(b, function(a, b) {
                        b._label = c[e];
                        e++
                    });
                    f(b)
                })
            }).fail(g)
        }
    }
});
define("tool_dataprivacy/myrequestactions", ["jquery", "core/ajax", "core/notification", "core/str", "core/modal_factory", "core/modal_events", "core/templates", "core/pending"], function(a, b, c, d, e, f, g, h) {
    var j = {
            CANCEL_REQUEST: "[data-action=\"cancel\"]",
            CONTACT_DPO: "[data-action=\"contactdpo\"]"
        },
        k = function() {
            this.registerEvents()
        };
    k.prototype.registerEvents = function() {
        a(j.CANCEL_REQUEST).click(function(g) {
            g.preventDefault();
            var h = a(this).data("requestid");
            d.get_strings([{
                key: "cancelrequest",
                component: "tool_dataprivacy"
            }, {
                key: "cancelrequestconfirmation",
                component: "tool_dataprivacy"
            }]).then(function(a) {
                var d = a[0],
                    g = a[1];
                return e.create({
                    title: d,
                    body: g,
                    type: e.types.SAVE_CANCEL
                }).then(function(a) {
                    a.setSaveButtonText(d);
                    a.getRoot().on(f.save, function() {
                        b.call([{
                            methodname: "tool_dataprivacy_cancel_data_request",
                            args: {
                                requestid: h
                            }
                        }])[0].done(function(a) {
                            if (a.result) {
                                window.location.reload()
                            } else {
                                c.addNotification({
                                    message: a.warnings[0].message,
                                    type: "error"
                                })
                            }
                        }).fail(c.exception)
                    });
                    a.getRoot().on(f.hidden, function() {
                        a.destroy()
                    });
                    return a
                })
            }).done(function(a) {
                a.show()
            }).fail(c.exception)
        });
        a(j.CONTACT_DPO).click(function(b) {
            var j = new h("dataprivacy/crud:initModal:contactdpo");
            b.preventDefault();
            var k = a(this).data("replytoemail"),
                l = "";
            d.get_strings([{
                key: "contactdataprotectionofficer",
                component: "tool_dataprivacy"
            }, {
                key: "send",
                component: "tool_dataprivacy"
            }]).then(function(a) {
                var b = a[0];
                l = a[1];
                return e.create({
                    title: b,
                    body: g.render("tool_dataprivacy/contact_dpo", {
                        replytoemail: k
                    }),
                    type: e.types.SAVE_CANCEL,
                    large: !0
                })
            }).then(function(b) {
                b.setSaveButtonText(l);
                b.show();
                b.getRoot().on(f.save, function(b) {
                    var c = a("#message").val().trim();
                    if (0 === c.length) {
                        b.preventDefault();
                        a("[data-region=\"messageinput\"]").addClass("has-danger notifyproblem");
                        a("#id_error_message").removeAttr("hidden")
                    } else {
                        i(c)
                    }
                });
                b.getRoot().on(f.hidden, function() {
                    b.destroy()
                })
            }).then(j.resolve).catch(c.exception)
        })
    };

    function i(a) {
        var e = "success";
        b.call([{
            methodname: "tool_dataprivacy_contact_dpo",
            args: {
                message: a
            }
        }])[0].then(function(a) {
            if (a.result) {
                return d.get_string("requestsubmitted", "tool_dataprivacy")
            }
            e = "error";
            return a.warnings.join("<br>")
        }).done(function(a) {
            c.addNotification({
                message: a,
                type: e
            })
        }).fail(c.exception)
    }
    return {
        init: function init() {
            return new k
        }
    }
});
define("tool_dataprivacy/expand_contract", ["jquery", "core/url", "core/str"], function(a, b, c) {
    var d = a("<img alt=\"\" src=\"" + b.imageUrl("t/expanded") + "\"/>"),
        e = a("<img alt=\"\" src=\"" + b.imageUrl("t/collapsed") + "\"/>"),
        f = {
            EXPAND: "fa-caret-right",
            COLLAPSE: "fa-caret-down"
        };
    return {
        expandCollapse: function expandCollapse(a, b) {
            if (a.hasClass("hide")) {
                a.removeClass("hide");
                a.addClass("visible");
                a.attr("aria-expanded", !0);
                b.find(":header i.fa").removeClass(f.EXPAND);
                b.find(":header i.fa").addClass(f.COLLAPSE);
                b.find(":header img.icon").attr("src", d.attr("src"))
            } else {
                a.removeClass("visible");
                a.addClass("hide");
                a.attr("aria-expanded", !1);
                b.find(":header i.fa").removeClass(f.COLLAPSE);
                b.find(":header i.fa").addClass(f.EXPAND);
                b.find(":header img.icon").attr("src", e.attr("src"))
            }
        },
        expandCollapseAll: function expandCollapseAll(b) {
            var g = "visible" == b ? "hide" : "visible",
                h = "visible" == b ? !0 : !1,
                i = "visible" == b ? f.EXPAND : f.COLLAPSE,
                j = "visible" == b ? f.COLLAPSE : f.EXPAND,
                k = "visible" == b ? d.attr("src") : e.attr("src");
            a("." + g).each(function() {
                a(this).removeClass(g);
                a(this).addClass(b);
                a(this).attr("aria-expanded", h)
            });
            a(".tool_dataprivacy-expand-all").data("visibilityState", g);
            c.get_string(g, "tool_dataprivacy").then(function(b) {
                a(".tool_dataprivacy-expand-all").html(b)
            }).catch(Notification.exception);
            a(":header i.fa").each(function() {
                a(this).removeClass(i);
                a(this).addClass(j)
            });
            a(":header img.icon").each(function() {
                a(this).attr("src", k)
            })
        }
    }
});
define("tool_dataprivacy/add_category", ["jquery", "core/str", "core/ajax", "core/notification", "core/modal_factory", "core/modal_events", "core/fragment"], function(a, b, c, d, e, f, g) {
    var h = {
            CATEGORY_LINK: "[data-add-element=\"category\"]"
        },
        i = function(a) {
            this.contextId = a;
            this.strings = b.get_strings([{
                key: "addcategory",
                component: "tool_dataprivacy"
            }, {
                key: "save",
                component: "admin"
            }]);
            this.registerEventListeners()
        };
    i.prototype.contextId = 0;
    i.prototype.strings = 0;
    i.prototype.registerEventListeners = function() {
        var b = a(h.CATEGORY_LINK);
        b.on("click", function() {
            return this.strings.then(function(a) {
                e.create({
                    type: e.types.SAVE_CANCEL,
                    title: a[0],
                    body: ""
                }, b).done(function(b) {
                    this.setupFormModal(b, a[1])
                }.bind(this))
            }.bind(this)).fail(d.exception)
        }.bind(this))
    };
    i.prototype.getBody = function(a) {
        var b = null;
        if ("undefined" != typeof a) {
            b = {
                jsonformdata: JSON.stringify(a)
            }
        }
        return g.loadFragment("tool_dataprivacy", "addcategory_form", this.contextId, b)
    };
    i.prototype.setupFormModal = function(a, b) {
        a.setLarge();
        a.setSaveButtonText(b);
        a.getRoot().on(f.hidden, this.destroy.bind(this));
        a.setBody(this.getBody());
        a.getRoot().on(f.save, this.submitForm.bind(this));
        a.getRoot().on("submit", "form", this.submitFormAjax.bind(this));
        this.modal = a;
        a.show()
    };
    i.prototype.submitForm = function(a) {
        a.preventDefault();
        this.modal.getRoot().find("form").submit()
    };
    i.prototype.submitFormAjax = function(a) {
        a.preventDefault();
        var b = this.modal.getRoot().find("form").serialize();
        c.call([{
            methodname: "tool_dataprivacy_create_category_form",
            args: {
                jsonformdata: JSON.stringify(b)
            },
            done: function(a) {
                if (a.validationerrors) {
                    this.modal.setBody(this.getBody(b))
                } else {
                    this.close()
                }
            }.bind(this),
            fail: d.exception
        }])
    };
    i.prototype.close = function() {
        this.destroy();
        document.location.reload()
    };
    i.prototype.destroy = function() {
        Y.use("moodle-core-formchangechecker", function() {
            M.core_formchangechecker.reset_form_dirty_state()
        });
        this.modal.destroy()
    };
    i.prototype.removeListeners = function() {
        a(h.CATEGORY_LINK).off("click")
    };
    return {
        getInstance: function getInstance(a) {
            return new i(a)
        }
    }
});
define("tool_dataprivacy/add_purpose", ["jquery", "core/str", "core/ajax", "core/notification", "core/modal_factory", "core/modal_events", "core/fragment"], function(a, b, c, d, e, f, g) {
    var h = {
            PURPOSE_LINK: "[data-add-element=\"purpose\"]"
        },
        i = function(a) {
            this.contextId = a;
            this.strings = b.get_strings([{
                key: "addpurpose",
                component: "tool_dataprivacy"
            }, {
                key: "save",
                component: "admin"
            }]);
            this.registerEventListeners()
        };
    i.prototype.contextId = 0;
    i.prototype.strings = 0;
    i.prototype.registerEventListeners = function() {
        var b = a(h.PURPOSE_LINK);
        b.on("click", function() {
            return this.strings.then(function(a) {
                e.create({
                    type: e.types.SAVE_CANCEL,
                    title: a[0],
                    body: ""
                }, b).done(function(b) {
                    this.setupFormModal(b, a[1])
                }.bind(this))
            }.bind(this)).fail(d.exception)
        }.bind(this))
    };
    i.prototype.getBody = function(a) {
        var b = null;
        if ("undefined" != typeof a) {
            b = {
                jsonformdata: JSON.stringify(a)
            }
        }
        return g.loadFragment("tool_dataprivacy", "addpurpose_form", this.contextId, b)
    };
    i.prototype.setupFormModal = function(a, b) {
        a.setLarge();
        a.setSaveButtonText(b);
        a.getRoot().on(f.hidden, this.destroy.bind(this));
        a.setBody(this.getBody());
        a.getRoot().on(f.save, this.submitForm.bind(this));
        a.getRoot().on("submit", "form", this.submitFormAjax.bind(this));
        this.modal = a;
        a.show()
    };
    i.prototype.submitForm = function(a) {
        a.preventDefault();
        this.modal.getRoot().find("form").submit()
    };
    i.prototype.submitFormAjax = function(a) {
        a.preventDefault();
        var b = this.modal.getRoot().find("form").serialize();
        c.call([{
            methodname: "tool_dataprivacy_create_purpose_form",
            args: {
                jsonformdata: JSON.stringify(b)
            },
            done: function(a) {
                if (a.validationerrors) {
                    this.modal.setBody(this.getBody(b))
                } else {
                    this.close()
                }
            }.bind(this),
            fail: d.exception
        }])
    };
    i.prototype.close = function() {
        this.destroy();
        document.location.reload()
    };
    i.prototype.destroy = function() {
        Y.use("moodle-core-formchangechecker", function() {
            M.core_formchangechecker.reset_form_dirty_state()
        });
        this.modal.destroy()
    };
    i.prototype.removeListeners = function() {
        a(h.PURPOSE_LINK).off("click")
    };
    return {
        getInstance: function getInstance(a) {
            return new i(a)
        }
    }
});
define("tool_dataprivacy/data_registry", ["jquery", "core/str", "core/ajax", "core/notification", "core/templates", "core/modal_factory", "core/modal_events", "core/fragment", "tool_dataprivacy/add_purpose", "tool_dataprivacy/add_category"], function(a, b, c, d, e, f, g, h, i, j) {
    var k = {
            TREE_NODES: "[data-context-tree-node=1]",
            FORM_CONTAINER: "#context-form-container"
        },
        l = function(a, b, c) {
            this.systemContextId = a;
            this.currentContextLevel = b;
            this.currentContextId = c;
            this.init()
        };
    l.prototype.systemContextId = 0;
    l.prototype.currentContextLevel = 0;
    l.prototype.currentContextId = 0;
    l.prototype.addpurpose = null;
    l.prototype.addcategory = null;
    l.prototype.init = function() {
        this.addpurpose = i.getInstance(this.systemContextId);
        this.addcategory = j.getInstance(this.systemContextId);
        this.strings = b.get_strings([{
            key: "changessaved",
            component: "moodle"
        }, {
            key: "contextpurposecategorysaved",
            component: "tool_dataprivacy"
        }, {
            key: "noblockstoload",
            component: "tool_dataprivacy"
        }, {
            key: "noactivitiestoload",
            component: "tool_dataprivacy"
        }, {
            key: "nocoursestoload",
            component: "tool_dataprivacy"
        }]);
        this.registerEventListeners();
        if (this.currentContextId) {
            this.loadForm("context_form", [this.currentContextId], this.submitContextFormAjax.bind(this))
        } else {
            this.loadForm("contextlevel_form", [this.currentContextLevel], this.submitContextLevelFormAjax.bind(this))
        }
    };
    l.prototype.registerEventListeners = function() {
        a(k.TREE_NODES).on("click", function(b) {
            b.preventDefault();
            var c = a(b.currentTarget);
            a(k.TREE_NODES).removeClass("active");
            c.addClass("active");
            var d = c.data("contextlevel"),
                e = c.data("contextid");
            if (d) {
                window.history.pushState({}, null, "?contextlevel=" + d);
                this.addpurpose.removeListeners();
                this.addcategory.removeListeners();
                this.currentContextLevel = d;
                this.loadForm("contextlevel_form", [this.currentContextLevel], this.submitContextLevelFormAjax.bind(this))
            } else if (e) {
                window.history.pushState({}, null, "?contextid=" + e);
                this.addpurpose.removeListeners();
                this.addcategory.removeListeners();
                this.currentContextId = e;
                this.loadForm("context_form", [this.currentContextId], this.submitContextFormAjax.bind(this))
            } else {
                var f = c.data("expandcontextid"),
                    g = c.data("expandelement"),
                    h = c.data("expanded");
                if (g) {
                    if (!h) {
                        if (c.data("loaded") || !f || !g) {
                            this.expand(c)
                        } else {
                            c.find("> i").removeClass("fa-plus");
                            c.find("> i").addClass("fa-circle-o-notch fa-spin");
                            this.loadExtra(c, f, g)
                        }
                    } else {
                        this.collapse(c)
                    }
                }
            }
        }.bind(this))
    };
    l.prototype.removeListeners = function() {
        a(k.TREE_NODES).off("click")
    };
    l.prototype.loadForm = function(b, c, f) {
        this.clearForm();
        var g = h.loadFragment("tool_dataprivacy", b, this.systemContextId, c);
        g.done(function(b, c) {
            a(k.FORM_CONTAINER).html(b);
            e.runTemplateJS(c);
            this.addpurpose.registerEventListeners();
            this.addcategory.registerEventListeners();
            a(k.FORM_CONTAINER).on("submit", "form", f)
        }.bind(this)).fail(d.exception)
    };
    l.prototype.clearForm = function() {
        Y.use("moodle-core-formchangechecker", function() {
            M.core_formchangechecker.reset_form_dirty_state()
        });
        a(k.FORM_CONTAINER).off("submit", "form")
    };
    l.prototype.submitForm = function(b) {
        b.preventDefault();
        a(k.FORM_CONTAINER).find("form").submit()
    };
    l.prototype.submitContextLevelFormAjax = function(a) {
        this.submitFormAjax(a, "tool_dataprivacy_set_contextlevel_form")
    };
    l.prototype.submitContextFormAjax = function(a) {
        this.submitFormAjax(a, "tool_dataprivacy_set_context_form")
    };
    l.prototype.submitFormAjax = function(b, e) {
        b.preventDefault();
        var f = a(k.FORM_CONTAINER).find("form").serialize();
        return this.strings.then(function(a) {
            c.call([{
                methodname: e,
                args: {
                    jsonformdata: JSON.stringify(f)
                },
                done: function done() {
                    d.alert(a[0], a[1])
                },
                fail: d.exception
            }])
        }).catch(d.exception)
    };
    l.prototype.loadExtra = function(a, b, f) {
        c.call([{
            methodname: "tool_dataprivacy_tree_extra_branches",
            args: {
                contextid: b,
                element: f
            },
            done: function(b) {
                if (0 == b.branches.length) {
                    this.noElements(a, f);
                    return
                }
                e.render("tool_dataprivacy/context_tree_branches", b).then(function(b) {
                    a.after(b);
                    this.removeListeners();
                    this.registerEventListeners();
                    this.expand(a);
                    a.data("loaded", 1)
                }.bind(this)).fail(d.exception)
            }.bind(this),
            fail: d.exception
        }])
    };
    l.prototype.noElements = function(a, b) {
        a.data("expandcontextid", "");
        a.data("expandelement", "");
        this.strings.then(function(c) {
            var d = 2;
            if ("module" == b) {
                d = 3
            } else if ("course" == b) {
                d = 4
            }
            a.text(c[d])
        }).fail(d.exception)
    };
    l.prototype.collapse = function(a) {
        a.data("expanded", 0);
        a.siblings("nav").addClass("hidden");
        a.find("> i").removeClass("fa-minus");
        a.find("> i").addClass("fa-plus")
    };
    l.prototype.expand = function(a) {
        a.data("expanded", 1);
        a.siblings("nav").removeClass("hidden");
        a.find("> i").removeClass("fa-plus");
        a.find("> i").removeClass("fa-circle-o-notch fa-spin");
        a.find("> i").addClass("fa-minus")
    };
    return {
        init: function init(a, b, c) {
            return new l(a, b, c)
        }
    }
});
define("tool_dataprivacy/defaultsactions", ["jquery", "core/ajax", "core/notification", "core/str", "core/modal_factory", "core/modal_events", "core/templates"], function(a, b, c, d, f, g, h) {
    var k = {
            EDIT_LEVEL_DEFAULTS: "[data-action=\"edit-level-defaults\"]",
            NEW_ACTIVITY_DEFAULTS: "[data-action=\"new-activity-defaults\"]",
            EDIT_ACTIVITY_DEFAULTS: "[data-action=\"edit-activity-defaults\"]",
            DELETE_ACTIVITY_DEFAULTS: "[data-action=\"delete-activity-defaults\"]"
        },
        l = -1,
        m = function() {
            this.registerEvents()
        };
    m.prototype.registerEvents = function() {
        a(k.EDIT_LEVEL_DEFAULTS).click(function(f) {
            f.preventDefault();
            var e = a(this),
                g = e.data("contextlevel"),
                h = e.data("category"),
                j = e.data("purpose"),
                k = b.call([{
                    methodname: "tool_dataprivacy_get_category_options",
                    args: {}
                }, {
                    methodname: "tool_dataprivacy_get_purpose_options",
                    args: {}
                }]),
                l = d.get_string("editdefaults", "tool_dataprivacy", a("#defaults-header").text());
            a.when(k[0], k[1], l).then(function(a, b, c) {
                var d = a.options,
                    e = b.options;
                i(c, g, h, j, null, d, e, null);
                return !0
            }).catch(c.exception)
        });
        a(k.NEW_ACTIVITY_DEFAULTS).click(function(f) {
            f.preventDefault();
            var e = a(this),
                g = e.data("contextlevel"),
                h = b.call([{
                    methodname: "tool_dataprivacy_get_category_options",
                    args: {}
                }, {
                    methodname: "tool_dataprivacy_get_purpose_options",
                    args: {}
                }, {
                    methodname: "tool_dataprivacy_get_activity_options",
                    args: {
                        nodefaults: !0
                    }
                }]),
                j = d.get_string("addnewdefaults", "tool_dataprivacy");
            a.when(h[0], h[1], h[2], j).then(function(a, b, c, d) {
                var e = a.options,
                    f = b.options,
                    h = c.options;
                i(d, g, null, null, null, e, f, h);
                return !0
            }).catch(c.exception)
        });
        a(k.EDIT_ACTIVITY_DEFAULTS).click(function(f) {
            f.preventDefault();
            var e = a(this),
                g = e.data("contextlevel"),
                h = e.data("category"),
                j = e.data("purpose"),
                k = e.data("activityname"),
                l = b.call([{
                    methodname: "tool_dataprivacy_get_category_options",
                    args: {}
                }, {
                    methodname: "tool_dataprivacy_get_purpose_options",
                    args: {}
                }, {
                    methodname: "tool_dataprivacy_get_activity_options",
                    args: {}
                }]),
                m = d.get_string("editmoduledefaults", "tool_dataprivacy");
            a.when(l[0], l[1], l[2], m).then(function(a, b, c, d) {
                var e = a.options,
                    f = b.options,
                    l = c.options;
                i(d, g, h, j, k, e, f, l);
                return !0
            }).catch(c.exception)
        });
        a(k.DELETE_ACTIVITY_DEFAULTS).click(function(b) {
            b.preventDefault();
            var e = a(this),
                i = e.data("contextlevel"),
                k = e.data("activityname"),
                m = e.data("activitydisplayname");
            f.create({
                title: d.get_string("deletedefaults", "tool_dataprivacy", m),
                body: h.render("tool_dataprivacy/delete_activity_defaults", {
                    activityname: m
                }),
                type: f.types.SAVE_CANCEL,
                large: !0
            }).then(function(a) {
                a.setSaveButtonText(d.get_string("delete"));
                a.getRoot().on(g.save, function() {
                    j(i, l, l, k, !1)
                });
                a.getRoot().on(g.hidden, function() {
                    a.destroy()
                });
                a.show();
                return !0
            }).catch(c.exception)
        })
    };

    function i(b, d, e, i, k, l, m, n) {
        if (null !== e) {
            l.forEach(function(a) {
                if (a.id === e) {
                    a.selected = !0
                }
            })
        }
        if (null !== i) {
            m.forEach(function(a) {
                if (a.id === i) {
                    a.selected = !0
                }
            })
        }
        var o = {
            contextlevel: d,
            categoryoptions: l,
            purposeoptions: m
        };
        if (null !== n && n.length) {
            if (null === k) {
                o.newactivitydefaults = !0
            } else {
                n.forEach(function(a) {
                    if (k === a.name) {
                        a.selected = !0
                    }
                })
            }
            o.modemodule = !0;
            o.activityoptions = n
        }
        f.create({
            title: b,
            body: h.render("tool_dataprivacy/category_purpose_form", o),
            type: f.types.SAVE_CANCEL,
            large: !0
        }).then(function(b) {
            b.getRoot().on(g.save, function() {
                var b = a("#activity"),
                    c = "undefined" != typeof b ? b.val() : null,
                    d = a("#override"),
                    e = "undefined" != typeof d ? d.is(":checked") : !1;
                j(a("#contextlevel").val(), a("#category").val(), a("#purpose").val(), c, e)
            });
            b.getRoot().on(g.hidden, function() {
                b.destroy()
            });
            b.show();
            return b
        }).catch(c.exception)
    }

    function j(a, c, d, e, f) {
        b.call([{
            methodname: "tool_dataprivacy_set_context_defaults",
            args: {
                contextlevel: a,
                category: c,
                purpose: d,
                override: f,
                activity: e
            }
        }])[0].done(function(a) {
            if (a.result) {
                window.location.reload()
            }
        })
    }
    return {
        init: function init() {
            return new m
        }
    }
});
define("tool_lp/dragdrop-reorder", ["core/str", "core/yui"], function(a, b) {
    var c = null,
        d = function(a) {
            var b = a.drag.get("node"),
                c = a.drop.get("node");
            this.callback(b.getDOMNode(), c.getDOMNode())
        };
    return {
        dragdrop: function dragdrop(e, f, g, h, i, j, k, l) {
            a.get_strings([{
                key: "emptydragdropregion",
                component: "moodle"
            }, {
                key: "movecontent",
                component: "moodle"
            }, {
                key: "tocontent",
                component: "moodle"
            }]).done(function() {
                b.use("moodle-tool_lp-dragdrop-reorder", function() {
                    if (c) {
                        c.destroy()
                    }
                    c = M.tool_lp.dragdrop_reorder({
                        group: e,
                        dragHandleText: f,
                        sameNodeText: g,
                        parentNodeText: h,
                        sameNodeClass: i,
                        parentNodeClass: j,
                        dragHandleInsertClass: k,
                        callback: b.bind(d, {
                            callback: l
                        })
                    })
                })
            })
        }
    }
});
define("tool_lp/competencytree", ["core/ajax", "core/notification", "core/templates", "tool_lp/tree", "tool_lp/competency_outcomes", "jquery"], function(a, b, c, d, e, f) {
    var g = {},
        h = 0,
        j = "",
        k = "",
        l = "",
        m = !1,
        n = function(a, b) {
            var c = 0,
                d = !1;
            a.haschildren = !1;
            a.children = [];
            for (c = 0; c < b.length; c++) {
                d = b[c];
                if (d.parentid == a.id) {
                    a.haschildren = !0;
                    a.children.push(d);
                    n(d, b)
                }
            }
        },
        o = function(b) {
            var e = f.Deferred();
            c.render("tool_lp/loading", {}).done(function(i, o) {
                c.replaceNodeContents(f(k), i, o);
                var p = a.call([{
                    methodname: "core_competency_search_competencies",
                    args: {
                        searchtext: b,
                        competencyframeworkid: h
                    }
                }]);
                p[0].done(function(a) {
                    g = {};
                    var b = 0;
                    for (b = 0; b < a.length; b++) {
                        g[a[b].id] = a[b]
                    }
                    var h = [],
                        o = !1;
                    for (b = 0; b < a.length; b++) {
                        o = a[b];
                        if (0 === parseInt(o.parentid, 10)) {
                            h.push(o);
                            n(o, a)
                        }
                    }
                    var p = {
                        shortname: j,
                        canmanage: m,
                        competencies: h
                    };
                    c.render("tool_lp/competencies_tree_root", p).done(function(a, b) {
                        c.replaceNodeContents(f(k), f(a).html(), b);
                        var h = new d(k, !1);
                        if (l) {
                            var i = f(k).find("[data-id=" + l + "]");
                            if (i.length) {
                                h.selectItem(i);
                                h.updateFocus(i)
                            }
                        }
                        e.resolve(g)
                    }).fail(e.reject)
                }).fail(e.reject)
            });
            return e.promise()
        },
        p = function(a, b) {
            var c = b.selected;
            l = c.attr("data-id")
        };
    return {
        init: function init(a, c, d, e, f, g) {
            h = a;
            j = c;
            m = f;
            k = e;
            o(d).fail(b.exception);
            if (0 < g) {
                l = g
            }
            this.on("selectionchanged", p)
        },
        on: function on(a, b) {
            f(k).on(a, b)
        },
        getChildren: function getChildren(a) {
            var b = [];
            f.each(g, function(c, d) {
                if (d.parentid == a) {
                    b.push(d)
                }
            });
            return b
        },
        getCompetencyFrameworkId: function getCompetencyFrameworkId() {
            return h
        },
        getCompetency: function getCompetency(a) {
            return g[a]
        },
        getCompetencyLevel: function getCompetencyLevel(a) {
            var b = this.getCompetency(a),
                c = b.path.replace(/^\/|\/$/g, "").split("/").length;
            return c
        },
        hasChildren: function hasChildren(a) {
            return 0 < this.getChildren(a).length
        },
        hasRule: function hasRule(a) {
            var b = this.getCompetency(a);
            if (b) {
                return b.ruleoutcome != e.OUTCOME_NONE && b.ruletype
            }
            return !1
        },
        reloadCompetencies: function reloadCompetencies() {
            return o("").fail(b.exception)
        },
        listCompetencies: function listCompetencies() {
            return g
        }
    }
});
define("tool_lp/competency_rule_points", ["jquery", "core/str", "core/templates", "tool_lp/competency_rule"], function(a, b, c, d) {
    var e = function() {
        d.apply(this, arguments)
    };
    e.prototype = Object.create(d.prototype);
    e.prototype._container = null;
    e.prototype._templateLoaded = !1;
    e.prototype.getConfig = function() {
        return JSON.stringify({
            base: {
                points: this._getRequiredPoints()
            },
            competencies: this._getCompetenciesConfig()
        })
    };
    e.prototype._getCompetenciesConfig = function() {
        var b = [];
        this._container.find("[data-competency]").each(function() {
            var c = a(this),
                d = c.data("competency"),
                e = parseInt(c.find("[name=\"points\"]").val(), 10),
                f = c.find("[name=\"required\"]").prop("checked");
            b.push({
                id: d,
                points: e,
                required: f ? 1 : 0
            })
        });
        return b
    };
    e.prototype._getRequiredPoints = function() {
        return parseInt(this._container.find("[name=\"requiredpoints\"]").val() || 1, 10)
    };
    e.prototype.getType = function() {
        return "core_competency\\competency_rule_points"
    };
    e.prototype.injectTemplate = function(b) {
        var d = this,
            e = this._tree.getChildren(this._competency.id),
            f, g = {
                base: {
                    points: 2
                },
                competencies: []
            };
        this._templateLoaded = !1;
        if (d._competency.ruletype == d.getType()) {
            try {
                g = JSON.parse(d._competency.ruleconfig)
            } catch (a) {}
        }
        f = {
            requiredpoints: g && g.base ? g.base.points : 2,
            competency: d._competency,
            children: []
        };
        a.each(e, function(b, c) {
            var d = {
                id: c.id,
                shortname: c.shortname,
                required: !1,
                points: 0
            };
            if (g) {
                a.each(g.competencies, function(a, b) {
                    if (b.id == d.id) {
                        d.required = b.required ? !0 : !1;
                        d.points = b.points
                    }
                })
            }
            f.children.push(d)
        });
        return c.render("tool_lp/competency_rule_points", f).then(function(a) {
            d._container = b;
            b.html(a);
            b.find("input").change(function() {
                d._triggerChange()
            });
            d._templateLoaded = !0;
            d._triggerChange()
        })
    };
    e.prototype.isValid = function() {
        if (!this._templateLoaded) {
            return !1
        }
        var b = this._getRequiredPoints(),
            c = 0,
            d = !0;
        a.each(this._getCompetenciesConfig(), function(a, b) {
            if (0 > b.points) {
                d = !1
            }
            c += b.points
        });
        d = d && c >= b;
        return d
    };
    return e
});
define("tool_lp/module_navigation", ["jquery"], function(a) {
    var b = function(b, c, d, e) {
        this._baseUrl = c;
        this._moduleId = e;
        this._courseId = d;
        a(b).on("change", this._moduleChanged.bind(this))
    };
    b.prototype._moduleChanged = function(b) {
        var c = a(b.target).val(),
            d = "?mod=" + c + "&courseid=" + this._courseId;
        document.location = this._baseUrl + d
    };
    b.prototype._courseId = null;
    b.prototype._moduleId = null;
    b.prototype._baseUrl = null;
    return b
});
define("tool_lp/competency_plan_navigation", ["jquery"], function(a) {
    var b = function(b, c, d, e, f) {
        this._baseUrl = c;
        this._userId = d + "";
        this._competencyId = e + "";
        this._planId = f;
        this._ignoreFirstCompetency = !0;
        a(b).on("change", this._competencyChanged.bind(this))
    };
    b.prototype._competencyChanged = function(b) {
        if (this._ignoreFirstCompetency) {
            this._ignoreFirstCompetency = !1;
            return
        }
        var c = a(b.target).val(),
            d = "?userid=" + this._userId + "&planid=" + this._planId + "&competencyid=" + c;
        document.location = this._baseUrl + d
    };
    b.prototype._competencyId = null;
    b.prototype._userId = null;
    b.prototype._planId = null;
    b.prototype._baseUrl = null;
    b.prototype._ignoreFirstCompetency = null;
    return b
});
define("tool_lp/user_competency_info", ["jquery", "core/notification", "core/ajax", "core/templates"], function(a, b, c, d) {
    var e = function(a, b, c, d, e, f) {
        this._rootElement = a;
        this._competencyId = b;
        this._userId = c;
        this._planId = d;
        this._courseId = e;
        this._valid = !0;
        this._displayuser = "undefined" != typeof f ? f : !1;
        if (this._planId) {
            this._methodName = "tool_lp_data_for_user_competency_summary_in_plan";
            this._args = {
                competencyid: this._competencyId,
                planid: this._planId
            };
            this._templateName = "tool_lp/user_competency_summary_in_plan"
        } else if (this._courseId) {
            this._methodName = "tool_lp_data_for_user_competency_summary_in_course";
            this._args = {
                userid: this._userId,
                competencyid: this._competencyId,
                courseid: this._courseId
            };
            this._templateName = "tool_lp/user_competency_summary_in_course"
        } else {
            this._methodName = "tool_lp_data_for_user_competency_summary";
            this._args = {
                userid: this._userId,
                competencyid: this._competencyId
            };
            this._templateName = "tool_lp/user_competency_summary"
        }
    };
    e.prototype.reload = function() {
        var a = this,
            e = [];
        if (!this._valid) {
            return
        }
        e = c.call([{
            methodname: this._methodName,
            args: this._args
        }]);
        e[0].done(function(c) {
            if (a._displayuser) {
                c.displayuser = !0
            }
            d.render(a._templateName, c).done(function(b, c) {
                d.replaceNode(a._rootElement, b, c)
            }).fail(b.exception)
        }).fail(b.exception)
    };
    e.prototype._rootElement = null;
    e.prototype._courseId = null;
    e.prototype._valid = null;
    e.prototype._planId = null;
    e.prototype._competencyId = null;
    e.prototype._userId = null;
    e.prototype._methodName = null;
    e.prototype._args = null;
    e.prototype._templateName = null;
    e.prototype._displayuser = !1;
    return e
});
define("tool_lp/competencyruleconfig", ["jquery", "core/notification", "core/templates", "tool_lp/dialogue", "tool_lp/competency_outcomes", "core/str"], function(a, b, c, d, e, f) {
    var g = function(b, c) {
        this._eventNode = a("<div></div>");
        this._tree = b;
        this._rulesModules = c;
        this._setUp()
    };
    g.prototype._competency = null;
    g.prototype._eventNode = null;
    g.prototype._outcomesOption = null;
    g.prototype._popup = null;
    g.prototype._ready = null;
    g.prototype._rules = null;
    g.prototype._rulesModules = null;
    g.prototype._tree = null;
    g.prototype._afterChange = function() {
        if (!this._isValid()) {
            this._find("[data-action=\"save\"]").prop("disabled", !0)
        } else {
            this._find("[data-action=\"save\"]").prop("disabled", !1)
        }
    };
    g.prototype._afterRuleConfigChange = function(a, b) {
        if (b != this._getRule()) {
            return
        }
        this._afterChange()
    };
    g.prototype._afterRender = function() {
        var a = this;
        a._find("[name=\"outcome\"]").on("change", function() {
            a._switchedOutcome()
        }).trigger("change");
        a._find("[name=\"rule\"]").on("change", function() {
            a._switchedRule()
        }).trigger("change");
        a._find("[data-action=\"save\"]").on("click", function() {
            a._trigger("save", a._getConfig());
            a.close()
        });
        a._find("[data-action=\"cancel\"]").on("click", function() {
            a.close()
        })
    };
    g.prototype.canBeConfigured = function() {
        var b = !1;
        a.each(this._rules, function(a, c) {
            if (c.canConfig()) {
                b = !0
            }
        });
        return b
    };
    g.prototype.close = function() {
        this._popup.close();
        this._popup = null
    };
    g.prototype.display = function() {
        var c = this;
        if (!c._competency) {
            return !1
        }
        return a.when(f.get_string("competencyrule", "tool_lp"), c._render()).then(function(a, b) {
            c._popup = new d(a, b[0], c._afterRender.bind(c))
        }).fail(b.exception)
    };
    g.prototype._find = function(b) {
        return a(this._popup.getContent()).find(b)
    };
    g.prototype._getApplicableOutcomesOptions = function() {
        var b = this,
            c = [];
        a.each(b._outcomesOption, function(a, d) {
            c.push({
                code: d.code,
                name: d.name,
                selected: d.code == b._competency.ruleoutcome ? !0 : !1
            })
        });
        return c
    };
    g.prototype._getApplicableRulesOptions = function() {
        var b = this,
            c = [];
        a.each(b._rules, function(a, d) {
            if (!d.canConfig()) {
                return
            }
            c.push({
                name: b._getRuleName(d.getType()),
                type: d.getType(),
                selected: d.getType() == b._competency.ruletype ? !0 : !1
            })
        });
        return c
    };
    g.prototype._getConfig = function() {
        var a = this._getRule();
        return {
            ruletype: a ? a.getType() : null,
            ruleconfig: a ? a.getConfig() : null,
            ruleoutcome: this._getOutcome()
        }
    };
    g.prototype._getOutcome = function() {
        return this._find("[name=\"outcome\"]").val()
    };
    g.prototype._getRule = function() {
        var b, c = this._find("[name=\"rule\"]").val();
        a.each(this._rules, function(a, d) {
            if (d.getType() == c) {
                b = d
            }
        });
        return b
    };
    g.prototype._getRuleName = function(b) {
        var c = this,
            d;
        a.each(c._rulesModules, function(a, c) {
            if (c.type == b) {
                d = c.name
            }
        });
        return d
    };
    g.prototype._initOutcomes = function() {
        var a = this;
        return e.getAll().then(function(b) {
            a._outcomesOption = b
        })
    };
    g.prototype._initRules = function() {
        var b = this,
            c = [];
        a.each(b._rules, function(d, e) {
            var f = e.init().then(function() {
                e.setTargetCompetency(b._competency);
                e.on("change", b._afterRuleConfigChange.bind(b))
            }, function() {
                b._rules.splice(d, 1);
                return a.when()
            });
            c.push(f)
        });
        return a.when.apply(a.when, c)
    };
    g.prototype._isValid = function() {
        var a = this._getOutcome(),
            b = this._getRule();
        if (a == e.NONE) {
            return !0
        } else if (!b) {
            return !1
        }
        return b.isValid()
    };
    g.prototype.on = function(a, b) {
        this._eventNode.on(a, b)
    };
    g.prototype._preRender = function() {
        return this.ready()
    };
    g.prototype.ready = function() {
        return this._ready.promise()
    };
    g.prototype._render = function() {
        var a = this;
        return this._preRender().then(function() {
            var b;
            if (!a.canBeConfigured()) {
                b = !1
            } else {
                b = {};
                b.outcomes = a._getApplicableOutcomesOptions();
                b.rules = a._getApplicableRulesOptions()
            }
            var d = {
                competencyshortname: a._competency.shortname,
                config: b
            };
            return c.render("tool_lp/competency_rule_config", d)
        })
    };
    g.prototype.setTargetCompetencyId = function(b) {
        var c = this;
        c._competency = c._tree.getCompetency(b);
        a.each(c._rules, function(a, b) {
            b.setTargetCompetency(c._competency)
        })
    };
    g.prototype._setUp = function() {
        var b = this,
            c = [],
            d = [];
        b._ready = a.Deferred();
        b._rules = [];
        a.each(b._rulesModules, function(a, b) {
            d.push(b.amd)
        });
        require(d, function() {
            a.each(arguments, function(a, c) {
                var d = new c(b._tree);
                b._rules.push(d)
            });
            c.push(b._initRules());
            c.push(b._initOutcomes());
            a.when.apply(a.when, c).always(function() {
                b._ready.resolve()
            })
        })
    };
    g.prototype._switchedOutcome = function() {
        var a = this,
            b = a._getOutcome();
        if (b == e.NONE) {
            a._find("[data-region=\"rule-type\"]").hide().find("[name=\"rule\"]").val(-1);
            a._find("[data-region=\"rule-config\"]").empty().hide();
            a._afterChange();
            return
        }
        a._find("[data-region=\"rule-type\"]").show();
        a._find("[data-region=\"rule-config\"]").show();
        a._afterChange()
    };
    g.prototype._switchedRule = function() {
        var a = this,
            b = a._find("[data-region=\"rule-config\"]"),
            c = a._getRule();
        if (!c) {
            b.empty().hide();
            a._afterChange();
            return
        }
        c.injectTemplate(b).then(function() {
            b.show()
        }).always(function() {
            a._afterChange()
        }).catch(function() {
            b.empty().hide()
        })
    };
    g.prototype._trigger = function(a, b) {
        this._eventNode.trigger(a, [b])
    };
    return g
});
define("tool_lp/competencydialogue", ["jquery", "core/notification", "core/ajax", "core/templates", "core/str", "tool_lp/dialogue"], function(a, b, c, d, e, f) {
    var g, h = function() {};
    h.prototype.triggerCompetencyViewedEvent = function(a) {
        c.call([{
            methodname: "core_competency_competency_viewed",
            args: {
                id: a
            }
        }])
    };
    h.prototype.showDialogue = function(a, c) {
        var e = this.getCompetencyDataPromise(a, c),
            g = this;
        e.done(function(c) {
            d.render("tool_lp/competency_summary", c).done(function(b) {
                g.triggerCompetencyViewedEvent(a);
                new f(c.competency.shortname, b)
            }).fail(b.exception)
        }).fail(b.exception)
    };
    h.prototype.showDialogueFromData = function(a) {
        var c = this;
        d.render("tool_lp/competency_summary", a).done(function(b) {
            c.triggerCompetencyViewedEvent(a.id);
            new f(a.shortname, b, c.enhanceDialogue)
        }).fail(b.exception)
    };
    h.prototype.clickEventHandler = function(b) {
        var c = b.data.compdialogue,
            d = a(b.currentTarget),
            e = d.data("id"),
            f = !d.data("excluderelated"),
            g = d.data("includecourses");
        c.showDialogue(e, {
            includerelated: f,
            includecourses: g
        });
        b.preventDefault()
    };
    h.prototype.getCompetencyDataPromise = function(a, d) {
        var e = c.call([{
            methodname: "tool_lp_data_for_competency_summary",
            args: {
                competencyid: a,
                includerelated: d.includerelated || !1,
                includecourses: d.includecourses || !1
            }
        }]);
        return e[0].then(function(a) {
            return a
        }).fail(b.exception)
    };
    return {
        init: function init() {
            if ("undefined" != typeof g) {
                return
            }
            g = new h;
            a("body").delegate("[data-action=\"competency-dialogue\"]", "click", {
                compdialogue: g
            }, g.clickEventHandler.bind(g))
        }
    }
});
define("tool_lp/form_competency_element", ["jquery", "tool_lp/competencypicker", "core/ajax", "core/notification", "core/templates"], function(a, b, c, d, e) {
    var f = null,
        g = 1,
        h = function() {
            var b = a("[data-action=\"competencies\"]").val(),
                f = [],
                g = 0;
            if ("" != b) {
                b = b.split(",");
                for (g = 0; g < b.length; g++) {
                    f[f.length] = {
                        methodname: "core_competency_read_competency",
                        args: {
                            id: b[g]
                        }
                    }
                }
            }
            a.when.apply(a, c.call(f, !1)).then(function() {
                var a = 0,
                    b = [];
                for (a = 0; a < arguments.length; a++) {
                    b[a] = arguments[a]
                }
                return e.render("tool_lp/form_competency_list", {
                    competencies: b
                })
            }).then(function(b, c) {
                e.replaceNode(a("[data-region=\"competencies\"]"), b, c);
                return !0
            }).fail(d.exception);
            return !0
        },
        i = function(b) {
            var c = a("[data-action=\"competencies\"]").val().split(","),
                d = [],
                e, f = a(b.currentTarget).data("id");
            for (e = 0; e < c.length; e++) {
                if (c[e] != f) {
                    d[d.length] = c[e]
                }
            }
            a("[data-action=\"competencies\"]").val(d.join(","));
            return h()
        },
        j = function() {
            var c = a("[data-action=\"competencies\"]").val().split(",");
            if (!f) {
                f = new b(g, !1, "parents", !0);
                f.on("save", function(b, c) {
                    var d = a("[data-action=\"competencies\"]").val(),
                        e = c.competencyIds;
                    if ("" != d) {
                        e = e.concat(d.split(","))
                    }
                    var f = e.join(",");
                    a("[data-action=\"competencies\"]").val(f);
                    return h()
                })
            }
            f.setDisallowedCompetencyIDs(c);
            f.display()
        };
    return {
        init: function init(b) {
            g = b;
            h();
            a("[data-action=\"select-competencies\"]").on("click", j);
            a("body").on("click", "[data-action=\"deselect-competency\"]", i)
        }
    }
});
define("tool_lp/parentcompetency_form", ["jquery", "core/ajax", "core/str", "tool_lp/competencypicker", "core/templates", "core/notification"], function(a, b, c, d, e, f) {
    var g = function(a, b, c, d, e) {
        this.buttonSelector = a;
        this.inputHiddenSelector = b;
        this.staticElementSelector = c;
        this.frameworkId = d;
        this.pageContextId = e;
        this.registerEvents()
    };
    g.prototype.buttonSelector = null;
    g.prototype.inputHiddenSelector = null;
    g.prototype.staticElementSelector = null;
    g.prototype.frameworkId = null;
    g.prototype.pageContextId = null;
    g.prototype.setParent = function(d) {
        var e = this;
        if (0 !== d.competencyId) {
            b.call([{
                methodname: "core_competency_read_competency",
                args: {
                    id: d.competencyId
                }
            }])[0].done(function(b) {
                a(e.staticElementSelector).html(b.shortname);
                a(e.inputHiddenSelector).val(b.id)
            }).fail(f.exception)
        } else {
            c.get_string("competencyframeworkroot", "tool_lp").then(function(b) {
                a(e.staticElementSelector).html(b);
                a(e.inputHiddenSelector).val(d.competencyId)
            }).fail(f.exception)
        }
    };
    g.prototype.registerEvents = function() {
        var b = this;
        a(b.buttonSelector).on("click", function(a) {
            a.preventDefault();
            var c = new d(b.pageContextId, b.frameworkId, "self", !1);
            c._render = function() {
                var a = this;
                return a._preRender().then(function() {
                    var b = {
                        competencies: a._competencies,
                        framework: a._getFramework(a._frameworkId),
                        frameworks: a._frameworks,
                        search: a._searchText,
                        singleFramework: a._singleFramework
                    };
                    return e.render("tool_lp/competency_picker_competencyform", b)
                })
            };
            c.on("save", function(a, c) {
                b.setParent(c)
            });
            c.display()
        })
    };
    return {
        init: function init(a, b, c, d, e) {
            new g(a, b, c, d, e)
        }
    }
});
define("tool_lp/competencypicker", ["jquery", "core/notification", "core/ajax", "core/templates", "tool_lp/dialogue", "core/str", "tool_lp/tree", "core/pending"], function(a, b, c, d, e, f, g, h) {
    var i = function(b, c, d, e) {
        var f = this;
        f._eventNode = a("<div></div>");
        f._frameworks = [];
        f._reset();
        f._pageContextId = b;
        f._pageContextIncludes = d || "children";
        f._multiSelect = "undefined" == typeof e || !0 === e;
        if (c) {
            f._frameworkId = c;
            f._singleFramework = !0
        }
    };
    i.prototype._competencies = null;
    i.prototype._disallowedCompetencyIDs = null;
    i.prototype._eventNode = null;
    i.prototype._frameworks = null;
    i.prototype._frameworkId = null;
    i.prototype._pageContextId = null;
    i.prototype._pageContextIncludes = null;
    i.prototype._popup = null;
    i.prototype._searchText = "";
    i.prototype._selectedCompetencies = null;
    i.prototype._singleFramework = !1;
    i.prototype._multiSelect = !0;
    i.prototype._onlyVisible = !0;
    i.prototype._afterRender = function() {
        var c = this,
            d = new g(c._find("[data-enhance=linktree]"), c._multiSelect);
        c._find("[data-enhance=linktree]").show();
        d.on("selectionchanged", function(b, d) {
            var e = d.selected;
            b.preventDefault();
            var f = [];
            a.each(e, function(b, d) {
                var e = a(d).data("id"),
                    g = !0;
                if ("undefined" == typeof e) {
                    g = !1
                } else {
                    a.each(c._disallowedCompetencyIDs, function(a, b) {
                        if (b == e) {
                            g = !1
                        }
                    })
                }
                if (g) {
                    f.push(e)
                }
            });
            c._selectedCompetencies = f;
            if (!c._selectedCompetencies.length) {
                c._find("[data-region=\"competencylinktree\"] [data-action=\"add\"]").attr("disabled", "disabled")
            } else {
                c._find("[data-region=\"competencylinktree\"] [data-action=\"add\"]").removeAttr("disabled")
            }
        });
        if (!c._singleFramework) {
            c._find("[data-action=\"chooseframework\"]").change(function(d) {
                c._frameworkId = a(d.target).val();
                c._loadCompetencies().then(c._refresh.bind(c)).catch(b.exception)
            })
        }
        c._find("[data-region=\"filtercompetencies\"] button").click(function(b) {
            b.preventDefault();
            a(b.target).attr("disabled", "disabled");
            c._searchText = c._find("[data-region=\"filtercompetencies\"] input").val() || "";
            return c._refresh().always(function() {
                a(b.target).removeAttr("disabled")
            })
        });
        c._find("[data-region=\"competencylinktree\"] [data-action=\"cancel\"]").click(function(a) {
            a.preventDefault();
            c.close()
        });
        c._find("[data-region=\"competencylinktree\"] [data-action=\"add\"]").click(function(a) {
            a.preventDefault();
            var b = new h;
            if (!c._selectedCompetencies.length) {
                return
            }
            if (c._multiSelect) {
                c._trigger("save", {
                    competencyIds: c._selectedCompetencies
                })
            } else {
                c._trigger("save", {
                    competencyId: c._selectedCompetencies[0]
                })
            }
            c.close();
            b.resolve()
        });
        var e = c._selectedCompetencies.slice(0);
        a.each(e, function(a, b) {
            var e = c._find("[data-id=" + b + "]");
            if (e.length) {
                d.toggleItem(e);
                d.updateFocus(e)
            }
        })
    };
    i.prototype.close = function() {
        var a = this;
        a._popup.close();
        a._reset()
    };
    i.prototype.display = function() {
        var c = this;
        return a.when(f.get_string("competencypicker", "tool_lp"), c._render()).then(function(a, b) {
            c._popup = new e(a, b[0], c._afterRender.bind(c))
        }).catch(b.exception)
    };
    i.prototype._fetchCompetencies = function(a, d) {
        var e = this;
        return c.call([{
            methodname: "core_competency_search_competencies",
            args: {
                searchtext: d,
                competencyframeworkid: a
            }
        }])[0].done(function(a) {
            function b(a, c) {
                for (var d = 0; d < c.length; d++) {
                    if (c[d].parentid == a.id) {
                        a.haschildren = !0;
                        c[d].children = [];
                        c[d].haschildren = !1;
                        a.children[a.children.length] = c[d];
                        b(c[d], c)
                    }
                }
            }
            var c, d, f = [];
            for (c = 0; c < a.length; c++) {
                d = a[c];
                if ("0" == d.parentid) {
                    d.children = [];
                    d.haschildren = 0;
                    f[f.length] = d;
                    b(d, a)
                }
            }
            e._competencies = f
        }).fail(b.exception)
    };
    i.prototype._find = function(b) {
        return a(this._popup.getContent()).find(b)
    };
    i.prototype._getFramework = function(b) {
        var c;
        a.each(this._frameworks, function(a, d) {
            if (d.id == b) {
                c = d
            }
        });
        return c
    };
    i.prototype._loadCompetencies = function() {
        return this._fetchCompetencies(this._frameworkId, this._searchText)
    };
    i.prototype._loadFrameworks = function() {
        var d, e = this;
        if (0 < e._frameworks.length) {
            return a.when()
        }
        if (e._singleFramework) {
            d = c.call([{
                methodname: "core_competency_read_competency_framework",
                args: {
                    id: this._frameworkId
                }
            }])[0].then(function(a) {
                return [a]
            })
        } else {
            d = c.call([{
                methodname: "core_competency_list_competency_frameworks",
                args: {
                    sort: "shortname",
                    context: {
                        contextid: e._pageContextId
                    },
                    includes: e._pageContextIncludes,
                    onlyvisible: e._onlyVisible
                }
            }])[0]
        }
        return d.done(function(a) {
            e._frameworks = a
        }).fail(b.exception)
    };
    i.prototype.on = function(a, b) {
        this._eventNode.on(a, b)
    };
    i.prototype._preRender = function() {
        var b = this;
        return b._loadFrameworks().then(function() {
            if (!b._frameworkId && 0 < b._frameworks.length) {
                b._frameworkId = b._frameworks[0].id
            }
            if (!b._frameworkId) {
                b._frameworks = [];
                return a.when()
            }
            return b._loadCompetencies()
        })
    };
    i.prototype._refresh = function() {
        var a = this;
        return a._render().then(function(b) {
            a._find("[data-region=\"competencylinktree\"]").replaceWith(b);
            a._afterRender()
        })
    };
    i.prototype._render = function() {
        var b = this;
        return b._preRender().then(function() {
            if (!b._singleFramework) {
                a.each(b._frameworks, function(a, c) {
                    if (c.id == b._frameworkId) {
                        c.selected = !0
                    } else {
                        c.selected = !1
                    }
                })
            }
            var c = {
                competencies: b._competencies,
                framework: b._getFramework(b._frameworkId),
                frameworks: b._frameworks,
                search: b._searchText,
                singleFramework: b._singleFramework
            };
            return d.render("tool_lp/competency_picker", c)
        })
    };
    i.prototype._reset = function() {
        this._competencies = [];
        this._disallowedCompetencyIDs = [];
        this._popup = null;
        this._searchText = "";
        this._selectedCompetencies = []
    };
    i.prototype.setDisallowedCompetencyIDs = function(a) {
        this._disallowedCompetencyIDs = a
    };
    i.prototype._trigger = function(a, b) {
        this._eventNode.trigger(a, [b])
    };
    return i
});
define("tool_lp/dialogue", ["core/yui"], function(a) {
    var b = function(b, c, d, e, f) {
        this.yuiDialogue = null;
        var g = this;
        if ("undefined" == typeof f) {
            f = !1
        }
        a.use("moodle-core-notification", "timers", function() {
            var h = "480px";
            if (f) {
                h = "800px"
            }
            g.yuiDialogue = new M.core.dialogue({
                headerContent: b,
                bodyContent: c,
                draggable: !0,
                visible: !1,
                center: !0,
                modal: !0,
                width: h
            });
            g.yuiDialogue.after("visibleChange", function(b) {
                if (b.newVal) {
                    if ("undefined" != typeof d) {
                        a.soon(function() {
                            d(g);
                            g.yuiDialogue.centerDialogue()
                        })
                    }
                } else {
                    if ("undefined" != typeof e) {
                        a.soon(function() {
                            e(g)
                        })
                    }
                }
            });
            g.yuiDialogue.show()
        })
    };
    b.prototype.close = function() {
        this.yuiDialogue.hide();
        this.yuiDialogue.destroy()
    };
    b.prototype.getContent = function() {
        return this.yuiDialogue.bodyNode.getDOMNode()
    };
    return b
});
define("tool_lp/tree", ["jquery", "core/url", "core/log"], function(a, b, c) {
    var d = a("<img alt=\"\" src=\"" + b.imageUrl("t/expanded") + "\"/>"),
        e = a("<img alt=\"\" src=\"" + b.imageUrl("t/collapsed") + "\"/>"),
        f = function(b, c) {
            this.treeRoot = a(b);
            this.multiSelect = "undefined" == typeof c || !0 === c;
            this.items = this.treeRoot.find("li");
            this.expandAll = 20 > this.items.length;
            this.parents = this.treeRoot.find("li:has(ul)");
            if (c) {
                this.treeRoot.attr("aria-multiselectable", "true")
            }
            this.items.attr("aria-selected", "false");
            this.visibleItems = null;
            this.activeItem = null;
            this.lastActiveItem = null;
            this.keys = {
                tab: 9,
                enter: 13,
                space: 32,
                pageup: 33,
                pagedown: 34,
                end: 35,
                home: 36,
                left: 37,
                up: 38,
                right: 39,
                down: 40,
                eight: 56,
                asterisk: 106
            };
            this.init();
            this.bindEventHandlers()
        };
    f.prototype.init = function() {
        this.parents.attr("aria-expanded", "true");
        this.parents.prepend(d.clone());
        this.items.attr("role", "tree-item");
        this.items.attr("tabindex", "-1");
        this.parents.attr("role", "group");
        this.treeRoot.attr("role", "tree");
        this.visibleItems = this.treeRoot.find("li");
        var b = this;
        if (!this.expandAll) {
            this.parents.each(function() {
                b.collapseGroup(a(this))
            });
            this.expandGroup(this.parents.first())
        }
    };
    f.prototype.expandGroup = function(a) {
        var b = a.children("ul");
        b.show().attr("aria-hidden", "false");
        a.attr("aria-expanded", "true");
        a.children("img").attr("src", d.attr("src"));
        this.visibleItems = this.treeRoot.find("li:visible")
    };
    f.prototype.collapseGroup = function(a) {
        var b = a.children("ul");
        b.hide().attr("aria-hidden", "true");
        a.attr("aria-expanded", "false");
        a.children("img").attr("src", e.attr("src"));
        this.visibleItems = this.treeRoot.find("li:visible")
    };
    f.prototype.toggleGroup = function(a) {
        if ("true" == a.attr("aria-expanded")) {
            this.collapseGroup(a)
        } else {
            this.expandGroup(a)
        }
    };
    f.prototype.triggerChange = function() {
        var a = this.items.filter("[aria-selected=true]");
        if (!this.multiSelect) {
            a = a.first()
        }
        this.treeRoot.trigger("selectionchanged", {
            selected: a
        })
    };
    f.prototype.multiSelectItem = function(b) {
        if (!this.multiSelect) {
            this.items.attr("aria-selected", "false")
        } else if (null !== this.lastActiveItem) {
            var c = this.visibleItems.index(this.lastActiveItem),
                d = this.visibleItems.index(this.activeItem),
                e = null;
            while (c < d) {
                e = a(this.visibleItems.get(c));
                e.attr("aria-selected", "true");
                c++
            }
            while (c > d) {
                e = a(this.visibleItems.get(c));
                e.attr("aria-selected", "true");
                c--
            }
        }
        b.attr("aria-selected", "true");
        this.triggerChange()
    };
    f.prototype.selectItem = function(a) {
        var b = a.parent();
        while ("tree" != b.attr("role")) {
            b = b.parent();
            if ("false" == b.attr("aria-expanded")) {
                this.expandGroup(b)
            }
            b = b.parent()
        }
        this.items.attr("aria-selected", "false");
        a.attr("aria-selected", "true");
        this.triggerChange()
    };
    f.prototype.toggleItem = function(a) {
        if (!this.multiSelect) {
            this.selectItem(a);
            return
        }
        var b = a.attr("aria-selected");
        if ("true" === b) {
            b = "false"
        } else {
            b = "true"
        }
        a.attr("aria-selected", b);
        this.triggerChange()
    };
    f.prototype.updateFocus = function(a) {
        this.lastActiveItem = this.activeItem;
        this.activeItem = a;
        var b = a.parent();
        while ("tree" != b.attr("role")) {
            b = b.parent();
            if ("false" == b.attr("aria-expanded")) {
                this.expandGroup(b)
            }
            b = b.parent()
        }
        this.items.attr("tabindex", "-1");
        a.attr("tabindex", 0)
    };
    f.prototype.handleKeyDown = function(b, c) {
        var d = this.visibleItems.index(b),
            e = null,
            f = c.shiftKey || c.ctrlKey || c.metaKey || c.altKey,
            g = this;
        switch (c.keyCode) {
            case this.keys.home:
                {
                    e = this.parents.first();e.focus();
                    if (c.shiftKey) {
                        this.multiSelectItem(e)
                    } else if (!f) {
                        this.selectItem(e)
                    }
                    c.stopPropagation();
                    return !1
                }
            case this.keys.end:
                {
                    e = this.visibleItems.last();e.focus();
                    if (c.shiftKey) {
                        this.multiSelectItem(e)
                    } else if (!f) {
                        this.selectItem(e)
                    }
                    c.stopPropagation();
                    return !1
                }
            case this.keys.enter:
            case this.keys.space:
                {
                    if (c.shiftKey) {
                        this.multiSelectItem(b)
                    } else if (c.metaKey || c.ctrlKey) {
                        this.toggleItem(b)
                    } else {
                        this.selectItem(b)
                    }
                    c.stopPropagation();
                    return !1
                }
            case this.keys.left:
                {
                    if (b.has("ul") && "true" == b.attr("aria-expanded")) {
                        this.collapseGroup(b)
                    } else {
                        var h = b.parent(),
                            i = h.parent();
                        if (i.is("li")) {
                            i.focus();
                            if (c.shiftKey) {
                                this.multiSelectItem(i)
                            } else if (!f) {
                                this.selectItem(i)
                            }
                        }
                    }
                    c.stopPropagation();
                    return !1
                }
            case this.keys.right:
                {
                    if (b.has("ul") && "false" == b.attr("aria-expanded")) {
                        this.expandGroup(b)
                    } else {
                        e = b.children("ul").children("li").first();
                        if (0 < e.length) {
                            e.focus();
                            if (c.shiftKey) {
                                this.multiSelectItem(e)
                            } else if (!f) {
                                this.selectItem(e)
                            }
                        }
                    }
                    c.stopPropagation();
                    return !1
                }
            case this.keys.up:
                {
                    if (0 < d) {
                        var j = this.visibleItems.eq(d - 1);
                        j.focus();
                        if (c.shiftKey) {
                            this.multiSelectItem(j)
                        } else if (!f) {
                            this.selectItem(j)
                        }
                    }
                    c.stopPropagation();
                    return !1
                }
            case this.keys.down:
                {
                    if (d < this.visibleItems.length - 1) {
                        var k = this.visibleItems.eq(d + 1);
                        k.focus();
                        if (c.shiftKey) {
                            this.multiSelectItem(k)
                        } else if (!f) {
                            this.selectItem(k)
                        }
                    }
                    c.stopPropagation();
                    return !1
                }
            case this.keys.asterisk:
                {
                    this.parents.each(function() {
                        g.expandGroup(a(this))
                    });c.stopPropagation();
                    return !1
                }
            case this.keys.eight:
                {
                    if (c.shiftKey) {
                        this.parents.each(function() {
                            g.expandGroup(a(this))
                        });
                        c.stopPropagation()
                    }
                    return !1
                }
        }
        return !0
    };
    f.prototype.handleKeyPress = function(a, b) {
        if (b.altKey || b.ctrlKey || b.shiftKey || b.metaKey) {
            return !0
        }
        switch (b.keyCode) {
            case this.keys.tab:
                {
                    return !0
                }
            case this.keys.enter:
            case this.keys.home:
            case this.keys.end:
            case this.keys.left:
            case this.keys.right:
            case this.keys.up:
            case this.keys.down:
                {
                    b.stopPropagation();
                    return !1
                }
            default:
                {
                    var c = String.fromCharCode(b.which),
                        d = !1,
                        e = this.visibleItems.index(a),
                        f = this.visibleItems.length,
                        g = e + 1;
                    if (g == f) {
                        g = 0
                    }
                    while (g != e) {
                        var h = this.visibleItems.eq(g),
                            i = h.text().charAt(0);
                        if (h.has("ul")) {
                            i = h.find("span").text().charAt(0)
                        }
                        if (i.toLowerCase() == c) {
                            d = !0;
                            break
                        }
                        g = g + 1;
                        if (g == f) {
                            g = 0
                        }
                    }
                    if (!0 === d) {
                        this.updateFocus(this.visibleItems.eq(g))
                    }
                    b.stopPropagation();
                    return !1
                }
        }
        return !0
    };
    f.prototype.on = function(a, b) {
        if ("selectionchanged" !== a) {
            c.warning("Invalid custom event name for tree. Only \"selectionchanged\" is supported.")
        } else {
            this.treeRoot.on(a, b)
        }
    };
    f.prototype.handleDblClick = function(a, b) {
        if (b.altKey || b.ctrlKey || b.shiftKey || b.metaKey) {
            return !0
        }
        this.updateFocus(a);
        this.toggleGroup(a);
        b.stopPropagation();
        return !1
    };
    f.prototype.handleExpandCollapseClick = function(a, b) {
        this.toggleGroup(a);
        b.stopPropagation();
        return !1
    };
    f.prototype.handleClick = function(a, b) {
        if (b.shiftKey) {
            this.multiSelectItem(a)
        } else if (b.metaKey || b.ctrlKey) {
            this.toggleItem(a)
        } else {
            this.selectItem(a)
        }
        this.updateFocus(a);
        b.stopPropagation();
        return !1
    };
    f.prototype.handleBlur = function() {
        return !0
    };
    f.prototype.handleFocus = function(a) {
        this.updateFocus(a);
        return !0
    };
    f.prototype.bindEventHandlers = function() {
        var b = this;
        this.parents.dblclick(function(c) {
            return b.handleDblClick(a(this), c)
        });
        this.items.click(function(c) {
            return b.handleClick(a(this), c)
        });
        this.items.children("img").click(function(c) {
            return b.handleExpandCollapseClick(a(this).parent(), c)
        });
        this.items.keydown(function(c) {
            return b.handleKeyDown(a(this), c)
        });
        this.items.keypress(function(c) {
            return b.handleKeyPress(a(this), c)
        });
        this.items.focus(function(c) {
            return b.handleFocus(a(this), c)
        });
        this.items.blur(function(c) {
            return b.handleBlur(a(this), c)
        })
    };
    return f
});
define("tool_lp/scalevalues", ["jquery", "core/ajax"], function(a, b) {
    var c = [];
    return {
        get_values: function get_values(d) {
            var e = a.Deferred();
            if ("undefined" == typeof c[d]) {
                b.call([{
                    methodname: "core_competency_get_scale_values",
                    args: {
                        scaleid: d
                    },
                    done: function done(a) {
                        c[d] = a;
                        e.resolve(a)
                    },
                    fail: e.reject
                }])
            } else {
                e.resolve(c[d])
            }
            return e.promise()
        }
    }
});
define("tool_lp/menubar", ["jquery"], function(a) {
    var b = !1,
        c = !1,
        d = function() {
            a(".tool-lp-menu .tool-lp-sub-menu").attr("aria-hidden", "true");
            c = !1
        },
        e = function(a, b) {
            this.menuRoot = a;
            this.handlers = b;
            this.rootMenus = this.menuRoot.children("li");
            this.subMenus = this.rootMenus.children("ul");
            this.subMenuItems = this.subMenus.children("li");
            this.allItems = this.rootMenus.add(this.subMenuItems);
            this.activeItem = null;
            this.isChildOpen = !1;
            this.keys = {
                tab: 9,
                enter: 13,
                esc: 27,
                space: 32,
                left: 37,
                up: 38,
                right: 39,
                down: 40
            };
            this.addAriaAttributes();
            this.addEventListeners()
        };
    e.prototype.openSubMenu = function(a) {
        this.setOpenDirection();
        d();
        a.attr("aria-hidden", "false");
        c = !0
    };
    e.prototype.addEventListeners = function() {
        var f = this;
        if (!1 == b) {
            a(document).click(function() {
                if (c) {
                    d()
                }
            });
            b = !0
        }
        this.subMenuItems.mouseenter(function() {
            a(this).addClass("menu-hover");
            return !0
        });
        this.subMenuItems.mouseout(function() {
            a(this).removeClass("menu-hover");
            return !0
        });
        this.allItems.click(function(b) {
            return f.handleClick(a(this), b)
        });
        this.allItems.keydown(function(b) {
            return f.handleKeyDown(a(this), b)
        });
        this.allItems.focus(function() {
            return f.handleFocus(a(this))
        });
        this.allItems.blur(function() {
            return f.handleBlur(a(this))
        })
    };
    e.prototype.handleClick = function(b, c) {
        c.stopPropagation();
        var d = b.parent();
        if (d.is(".tool-lp-menu")) {
            if ("true" == b.children("ul").first().attr("aria-hidden")) {
                this.openSubMenu(b.children("ul").first())
            } else {
                b.children("ul").first().attr("aria-hidden", "true")
            }
        } else {
            this.allItems.removeClass("menu-hover menu-focus");
            this.activeItem = null;
            this.menuRoot.find("ul").not(".root-level").attr("aria-hidden", "true");
            var e = b.find("a").first(),
                f = new a.Event("click");
            f.target = e;
            var g = !1;
            if (this.handlers) {
                a.each(this.handlers, function(c, d) {
                    if (g) {
                        return
                    }
                    if (0 < b.find(c).length) {
                        var h = a.proxy(d, e);
                        g = !1 === h(f) || f.isDefaultPrevented()
                    }
                })
            }
            if (!g && "#" !== e.attr("href")) {
                window.location.href = e.attr("href")
            }
        }
        return !1
    };
    e.prototype.handleFocus = function(a) {
        if (null === this.activeItem) {
            this.activeItem = a
        } else if (a[0] != this.activeItem[0]) {
            return !0
        }
        var b = this.activeItem.parentsUntil("ul.tool-lp-menu").filter("li");
        this.allItems.removeClass("menu-focus");
        this.activeItem.addClass("menu-focus");
        b.addClass("menu-focus");
        if (!0 === this.isChildOpen) {
            var c = a.parent();
            if (c.is(".tool-lp-menu") && "true" == a.attr("aria-haspopup")) {
                this.openSubMenu(a.children("ul").first())
            }
        }
        return !0
    };
    e.prototype.handleBlur = function(a) {
        a.removeClass("menu-focus");
        return !0
    };
    e.prototype.setOpenDirection = function() {
        var b = this.menuRoot.offset(),
            c = a(document.body).hasClass("dir-rtl"),
            d = this.rootMenus.outerHeight(),
            e = this.rootMenus.outerWidth(),
            f = this.rootMenus.find("ul.tool-lp-sub-menu");
        f.css("margin-right", "");
        f.css("margin-left", "");
        f.css("margin-top", "");
        f.attr("aria-hidden", !1);
        var g = f.outerWidth(),
            h = f.outerHeight(),
            i = null,
            j = null,
            k = null,
            l = b.top - a(window).scrollTop();
        if (l + h > a(window).height()) {
            i = h + d;
            f.css("margin-top", "-" + i + "px")
        }
        if (c) {
            if (0 > b.left - g) {
                j = g - e;
                f.css("margin-right", "-" + j + "px")
            }
        } else {
            if (b.left + g > a(window).width()) {
                k = g - e;
                f.css("margin-left", "-" + k + "px")
            }
        }
        if (!0) {
            this.menuRoot.addClass("tool-lp-menu-open-left")
        } else {
            this.menuRoot.removeClass("tool-lp-menu-open-left")
        }
    };
    e.prototype.handleKeyDown = function(a, b) {
        if (b.altKey || b.ctrlKey) {
            return !0
        }
        switch (b.keyCode) {
            case this.keys.tab:
                {
                    this.menuRoot.find("ul").attr("aria-hidden", "true");this.allItems.removeClass("menu-focus");this.activeItem = null;this.isChildOpen = !1;
                    break
                }
            case this.keys.esc:
                {
                    var c = a.parent();
                    if (c.is(".tool-lp-menu")) {
                        a.children("ul").first().attr("aria-hidden", "true")
                    } else {
                        this.activeItem = c.parent();
                        this.isChildOpen = !1;
                        this.activeItem.focus();
                        c.attr("aria-hidden", "true")
                    }
                    b.stopPropagation();
                    return !1
                }
            case this.keys.enter:
            case this.keys.space:
                {
                    return this.handleClick(a, b)
                }
            case this.keys.left:
                {
                    this.activeItem = this.moveToPrevious(a);this.activeItem.focus();b.stopPropagation();
                    return !1
                }
            case this.keys.right:
                {
                    this.activeItem = this.moveToNext(a);this.activeItem.focus();b.stopPropagation();
                    return !1
                }
            case this.keys.up:
                {
                    this.activeItem = this.moveUp(a);this.activeItem.focus();b.stopPropagation();
                    return !1
                }
            case this.keys.down:
                {
                    this.activeItem = this.moveDown(a);this.activeItem.focus();b.stopPropagation();
                    return !1
                }
        }
        return !0
    };
    e.prototype.moveToNext = function(a) {
        var b = a.parent(),
            c = b.children("li"),
            d = c.length,
            e = c.index(a),
            f = null,
            g = null;
        if (b.is(".tool-lp-menu")) {
            if (e < d - 1) {
                f = a.next()
            } else {
                f = c.first()
            }
            if ("true" == a.attr("aria-haspopup")) {
                g = a.children("ul").first();
                if ("false" == g.attr("aria-hidden")) {
                    g.attr("aria-hidden", "true");
                    this.isChildOpen = !0
                }
            }
            a.removeClass("menu-focus");
            if ("true" === f.attr("aria-haspopup") && !0 === this.isChildOpen) {
                g = f.children("ul").first();
                this.openSubMenu(g)
            }
        } else {
            if ("true" == a.attr("aria-haspopup")) {
                g = a.children("ul").first();
                f = g.children("li").first();
                this.openSubMenu(g)
            } else {
                var h = null,
                    i = null;
                h = a.parentsUntil("ul.tool-lp-menu").filter("ul").not(".tool-lp-menu");
                h.attr("aria-hidden", "true");
                h.find("li").removeClass("menu-focus");
                h.last().parent().removeClass("menu-focus");
                i = h.last().parent();
                e = this.rootMenus.index(i);
                if (e < this.rootMenus.length - 1) {
                    f = i.next()
                } else {
                    f = this.rootMenus.first()
                }
                f.addClass("menu-focus");
                if ("true" == f.attr("aria-haspopup")) {
                    g = f.children("ul").first();
                    f = g.children("li").first();
                    this.openSubMenu(g);
                    this.isChildOpen = !0
                }
            }
        }
        return f
    };
    e.prototype.moveToPrevious = function(a) {
        var b = a.parent(),
            c = b.children("li"),
            d = c.index(a),
            e = null,
            f = null;
        if (b.is(".tool-lp-menu")) {
            if (0 < d) {
                e = a.prev()
            } else {
                e = c.last()
            }
            if ("true" == a.attr("aria-haspopup")) {
                f = a.children("ul").first();
                if ("false" == f.attr("aria-hidden")) {
                    f.attr("aria-hidden", "true");
                    this.isChildOpen = !0
                }
            }
            a.removeClass("menu-focus");
            if ("true" === e.attr("aria-haspopup") && !0 === this.isChildOpen) {
                f = e.children("ul").first();
                this.openSubMenu(f)
            }
        } else {
            var g = b.parent(),
                h = g.parent();
            if (!h.is(".tool-lp-menu")) {
                e = b.parent();
                b.attr("aria-hidden", "true");
                a.removeClass("menu-focus")
            } else {
                b.attr("aria-hidden", "true");
                a.removeClass("menu-focus");
                g.removeClass("menu-focus");
                d = this.rootMenus.index(g);
                if (0 < d) {
                    e = g.prev()
                } else {
                    e = this.rootMenus.last()
                }
                e.addClass("menu-focus");
                if ("true" == e.attr("aria-haspopup")) {
                    f = e.children("ul").first();
                    this.openSubMenu(f);
                    this.isChildOpen = !0;
                    e = f.children("li").first()
                }
            }
        }
        return e
    };
    e.prototype.moveDown = function(a, b) {
        var c = a.parent(),
            d = c.children("li").not(".separator"),
            e = d.length,
            f = d.index(a),
            g = null,
            h = null;
        if (c.is(".tool-lp-menu")) {
            if ("true" != a.attr("aria-haspopup")) {
                return a
            }
            h = a.children("ul").first();
            g = h.children("li").first();
            this.openSubMenu(h);
            return g
        }
        if (b) {
            var i = !1,
                j = f + 1;
            if (j == e) {
                j = 0
            }
            while (j != f) {
                var k = d.eq(j).html().charAt(0);
                if (k.toLowerCase() == b) {
                    i = !0;
                    break
                }
                j = j + 1;
                if (j == e) {
                    j = 0
                }
            }
            if (!0 == i) {
                g = d.eq(j);
                a.removeClass("menu-focus");
                return g
            } else {
                return a
            }
        } else {
            if (f < e - 1) {
                g = d.eq(f + 1)
            } else {
                g = d.first()
            }
        }
        a.removeClass("menu-focus");
        return g
    };
    e.prototype.moveUp = function(a) {
        var b = a.parent(),
            c = b.children("li").not(".separator"),
            d = c.index(a),
            e = null;
        if (b.is(".tool-lp-menu")) {
            return a
        }
        if (0 < d) {
            e = c.eq(d - 1)
        } else {
            e = c.last()
        }
        a.removeClass("menu-focus");
        return e
    };
    e.prototype.addAriaAttributes = function() {
        this.menuRoot.attr("role", "menubar");
        this.rootMenus.attr("role", "menuitem");
        this.rootMenus.attr("tabindex", "0");
        this.rootMenus.attr("aria-haspopup", "true");
        this.subMenus.attr("role", "menu");
        this.subMenus.attr("aria-hidden", "true");
        this.subMenuItems.attr("role", "menuitem");
        this.subMenuItems.attr("tabindex", "-1");
        this.menuRoot.addClass("tool-lp-menu");
        this.allItems.addClass("tool-lp-menu-item");
        this.rootMenus.addClass("tool-lp-root-menu");
        this.subMenus.addClass("tool-lp-sub-menu");
        this.subMenuItems.addClass("dropdown-item")
    };
    return {
        enhance: function enhance(b, c) {
            a(b).each(function(b, d) {
                var f = a(d);
                if (!0 !== f.data("menubarEnhanced")) {
                    new e(f, c);
                    f.data("menubarEnhanced", !0)
                }
            })
        },
        closeAll: d
    }
});
define("tool_lp/scaleconfig", ["jquery", "core/notification", "core/templates", "core/ajax", "tool_lp/dialogue", "tool_lp/scalevalues"], function(a, b, c, d, e, f) {
    var g = function(b, c, d) {
        this.selectSelector = b;
        this.inputSelector = c;
        this.triggerSelector = d;
        this.originalscaleid = a(b).val();
        a(b).on("change", this.scaleChangeHandler.bind(this)).change();
        a(d).click(this.showConfig.bind(this))
    };
    g.prototype.selectSelector = null;
    g.prototype.inputSelector = null;
    g.prototype.triggerSelector = null;
    g.prototype.scalevalues = null;
    g.prototype.originalscaleid = 0;
    g.prototype.scaleid = 0;
    g.prototype.popup = null;
    g.prototype.showConfig = function() {
        var d = this;
        this.scaleid = a(this.selectSelector).val();
        if (0 >= this.scaleid) {
            return
        }
        var f = a(this.selectSelector).find("option:selected").text();
        this.getScaleValues(this.scaleid).done(function() {
            var a = {
                scalename: f,
                scales: d.scalevalues
            };
            c.render("tool_lp/scale_configuration_page", a).done(function(a) {
                new e(f, a, d.initScaleConfig.bind(d))
            }).fail(b.exception)
        }).fail(b.exception)
    };
    g.prototype.retrieveOriginalScaleConfig = function() {
        var b = a(this.inputSelector).val();
        if ("" !== b) {
            var c = a.parseJSON(b),
                d = c.shift();
            if (d.scaleid === this.originalscaleid) {
                return c
            }
        }
        return ""
    };
    g.prototype.initScaleConfig = function(b) {
        this.popup = b;
        var c = a(b.getContent());
        if (this.originalscaleid === this.scaleid) {
            var d = this.retrieveOriginalScaleConfig();
            if ("" !== d) {
                d.forEach(function(a) {
                    if (1 === a.scaledefault) {
                        c.find("[data-field=\"tool_lp_scale_default_" + a.id + "\"]").attr("checked", !0)
                    }
                    if (1 === a.proficient) {
                        c.find("[data-field=\"tool_lp_scale_proficient_" + a.id + "\"]").attr("checked", !0)
                    }
                })
            }
        }
        c.on("click", "[data-action=\"close\"]", function() {
            this.setScaleConfig();
            b.close()
        }.bind(this));
        c.on("click", "[data-action=\"cancel\"]", function() {
            b.close()
        })
    };
    g.prototype.setScaleConfig = function() {
        var b = a(this.popup.getContent()),
            c = [{
                scaleid: this.scaleid
            }];
        this.scalevalues.forEach(function(a) {
            var d = 0,
                e = 0;
            if (b.find("[data-field=\"tool_lp_scale_default_" + a.id + "\"]").is(":checked")) {
                d = 1
            }
            if (b.find("[data-field=\"tool_lp_scale_proficient_" + a.id + "\"]").is(":checked")) {
                e = 1
            }
            if (!d && !e) {
                return
            }
            c.push({
                id: a.id,
                scaledefault: d,
                proficient: e
            })
        });
        var d = JSON.stringify(c);
        a(this.inputSelector).val(d);
        this.originalscaleid = this.scaleid
    };
    g.prototype.getScaleValues = function(a) {
        return f.get_values(a).then(function(a) {
            this.scalevalues = a;
            return a
        }.bind(this))
    };
    g.prototype.scaleChangeHandler = function(b) {
        if (0 >= a(b.target).val()) {
            a(this.triggerSelector).prop("disabled", !0)
        } else {
            a(this.triggerSelector).prop("disabled", !1)
        }
    };
    return {
        init: function init(a, b, c) {
            return new g(a, b, c)
        }
    }
});
define("tool_lp/competency_rule", ["jquery"], function(a) {
    var b = function(b) {
        this._eventNode = a("<div>");
        this._ready = a.Deferred();
        this._tree = b
    };
    b.prototype._competency = null;
    b.prototype._eventNode = null;
    b.prototype._ready = null;
    b.prototype._tree = null;
    b.prototype.canConfig = function() {
        return this._tree.hasChildren(this._competency.id)
    };
    b.prototype.getConfig = function() {
        return null
    };
    b.prototype.getType = function() {
        throw new Error("Not implemented")
    };
    b.prototype.init = function() {
        return this._load()
    };
    b.prototype.injectTemplate = function() {
        return a.Deferred().reject().promise()
    };
    b.prototype.isValid = function() {
        return !1
    };
    b.prototype._load = function() {
        return a.when()
    };
    b.prototype.on = function(a, b) {
        this._eventNode.on(a, b)
    };
    b.prototype.setTargetCompetency = function(a) {
        this._competency = a
    };
    b.prototype._trigger = function(a, b) {
        this._eventNode.trigger(a, [b])
    };
    b.prototype._triggerChange = function() {
        this._trigger("change", this)
    };
    return b
});
define("tool_lp/competency_outcomes", ["jquery", "core/str"], function(a, b) {
    return {
        NONE: 0,
        EVIDENCE: 1,
        COMPLETE: 2,
        RECOMMEND: 3,
        getAll: function getAll() {
            var a = this;
            return b.get_strings([{
                key: "competencyoutcome_none",
                component: "tool_lp"
            }, {
                key: "competencyoutcome_evidence",
                component: "tool_lp"
            }, {
                key: "competencyoutcome_recommend",
                component: "tool_lp"
            }, {
                key: "competencyoutcome_complete",
                component: "tool_lp"
            }]).then(function(b) {
                var c = {};
                c[a.NONE] = {
                    code: a.NONE,
                    name: b[0]
                };
                c[a.EVIDENCE] = {
                    code: a.EVIDENCE,
                    name: b[1]
                };
                c[a.RECOMMEND] = {
                    code: a.RECOMMEND,
                    name: b[2]
                };
                c[a.COMPLETE] = {
                    code: a.COMPLETE,
                    name: b[3]
                };
                return c
            })
        },
        getString: function getString(b) {
            var c = this,
                d = c.getAll();
            return d.then(function(c) {
                if ("undefined" == typeof c[b]) {
                    return a.Deferred().reject().promise()
                }
                return c[b].name
            })
        }
    }
});
define("tool_lp/user_competency_course_navigation", ["jquery"], function(a) {
    var b = function(b, c, d, e, f, g) {
        this._baseUrl = d;
        this._userId = e + "";
        this._competencyId = f + "";
        this._courseId = g;
        a(b).on("change", this._userChanged.bind(this));
        a(c).on("change", this._competencyChanged.bind(this))
    };
    b.prototype._userChanged = function(b) {
        var c = a(b.target).val(),
            d = "?userid=" + c + "&courseid=" + this._courseId + "&competencyid=" + this._competencyId;
        document.location = this._baseUrl + d
    };
    b.prototype._competencyChanged = function(b) {
        var c = a(b.target).val(),
            d = "?userid=" + this._userId + "&courseid=" + this._courseId + "&competencyid=" + c;
        document.location = this._baseUrl + d
    };
    b.prototype._competencyId = null;
    b.prototype._userId = null;
    b.prototype._courseId = null;
    b.prototype._baseUrl = null;
    b.prototype._ignoreFirstCompetency = null;
    return b
});
define("tool_lp/competencypicker_user_plans", ["jquery", "core/notification", "core/ajax", "core/templates", "core/str", "tool_lp/tree", "tool_lp/competencypicker"], function(a, b, c, d, e, f, g) {
    var h = function(a, b, c) {
        g.prototype.constructor.apply(this, [1, !1, "self", c]);
        this._userId = a;
        this._plans = [];
        if (b) {
            this._planId = b;
            this._singlePlan = !0
        }
    };
    h.prototype = Object.create(g.prototype);
    h.prototype._plans = null;
    h.prototype._planId = null;
    h.prototype._singlePlan = !1;
    h.prototype._userId = null;
    h.prototype._afterRender = function() {
        var c = this;
        g.prototype._afterRender.apply(c, arguments);
        if (!c._singlePlan) {
            c._find("[data-action=\"chooseplan\"]").change(function(d) {
                c._planId = a(d.target).val();
                c._loadCompetencies().then(c._refresh.bind(c)).catch(b.exception)
            })
        }
    };
    h.prototype._fetchCompetencies = function(a, d) {
        var e = this;
        return c.call([{
            methodname: "core_competency_list_plan_competencies",
            args: {
                id: a
            }
        }])[0].done(function(a) {
            var b, c, f = [];
            for (b = 0; b < a.length; b++) {
                c = a[b].competency;
                if (0 > c.shortname.toLowerCase().indexOf(d.toLowerCase())) {
                    continue
                }
                c.children = [];
                c.haschildren = 0;
                f.push(c)
            }
            e._competencies = f
        }).fail(b.exception)
    };
    h.prototype._getPlan = function(b) {
        var c;
        a.each(this._plans, function(a, d) {
            if (d.id == b) {
                c = d
            }
        });
        return c
    };
    h.prototype._loadCompetencies = function() {
        return this._fetchCompetencies(this._planId, this._searchText)
    };
    h.prototype._loadPlans = function() {
        var d, e = this;
        if (0 < e._plans.length) {
            return a.when()
        }
        if (e._singlePlan) {
            d = c.call([{
                methodname: "core_competency_read_plan",
                args: {
                    id: this._planId
                }
            }])[0].then(function(a) {
                return [a]
            })
        } else {
            d = c.call([{
                methodname: "core_competency_list_user_plans",
                args: {
                    userid: e._userId
                }
            }])[0]
        }
        return d.done(function(a) {
            e._plans = a
        }).fail(b.exception)
    };
    h.prototype._preRender = function() {
        var b = this;
        return b._loadPlans().then(function() {
            if (!b._planId && 0 < b._plans.length) {
                b._planId = b._plans[0].id
            }
            if (!b._planId) {
                b._plans = [];
                return a.when()
            }
            return b._loadCompetencies()
        })
    };
    h.prototype._render = function() {
        var b = this;
        return b._preRender().then(function() {
            if (!b._singlePlan) {
                a.each(b._plans, function(a, c) {
                    if (c.id == b._planId) {
                        c.selected = !0
                    } else {
                        c.selected = !1
                    }
                })
            }
            var c = {
                competencies: b._competencies,
                plan: b._getPlan(b._planId),
                plans: b._plans,
                search: b._searchText,
                singlePlan: b._singlePlan
            };
            return d.render("tool_lp/competency_picker_user_plans", c)
        })
    };
    return h
});
define("tool_lp/course_competency_settings", ["jquery", "core/notification", "tool_lp/dialogue", "core/str", "core/ajax", "core/templates", "core/pending"], function(a, b, c, d, f, g, h) {
    var i = function(b) {
        a(b).on("click", this.configureSettings.bind(this))
    };
    i.prototype._dialogue = null;
    i.prototype.configureSettings = function(f) {
        var e = new h,
            i = a(f.target).closest("a").data("courseid"),
            j = a(f.target).closest("a").data("pushratingstouserplans");
        f.preventDefault();
        a.when(d.get_string("configurecoursecompetencysettings", "tool_lp"), g.render("tool_lp/course_competency_settings", {
            courseid: i,
            settings: {
                pushratingstouserplans: j
            }
        })).then(function(a, b) {
            this._dialogue = new c(a, b[0], this.addListeners.bind(this));
            return this._dialogue
        }.bind(this)).then(e.resolve).catch(b.exception)
    };
    i.prototype.addListeners = function() {
        var a = this._find("[data-action=\"save\"]");
        a.on("click", this.saveSettings.bind(this));
        var b = this._find("[data-action=\"cancel\"]");
        b.on("click", this.cancelChanges.bind(this))
    };
    i.prototype.cancelChanges = function(a) {
        a.preventDefault();
        this._dialogue.close()
    };
    i.prototype._find = function(b) {
        return a("[data-region=\"coursecompetencysettings\"]").find(b)
    };
    i.prototype.saveSettings = function(a) {
        var c = new h;
        a.preventDefault();
        var d = this._find("input[name=\"pushratingstouserplans\"]:checked").val(),
            e = this._find("input[name=\"courseid\"]").val();
        f.call([{
            methodname: "core_competency_update_course_competency_settings",
            args: {
                courseid: e,
                settings: {
                    pushratingstouserplans: d
                }
            }
        }])[0].then(function() {
            return this.refreshCourseCompetenciesPage()
        }.bind(this)).then(c.resolve).catch(b.exception)
    };
    i.prototype.refreshCourseCompetenciesPage = function() {
        var c = this._find("input[name=\"courseid\"]").val(),
            d = new h;
        f.call([{
            methodname: "tool_lp_data_for_course_competencies_page",
            args: {
                courseid: c,
                moduleid: 0
            }
        }])[0].then(function(a) {
            return g.render("tool_lp/course_competencies_page", a)
        }).then(function(b, c) {
            g.replaceNode(a("[data-region=\"coursecompetenciespage\"]"), b, c);
            this._dialogue.close()
        }.bind(this)).then(d.resolve).catch(b.exception)
    };
    return i
});
define("tool_lp/form-cohort-selector", ["jquery", "core/ajax", "core/templates"], function(a, b, c) {
    return {
        processResults: function processResults(b, c) {
            var d = [];
            a.each(c, function(a, b) {
                d.push({
                    value: b.id,
                    label: b._label
                })
            });
            return d
        },
        transport: function transport(d, e, f, g) {
            var h, i = parseInt(a(d).data("contextid"), 10),
                j = a(d).data("includes");
            h = b.call([{
                methodname: "tool_lp_search_cohorts",
                args: {
                    query: e,
                    context: {
                        contextid: i
                    },
                    includes: j
                }
            }]);
            h[0].then(function(b) {
                var d = [],
                    e = 0;
                a.each(b.cohorts, function(a, b) {
                    d.push(c.render("tool_lp/form-cohort-selector-suggestion", b))
                });
                return a.when.apply(a.when, d).then(function() {
                    var c = arguments;
                    a.each(b.cohorts, function(a, b) {
                        b._label = c[e];
                        e++
                    });
                    f(b.cohorts)
                })
            }).catch(g)
        }
    }
});
define("tool_lp/frameworkactions", ["jquery", "core/templates", "core/ajax", "core/notification", "core/str"], function(a, b, c, d, e) {
    var f = 0,
        g = 0,
        h = function(c, d) {
            a("[data-region=\"managecompetencies\"]").replaceWith(c);
            b.runTemplateJS(d)
        },
        i = function(a) {
            b.render("tool_lp/manage_competency_frameworks_page", a).done(h).fail(d.exception)
        },
        j = function(b) {
            b.preventDefault();
            g = a(this).attr("data-frameworkid");
            var e = c.call([{
                methodname: "core_competency_duplicate_competency_framework",
                args: {
                    id: g
                }
            }, {
                methodname: "tool_lp_data_for_competency_frameworks_manage_page",
                args: {
                    pagecontext: {
                        contextid: f
                    }
                }
            }]);
            e[1].done(i).fail(d.exception)
        },
        k = function() {
            var a = c.call([{
                methodname: "core_competency_delete_competency_framework",
                args: {
                    id: g
                }
            }, {
                methodname: "tool_lp_data_for_competency_frameworks_manage_page",
                args: {
                    pagecontext: {
                        contextid: f
                    }
                }
            }]);
            a[0].done(function(a) {
                if (!1 === a) {
                    var b = c.call([{
                        methodname: "core_competency_read_competency_framework",
                        args: {
                            id: g
                        }
                    }]);
                    b[0].done(function(a) {
                        e.get_strings([{
                            key: "frameworkcannotbedeleted",
                            component: "tool_lp",
                            param: a.shortname
                        }, {
                            key: "cancel",
                            component: "moodle"
                        }]).done(function(a) {
                            d.alert(null, a[0])
                        }).fail(d.exception)
                    })
                }
            }).fail(d.exception);
            a[1].done(i).fail(d.exception)
        },
        l = function(b) {
            b.preventDefault();
            var f = a(this).attr("data-frameworkid");
            g = f;
            var h = c.call([{
                methodname: "core_competency_read_competency_framework",
                args: {
                    id: g
                }
            }]);
            h[0].done(function(a) {
                e.get_strings([{
                    key: "confirm",
                    component: "moodle"
                }, {
                    key: "deletecompetencyframework",
                    component: "tool_lp",
                    param: a.shortname
                }, {
                    key: "delete",
                    component: "moodle"
                }, {
                    key: "cancel",
                    component: "moodle"
                }]).done(function(a) {
                    d.confirm(a[0], a[1], a[2], a[3], k)
                }).fail(d.exception)
            }).fail(d.exception)
        };
    return {
        deleteHandler: l,
        duplicateHandler: j,
        init: function init(a) {
            f = a
        }
    }
});
define("tool_lp/frameworks_datasource", ["jquery", "core/ajax", "core/notification"], function(a, b, c) {
    return {
        list: function list(c, d) {
            var e = {
                context: {
                    contextid: c
                }
            };
            a.extend(e, "undefined" == typeof d ? {} : d);
            return b.call([{
                methodname: "core_competency_list_competency_frameworks",
                args: e
            }])[0]
        },
        processResults: function processResults(b, c) {
            var d = [];
            a.each(c, function(a, b) {
                d.push({
                    value: b.id,
                    label: b.shortname + " " + b.idnumber
                })
            });
            return d
        },
        transport: function transport(b, d, e) {
            var f = a(b),
                g = f.data("contextid"),
                h = f.data("onlyvisible");
            if (!g) {
                throw new Error("The attribute data-contextid is required on " + b)
            }
            this.list(g, {
                query: d,
                onlyvisible: h
            }).then(e).catch(c.exception)
        }
    }
});
define("tool_lp/grade_user_competency_inline", ["jquery", "core/notification", "core/ajax", "core/log", "tool_lp/grade_dialogue", "tool_lp/event_base", "tool_lp/scalevalues"], function(a, b, c, d, e, f, g) {
    var h = function(b, c, d, e, g, h, i) {
        f.prototype.constructor.apply(this, []);
        var j = a(b);
        if (!j.length) {
            throw new Error("Could not find the trigger")
        }
        this._scaleId = c;
        this._competencyId = d;
        this._userId = e;
        this._planId = g;
        this._courseId = h;
        this._chooseStr = i;
        this._setUp();
        j.click(function(a) {
            a.preventDefault();
            this._dialogue.display()
        }.bind(this));
        if (this._planId) {
            this._methodName = "core_competency_grade_competency_in_plan";
            this._args = {
                competencyid: this._competencyId,
                planid: this._planId
            }
        } else if (this._courseId) {
            this._methodName = "core_competency_grade_competency_in_course";
            this._args = {
                competencyid: this._competencyId,
                courseid: this._courseId,
                userid: this._userId
            }
        } else {
            this._methodName = "core_competency_grade_competency";
            this._args = {
                userid: this._userId,
                competencyid: this._competencyId
            }
        }
    };
    h.prototype = Object.create(f.prototype);
    h.prototype._setUp = function() {
        var a = [],
            d = this,
            f = g.get_values(d._scaleId);
        f.then(function(b) {
            a.push({
                value: "",
                name: d._chooseStr
            });
            for (var c = 0, e; c < b.length; c++) {
                e = b[c];
                a.push({
                    value: e.id,
                    name: e.name
                })
            }
            return a
        }).then(function(a) {
            return new e(a)
        }).then(function(a) {
            a.on("rated", function(a, e) {
                var f = d._args;
                f.grade = e.rating;
                f.note = e.note;
                c.call([{
                    methodname: d._methodName,
                    args: f,
                    done: function done(a) {
                        d._trigger("competencyupdated", {
                            args: f,
                            evidence: a
                        })
                    },
                    fail: b.exception
                }])
            });
            return a
        }).then(function(a) {
            d._dialogue = a
        }).fail(b.exception)
    };
    h.prototype._scaleId = null;
    h.prototype._competencyId = null;
    h.prototype._userId = null;
    h.prototype._planId = null;
    h.prototype._courseId = null;
    h.prototype._chooseStr = null;
    h.prototype._dialogue = null;
    return h
});
define("tool_lp/competency_rule_all", ["jquery", "core/str", "tool_lp/competency_rule"], function(a, b, c) {
    var d = function() {
        c.apply(this, arguments)
    };
    d.prototype = Object.create(c.prototype);
    d.prototype.getType = function() {
        return "core_competency\\competency_rule_all"
    };
    d.prototype.isValid = function() {
        return !0
    };
    return d
});
define("tool_lp/event_base", ["jquery"], function(a) {
    var b = function() {
        this._eventNode = a("<div></div>")
    };
    b.prototype._eventNode = null;
    b.prototype.on = function(a, b) {
        this._eventNode.on(a, b)
    };
    b.prototype._trigger = function(a, b) {
        this._eventNode.trigger(a, [b])
    };
    return b
});
define("tool_lp/user_competency_workflow", ["jquery", "core/templates", "core/ajax", "core/notification", "core/str", "tool_lp/menubar", "tool_lp/event_base"], function(a, b, c, d, e, f, g) {
    var h = function() {
        g.prototype.constructor.apply(this, [])
    };
    h.prototype = Object.create(g.prototype);
    h.prototype._nodeSelector = "[data-node=\"user-competency\"]";
    h.prototype._cancelReviewRequest = function(a) {
        var b = {
            methodname: "core_competency_user_competency_cancel_review_request",
            args: {
                userid: a.userid,
                competencyid: a.competencyid
            }
        };
        c.call([b])[0].then(function() {
            this._trigger("review-request-cancelled", a);
            this._trigger("status-changed", a)
        }.bind(this)).catch(function() {
            this._trigger("error-occured", a)
        }.bind(this))
    };
    h.prototype.cancelReviewRequest = function(a) {
        this._cancelReviewRequest(a)
    };
    h.prototype._cancelReviewRequestHandler = function(b) {
        b.preventDefault();
        var c = this._findUserCompetencyData(a(b.target));
        this.cancelReviewRequest(c)
    };
    h.prototype._requestReview = function(a) {
        var b = {
            methodname: "core_competency_user_competency_request_review",
            args: {
                userid: a.userid,
                competencyid: a.competencyid
            }
        };
        c.call([b])[0].then(function() {
            this._trigger("review-requested", a);
            this._trigger("status-changed", a)
        }.bind(this)).catch(function() {
            this._trigger("error-occured", a)
        }.bind(this))
    };
    h.prototype.requestReview = function(a) {
        this._requestReview(a)
    };
    h.prototype._requestReviewHandler = function(b) {
        b.preventDefault();
        var c = this._findUserCompetencyData(a(b.target));
        this.requestReview(c)
    };
    h.prototype._startReview = function(a) {
        var b = {
            methodname: "core_competency_user_competency_start_review",
            args: {
                userid: a.userid,
                competencyid: a.competencyid
            }
        };
        c.call([b])[0].then(function() {
            this._trigger("review-started", a);
            this._trigger("status-changed", a)
        }.bind(this)).catch(function() {
            this._trigger("error-occured", a)
        }.bind(this))
    };
    h.prototype.startReview = function(a) {
        this._startReview(a)
    };
    h.prototype._startReviewHandler = function(b) {
        b.preventDefault();
        var c = this._findUserCompetencyData(a(b.target));
        this.startReview(c)
    };
    h.prototype._stopReview = function(a) {
        var b = {
            methodname: "core_competency_user_competency_stop_review",
            args: {
                userid: a.userid,
                competencyid: a.competencyid
            }
        };
        c.call([b])[0].then(function() {
            this._trigger("review-stopped", a);
            this._trigger("status-changed", a)
        }.bind(this)).catch(function() {
            this._trigger("error-occured", a)
        }.bind(this))
    };
    h.prototype.stopReview = function(a) {
        this._stopReview(a)
    };
    h.prototype._stopReviewHandler = function(b) {
        b.preventDefault();
        var c = this._findUserCompetencyData(a(b.target));
        this.stopReview(c)
    };
    h.prototype.enhanceMenubar = function(a) {
        f.enhance(a, {
            '[data-action="request-review"]': this._requestReviewHandler.bind(this),
            '[data-action="cancel-review-request"]': this._cancelReviewRequestHandler.bind(this)
        })
    };
    h.prototype._findUserCompetencyData = function(a) {
        var b = a.parents(this._nodeSelector),
            c;
        if (1 != b.length) {
            throw new Error("The evidence node was not located.")
        }
        c = b.data();
        if ("undefined" == typeof c || "undefined" == typeof c.userid || "undefined" == typeof c.competencyid) {
            throw new Error("User competency data could not be found.")
        }
        return c
    };
    h.prototype.enhanceMenubar = function(a) {
        f.enhance(a, {
            '[data-action="request-review"]': this._requestReviewHandler.bind(this),
            '[data-action="cancel-review-request"]': this._cancelReviewRequestHandler.bind(this),
            '[data-action="start-review"]': this._startReviewHandler.bind(this),
            '[data-action="stop-review"]': this._stopReviewHandler.bind(this)
        })
    };
    h.prototype.registerEvents = function(b) {
        var c = a(b);
        c.find("[data-action=\"request-review\"]").click(this._requestReviewHandler.bind(this));
        c.find("[data-action=\"cancel-review-request\"]").click(this._cancelReviewRequestHandler.bind(this));
        c.find("[data-action=\"start-review\"]").click(this._startReviewHandler.bind(this));
        c.find("[data-action=\"stop-review\"]").click(this._stopReviewHandler.bind(this))
    };
    return h
});
define("tool_lp/form-user-selector", ["jquery", "core/ajax", "core/templates"], function(a, b, c) {
    return {
        processResults: function processResults(b, c) {
            var d = [];
            a.each(c, function(a, b) {
                d.push({
                    value: b.id,
                    label: b._label
                })
            });
            return d
        },
        transport: function transport(d, e, f, g) {
            var h, i = a(d).data("capability");
            if ("undefined" == typeof i) {
                i = ""
            }
            h = b.call([{
                methodname: "tool_lp_search_users",
                args: {
                    query: e,
                    capability: i
                }
            }]);
            h[0].then(function(b) {
                var d = [],
                    e = 0;
                a.each(b.users, function(b, e) {
                    var f = e,
                        g = [];
                    a.each(["idnumber", "email", "phone1", "phone2", "department", "institution"], function(a, b) {
                        if ("undefined" != typeof e[b] && "" !== e[b]) {
                            f.hasidentity = !0;
                            g.push(e[b])
                        }
                    });
                    f.identity = g.join(", ");
                    d.push(c.render("tool_lp/form-user-selector-suggestion", f))
                });
                return a.when.apply(a.when, d).then(function() {
                    var c = arguments;
                    a.each(b.users, function(a, b) {
                        b._label = c[e];
                        e++
                    });
                    f(b.users)
                })
            }).catch(g)
        }
    }
});
define("tool_lp/competencies", ["jquery", "core/notification", "core/ajax", "core/templates", "core/str", "tool_lp/competencypicker", "tool_lp/dragdrop-reorder", "core/pending"], function(a, b, c, d, e, f, g, h) {
    var i = function(b, c, d) {
        this.itemid = b;
        this.itemtype = c;
        this.pageContextId = d;
        this.pickerInstance = null;
        a("[data-region=\"actions\"] button").prop("disabled", !1);
        this.registerEvents();
        this.registerDragDrop()
    };
    i.prototype.registerDragDrop = function() {
        var a = this;
        e.get_string("movecompetency", "tool_lp").done(function(b) {
            g.dragdrop("movecompetency", b, {
                identifier: "movecompetency",
                component: "tool_lp"
            }, {
                identifier: "movecompetencyafter",
                component: "tool_lp"
            }, "drag-samenode", "drag-parentnode", "drag-handlecontainer", function(b, c) {
                a.handleDrop(b, c)
            })
        }).fail(b.exception)
    };
    i.prototype.handleDrop = function(d, e) {
        var f = a(d).data("id"),
            g = a(e).data("id"),
            h = this,
            i = [];
        if ("course" == h.itemtype) {
            i = c.call([{
                methodname: "core_competency_reorder_course_competency",
                args: {
                    courseid: h.itemid,
                    competencyidfrom: f,
                    competencyidto: g
                }
            }])
        } else if ("template" == h.itemtype) {
            i = c.call([{
                methodname: "core_competency_reorder_template_competency",
                args: {
                    templateid: h.itemid,
                    competencyidfrom: f,
                    competencyidto: g
                }
            }])
        } else if ("plan" == h.itemtype) {
            i = c.call([{
                methodname: "core_competency_reorder_plan_competency",
                args: {
                    planid: h.itemid,
                    competencyidfrom: f,
                    competencyidto: g
                }
            }])
        } else {
            return
        }
        i[0].fail(b.exception)
    };
    i.prototype.pickCompetency = function() {
        var g = this,
            i, j, k, l;
        if (!g.pickerInstance) {
            if ("template" === g.itemtype || "course" === g.itemtype) {
                l = "parents"
            }
            g.pickerInstance = new f(g.pageContextId, !1, l);
            g.pickerInstance.on("save", function(f, e) {
                var l = e.competencyIds,
                    m = new h;
                if ("course" === g.itemtype) {
                    i = [];
                    a.each(l, function(a, b) {
                        i.push({
                            methodname: "core_competency_add_competency_to_course",
                            args: {
                                courseid: g.itemid,
                                competencyid: b
                            }
                        })
                    });
                    i.push({
                        methodname: "tool_lp_data_for_course_competencies_page",
                        args: {
                            courseid: g.itemid,
                            moduleid: 0
                        }
                    });
                    j = "tool_lp/course_competencies_page";
                    k = "coursecompetenciespage"
                } else if ("template" === g.itemtype) {
                    i = [];
                    a.each(l, function(a, b) {
                        i.push({
                            methodname: "core_competency_add_competency_to_template",
                            args: {
                                templateid: g.itemid,
                                competencyid: b
                            }
                        })
                    });
                    i.push({
                        methodname: "tool_lp_data_for_template_competencies_page",
                        args: {
                            templateid: g.itemid,
                            pagecontext: {
                                contextid: g.pageContextId
                            }
                        }
                    });
                    j = "tool_lp/template_competencies_page";
                    k = "templatecompetenciespage"
                } else if ("plan" === g.itemtype) {
                    i = [];
                    a.each(l, function(a, b) {
                        i.push({
                            methodname: "core_competency_add_competency_to_plan",
                            args: {
                                planid: g.itemid,
                                competencyid: b
                            }
                        })
                    });
                    i.push({
                        methodname: "tool_lp_data_for_plan_page",
                        args: {
                            planid: g.itemid
                        }
                    });
                    j = "tool_lp/plan_page";
                    k = "plan-page"
                }
                c.call(i)[i.length - 1].then(function(a) {
                    return d.render(j, a)
                }).then(function(b, c) {
                    d.replaceNode(a("[data-region=\"" + k + "\"]"), b, c)
                }).then(m.resolve).catch(b.exception)
            })
        }
        return g.pickerInstance.display()
    };
    i.prototype.doDelete = function(e) {
        var f = this,
            g = [],
            h = "",
            i = "";
        if ("course" == f.itemtype) {
            g = c.call([{
                methodname: "core_competency_remove_competency_from_course",
                args: {
                    courseid: f.itemid,
                    competencyid: e
                }
            }, {
                methodname: "tool_lp_data_for_course_competencies_page",
                args: {
                    courseid: f.itemid,
                    moduleid: 0
                }
            }]);
            h = "tool_lp/course_competencies_page";
            i = "coursecompetenciespage"
        } else if ("template" == f.itemtype) {
            g = c.call([{
                methodname: "core_competency_remove_competency_from_template",
                args: {
                    templateid: f.itemid,
                    competencyid: e
                }
            }, {
                methodname: "tool_lp_data_for_template_competencies_page",
                args: {
                    templateid: f.itemid,
                    pagecontext: {
                        contextid: f.pageContextId
                    }
                }
            }]);
            h = "tool_lp/template_competencies_page";
            i = "templatecompetenciespage"
        } else if ("plan" == f.itemtype) {
            g = c.call([{
                methodname: "core_competency_remove_competency_from_plan",
                args: {
                    planid: f.itemid,
                    competencyid: e
                }
            }, {
                methodname: "tool_lp_data_for_plan_page",
                args: {
                    planid: f.itemid
                }
            }]);
            h = "tool_lp/plan_page";
            i = "plan-page"
        }
        g[1].done(function(c) {
            d.render(h, c).done(function(b, c) {
                a("[data-region=\"" + i + "\"]").replaceWith(b);
                d.runTemplateJS(c)
            }).fail(b.exception)
        }).fail(b.exception)
    };
    i.prototype.deleteHandler = function(a) {
        var d = this,
            f = [],
            g;
        if ("course" == d.itemtype) {
            g = "unlinkcompetencycourse"
        } else if ("template" == d.itemtype) {
            g = "unlinkcompetencytemplate"
        } else if ("plan" == d.itemtype) {
            g = "unlinkcompetencyplan"
        } else {
            return
        }
        f = c.call([{
            methodname: "core_competency_read_competency",
            args: {
                id: a
            }
        }]);
        f[0].done(function(c) {
            e.get_strings([{
                key: "confirm",
                component: "moodle"
            }, {
                key: g,
                component: "tool_lp",
                param: c.shortname
            }, {
                key: "confirm",
                component: "moodle"
            }, {
                key: "cancel",
                component: "moodle"
            }]).done(function(c) {
                b.confirm(c[0], c[1], c[2], c[3], function() {
                    d.doDelete(a)
                })
            }).fail(b.exception)
        }).fail(b.exception)
    };
    i.prototype.registerEvents = function() {
        var f = this;
        if ("course" == f.itemtype) {
            a("[data-region=\"coursecompetenciespage\"]").on("change", "select[data-field=\"ruleoutcome\"]", function(g) {
                var e = new h,
                    i = [],
                    j = a(g.target).data("id"),
                    k = a(g.target).val();
                i = c.call([{
                    methodname: "core_competency_set_course_competency_ruleoutcome",
                    args: {
                        coursecompetencyid: j,
                        ruleoutcome: k
                    }
                }, {
                    methodname: "tool_lp_data_for_course_competencies_page",
                    args: {
                        courseid: f.itemid,
                        moduleid: 0
                    }
                }]);
                i[1].then(function(a) {
                    return d.render("tool_lp/course_competencies_page", a)
                }).then(function(b, c) {
                    return d.replaceNode(a("[data-region=\"" + "coursecompetenciespage" + "\"]"), b, c)
                }).then(e.resolve).catch(b.exception)
            })
        }
        a("[data-region=\"actions\"] button").click(function(a) {
            var b = new h;
            a.preventDefault();
            f.pickCompetency().then(b.resolve).catch()
        });
        a("[data-action=\"delete-competency-link\"]").click(function(b) {
            b.preventDefault();
            var c = a(b.target).closest("[data-id]").data("id");
            f.deleteHandler(c)
        })
    };
    return i
});
define("tool_lp/user_evidence_actions", ["jquery", "core/templates", "core/ajax", "core/notification", "core/str", "tool_lp/menubar", "tool_lp/competencypicker_user_plans"], function(a, b, c, d, e, f, g) {
    var h = function(a) {
        this._type = a;
        if ("evidence" === a) {
            this._region = "[data-region=\"user-evidence-page\"]";
            this._evidenceNode = "[data-region=\"user-evidence-page\"]";
            this._template = "tool_lp/user_evidence_page";
            this._contextMethod = "tool_lp_data_for_user_evidence_page"
        } else if ("list" === a) {
            this._region = "[data-region=\"user-evidence-list\"]";
            this._evidenceNode = "[data-region=\"user-evidence-node\"]";
            this._template = "tool_lp/user_evidence_list_page";
            this._contextMethod = "tool_lp_data_for_user_evidence_list_page"
        } else {
            throw new TypeError("Unexpected type.")
        }
    };
    h.prototype._contextMethod = null;
    h.prototype._evidenceNode = null;
    h.prototype._region = null;
    h.prototype._template = null;
    h.prototype._type = null;
    h.prototype._getContextArgs = function(a) {
        var b = this,
            c = {};
        if ("evidence" === b._type) {
            c = {
                id: a.id
            }
        } else if ("list" === b._type) {
            c = {
                userid: a.userid
            }
        }
        return c
    };
    h.prototype._renderView = function(c) {
        var d = this;
        return b.render(d._template, c).then(function(c, e) {
            b.replaceNode(a(d._region), c, e)
        })
    };
    h.prototype._callAndRefresh = function(b, e) {
        var f = this;
        b.push({
            methodname: f._contextMethod,
            args: f._getContextArgs(e)
        });
        return a.when.apply(a.when, c.call(b)).then(function() {
            return f._renderView(arguments[arguments.length - 1])
        }).fail(d.exception)
    };
    h.prototype._doDelete = function(a) {
        var b = this,
            c = [{
                methodname: "core_competency_delete_user_evidence",
                args: {
                    id: a.id
                }
            }];
        b._callAndRefresh(c, a)
    };
    h.prototype.deleteEvidence = function(a) {
        var b = this,
            f;
        f = c.call([{
            methodname: "core_competency_read_user_evidence",
            args: {
                id: a.id
            }
        }]);
        f[0].done(function(c) {
            e.get_strings([{
                key: "confirm",
                component: "moodle"
            }, {
                key: "deleteuserevidence",
                component: "tool_lp",
                param: c.name
            }, {
                key: "delete",
                component: "moodle"
            }, {
                key: "cancel",
                component: "moodle"
            }]).done(function(c) {
                d.confirm(c[0], c[1], c[2], c[3], function() {
                    b._doDelete(a)
                })
            }).fail(d.exception)
        }).fail(d.exception)
    };
    h.prototype._deleteEvidenceHandler = function(b) {
        b.preventDefault();
        var c = this._findEvidenceData(a(b.target));
        this.deleteEvidence(c)
    };
    h.prototype._doCreateUserEvidenceCompetency = function(b, c) {
        var d = this,
            e = [];
        a.each(c, function(a, c) {
            e.push({
                methodname: "core_competency_create_user_evidence_competency",
                args: {
                    userevidenceid: b.id,
                    competencyid: c
                }
            })
        });
        d._callAndRefresh(e, b)
    };
    h.prototype.createUserEvidenceCompetency = function(a) {
        var b = this,
            c = new g(a.userid);
        c.on("save", function(c, d) {
            var e = d.competencyIds;
            b._doCreateUserEvidenceCompetency(a, e, d.requestReview)
        });
        c.display()
    };
    h.prototype._createUserEvidenceCompetencyHandler = function(b) {
        b.preventDefault();
        var c = this._findEvidenceData(a(b.target));
        this.createUserEvidenceCompetency(c)
    };
    h.prototype._doDeleteUserEvidenceCompetency = function(a, b) {
        var c = this,
            d = [];
        d.push({
            methodname: "core_competency_delete_user_evidence_competency",
            args: {
                userevidenceid: a.id,
                competencyid: b
            }
        });
        c._callAndRefresh(d, a)
    };
    h.prototype.deleteUserEvidenceCompetency = function(a, b) {
        this._doDeleteUserEvidenceCompetency(a, b)
    };
    h.prototype._deleteUserEvidenceCompetencyHandler = function(b) {
        var c = this._findEvidenceData(a(b.currentTarget)),
            d = a(b.currentTarget).data("id");
        b.preventDefault();
        this.deleteUserEvidenceCompetency(c, d)
    };
    h.prototype._doReviewUserEvidenceCompetencies = function(a) {
        var b = this,
            c = [{
                methodname: "core_competency_request_review_of_user_evidence_linked_competencies",
                args: {
                    id: a.id
                }
            }];
        b._callAndRefresh(c, a)
    };
    h.prototype.reviewUserEvidenceCompetencies = function(a) {
        var b = this,
            f;
        f = c.call([{
            methodname: "core_competency_read_user_evidence",
            args: {
                id: a.id
            }
        }]);
        f[0].done(function(c) {
            e.get_strings([{
                key: "confirm",
                component: "moodle"
            }, {
                key: "sendallcompetenciestoreview",
                component: "tool_lp",
                param: c.name
            }, {
                key: "confirm",
                component: "moodle"
            }, {
                key: "cancel",
                component: "moodle"
            }]).done(function(c) {
                d.confirm(c[0], c[1], c[2], c[3], function() {
                    b._doReviewUserEvidenceCompetencies(a)
                })
            }).fail(d.exception)
        }).fail(d.exception)
    };
    h.prototype._reviewUserEvidenceCompetenciesHandler = function(b) {
        b.preventDefault();
        var c = this._findEvidenceData(a(b.target));
        this.reviewUserEvidenceCompetencies(c)
    };
    h.prototype._findEvidenceData = function(b) {
        var c = b.parentsUntil(a(this._region).parent(), this._evidenceNode),
            d;
        if (1 != c.length) {
            throw new Error("The evidence node was not located.")
        }
        d = c.data();
        if ("undefined" == typeof d || "undefined" == typeof d.id) {
            throw new Error("Evidence data could not be found.")
        }
        return d
    };
    h.prototype.enhanceMenubar = function(a) {
        var b = this;
        f.enhance(a, {
            '[data-action="user-evidence-delete"]': b._deleteEvidenceHandler.bind(b),
            '[data-action="link-competency"]': b._createUserEvidenceCompetencyHandler.bind(b),
            '[data-action="send-competencies-review"]': b._reviewUserEvidenceCompetenciesHandler.bind(b)
        })
    };
    h.prototype.registerEvents = function() {
        var b = a(this._region),
            c = this;
        b.find("[data-action=\"user-evidence-delete\"]").click(c._deleteEvidenceHandler.bind(c));
        b.find("[data-action=\"link-competency\"]").click(c._createUserEvidenceCompetencyHandler.bind(c));
        b.find("[data-action=\"delete-competency-link\"]").click(c._deleteUserEvidenceCompetencyHandler.bind(c));
        b.find("[data-action=\"send-competencies-review\"]").click(c._reviewUserEvidenceCompetenciesHandler.bind(c))
    };
    return h
});
define("tool_lp/competencyactions", ["jquery", "core/url", "core/templates", "core/notification", "core/str", "core/ajax", "tool_lp/dragdrop-reorder", "tool_lp/tree", "tool_lp/dialogue", "tool_lp/menubar", "tool_lp/competencypicker", "tool_lp/competency_outcomes", "tool_lp/competencyruleconfig", "core/pending"], function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var o = null,
        p = null,
        q = null,
        r, s, t, u, v, w, x = null,
        y = function() {
            var c = a("[data-region=\"competencyactions\"]").data("competency"),
                f = {
                    competencyframeworkid: o.getCompetencyFrameworkId(),
                    pagecontextid: r
                };
            if (null !== c) {
                f.parentid = c.id
            }
            var g = function() {
                var c = a.param(f);
                window.location = b.relativeUrl("/admin/tool/lp/editcompetency.php?" + c)
            };
            if (null !== c && o.hasRule(c.id)) {
                e.get_strings([{
                    key: "confirm",
                    component: "moodle"
                }, {
                    key: "addingcompetencywillresetparentrule",
                    component: "tool_lp",
                    param: c.shortname
                }, {
                    key: "yes",
                    component: "core"
                }, {
                    key: "no",
                    component: "core"
                }]).done(function(a) {
                    d.confirm(a[0], a[1], a[2], a[3], g)
                }).fail(d.exception)
            } else {
                g()
            }
        },
        z = function() {
            var b = a("[data-region=\"filtercompetencies\"]").data("frameworkid"),
                c = f.call([{
                    methodname: "core_competency_set_parent_competency",
                    args: {
                        competencyid: p,
                        parentid: q
                    }
                }, {
                    methodname: "tool_lp_data_for_competencies_manage_page",
                    args: {
                        competencyframeworkid: b,
                        search: a("[data-region=\"filtercompetencies\"] input").val()
                    }
                }]);
            c[1].done(F).fail(d.exception)
        },
        A = function() {
            q = "undefined" == typeof q ? 0 : q;
            if (q == p) {
                return
            }
            var a = o.getCompetency(q) || {},
                b = o.getCompetency(p) || {},
                c = "movecompetencywillresetrules",
                f = !1;
            if (b.parentid == q) {
                return
            }
            if (a.path && 0 <= a.path.indexOf("/" + b.id + "/")) {
                c = "movecompetencytochildofselfwillresetrules";
                f = f || o.hasRule(b.id)
            }
            f = f || o.hasRule(a.id) || o.hasRule(b.parentid);
            if (f) {
                e.get_strings([{
                    key: "confirm",
                    component: "moodle"
                }, {
                    key: c,
                    component: "tool_lp"
                }, {
                    key: "yes",
                    component: "moodle"
                }, {
                    key: "no",
                    component: "moodle"
                }]).done(function(a) {
                    d.confirm(a[0], a[1], a[2], a[3], z)
                }).fail(d.exception)
            } else {
                z()
            }
        },
        B = function(b) {
            var c = a(b.getContent()),
                d = c.find("[data-enhance=movetree]"),
                e = new h(d, !1);
            e.on("selectionchanged", function(b, c) {
                var d = c.selected;
                q = a(d).data("id")
            });
            d.show();
            c.on("click", "[data-action=\"move\"]", function() {
                b.close();
                A()
            });
            c.on("click", "[data-action=\"cancel\"]", function() {
                b.close()
            })
        },
        C = function(a, b) {
            var c;
            for (c = 0; c < b.length; c++) {
                if (b[c].parentid == a.id) {
                    a.haschildren = !0;
                    b[c].children = [];
                    b[c].haschildren = !1;
                    a.children[a.children.length] = b[c];
                    C(b[c], b)
                }
            }
        },
        D = function(b) {
            b.preventDefault();
            var g = a("[data-region=\"competencyactions\"]").data("competency");
            p = g.id;
            var h = f.call([{
                methodname: "core_competency_search_competencies",
                args: {
                    competencyframeworkid: g.competencyframeworkid,
                    searchtext: ""
                }
            }, {
                methodname: "core_competency_read_competency_framework",
                args: {
                    id: g.competencyframeworkid
                }
            }]);
            a.when.apply(null, h).done(function(a, b) {
                var f, h = [];
                for (f = 0; f < a.length; f++) {
                    var j = a[f];
                    if ("0" == j.parentid) {
                        j.children = [];
                        j.haschildren = 0;
                        h[h.length] = j;
                        C(j, a)
                    }
                }
                e.get_strings([{
                    key: "movecompetency",
                    component: "tool_lp",
                    param: g.shortname
                }, {
                    key: "move",
                    component: "tool_lp"
                }, {
                    key: "cancel",
                    component: "moodle"
                }]).done(function(a) {
                    c.render("tool_lp/competencies_move_tree", {
                        framework: b,
                        competencies: h
                    }).done(function(b) {
                        new i(a[0], b, B)
                    }).fail(d.exception)
                }).fail(d.exception)
            }).fail(d.exception)
        },
        E = function() {
            var c = a("[data-region=\"competencyactions\"]").data("competency"),
                d = {
                    competencyframeworkid: o.getCompetencyFrameworkId(),
                    id: c.id,
                    parentid: c.parentid,
                    pagecontextid: r
                },
                e = a.param(d);
            window.location = b.relativeUrl("/admin/tool/lp/editcompetency.php?" + e)
        },
        F = function(b) {
            c.render("tool_lp/manage_competencies_page", b).done(function(b, d) {
                a("[data-region=\"managecompetencies\"]").replaceWith(b);
                c.runTemplateJS(d)
            }).fail(d.exception)
        },
        G = function(b) {
            b.preventDefault();
            var c = a("[data-region=\"filtercompetencies\"]").data("frameworkid"),
                e = f.call([{
                    methodname: "tool_lp_data_for_competencies_manage_page",
                    args: {
                        competencyframeworkid: c,
                        search: a("[data-region=\"filtercompetencies\"] input").val()
                    }
                }]);
            e[0].done(F).fail(d.exception)
        },
        H = function() {
            var b = a("[data-region=\"competencyactions\"]").data("competency"),
                c = f.call([{
                    methodname: "core_competency_move_up_competency",
                    args: {
                        id: b.id
                    }
                }, {
                    methodname: "tool_lp_data_for_competencies_manage_page",
                    args: {
                        competencyframeworkid: b.competencyframeworkid,
                        search: a("[data-region=\"filtercompetencies\"] input").val()
                    }
                }]);
            c[1].done(F).fail(d.exception)
        },
        I = function() {
            var b = a("[data-region=\"competencyactions\"]").data("competency"),
                c = f.call([{
                    methodname: "core_competency_move_down_competency",
                    args: {
                        id: b.id
                    }
                }, {
                    methodname: "tool_lp_data_for_competencies_manage_page",
                    args: {
                        competencyframeworkid: b.competencyframeworkid,
                        search: a("[data-region=\"filtercompetencies\"] input").val()
                    }
                }]);
            c[1].done(F).fail(d.exception)
        },
        J = function() {
            var b = a("[data-region=\"competencyactions\"]").data("competency"),
                g = f.call([{
                    methodname: "tool_lp_list_courses_using_competency",
                    args: {
                        id: b.id
                    }
                }]);
            g[0].done(function(a) {
                c.render("tool_lp/linked_courses_summary", {
                    courses: a
                }).done(function(a) {
                    e.get_string("linkedcourses", "tool_lp").done(function(b) {
                        new i(b, a, B)
                    }).fail(d.exception)
                }).fail(d.exception)
            }).fail(d.exception)
        },
        K = function() {
            u = a("[data-region=\"competencyactions\"]").data("competency");
            if (!s) {
                s = new k(r, u.competencyframeworkid);
                s.on("save", function(b, e) {
                    var g = new n,
                        h = e.competencyIds,
                        i = [];
                    a.each(h, function(a, b) {
                        i.push({
                            methodname: "core_competency_add_related_competency",
                            args: {
                                competencyid: b,
                                relatedcompetencyid: u.id
                            }
                        })
                    });
                    i.push({
                        methodname: "tool_lp_data_for_related_competencies_section",
                        args: {
                            competencyid: u.id
                        }
                    });
                    var j = f.call(i);
                    j[i.length - 1].then(function(a) {
                        return c.render("tool_lp/related_competencies", a)
                    }).then(function(b, d) {
                        a("[data-region=\"relatedcompetencies\"]").replaceWith(b);
                        c.runTemplateJS(d);
                        V()
                    }).then(g.resolve).catch(d.exception)
                })
            }
            s.setDisallowedCompetencyIDs([u.id]);
            s.display()
        },
        L = function(b) {
            b.preventDefault();
            u = a("[data-region=\"competencyactions\"]").data("competency");
            t.setTargetCompetencyId(u.id);
            t.display()
        },
        M = function(a, b) {
            var c = {
                    id: u.id,
                    shortname: u.shortname,
                    idnumber: u.idnumber,
                    description: u.description,
                    descriptionformat: u.descriptionformat,
                    ruletype: b.ruletype,
                    ruleoutcome: b.ruleoutcome,
                    ruleconfig: b.ruleconfig
                },
                e = f.call([{
                    methodname: "core_competency_update_competency",
                    args: {
                        competency: c
                    }
                }]);
            e[0].then(function(a) {
                if (a) {
                    u.ruletype = b.ruletype;
                    u.ruleoutcome = b.ruleoutcome;
                    u.ruleconfig = b.ruleconfig;
                    Y(u)
                }
            }).catch(d.exception)
        },
        N = function() {
            var b = a("[data-region=\"competencyactions\"]").data("competency"),
                c = f.call([{
                    methodname: "core_competency_delete_competency",
                    args: {
                        id: b.id
                    }
                }, {
                    methodname: "tool_lp_data_for_competencies_manage_page",
                    args: {
                        competencyframeworkid: b.competencyframeworkid,
                        search: a("[data-region=\"filtercompetencies\"] input").val()
                    }
                }]);
            c[0].done(function(a) {
                if (!1 === a) {
                    e.get_strings([{
                        key: "competencycannotbedeleted",
                        component: "tool_lp",
                        param: b.shortname
                    }, {
                        key: "cancel",
                        component: "moodle"
                    }]).done(function(a) {
                        d.alert(null, a[0])
                    }).fail(d.exception)
                }
            }).fail(d.exception);
            c[1].done(F).fail(d.exception)
        },
        O = function() {
            var b = a("[data-region=\"competencyactions\"]").data("competency"),
                c = "deletecompetency";
            if (o.hasRule(b.parentid)) {
                c = "deletecompetencyparenthasrule"
            }
            e.get_strings([{
                key: "confirm",
                component: "moodle"
            }, {
                key: c,
                component: "tool_lp",
                param: b.shortname
            }, {
                key: "delete",
                component: "moodle"
            }, {
                key: "cancel",
                component: "moodle"
            }]).done(function(a) {
                d.confirm(a[0], a[1], a[2], a[3], N)
            }).fail(d.exception)
        },
        P = function(b) {
            b.originalEvent.dataTransfer.setData("text", a(b.target).parent().data("id"))
        },
        Q = function(a) {
            a.originalEvent.dataTransfer.dropEffect = "move";
            a.preventDefault()
        },
        R = function(b) {
            b.preventDefault();
            a(this).addClass("currentdragtarget")
        },
        S = function(b) {
            b.preventDefault();
            a(this).removeClass("currentdragtarget")
        },
        T = function(b) {
            b.preventDefault();
            p = b.originalEvent.dataTransfer.getData("text");
            q = a(b.target).parent().data("id");
            a(this).removeClass("currentdragtarget");
            A()
        },
        U = function(b) {
            b.preventDefault();
            var e = this.id.substr(11),
                g = a("[data-region=\"competencyactions\"]").data("competency"),
                h = f.call([{
                    methodname: "core_competency_remove_related_competency",
                    args: {
                        relatedcompetencyid: e,
                        competencyid: g.id
                    }
                }, {
                    methodname: "tool_lp_data_for_related_competencies_section",
                    args: {
                        competencyid: g.id
                    }
                }]);
            h[1].done(function(b) {
                c.render("tool_lp/related_competencies", b).done(function(b) {
                    a("[data-region=\"relatedcompetencies\"]").replaceWith(b);
                    V()
                }).fail(d.exception)
            }).fail(d.exception)
        },
        V = function() {
            a("[data-action=\"deleterelation\"]").on("click", U)
        },
        W = function(a) {
            if (a.id !== x) {
                x = a.id;
                f.call([{
                    methodname: "core_competency_competency_viewed",
                    args: {
                        id: a.id
                    }
                }])
            }
        },
        X = function(a) {
            var b = v[a];
            if (!b) {
                b = "competency"
            }
            return b
        },
        Y = function(e) {
            var g = a.Deferred().resolve().promise(),
                h = {};
            h.competency = e;
            h.showdeleterelatedaction = !0;
            h.showrelatedcompetencies = !0;
            h.showrule = !1;
            h.pluginbaseurl = b.relativeUrl("/admin/tool/lp");
            if (e.ruleoutcome != l.NONE) {
                g = l.getString(e.ruleoutcome).then(function(b) {
                    var c;
                    a.each(w, function(a, b) {
                        if (b.type == e.ruletype) {
                            c = b.name
                        }
                    });
                    return [b, c]
                })
            }
            g.then(function(a) {
                if ("undefined" != typeof a) {
                    h.showrule = !0;
                    h.rule = {
                        outcome: a[0],
                        type: a[1]
                    }
                }
                return h
            }).then(function(a) {
                return c.render("tool_lp/competency_summary", a)
            }).then(function(b) {
                a("[data-region=\"competencyinfo\"]").html(b);
                a("[data-action=\"deleterelation\"]").on("click", U);
                return c.render("tool_lp/loading", {})
            }).then(function(a, b) {
                c.replaceNodeContents("[data-region=\"relatedcompetencies\"]", a, b);
                return f.call([{
                    methodname: "tool_lp_data_for_related_competencies_section",
                    args: {
                        competencyid: e.id
                    }
                }])[0]
            }).then(function(a) {
                return c.render("tool_lp/related_competencies", a)
            }).then(function(b, d) {
                a("[data-region=\"relatedcompetencies\"]").replaceWith(b);
                c.runTemplateJS(d);
                V()
            }).catch(d.exception)
        },
        Z = function(a) {
            return e.get_string("taxonomy_add_" + X(a), "tool_lp")
        },
        $ = function(a) {
            return e.get_string("taxonomy_selected_" + X(a), "tool_lp")
        },
        _ = function(b, c) {
            var e = c.selected,
                f = a(e).data("id"),
                g = a("[data-region=\"competencyactions\"] [data-action=\"add\"]"),
                h = a("[data-region=\"competencyactionsmenu\"]"),
                i = a("[data-region=\"selected-competency\"]"),
                k = 0,
                l = 1;
            j.closeAll();
            if ("undefined" == typeof f) {
                a("[data-region=\"competencyinfo\"]").html(e.clone().children().remove().end().text());
                a("[data-region=\"competencyactions\"]").data("competency", null);
                h.hide()
            } else {
                var m = o.getCompetency(f);
                k = o.getCompetencyLevel(f);
                l = k + 1;
                h.show();
                a("[data-region=\"competencyactions\"]").data("competency", m);
                Y(m);
                W(m)
            }
            $(k).then(function(a) {
                i.text(a)
            }).catch(d.exception);
            Z(l).then(function(a) {
                g.show().find("[data-region=\"term\"]").text(a)
            }).catch(d.exception);
            b.preventDefault();
            return !1
        },
        aa = function(a) {
            var b = a.split(",");
            b.unshift("");
            delete b[0];
            return b
        };
    return {
        init: function init(b, c, d, e) {
            o = b;
            r = c;
            v = aa(d);
            w = e;
            a("[data-region=\"competencyactions\"] [data-action=\"add\"]").on("click", y);
            j.enhance(".competencyactionsmenu", {
                '[data-action="edit"]': E,
                '[data-action="delete"]': O,
                '[data-action="move"]': D,
                '[data-action="moveup"]': H,
                '[data-action="movedown"]': I,
                '[data-action="linkedcourses"]': J,
                '[data-action="relatedcompetencies"]': K.bind(this),
                '[data-action="competencyrules"]': L.bind(this)
            });
            a("[data-region=\"competencyactionsmenu\"]").hide();
            a("[data-region=\"competencyactions\"] [data-action=\"add\"]").hide();
            a("[data-region=\"filtercompetencies\"]").on("submit", G);
            var f = a("[data-region=\"managecompetencies\"] [data-enhance=\"tree\"]");
            f.on("dragstart", "li>span", P).on("dragover", "li>span", Q).on("dragenter", "li>span", R).on("dragleave", "li>span", S).on("drop", "li>span", T);
            b.on("selectionchanged", _);
            t = new m(o, w);
            t.on("save", M.bind(this))
        }
    }
});
define("tool_lp/actionselector", ["jquery", "core/notification", "core/ajax", "core/templates", "tool_lp/dialogue", "tool_lp/event_base"], function(a, b, c, d, e, f) {
    var g = function(a, b, c, d, e) {
        var g = this;
        f.prototype.constructor.apply(this, []);
        g._title = a;
        g._message = b;
        g._actions = c;
        g._confirm = d;
        g._cancel = e;
        g._selectedValue = null;
        g._reset()
    };
    g.prototype = Object.create(f.prototype);
    g.prototype._selectedValue = null;
    g.prototype._popup = null;
    g.prototype._title = null;
    g.prototype._message = null;
    g.prototype._actions = null;
    g.prototype._confirm = null;
    g.prototype._cancel = null;
    g.prototype._afterRender = function() {
        var b = this;
        b._find("[data-action=\"action-selector-confirm\"]").attr("disabled", "disabled");
        b._find("[data-region=\"action-selector-radio-buttons\"]").change(function() {
            b._selectedValue = a("input[type='radio']:checked").val();
            b._find("[data-action=\"action-selector-confirm\"]").removeAttr("disabled");
            b._refresh.bind(b)
        });
        b._find("[data-action=\"action-selector-cancel\"]").click(function(a) {
            a.preventDefault();
            b.close()
        });
        b._find("[data-action=\"action-selector-confirm\"]").click(function(a) {
            a.preventDefault();
            if (!b._selectedValue.length) {
                return
            }
            b._trigger("save", {
                action: b._selectedValue
            });
            b.close()
        })
    };
    g.prototype.close = function() {
        var a = this;
        a._popup.close();
        a._reset()
    };
    g.prototype.display = function() {
        var a = this;
        return a._render().then(function(b) {
            a._popup = new e(a._title, b, a._afterRender.bind(a))
        }).fail(b.exception)
    };
    g.prototype._find = function(b) {
        return a(this._popup.getContent()).find(b)
    };
    g.prototype._refresh = function() {
        var a = this;
        return a._render().then(function(b) {
            a._find("[data-region=\"action-selector\"]").replaceWith(b);
            a._afterRender()
        })
    };
    g.prototype._render = function() {
        var a = this,
            b = [];
        for (var c in a._actions) {
            b.push(a._actions[c])
        }
        var e = {
            message: a._message,
            choices: b,
            confirm: a._confirm,
            cancel: a._cancel
        };
        return d.render("tool_lp/action_selector", e)
    };
    g.prototype._reset = function() {
        this._popup = null;
        this._selectedValue = ""
    };
    return g
});
define("tool_lp/templateactions", ["jquery", "core/templates", "core/ajax", "core/notification", "core/str", "tool_lp/actionselector"], function(a, b, c, d, e, f) {
    var g = 0,
        h = 0,
        i = !0,
        j = function(c, d) {
            a("[data-region=\"managetemplates\"]").replaceWith(c);
            b.runTemplateJS(d)
        },
        k = function(a) {
            b.render("tool_lp/manage_templates_page", a).done(j).fail(d.exception)
        },
        l = function() {
            var a = c.call([{
                methodname: "core_competency_delete_template",
                args: {
                    id: h,
                    deleteplans: i
                }
            }, {
                methodname: "tool_lp_data_for_templates_manage_page",
                args: {
                    pagecontext: {
                        contextid: g
                    }
                }
            }]);
            a[1].done(k).fail(d.exception)
        },
        m = function(b) {
            b.preventDefault();
            h = a(this).attr("data-templateid");
            var e = c.call([{
                methodname: "core_competency_duplicate_template",
                args: {
                    id: h
                }
            }, {
                methodname: "tool_lp_data_for_templates_manage_page",
                args: {
                    pagecontext: {
                        contextid: g
                    }
                }
            }]);
            e[1].done(k).fail(d.exception)
        },
        n = function(b) {
            b.preventDefault();
            var g = a(this).attr("data-templateid");
            h = g;
            i = !0;
            var j = c.call([{
                methodname: "core_competency_read_template",
                args: {
                    id: h
                }
            }, {
                methodname: "core_competency_template_has_related_data",
                args: {
                    id: h
                }
            }]);
            j[0].done(function(a) {
                j[1].done(function(b) {
                    if (b) {
                        e.get_strings([{
                            key: "deletetemplate",
                            component: "tool_lp",
                            param: a.shortname
                        }, {
                            key: "deletetemplatewithplans",
                            component: "tool_lp"
                        }, {
                            key: "deleteplans",
                            component: "tool_lp"
                        }, {
                            key: "unlinkplanstemplate",
                            component: "tool_lp"
                        }, {
                            key: "confirm",
                            component: "moodle"
                        }, {
                            key: "cancel",
                            component: "moodle"
                        }]).done(function(a) {
                            var b = [{
                                    text: a[2],
                                    value: "delete"
                                }, {
                                    text: a[3],
                                    value: "unlink"
                                }],
                                c = new f(a[0], a[1], b, a[4], a[5]);
                            c.display();
                            c.on("save", function(a, b) {
                                if ("delete" != b.action) {
                                    i = !1
                                }
                                l()
                            })
                        }).fail(d.exception)
                    } else {
                        e.get_strings([{
                            key: "confirm",
                            component: "moodle"
                        }, {
                            key: "deletetemplate",
                            component: "tool_lp",
                            param: a.shortname
                        }, {
                            key: "delete",
                            component: "moodle"
                        }, {
                            key: "cancel",
                            component: "moodle"
                        }]).done(function(a) {
                            d.confirm(a[0], a[1], a[2], a[3], l)
                        }).fail(d.exception)
                    }
                }).fail(d.exception)
            }).fail(d.exception)
        };
    return {
        deleteHandler: n,
        duplicateHandler: m,
        init: function init(a) {
            g = a
        }
    }
});
define("tool_lp/user_competency_plan_popup", ["jquery", "core/notification", "core/str", "core/ajax", "core/templates", "tool_lp/dialogue"], function(a, b, c, d, e, f) {
    var g = function(b, c, d) {
        this._regionSelector = b;
        this._userCompetencySelector = c;
        this._planId = d;
        a(this._regionSelector).on("click", this._userCompetencySelector, this._handleClick.bind(this))
    };
    g.prototype._handleClick = function(c) {
        c.preventDefault();
        var e = a(c.target).closest("tr"),
            f = a(e).data("competencyid"),
            g = a(e).data("userid"),
            h = this._planId,
            i = d.call([{
                methodname: "tool_lp_data_for_user_competency_summary_in_plan",
                args: {
                    competencyid: f,
                    planid: h
                },
                done: this._contextLoaded.bind(this),
                fail: b.exception
            }]);
        i[0].then(function(a) {
            var b = "core_competency_user_competency_viewed_in_plan";
            if (a.plan.iscompleted) {
                b = "core_competency_user_competency_plan_viewed"
            }
            return d.call([{
                methodname: b,
                args: {
                    competencyid: f,
                    userid: g,
                    planid: h
                }
            }])[0]
        }).catch(b.exception)
    };
    g.prototype._contextLoaded = function(a) {
        var d = this;
        e.render("tool_lp/user_competency_summary_in_plan", a).done(function(a, g) {
            c.get_string("usercompetencysummary", "report_competency").done(function(b) {
                new f(b, a, e.runTemplateJS.bind(e, g), d._refresh.bind(d), !0)
            }).fail(b.exception)
        }).fail(b.exception)
    };
    g.prototype._refresh = function() {
        var a = this._planId;
        d.call([{
            methodname: "tool_lp_data_for_plan_page",
            args: {
                planid: a
            },
            done: this._pageContextLoaded.bind(this),
            fail: b.exception
        }])
    };
    g.prototype._pageContextLoaded = function(a) {
        var c = this;
        e.render("tool_lp/plan_page", a).done(function(a, b) {
            e.replaceNode(c._regionSelector, a, b)
        }).fail(b.exception)
    };
    g.prototype._regionSelector = null;
    g.prototype._userCompetencySelector = null;
    g.prototype._planId = null;
    return g
});
define("tool_lp/evidence_delete", ["jquery", "core/notification", "core/ajax", "core/str", "core/log"], function(a, b, c, d, e) {
    var f = {};
    return {
        register: function register(g, h) {
            if ("undefined" != typeof f[g]) {
                return
            }
            f[g] = a("body").delegate(g, "click", function(f) {
                var g = a(f.currentTarget).parents(h);
                if (!g.length || 1 < g.length) {
                    e.error("None or too many evidence container were found.");
                    return
                }
                var i = g.data("id");
                if (!i) {
                    e.error("Evidence ID was not found.");
                    return
                }
                f.preventDefault();
                f.stopPropagation();
                d.get_strings([{
                    key: "confirm",
                    component: "moodle"
                }, {
                    key: "areyousure",
                    component: "moodle"
                }, {
                    key: "delete",
                    component: "moodle"
                }, {
                    key: "cancel",
                    component: "moodle"
                }]).done(function(a) {
                    b.confirm(a[0], a[1], a[2], a[3], function() {
                        var a = c.call([{
                            methodname: "core_competency_delete_evidence",
                            args: {
                                id: i
                            }
                        }]);
                        a[0].then(function() {
                            g.remove()
                        }).fail(b.exception)
                    })
                }).fail(b.exception)
            })
        }
    }
});
define("tool_lp/grade_dialogue", ["jquery", "core/notification", "core/templates", "tool_lp/dialogue", "tool_lp/event_base", "core/str"], function(a, b, c, d, e, f) {
    var g = function(a) {
        e.prototype.constructor.apply(this, []);
        this._ratingOptions = a
    };
    g.prototype = Object.create(e.prototype);
    g.prototype._popup = null;
    g.prototype._ratingOptions = null;
    g.prototype._afterRender = function() {
        var b = this._find("[data-action=\"rate\"]"),
            c = this._find("[name=\"rating\"]"),
            d = this._find("[name=\"comment\"]");
        this._find("[data-action=\"cancel\"]").click(function(a) {
            a.preventDefault();
            this._trigger("cancelled");
            this.close()
        }.bind(this));
        c.change(function() {
            var c = a(this);
            if (!c.val()) {
                b.prop("disabled", !0)
            } else {
                b.prop("disabled", !1)
            }
        }).change();
        b.click(function(a) {
            a.preventDefault();
            var b = c.val();
            if (!b) {
                return
            }
            this._trigger("rated", {
                rating: b,
                note: d.val()
            });
            this.close()
        }.bind(this))
    };
    g.prototype.close = function() {
        this._popup.close();
        this._popup = null
    };
    g.prototype.display = function() {
        return a.when(f.get_string("rate", "tool_lp"), this._render()).then(function(a, b) {
            this._popup = new d(a, b[0], this._afterRender.bind(this));
            return this._popup
        }.bind(this)).catch(b.exception)
    };
    g.prototype._find = function(b) {
        return a(this._popup.getContent()).find(b)
    };
    g.prototype._render = function() {
        var a = {
            cangrade: this._canGrade,
            ratings: this._ratingOptions
        };
        return c.render("tool_lp/competency_grader", a)
    };
    return g
});
define("tool_lp/planactions", ["jquery", "core/templates", "core/ajax", "core/notification", "core/str", "tool_lp/menubar", "tool_lp/dialogue"], function(a, b, c, d, e, f, g) {
    var h = function(a) {
        this._type = a;
        if ("plan" === a) {
            this._region = "[data-region=\"plan-page\"]";
            this._planNode = "[data-region=\"plan-page\"]";
            this._template = "tool_lp/plan_page";
            this._contextMethod = "tool_lp_data_for_plan_page"
        } else if ("plans" === a) {
            this._region = "[data-region=\"plans\"]";
            this._planNode = "[data-region=\"plan-node\"]";
            this._template = "tool_lp/plans_page";
            this._contextMethod = "tool_lp_data_for_plans_page"
        } else {
            throw new TypeError("Unexpected type.")
        }
    };
    h.prototype._contextMethod = null;
    h.prototype._planNode = null;
    h.prototype._region = null;
    h.prototype._template = null;
    h.prototype._type = null;
    h.prototype._getContextArgs = function(a) {
        var b = this,
            c = {};
        if ("plan" === b._type) {
            c = {
                planid: a.id
            }
        } else if ("plans" === b._type) {
            c = {
                userid: a.userid
            }
        }
        return c
    };
    h.prototype.refresh = function(b) {
        var c = this._findPlanData(a(b));
        this._callAndRefresh([], c)
    };
    h.prototype._renderView = function(c) {
        var d = this;
        return b.render(d._template, c).then(function(c, e) {
            a(d._region).replaceWith(c);
            b.runTemplateJS(e)
        })
    };
    h.prototype._callAndRefresh = function(b, e) {
        var f = "tool_lp/planactions:_callAndRefresh-" + Math.floor(Math.random() * Math.floor(1e3));
        M.util.js_pending(f);
        var g = this;
        b.push({
            methodname: g._contextMethod,
            args: g._getContextArgs(e)
        });
        return a.when.apply(a, c.call(b)).then(function() {
            return g._renderView(arguments[arguments.length - 1])
        }).fail(d.exception).always(function() {
            return M.util.js_complete(f)
        })
    };
    h.prototype._doDelete = function(a) {
        var b = this,
            c = [{
                methodname: "core_competency_delete_plan",
                args: {
                    id: a.id
                }
            }];
        b._callAndRefresh(c, a)
    };
    h.prototype.deletePlan = function(a) {
        var b = this,
            f;
        f = c.call([{
            methodname: "core_competency_read_plan",
            args: {
                id: a.id
            }
        }]);
        f[0].done(function(c) {
            e.get_strings([{
                key: "confirm",
                component: "moodle"
            }, {
                key: "deleteplan",
                component: "tool_lp",
                param: c.name
            }, {
                key: "delete",
                component: "moodle"
            }, {
                key: "cancel",
                component: "moodle"
            }]).done(function(c) {
                d.confirm(c[0], c[1], c[2], c[3], function() {
                    b._doDelete(a)
                })
            }).fail(d.exception)
        }).fail(d.exception)
    };
    h.prototype._doReopenPlan = function(a) {
        var b = this,
            c = [{
                methodname: "core_competency_reopen_plan",
                args: {
                    planid: a.id
                }
            }];
        b._callAndRefresh(c, a)
    };
    h.prototype.reopenPlan = function(a) {
        var b = this,
            f = c.call([{
                methodname: "core_competency_read_plan",
                args: {
                    id: a.id
                }
            }]);
        f[0].done(function(c) {
            e.get_strings([{
                key: "confirm",
                component: "moodle"
            }, {
                key: "reopenplanconfirm",
                component: "tool_lp",
                param: c.name
            }, {
                key: "reopenplan",
                component: "tool_lp"
            }, {
                key: "cancel",
                component: "moodle"
            }]).done(function(c) {
                d.confirm(c[0], c[1], c[2], c[3], function() {
                    b._doReopenPlan(a)
                })
            }).fail(d.exception)
        }).fail(d.exception)
    };
    h.prototype._doCompletePlan = function(a) {
        var b = this,
            c = [{
                methodname: "core_competency_complete_plan",
                args: {
                    planid: a.id
                }
            }];
        b._callAndRefresh(c, a)
    };
    h.prototype.completePlan = function(a) {
        var b = this,
            f = c.call([{
                methodname: "core_competency_read_plan",
                args: {
                    id: a.id
                }
            }]);
        f[0].done(function(c) {
            e.get_strings([{
                key: "confirm",
                component: "moodle"
            }, {
                key: "completeplanconfirm",
                component: "tool_lp",
                param: c.name
            }, {
                key: "completeplan",
                component: "tool_lp"
            }, {
                key: "cancel",
                component: "moodle"
            }]).done(function(c) {
                d.confirm(c[0], c[1], c[2], c[3], function() {
                    b._doCompletePlan(a)
                })
            }).fail(d.exception)
        }).fail(d.exception)
    };
    h.prototype._doUnlinkPlan = function(a) {
        var b = this,
            c = [{
                methodname: "core_competency_unlink_plan_from_template",
                args: {
                    planid: a.id
                }
            }];
        b._callAndRefresh(c, a)
    };
    h.prototype.unlinkPlan = function(a) {
        var b = this,
            f = c.call([{
                methodname: "core_competency_read_plan",
                args: {
                    id: a.id
                }
            }]);
        f[0].done(function(c) {
            e.get_strings([{
                key: "confirm",
                component: "moodle"
            }, {
                key: "unlinkplantemplateconfirm",
                component: "tool_lp",
                param: c.name
            }, {
                key: "unlinkplantemplate",
                component: "tool_lp"
            }, {
                key: "cancel",
                component: "moodle"
            }]).done(function(c) {
                d.confirm(c[0], c[1], c[2], c[3], function() {
                    b._doUnlinkPlan(a)
                })
            }).fail(d.exception)
        }).fail(d.exception)
    };
    h.prototype._doRequestReview = function(a) {
        var b = [{
            methodname: "core_competency_plan_request_review",
            args: {
                id: a.id
            }
        }];
        this._callAndRefresh(b, a)
    };
    h.prototype.requestReview = function(a) {
        this._doRequestReview(a)
    };
    h.prototype._doCancelReviewRequest = function(a) {
        var b = [{
            methodname: "core_competency_plan_cancel_review_request",
            args: {
                id: a.id
            }
        }];
        this._callAndRefresh(b, a)
    };
    h.prototype.cancelReviewRequest = function(a) {
        this._doCancelReviewRequest(a)
    };
    h.prototype._doStartReview = function(a) {
        var b = [{
            methodname: "core_competency_plan_start_review",
            args: {
                id: a.id
            }
        }];
        this._callAndRefresh(b, a)
    };
    h.prototype.startReview = function(a) {
        this._doStartReview(a)
    };
    h.prototype._doStopReview = function(a) {
        var b = [{
            methodname: "core_competency_plan_stop_review",
            args: {
                id: a.id
            }
        }];
        this._callAndRefresh(b, a)
    };
    h.prototype.stopReview = function(a) {
        this._doStopReview(a)
    };
    h.prototype._doApprove = function(a) {
        var b = [{
            methodname: "core_competency_approve_plan",
            args: {
                id: a.id
            }
        }];
        this._callAndRefresh(b, a)
    };
    h.prototype.approve = function(a) {
        this._doApprove(a)
    };
    h.prototype._doUnapprove = function(a) {
        var b = [{
            methodname: "core_competency_unapprove_plan",
            args: {
                id: a.id
            }
        }];
        this._callAndRefresh(b, a)
    };
    h.prototype.unapprove = function(a) {
        this._doUnapprove(a)
    };
    h.prototype._showLinkedCoursesHandler = function(f) {
        f.preventDefault();
        var h = a(f.target).data("id"),
            i = c.call([{
                methodname: "tool_lp_list_courses_using_competency",
                args: {
                    id: h
                }
            }]);
        i[0].done(function(a) {
            b.render("tool_lp/linked_courses_summary", {
                courses: a
            }).done(function(a) {
                e.get_string("linkedcourses", "tool_lp").done(function(b) {
                    new g(b, a)
                }).fail(d.exception)
            }).fail(d.exception)
        }).fail(d.exception)
    };
    h.prototype._eventHandler = function(b, c) {
        c.preventDefault();
        var d = this._findPlanData(a(c.target));
        this[b](d)
    };
    h.prototype._findPlanData = function(b) {
        var c = b.parentsUntil(a(this._region).parent(), this._planNode),
            d;
        if (1 != c.length) {
            throw new Error("The plan node was not located.")
        }
        d = c.data();
        if ("undefined" == typeof d || "undefined" == typeof d.id) {
            throw new Error("Plan data could not be found.")
        }
        return d
    };
    h.prototype.enhanceMenubar = function(a) {
        f.enhance(a, {
            '[data-action="plan-delete"]': this._eventHandler.bind(this, "deletePlan"),
            '[data-action="plan-complete"]': this._eventHandler.bind(this, "completePlan"),
            '[data-action="plan-reopen"]': this._eventHandler.bind(this, "reopenPlan"),
            '[data-action="plan-unlink"]': this._eventHandler.bind(this, "unlinkPlan"),
            '[data-action="plan-request-review"]': this._eventHandler.bind(this, "requestReview"),
            '[data-action="plan-cancel-review-request"]': this._eventHandler.bind(this, "cancelReviewRequest"),
            '[data-action="plan-start-review"]': this._eventHandler.bind(this, "startReview"),
            '[data-action="plan-stop-review"]': this._eventHandler.bind(this, "stopReview"),
            '[data-action="plan-approve"]': this._eventHandler.bind(this, "approve"),
            '[data-action="plan-unapprove"]': this._eventHandler.bind(this, "unapprove")
        })
    };
    h.prototype.registerEvents = function() {
        var b = a(this._region);
        b.find("[data-action=\"plan-delete\"]").click(this._eventHandler.bind(this, "deletePlan"));
        b.find("[data-action=\"plan-complete\"]").click(this._eventHandler.bind(this, "completePlan"));
        b.find("[data-action=\"plan-reopen\"]").click(this._eventHandler.bind(this, "reopenPlan"));
        b.find("[data-action=\"plan-unlink\"]").click(this._eventHandler.bind(this, "unlinkPlan"));
        b.find("[data-action=\"plan-request-review\"]").click(this._eventHandler.bind(this, "requestReview"));
        b.find("[data-action=\"plan-cancel-review-request\"]").click(this._eventHandler.bind(this, "cancelReviewRequest"));
        b.find("[data-action=\"plan-start-review\"]").click(this._eventHandler.bind(this, "startReview"));
        b.find("[data-action=\"plan-stop-review\"]").click(this._eventHandler.bind(this, "stopReview"));
        b.find("[data-action=\"plan-approve\"]").click(this._eventHandler.bind(this, "approve"));
        b.find("[data-action=\"plan-unapprove\"]").click(this._eventHandler.bind(this, "unapprove"));
        b.find("[data-action=\"find-courses-link\"]").click(this._showLinkedCoursesHandler.bind(this))
    };
    return h
});
define("tool_policy/acceptances_filter_datasource", ["jquery", "core/ajax", "core/notification"], function(a, b, c) {
    return {
        list: function list(b, c) {
            var d = [],
                e = a(b),
                f = a(b).data("originaloptionsjson"),
                g = e.val();
            a.each(f, function(b, e) {
                if ("" !== a.trim(c) && -1 === e.label.toLocaleLowerCase().indexOf(c.toLocaleLowerCase())) {
                    return !0
                }
                if (-1 < a.inArray(e.value, g)) {
                    return !0
                }
                d.push(e);
                return !0
            });
            var h = new a.Deferred;
            h.resolve(d);
            return h.promise()
        },
        processResults: function processResults(b, c) {
            var d = [];
            a.each(c, function(a, b) {
                d.push({
                    value: b.value,
                    label: b.label
                })
            });
            return d
        },
        transport: function transport(a, b, d) {
            this.list(a, b).then(d).catch(c.exception)
        }
    }
});
define("tool_policy/jquery-eu-cookie-law-popup", ["jquery"], function(a) {
    if (!window.console) window.console = {};
    if (!window.console.log) window.console.log = function() {};
    a.fn.euCookieLawPopup = function() {
        var b = this;
        b.params = {
            cookiePolicyUrl: "/?cookie-policy",
            popupPosition: "top",
            colorStyle: "default",
            compactStyle: !1,
            popupTitle: "This website is using cookies",
            popupText: "We use cookies to ensure that we give you the best experience on our website. If you continue without changing your settings, we'll assume that you are happy to receive all cookies on this website.",
            buttonContinueTitle: "Continue",
            buttonLearnmoreTitle: "Learn&nbsp;more",
            buttonLearnmoreOpenInNewWindow: !0,
            agreementExpiresInDays: 30,
            autoAcceptCookiePolicy: !1,
            htmlMarkup: null
        };
        b.vars = {
            INITIALISED: !1,
            HTML_MARKUP: null,
            COOKIE_NAME: "EU_COOKIE_LAW_CONSENT"
        };
        var c = function(c, d, e) {
                if (c) {
                    var f = a(c).attr("class") ? a(c).attr("class") : "";
                    if (-1 < f.indexOf("eupopup-top")) {
                        b.params.popupPosition = "top"
                    } else if (-1 < f.indexOf("eupopup-fixedtop")) {
                        b.params.popupPosition = "fixedtop"
                    } else if (-1 < f.indexOf("eupopup-bottomright")) {
                        b.params.popupPosition = "bottomright"
                    } else if (-1 < f.indexOf("eupopup-bottomleft")) {
                        b.params.popupPosition = "bottomleft"
                    } else if (-1 < f.indexOf("eupopup-bottom")) {
                        b.params.popupPosition = "bottom"
                    } else if (-1 < f.indexOf("eupopup-block")) {
                        b.params.popupPosition = "block"
                    }
                    if (-1 < f.indexOf("eupopup-color-default")) {
                        b.params.colorStyle = "default"
                    } else if (-1 < f.indexOf("eupopup-color-inverse")) {
                        b.params.colorStyle = "inverse"
                    }
                    if (-1 < f.indexOf("eupopup-style-compact")) {
                        b.params.compactStyle = !0
                    }
                }
                if (d) {
                    b.params.htmlMarkup = d
                }
                if (e) {
                    if ("undefined" != typeof e.cookiePolicyUrl) {
                        b.params.cookiePolicyUrl = e.cookiePolicyUrl
                    }
                    if ("undefined" != typeof e.popupPosition) {
                        b.params.popupPosition = e.popupPosition
                    }
                    if ("undefined" != typeof e.colorStyle) {
                        b.params.colorStyle = e.colorStyle
                    }
                    if ("undefined" != typeof e.popupTitle) {
                        b.params.popupTitle = e.popupTitle
                    }
                    if ("undefined" != typeof e.popupText) {
                        b.params.popupText = e.popupText
                    }
                    if ("undefined" != typeof e.buttonContinueTitle) {
                        b.params.buttonContinueTitle = e.buttonContinueTitle
                    }
                    if ("undefined" != typeof e.buttonLearnmoreTitle) {
                        b.params.buttonLearnmoreTitle = e.buttonLearnmoreTitle
                    }
                    if ("undefined" != typeof e.buttonLearnmoreOpenInNewWindow) {
                        b.params.buttonLearnmoreOpenInNewWindow = e.buttonLearnmoreOpenInNewWindow
                    }
                    if ("undefined" != typeof e.agreementExpiresInDays) {
                        b.params.agreementExpiresInDays = e.agreementExpiresInDays
                    }
                    if ("undefined" != typeof e.autoAcceptCookiePolicy) {
                        b.params.autoAcceptCookiePolicy = e.autoAcceptCookiePolicy
                    }
                    if ("undefined" != typeof e.htmlMarkup) {
                        b.params.htmlMarkup = e.htmlMarkup
                    }
                }
            },
            d = function() {
                if (b.params.htmlMarkup) {
                    return b.params.htmlMarkup
                }
                var a = "<div class=\"eupopup-container eupopup-container-" + b.params.popupPosition + (b.params.compactStyle ? " eupopup-style-compact" : "") + " eupopup-color-" + b.params.colorStyle + "\"><div class=\"eupopup-head\">" + b.params.popupTitle + "</div><div class=\"eupopup-body\">" + b.params.popupText + "</div><div class=\"eupopup-buttons\"><a href=\"#\" class=\"eupopup-button eupopup-button_1\">" + b.params.buttonContinueTitle + "</a><a href=\"" + b.params.cookiePolicyUrl + "\"" + (b.params.buttonLearnmoreOpenInNewWindow ? " target=_blank " : "") + " class=\"eupopup-button eupopup-button_2\">" + b.params.buttonLearnmoreTitle + "</a><div class=\"clearfix\"></div></div><a href=\"#\" class=\"eupopup-closebutton\">x</a></div>";
                return a
            },
            e = function(c) {
                var e = new Date,
                    d = 1e3 * (60 * (60 * (24 * b.params.agreementExpiresInDays)));
                e.setTime(e.getTime() + d);
                var f = "expires=" + e.toGMTString();
                document.cookie = b.vars.COOKIE_NAME + "=" + c + "; " + f + ";path=/";
                a(document).trigger("user_cookie_consent_changed", {
                    consent: c
                })
            },
            f = function() {
                for (var a = !1, d = document.cookie.split(";"), e = 0, f; e < d.length; e++) {
                    f = d[e].trim();
                    if (0 == f.indexOf(b.vars.COOKIE_NAME)) {
                        a = f.substring(b.vars.COOKIE_NAME.length + 1, f.length)
                    }
                }
                return a
            },
            g = function() {
                a(".eupopup-container").animate({
                    opacity: 0,
                    height: 0
                }, 200, function() {
                    a(".eupopup-container").hide(0)
                })
            };
        return {
            init: function init(h) {
                c(a(".eupopup").first(), a(".eupopup-markup").html(), h);
                if (f()) {
                    a(document).trigger("user_cookie_already_accepted", {
                        consent: !0
                    });
                    return
                }
                if (b.vars.INITIALISED) {
                    return
                }
                b.vars.INITIALISED = !0;
                b.vars.HTML_MARKUP = d();
                if (0 < a(".eupopup-block").length) {
                    a(".eupopup-block").append(b.vars.HTML_MARKUP)
                } else {
                    a("BODY").append(b.vars.HTML_MARKUP)
                }
                a(".eupopup-button_1").click(function() {
                    e(!0);
                    g();
                    return !1
                });
                a(".eupopup-closebutton").click(function() {
                    e(!0);
                    g();
                    return !1
                });
                a(".eupopup-container").show();
                if (b.params.autoAcceptCookiePolicy) {
                    e(!0)
                }
            }
        }
    }
});
define("tool_policy/acceptances_filter", ["jquery", "core/form-autocomplete", "core/str", "core/notification"], function(a, b, c, d) {
    var e = {
            UNIFIED_FILTERS: "#unified-filters"
        },
        f = function init() {
            M.util.js_pending("acceptances_filter_datasource");
            c.get_strings([{
                key: "filterplaceholder",
                component: "tool_policy"
            }, {
                key: "nofiltersapplied",
                component: "tool_policy"
            }]).done(function(a) {
                var c = a[0],
                    f = a[1];
                b.enhance(e.UNIFIED_FILTERS, !0, "tool_policy/acceptances_filter_datasource", c, !1, !0, f, !0).then(function() {
                    M.util.js_complete("acceptances_filter_datasource")
                }).fail(d.exception)
            }).fail(d.exception);
            var f = a(e.UNIFIED_FILTERS).val();
            a(e.UNIFIED_FILTERS).on("change", function() {
                var b = a(this).val(),
                    c = [],
                    d = [],
                    e = !1;
                a.each(b, function(a, b) {
                    var f = b.split(":", 2);
                    if (2 !== f.length) {
                        d.push(b);
                        return !0
                    }
                    var g = f[0],
                        h = f[1];
                    if ("undefined" != typeof c[g]) {
                        e = !0
                    }
                    c[g] = h;
                    return !0
                });
                if (e) {
                    var g = [];
                    for (var h in c) {
                        g.push(h + ":" + c[h])
                    }
                    g = g.concat(d);
                    a(this).val(g)
                }
                if (f.join(",") != b.join(",")) {
                    this.form.submit()
                }
            })
        },
        g = function getForm() {
            return a(e.UNIFIED_FILTERS).closest("form")
        };
    return {
        init: function init() {
            f()
        },
        getForm: function getForm() {
            return g()
        }
    }
});
define("tool_policy/policyactions", ["jquery", "core/ajax", "core/notification", "core/modal_factory", "core/modal_events"], function(a, b, c, d, e) {
    var f = function(a) {
        this.registerEvents(a)
    };
    f.prototype.registerEvents = function(f) {
        f.on("click", function(f) {
            f.preventDefault();
            var g = a(this).data("versionid"),
                h = a(this).data("behalfid"),
                i = a.Deferred(),
                j = a.Deferred(),
                k = d.create({
                    title: i,
                    body: j,
                    large: !0
                }).then(function(a) {
                    a.getRoot().on(e.hidden, function() {
                        a.destroy()
                    });
                    return a
                }).then(function(a) {
                    a.show();
                    return a
                }).catch(c.exception),
                l = b.call([{
                    methodname: "tool_policy_get_policy_version",
                    args: {
                        versionid: g,
                        behalfid: h
                    }
                }]);
            a.when(l[0]).then(function(a) {
                if (a.result.policy) {
                    i.resolve(a.result.policy.name);
                    j.resolve(a.result.policy.content);
                    return a
                } else {
                    throw new Error(a.warnings[0].message)
                }
            }).catch(function(a) {
                k.then(function(a) {
                    a.hide();
                    a.destroy();
                    return a
                }).catch(c.exception);
                return c.addNotification({
                    message: a,
                    type: "error"
                })
            })
        })
    };
    return {
        init: function init(b) {
            b = a(b);
            return new f(b)
        }
    }
});
define("tool_policy/managedocsactions", ["jquery", "core/log", "core/config", "core/str", "core/modal_factory", "core/modal_events"], function(a, b, c, d, e, f) {
    "use strict";
    var h = {
        LINKS: "[data-action]",
        MAKE_CURRENT: "[data-action=\"makecurrent\"]",
        INACTIVATE: "[data-action=\"inactivate\"]",
        DELETE: "[data-action=\"delete\"]"
    };

    function g(a) {
        this.base = a;
        this.initEvents()
    }
    g.prototype.initEvents = function() {
        var g = this;
        g.base.on("click", h.LINKS, function(g) {
            g.stopPropagation();
            var i = a(g.currentTarget),
                j, k;
            if (i.is(h.MAKE_CURRENT)) {
                j = d.get_strings([{
                    key: "activating",
                    component: "tool_policy"
                }, {
                    key: "activateconfirm",
                    component: "tool_policy",
                    param: {
                        name: i.closest("[data-policy-name]").attr("data-policy-name"),
                        revision: i.closest("[data-policy-revision]").attr("data-policy-revision")
                    }
                }, {
                    key: "activateconfirmyes",
                    component: "tool_policy"
                }])
            } else if (i.is(h.INACTIVATE)) {
                j = d.get_strings([{
                    key: "inactivating",
                    component: "tool_policy"
                }, {
                    key: "inactivatingconfirm",
                    component: "tool_policy",
                    param: {
                        name: i.closest("[data-policy-name]").attr("data-policy-name"),
                        revision: i.closest("[data-policy-revision]").attr("data-policy-revision")
                    }
                }, {
                    key: "inactivatingconfirmyes",
                    component: "tool_policy"
                }])
            } else if (i.is(h.DELETE)) {
                j = d.get_strings([{
                    key: "deleting",
                    component: "tool_policy"
                }, {
                    key: "deleteconfirm",
                    component: "tool_policy",
                    param: {
                        name: i.closest("[data-policy-name]").attr("data-policy-name"),
                        revision: i.closest("[data-policy-revision]").attr("data-policy-revision")
                    }
                }, {
                    key: "delete",
                    component: "core"
                }])
            } else {
                b.error("unknown action type detected", "tool_policy/managedocsactions");
                return
            }
            g.preventDefault();
            j.then(function(a) {
                k = a;
                return e.create({
                    title: k[0],
                    body: k[1],
                    type: e.types.SAVE_CANCEL
                })
            }).then(function(a) {
                a.setSaveButtonText(k[2]);
                a.getRoot().on(f.save, function() {
                    window.location.href = i.attr("href") + "&sesskey=" + c.sesskey + "&confirm=1"
                });
                a.getRoot().on(f.hidden, function() {
                    a.destroy()
                });
                a.show();
                return !0
            }).catch(function(a) {
                b.error(a);
                return !1
            })
        })
    };
    return {
        init: function init(b) {
            var c = a(document.getElementById(b));
            if (c.length) {
                return new g(c)
            } else {
                throw new Error("managedocsactions: Invalid base element identifier")
            }
        }
    }
});
define("tool_policy/acceptmodal", ["jquery", "core/str", "core/modal_factory", "core/modal_events", "core/notification", "core/fragment", "core/ajax", "core/yui"], function(a, b, c, d, f, g, h, i) {
    "use strict";
    var e = function(a) {
        this.contextid = a;
        this.init()
    };
    e.prototype.modal = null;
    e.prototype.contextid = -1;
    e.prototype.currentTrigger = null;
    e.prototype.triggers = {
        SINGLE: "a[data-action=acceptmodal]",
        BULK: "input[data-action=acceptmodal]"
    };
    e.prototype.init = function() {
        a(this.triggers.SINGLE).on("click", function(b) {
            b.preventDefault();
            this.currentTrigger = a(b.currentTarget);
            var c = a(b.currentTarget).attr("href"),
                d = c.slice(c.indexOf("?") + 1);
            this.showFormModal(d)
        }.bind(this));
        a(this.triggers.BULK).on("click", function(c) {
            c.preventDefault();
            this.currentTrigger = a(c.currentTarget);
            var d = a(c.currentTarget).closest("form");
            if (d.find("input[type=checkbox][name=\"userids[]\"]:checked").length) {
                var e = d.serialize();
                this.showFormModal(e)
            } else {
                b.get_strings([{
                    key: "notice"
                }, {
                    key: "selectusersforconsent",
                    component: "tool_policy"
                }, {
                    key: "ok"
                }]).then(function(a) {
                    f.alert(a[0], a[1], a[2])
                }).fail(f.exception)
            }
        }.bind(this))
    };
    e.prototype.showFormModal = function(a) {
        for (var d, e = a.split("&"), g = 0, h; g < e.length; g++) {
            h = e[g].split("=");
            if ("action" == h[0]) {
                d = h[1]
            }
        }
        b.get_strings([{
            key: "statusformtitleaccept",
            component: "tool_policy"
        }, {
            key: "iagreetothepolicy",
            component: "tool_policy"
        }, {
            key: "statusformtitlerevoke",
            component: "tool_policy"
        }, {
            key: "irevokethepolicy",
            component: "tool_policy"
        }, {
            key: "statusformtitledecline",
            component: "tool_policy"
        }, {
            key: "declinethepolicy",
            component: "tool_policy"
        }]).then(function(b) {
            var e, f;
            if ("accept" == d) {
                e = b[0];
                f = b[1]
            } else if ("revoke" == d) {
                e = b[2];
                f = b[3]
            } else if ("decline" == d) {
                e = b[4];
                f = b[5]
            }
            return c.create({
                type: c.types.SAVE_CANCEL,
                title: e,
                body: ""
            }).done(function(b) {
                this.modal = b;
                this.setupFormModal(a, f)
            }.bind(this))
        }.bind(this)).catch(f.exception)
    };
    e.prototype.setupFormModal = function(a, b) {
        var c = this.modal;
        c.setLarge();
        c.setSaveButtonText(b);
        c.getRoot().on(d.hidden, this.destroy.bind(this));
        c.setBody(this.getBody(a));
        c.getRoot().on(d.save, this.submitForm.bind(this));
        c.getRoot().on("submit", "form", this.submitFormAjax.bind(this));
        c.show()
    };
    e.prototype.getBody = function(a) {
        if ("undefined" == typeof a) {
            a = {}
        }
        var b = {
            jsonformdata: JSON.stringify(a)
        };
        return g.loadFragment("tool_policy", "accept_on_behalf", this.contextid, b)
    };
    e.prototype.submitFormAjax = function(a) {
        a.preventDefault();
        var b = this.modal.getRoot().find("form").serialize(),
            c = h.call([{
                methodname: "tool_policy_submit_accept_on_behalf",
                args: {
                    jsonformdata: JSON.stringify(b)
                }
            }]);
        c[0].done(function(a) {
            if (a.validationerrors) {
                this.modal.setBody(this.getBody(b))
            } else {
                this.close()
            }
        }.bind(this)).fail(f.exception)
    };
    e.prototype.submitForm = function(a) {
        a.preventDefault();
        this.modal.getRoot().find("form").submit()
    };
    e.prototype.close = function() {
        this.destroy();
        document.location.reload()
    };
    e.prototype.destroy = function() {
        i.use("moodle-core-formchangechecker", function() {
            M.core_formchangechecker.reset_form_dirty_state()
        });
        this.modal.destroy();
        this.currentTrigger.focus()
    };
    return {
        getInstance: function getInstance(a) {
            return new e(a)
        }
    }
});
define("tool_templatelibrary/display", ["jquery", "core/ajax", "core/log", "core/notification", "core/templates", "core/config", "core/str"], function(a, b, c, d, e, f, g) {
    var h = function(a, b) {
            if (!a) {
                return !1
            }
            var c = "@template " + b,
                d = 0,
                e = [];
            e = a.match(/{{!([\s\S]*?)}}/g);
            if (null !== e) {
                for (d = 0; d < e.length; d++) {
                    var f = e[d],
                        g = f.indexOf(c);
                    if (-1 !== g) {
                        var h = g + c.length + 1;
                        f = f.substr(h, f.length - 2 - h);
                        return f
                    }
                }
            }
            return !1
        },
        i = function(b, f, i) {
            g.get_string("templateselected", "tool_templatelibrary", b).done(function(b) {
                a("[data-region=\"displaytemplateheader\"]").text(b)
            }).fail(d.exception);
            var j = h(f, b);
            if (!1 === j) {
                j = h(i, b)
            }
            if (j) {
                f = j
            }
            a("[data-region=\"displaytemplatesource\"]").text(f);
            var k = f.match(/Example context \(json\):([\s\S]*)/),
                l = !1;
            if (k) {
                var m = k[1].trim();
                try {
                    l = a.parseJSON(m)
                } catch (a) {
                    c.debug("Could not parse json example context for template.");
                    c.debug(a)
                }
            }
            if (l) {
                e.render(b, l).done(function(b, c) {
                    e.replaceNodeContents(a("[data-region=\"displaytemplateexample\"]"), b, c)
                }).fail(d.exception)
            } else {
                g.get_string("templatehasnoexample", "tool_templatelibrary").done(function(b) {
                    a("[data-region=\"displaytemplateexample\"]").text(b)
                }).fail(d.exception)
            }
        },
        j = function(c) {
            var e = c.split("/"),
                g = e.shift(),
                h = e.join("/"),
                j = b.call([{
                    methodname: "core_output_load_template",
                    args: {
                        component: g,
                        template: h,
                        themename: f.theme,
                        includecomments: !0
                    }
                }, {
                    methodname: "tool_templatelibrary_load_canonical_template",
                    args: {
                        component: g,
                        template: h
                    }
                }], !0, !1);
            a.when.apply(a, j).done(function(a, b) {
                i(c, a, b)
            }).fail(d.exception)
        };
    a("[data-region=\"list-templates\"]").on("click", "[data-templatename]", function(b) {
        var c = a(this).data("templatename");
        b.preventDefault();
        j(c)
    });
    return {}
});
define("tool_templatelibrary/search", ["jquery", "core/ajax", "core/log", "core/notification", "core/templates", "core/config"], function(a, b, c, d, e, f) {
    var g = function(b) {
            e.render("tool_templatelibrary/search_results", {
                templates: b
            }).done(function(b, c) {
                e.replaceNode(a("[data-region=\"searchresults\"]"), b, c)
            }).fail(d.exception)
        },
        h = function(c) {
            var e = a("[data-field=\"component\"]").val(),
                f = a("[data-field=\"search\"]").val();
            document.location.hash = f;
            b.call([{
                methodname: "tool_templatelibrary_list_templates",
                args: {
                    component: e,
                    search: f,
                    themename: c
                },
                done: g,
                fail: d.exception
            }], !0, !1)
        },
        i = null,
        j = function(a, b) {
            if (null !== i) {
                window.clearTimeout(i)
            }
            i = window.setTimeout(function() {
                a();
                i = null
            }, b)
        },
        k = function() {
            j(h.bind(this, f.theme), 400)
        };
    a("[data-region=\"list-templates\"]").on("change", "[data-field=\"component\"]", k);
    a("[data-region=\"list-templates\"]").on("input", "[data-field=\"search\"]", k);
    a("[data-field=\"search\"]").val(document.location.hash.replace("#", ""));
    h(f.theme);
    return {}
});
define("tool_usertours/managesteps", ["jquery", "core/str", "core/notification"], function(a, b, c) {
    var d = {
        removeStep: function removeStep(d) {
            d.preventDefault();
            var e = a(d.currentTarget).attr("href");
            b.get_strings([{
                key: "confirmstepremovaltitle",
                component: "tool_usertours"
            }, {
                key: "confirmstepremovalquestion",
                component: "tool_usertours"
            }, {
                key: "yes",
                component: "moodle"
            }, {
                key: "no",
                component: "moodle"
            }]).then(function(a) {
                c.confirm(a[0], a[1], a[2], a[3], function() {
                    window.location = e
                })
            }).catch()
        },
        setup: function setup() {
            a("body").delegate("[data-action=\"delete\"]", "click", d.removeStep)
        }
    };
    return {
        setup: d.setup
    }
});
define("tool_usertours/tour", ["exports", "jquery", "core/popper"], function(a, b, c) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    a.default = void 0;
    b = d(b);
    c = d(c);

    function d(a) {
        return a && a.__esModule ? a : {
            default: a
        }
    }

    function e(a) {
        if ("function" == typeof Symbol && "symbol" == typeof Symbol.iterator) {
            e = function(a) {
                return typeof a
            }
        } else {
            e = function(a) {
                return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
            }
        }
        return e(a)
    }

    function f(a, b) {
        if (!(a instanceof b)) {
            throw new TypeError("Cannot call a class as a function")
        }
    }

    function g(a, b) {
        for (var c = 0, d; c < b.length; c++) {
            d = b[c];
            d.enumerable = d.enumerable || !1;
            d.configurable = !0;
            if ("value" in d) d.writable = !0;
            Object.defineProperty(a, d.key, d)
        }
    }

    function h(a, b, c) {
        if (b) g(a.prototype, b);
        if (c) g(a, c);
        return a
    }
    var i = function() {
        function a(b) {
            f(this, a);
            this.init(b)
        }
        h(a, [{
            key: "init",
            value: function init(a) {
                this.eventHandlers = {};
                this.reset();
                this.originalConfiguration = a || {};
                this.configure.apply(this, arguments);
                try {
                    this.storage = window.sessionStorage;
                    this.storageKey = "tourstate_" + this.tourName
                } catch (a) {
                    this.storage = !1;
                    this.storageKey = ""
                }
                return this
            }
        }, {
            key: "reset",
            value: function reset() {
                this.hide();
                this.eventHandlers = [];
                this.resetStepListeners();
                this.originalConfiguration = {};
                this.steps = [];
                this.currentStepNumber = 0;
                return this
            }
        }, {
            key: "configure",
            value: function configure(a) {
                var b = this;
                if ("object" === e(a)) {
                    if ("undefined" != typeof a.tourName) {
                        this.tourName = a.tourName
                    }
                    if (a.eventHandlers) {
                        var c = function(c) {
                            a.eventHandlers[c].forEach(function(a) {
                                this.addEventHandler(c, a)
                            }, b)
                        };
                        for (var d in a.eventHandlers) {
                            c(d)
                        }
                    }
                    this.resetStepDefaults(!0);
                    if ("object" === e(a.steps)) {
                        this.steps = a.steps
                    }
                    if ("undefined" != typeof a.template) {
                        this.templateContent = a.template
                    }
                }
                this.checkMinimumRequirements();
                return this
            }
        }, {
            key: "checkMinimumRequirements",
            value: function checkMinimumRequirements() {
                if (!this.tourName) {
                    throw new Error("Tour Name required")
                }
                if (!this.steps || !this.steps.length) {
                    throw new Error("Steps must be specified")
                }
            }
        }, {
            key: "resetStepDefaults",
            value: function resetStepDefaults(a) {
                if ("undefined" == typeof a) {
                    a = !0
                }
                this.stepDefaults = {};
                if (!a || "undefined" == typeof this.originalConfiguration.stepDefaults) {
                    this.setStepDefaults({})
                } else {
                    this.setStepDefaults(this.originalConfiguration.stepDefaults)
                }
                return this
            }
        }, {
            key: "setStepDefaults",
            value: function setStepDefaults(a) {
                if (!this.stepDefaults) {
                    this.stepDefaults = {}
                }
                b.default.extend(this.stepDefaults, {
                    element: "",
                    placement: "top",
                    delay: 0,
                    moveOnClick: !1,
                    moveAfterTime: 0,
                    orphan: !1,
                    direction: 1
                }, a);
                return this
            }
        }, {
            key: "getCurrentStepNumber",
            value: function getCurrentStepNumber() {
                return parseInt(this.currentStepNumber, 10)
            }
        }, {
            key: "setCurrentStepNumber",
            value: function setCurrentStepNumber(a) {
                this.currentStepNumber = a;
                if (this.storage) {
                    try {
                        this.storage.setItem(this.storageKey, a)
                    } catch (a) {
                        if (a.code === DOMException.QUOTA_EXCEEDED_ERR) {
                            this.storage.removeItem(this.storageKey)
                        }
                    }
                }
            }
        }, {
            key: "getNextStepNumber",
            value: function getNextStepNumber(a) {
                if ("undefined" == typeof a) {
                    a = this.getCurrentStepNumber()
                }
                var b = a + 1;
                while (b <= this.steps.length) {
                    if (this.isStepPotentiallyVisible(this.getStepConfig(b))) {
                        return b
                    }
                    b++
                }
                return null
            }
        }, {
            key: "getPreviousStepNumber",
            value: function getPreviousStepNumber(a) {
                if ("undefined" == typeof a) {
                    a = this.getCurrentStepNumber()
                }
                var b = a - 1;
                while (0 <= b) {
                    if (this.isStepPotentiallyVisible(this.getStepConfig(b))) {
                        return b
                    }
                    b--
                }
                return null
            }
        }, {
            key: "isLastStep",
            value: function isLastStep(a) {
                var b = this.getNextStepNumber(a);
                return null === b
            }
        }, {
            key: "isFirstStep",
            value: function isFirstStep(a) {
                var b = this.getPreviousStepNumber(a);
                return null === b
            }
        }, {
            key: "isStepPotentiallyVisible",
            value: function isStepPotentiallyVisible(a) {
                if (!a) {
                    return !1
                }
                if (this.isStepActuallyVisible(a)) {
                    return !0
                }
                if ("undefined" != typeof a.orphan && a.orphan) {
                    return !0
                }
                if ("undefined" != typeof a.delay && a.delay) {
                    return !0
                }
                return !1
            }
        }, {
            key: "isStepActuallyVisible",
            value: function isStepActuallyVisible(a) {
                if (!a) {
                    return !1
                }
                var b = this.getStepTarget(a);
                if (b && b.length && b.is(":visible")) {
                    return !!b.length
                }
                return !1
            }
        }, {
            key: "next",
            value: function next() {
                return this.gotoStep(this.getNextStepNumber())
            }
        }, {
            key: "previous",
            value: function previous() {
                return this.gotoStep(this.getPreviousStepNumber(), -1)
            }
        }, {
            key: "gotoStep",
            value: function gotoStep(a, b) {
                if (0 > a) {
                    return this.endTour()
                }
                var c = this.getStepConfig(a);
                if (null === c) {
                    return this.endTour()
                }
                return this._gotoStep(c, b)
            }
        }, {
            key: "_gotoStep",
            value: function _gotoStep(a, b) {
                if (!a) {
                    return this.endTour()
                }
                if ("undefined" != typeof a.delay && a.delay && !a.delayed) {
                    a.delayed = !0;
                    window.setTimeout(this._gotoStep.bind(this), a.delay, a, b);
                    return this
                } else if (!a.orphan && !this.isStepActuallyVisible(a)) {
                    var c = -1 == b ? "getPreviousStepNumber" : "getNextStepNumber";
                    return this.gotoStep(this[c](a.stepNumber), b)
                }
                this.hide();
                this.fireEventHandlers("beforeRender", a);
                this.renderStep(a);
                this.fireEventHandlers("afterRender", a);
                return this
            }
        }, {
            key: "getStepConfig",
            value: function getStepConfig(a) {
                if (null === a || 0 > a || a >= this.steps.length) {
                    return null
                }
                var c = this.normalizeStepConfig(this.steps[a]);
                c = b.default.extend(c, {
                    stepNumber: a
                });
                return c
            }
        }, {
            key: "normalizeStepConfig",
            value: function normalizeStepConfig(a) {
                if ("undefined" != typeof a.reflex && "undefined" == typeof a.moveAfterClick) {
                    a.moveAfterClick = a.reflex
                }
                if ("undefined" != typeof a.element && "undefined" == typeof a.target) {
                    a.target = a.element
                }
                if ("undefined" != typeof a.content && "undefined" == typeof a.body) {
                    a.body = a.content
                }
                a = b.default.extend({}, this.stepDefaults, a);
                a = b.default.extend({}, {
                    attachTo: a.target,
                    attachPoint: "after"
                }, a);
                if (a.attachTo) {
                    a.attachTo = (0, b.default)(a.attachTo).first()
                }
                return a
            }
        }, {
            key: "getStepTarget",
            value: function getStepTarget(a) {
                if (a.target) {
                    return (0, b.default)(a.target)
                }
                return null
            }
        }, {
            key: "fireEventHandlers",
            value: function fireEventHandlers(a, b) {
                if ("undefined" == typeof this.eventHandlers[a]) {
                    return this
                }
                this.eventHandlers[a].forEach(function(a) {
                    a.call(this, b)
                }, this);
                return this
            }
        }, {
            key: "addEventHandler",
            value: function addEventHandler(a, b) {
                if ("undefined" == typeof this.eventHandlers[a]) {
                    this.eventHandlers[a] = []
                }
                this.eventHandlers[a].push(b);
                return this
            }
        }, {
            key: "processStepListeners",
            value: function processStepListeners(a) {
                this.listeners.push({
                    node: this.currentStepNode,
                    args: ["click", "[data-role=\"next\"]", b.default.proxy(this.next, this)]
                }, {
                    node: this.currentStepNode,
                    args: ["click", "[data-role=\"previous\"]", b.default.proxy(this.previous, this)]
                }, {
                    node: this.currentStepNode,
                    args: ["click", "[data-role=\"end\"]", b.default.proxy(this.endTour, this)]
                }, {
                    node: (0, b.default)("[data-flexitour=\"backdrop\"]"),
                    args: ["click", b.default.proxy(this.hide, this)]
                }, {
                    node: (0, b.default)("body"),
                    args: ["keydown", b.default.proxy(this.handleKeyDown, this)]
                });
                if (a.moveOnClick) {
                    var c = this.getStepTarget(a);
                    this.listeners.push({
                        node: c,
                        args: ["click", b.default.proxy(function(a) {
                            if (0 === (0, b.default)(a.target).parents("[data-flexitour=\"container\"]").length) {
                                window.setTimeout(b.default.proxy(this.next, this), 500)
                            }
                        }, this)]
                    })
                }
                this.listeners.forEach(function(a) {
                    a.node.on.apply(a.node, a.args)
                });
                return this
            }
        }, {
            key: "resetStepListeners",
            value: function resetStepListeners() {
                if (this.listeners) {
                    this.listeners.forEach(function(a) {
                        a.node.off.apply(a.node, a.args)
                    })
                }
                this.listeners = [];
                return this
            }
        }, {
            key: "renderStep",
            value: function renderStep(a) {
                this.currentStepConfig = a;
                this.setCurrentStepNumber(a.stepNumber);
                var c = (0, b.default)(this.getTemplateContent());
                c.find("[data-placeholder=\"title\"]").html(a.title);
                c.find("[data-placeholder=\"body\"]").html(a.body);
                if (this.isFirstStep(a.stepNumber)) {
                    c.find("[data-role=\"previous\"]").prop("disabled", !0)
                } else {
                    c.find("[data-role=\"previous\"]").prop("disabled", !1)
                }
                if (this.isLastStep(a.stepNumber)) {
                    c.find("[data-role=\"next\"]").prop("disabled", !0)
                } else {
                    c.find("[data-role=\"next\"]").prop("disabled", !1)
                }
                c.find("[data-role=\"previous\"]").attr("role", "button");
                c.find("[data-role=\"next\"]").attr("role", "button");
                c.find("[data-role=\"end\"]").attr("role", "button");
                a.template = c;
                this.addStepToPage(a);
                this.processStepListeners(a);
                return this
            }
        }, {
            key: "getTemplateContent",
            value: function getTemplateContent() {
                return (0, b.default)(this.templateContent).clone()
            }
        }, {
            key: "addStepToPage",
            value: function addStepToPage(a) {
                var d = (0, b.default)("<span data-flexitour=\"container\"></span>").html(a.template).hide(),
                    e = (0, b.default)("body, html").stop(!0, !0);
                if (this.isStepActuallyVisible(a)) {
                    var f = this.getStepTarget(a);
                    f.data("flexitour", "target");
                    var g = this.calculateZIndex(f);
                    if (g) {
                        a.zIndex = g + 1
                    }
                    if (a.zIndex) {
                        d.css("zIndex", a.zIndex + 1)
                    }
                    this.positionBackdrop(a);
                    (0, b.default)(document.body).append(d);
                    this.currentStepNode = d;
                    this.currentStepNode.css({
                        top: 0,
                        left: 0
                    });
                    e.animate({
                        scrollTop: this.calculateScrollTop(a)
                    }).promise().then(function() {
                        this.positionStep(a);
                        this.revealStep(a)
                    }.bind(this)).catch(function() {})
                } else if (a.orphan) {
                    a.isOrphan = !0;
                    a.attachTo = (0, b.default)("body").first();
                    a.attachPoint = "append";
                    this.positionBackdrop(a);
                    d.addClass("orphan");
                    (0, b.default)(document.body).append(d);
                    this.currentStepNode = d;
                    this.currentStepNode.offset(this.calculateStepPositionInPage());
                    this.currentStepNode.css("position", "fixed");
                    this.currentStepPopper = new c.default((0, b.default)("body"), this.currentStepNode[0], {
                        removeOnDestroy: !0,
                        placement: a.placement + "-start",
                        arrowElement: "[data-role=\"arrow\"]",
                        modifiers: {
                            hide: {
                                enabled: !1
                            },
                            applyStyle: {
                                onLoad: null,
                                enabled: !1
                            }
                        }
                    });
                    this.revealStep(a)
                }
                return this
            }
        }, {
            key: "revealStep",
            value: function revealStep(a) {
                this.currentStepNode.fadeIn("", b.default.proxy(function() {
                    this.announceStep(a);
                    this.currentStepNode.focus();
                    window.setTimeout(b.default.proxy(function() {
                        if (this.currentStepNode) {
                            this.currentStepNode.focus()
                        }
                    }, this), 100)
                }, this));
                return this
            }
        }, {
            key: "announceStep",
            value: function announceStep(a) {
                var b = "tour-step-" + this.tourName + "-" + a.stepNumber;
                this.currentStepNode.attr("id", b);
                var c = this.currentStepNode.find("[data-placeholder=\"body\"]").first();
                c.attr("id", b + "-body");
                c.attr("role", "document");
                var d = this.currentStepNode.find("[data-placeholder=\"title\"]").first();
                d.attr("id", b + "-title");
                d.attr("aria-labelledby", b + "-body");
                this.currentStepNode.attr("role", "dialog");
                this.currentStepNode.attr("tabindex", 0);
                this.currentStepNode.attr("aria-labelledby", b + "-title");
                this.currentStepNode.attr("aria-describedby", b + "-body");
                var e = this.getStepTarget(a);
                if (e) {
                    if (!e.attr("tabindex")) {
                        e.attr("tabindex", 0)
                    }
                    e.data("original-describedby", e.attr("aria-describedby")).attr("aria-describedby", b + "-body")
                }
                this.accessibilityShow(a);
                return this
            }
        }, {
            key: "handleKeyDown",
            value: function handleKeyDown(a) {
                var c = "a[href], link[href], [draggable=true], [contenteditable=true], ";
                c += ":input:enabled, [tabindex], button:enabled";
                switch (a.keyCode) {
                    case 27:
                        this.endTour();
                        break;
                    case 9:
                        (function() {
                            if (!this.currentStepConfig.hasBackdrop) {
                                return
                            }
                            var d = (0, b.default)(document.activeElement),
                                e = this.getStepTarget(this.currentStepConfig),
                                f = (0, b.default)(c),
                                g = (0, b.default)("span[data-flexitour=\"container\"]"),
                                h;
                            if (e) {
                                f = f.filter(function(a, b) {
                                    return null !== e && (e.has(b).length || g.has(b).length || e.is(b) || g.is(b))
                                })
                            }
                            f.each(function(a, b) {
                                if (d.is(b)) {
                                    h = a;
                                    return !1
                                }
                                return !0
                            });
                            var i, j, k;
                            if (void 0 != h) {
                                var l = 1;
                                if (a.shiftKey) {
                                    l = -1
                                }
                                i = h;
                                do {
                                    i += l;
                                    j = (0, b.default)(f[i])
                                } while (j.length && j.is(":disabled") || j.is(":hidden"));
                                if (j.length) {
                                    k = j.closest(e).length;
                                    k = k || j.closest(this.currentStepNode).length
                                } else {
                                    k = !1
                                }
                            }
                            if (k) {
                                j.focus()
                            } else {
                                if (a.shiftKey) {
                                    this.currentStepNode.find(c).last().focus()
                                } else {
                                    if (this.currentStepConfig.isOrphan) {
                                        this.currentStepNode.focus()
                                    } else {
                                        e.focus()
                                    }
                                }
                            }
                            a.preventDefault()
                        }).call(this);
                        break;
                }
            }
        }, {
            key: "startTour",
            value: function startTour(a) {
                if (this.storage && "undefined" == typeof a) {
                    var b = this.storage.getItem(this.storageKey);
                    if (b) {
                        var c = parseInt(b, 10);
                        if (c <= this.steps.length) {
                            a = c
                        }
                    }
                }
                if ("undefined" == typeof a) {
                    a = this.getCurrentStepNumber()
                }
                this.fireEventHandlers("beforeStart", a);
                this.gotoStep(a);
                this.fireEventHandlers("afterStart", a);
                return this
            }
        }, {
            key: "restartTour",
            value: function restartTour() {
                return this.startTour(0)
            }
        }, {
            key: "endTour",
            value: function endTour() {
                this.fireEventHandlers("beforeEnd");
                if (this.currentStepConfig) {
                    var a = this.getStepTarget(this.currentStepConfig);
                    if (a) {
                        if (!a.attr("tabindex")) {
                            a.attr("tabindex", "-1")
                        }
                        a.focus()
                    }
                }
                this.hide(!0);
                this.fireEventHandlers("afterEnd");
                return this
            }
        }, {
            key: "hide",
            value: function hide(a) {
                this.fireEventHandlers("beforeHide");
                if (this.currentStepNode && this.currentStepNode.length) {
                    this.currentStepNode.hide();
                    if (this.currentStepPopper) {
                        this.currentStepPopper.destroy()
                    }
                }
                if (this.currentStepConfig) {
                    var d = this.getStepTarget(this.currentStepConfig);
                    if (d) {
                        if (d.data("original-labelledby")) {
                            d.attr("aria-labelledby", d.data("original-labelledby"))
                        }
                        if (d.data("original-describedby")) {
                            d.attr("aria-describedby", d.data("original-describedby"))
                        }
                        if (d.data("original-tabindex")) {
                            d.attr("tabindex", d.data("tabindex"))
                        }
                    }
                    this.currentStepConfig = null
                }
                var c = 0;
                if (a) {
                    c = 400
                }(0, b.default)("[data-flexitour=\"step-background\"]").remove();
                (0, b.default)("[data-flexitour=\"step-backdrop\"]").removeAttr("data-flexitour");
                (0, b.default)("[data-flexitour=\"backdrop\"]").fadeOut(c, function() {
                    (0, b.default)(this).remove()
                });
                if (this.currentStepNode && this.currentStepNode.length) {
                    var e = this.currentStepNode.attr("id");
                    if (e) {
                        var f = "[aria-describedby=\"" + e + "-body\"]";
                        (0, b.default)(f).removeAttr("tabindex");
                        (0, b.default)(f).removeAttr("aria-describedby")
                    }
                }
                this.resetStepListeners();
                this.accessibilityHide();
                this.fireEventHandlers("afterHide");
                this.currentStepNode = null;
                this.currentStepPopper = null;
                return this
            }
        }, {
            key: "show",
            value: function show() {
                var a = this.getCurrentStepNumber();
                return this.gotoStep(a)
            }
        }, {
            key: "getStepContainer",
            value: function getStepContainer() {
                return (0, b.default)(this.currentStepNode)
            }
        }, {
            key: "calculateScrollTop",
            value: function calculateScrollTop(a) {
                var c = (0, b.default)(window).scrollTop(),
                    d = (0, b.default)(window).height(),
                    e = this.getStepTarget(a);
                if ("top" === a.placement) {
                    c = e.offset().top - d / 2
                } else if ("bottom" === a.placement) {
                    c = e.offset().top + e.height() - d / 2
                } else if (e.height() <= .8 * d) {
                    c = e.offset().top - (d - e.height()) / 2
                } else {
                    c = e.offset().top - .2 * d
                }
                c = Math.max(0, c);
                c = Math.min((0, b.default)(document).height() - d, c);
                return Math.ceil(c)
            }
        }, {
            key: "calculateStepPositionInPage",
            value: function calculateStepPositionInPage() {
                var a = (0, b.default)(window).height(),
                    c = this.currentStepNode.height(),
                    d = (0, b.default)(window).width(),
                    e = this.currentStepNode.width();
                return {
                    top: Math.ceil((a - c) / 2),
                    left: Math.ceil((d - e) / 2)
                }
            }
        }, {
            key: "positionStep",
            value: function positionStep(a) {
                var d = this.currentStepNode;
                if (!d || !d.length) {
                    return this
                }
                var e;
                switch (a.placement) {
                    case "left":
                        e = ["left", "right", "top", "bottom"];
                        break;
                    case "right":
                        e = ["right", "left", "top", "bottom"];
                        break;
                    case "top":
                        e = ["top", "bottom", "right", "left"];
                        break;
                    case "bottom":
                        e = ["bottom", "top", "right", "left"];
                        break;
                    default:
                        e = "flip";
                        break;
                }
                var f = this.getStepTarget(a),
                    g = {
                        placement: a.placement + "-start",
                        removeOnDestroy: !0,
                        modifiers: {
                            flip: {
                                behaviour: e
                            },
                            arrow: {
                                element: "[data-role=\"arrow\"]"
                            }
                        },
                        onCreate: function onCreate(a) {
                            h(a)
                        },
                        onUpdate: function onUpdate(a) {
                            h(a)
                        }
                    },
                    h = function(a) {
                        var c = a.placement.split("-")[0],
                            d = -1 !== ["left", "right"].indexOf(c),
                            e = a.instance.popper.querySelector("[data-role=\"arrow\"]"),
                            f = (0, b.default)(a.instance.popper.querySelector("[data-role=\"flexitour-step\"]"));
                        if (d) {
                            var g = parseFloat(window.getComputedStyle(e).height),
                                h = parseFloat(window.getComputedStyle(e).top),
                                i = parseFloat(window.getComputedStyle(a.instance.popper).height),
                                j = parseFloat(window.getComputedStyle(a.instance.popper).top),
                                k = parseFloat(f.css("borderTopWidth")),
                                l = 2 * parseFloat(f.css("borderTopLeftRadius")),
                                m = h + g / 2,
                                n = i + j - k - l,
                                o = j + k + l;
                            if (m >= n || m <= o) {
                                var y = 0;
                                if (m > i / 2) {
                                    y = n - g
                                } else {
                                    y = o + g
                                }(0, b.default)(e).css("top", y)
                            }
                        } else {
                            var p = parseFloat(window.getComputedStyle(e).width),
                                q = parseFloat(window.getComputedStyle(e).left),
                                r = parseFloat(window.getComputedStyle(a.instance.popper).width),
                                s = parseFloat(window.getComputedStyle(a.instance.popper).left),
                                t = parseFloat(f.css("borderTopWidth")),
                                u = 2 * parseFloat(f.css("borderTopLeftRadius")),
                                v = q + p / 2,
                                w = r + s - t - u,
                                x = s + t + u;
                            if (v >= w || v <= x) {
                                var z = 0;
                                if (v > r / 2) {
                                    z = w - p
                                } else {
                                    z = x + p
                                }(0, b.default)(e).css("left", z)
                            }
                        }
                    },
                    i = (0, b.default)("[data-flexitour=\"step-background\"]");
                if (i.length) {
                    f = i
                }
                this.currentStepPopper = new c.default(f, d[0], g);
                return this
            }
        }, {
            key: "positionBackdrop",
            value: function positionBackdrop(a) {
                if (a.backdrop) {
                    this.currentStepConfig.hasBackdrop = !0;
                    var g = (0, b.default)("<div data-flexitour=\"backdrop\"></div>");
                    if (a.zIndex) {
                        if ("append" === a.attachPoint) {
                            a.attachTo.append(g)
                        } else {
                            g.insertAfter(a.attachTo)
                        }
                    } else {
                        (0, b.default)("body").append(g)
                    }
                    if (this.isStepActuallyVisible(a)) {
                        var c = (0, b.default)("<div data-flexitour=\"step-background\"></div>"),
                            d = this.getStepTarget(a),
                            e = 10,
                            f = d;
                        if (e) {
                            f = (0, b.default)("body")
                        }
                        c.css({
                            width: d.outerWidth() + e + e,
                            height: d.outerHeight() + e + e,
                            left: d.offset().left - e,
                            top: d.offset().top - e,
                            backgroundColor: this.calculateInherittedBackgroundColor(f)
                        });
                        if (d.offset().left < e) {
                            c.css({
                                width: d.outerWidth() + d.offset().left + e,
                                left: d.offset().left
                            })
                        }
                        if (d.offset().top < e) {
                            c.css({
                                height: d.outerHeight() + d.offset().top + e,
                                top: d.offset().top
                            })
                        }
                        var h = d.css("borderRadius");
                        if (h && h !== (0, b.default)("body").css("borderRadius")) {
                            c.css("borderRadius", h)
                        }
                        var i = this.calculatePosition(d);
                        if ("fixed" === i) {
                            c.css("top", 0)
                        } else if ("absolute" === i) {
                            c.css("position", "fixed")
                        }
                        var j = c.clone();
                        j.css({
                            backgroundColor: g.css("backgroundColor"),
                            opacity: g.css("opacity")
                        });
                        j.attr("data-flexitour", "step-background-fader");
                        if (a.zIndex) {
                            if ("append" === a.attachPoint) {
                                a.attachTo.append(c)
                            } else {
                                j.insertAfter(a.attachTo);
                                c.insertAfter(a.attachTo)
                            }
                        } else {
                            (0, b.default)("body").append(j);
                            (0, b.default)("body").append(c)
                        }
                        d.attr("data-flexitour", "step-backdrop");
                        if (a.zIndex) {
                            g.css("zIndex", a.zIndex);
                            c.css("zIndex", a.zIndex + 1);
                            d.css("zIndex", a.zIndex + 2)
                        }
                        j.fadeOut("2000", function() {
                            (0, b.default)(this).remove()
                        })
                    }
                }
                return this
            }
        }, {
            key: "calculateZIndex",
            value: function calculateZIndex(a) {
                a = (0, b.default)(a);
                while (a.length && a[0] !== document) {
                    var c = a.css("position");
                    if ("absolute" === c || "relative" === c || "fixed" === c) {
                        var d = parseInt(a.css("zIndex"), 10);
                        if (!isNaN(d) && 0 !== d) {
                            return d
                        }
                    }
                    a = a.parent()
                }
                return 0
            }
        }, {
            key: "calculateInherittedBackgroundColor",
            value: function calculateInherittedBackgroundColor(a) {
                var c = (0, b.default)("<div>").hide();
                (0, b.default)("body").append(c);
                var d = c.css("backgroundColor");
                c.remove();
                a = (0, b.default)(a);
                while (a.length && a[0] !== document) {
                    var e = a.css("backgroundColor");
                    if (e !== d) {
                        return e
                    }
                    a = a.parent()
                }
                return null
            }
        }, {
            key: "calculatePosition",
            value: function calculatePosition(a) {
                a = (0, b.default)(a);
                while (a.length && a[0] !== document) {
                    var c = a.css("position");
                    if ("static" !== c) {
                        return c
                    }
                    a = a.parent()
                }
                return null
            }
        }, {
            key: "accessibilityShow",
            value: function accessibilityShow() {
                var a = "aria-hidden",
                    c = function(b) {
                        var c = b.data("flexitour");
                        if (c) {
                            switch (c) {
                                case "container":
                                case "target":
                                    return;
                            }
                        }
                        var d = b.attr(a);
                        if (!d) {
                            b.attr("data-has-hidden", !0);
                            b.attr(a, !0)
                        }
                    };
                this.currentStepNode.siblings().each(function(a, d) {
                    c((0, b.default)(d))
                });
                this.currentStepNode.parentsUntil("body").siblings().each(function(a, d) {
                    c((0, b.default)(d))
                })
            }
        }, {
            key: "accessibilityHide",
            value: function accessibilityHide() {
                var a = function(a) {
                    var b = a.attr("data-has-hidden");
                    if ("undefined" != typeof b) {
                        a.removeAttr("data-has-hidden");
                        a.removeAttr("aria-hidden")
                    }
                };
                (0, b.default)("[data-has-hidden]").each(function(c, d) {
                    a((0, b.default)(d))
                })
            }
        }]);
        return a
    }();
    a.default = i;
    return a.default
});
define("tool_usertours/managetours", ["jquery", "core/ajax", "core/str", "core/notification"], function(a, b, c, d) {
    var e = {
        removeTour: function removeTour(b) {
            b.preventDefault();
            var e = a(b.currentTarget).attr("href");
            c.get_strings([{
                key: "confirmtourremovaltitle",
                component: "tool_usertours"
            }, {
                key: "confirmtourremovalquestion",
                component: "tool_usertours"
            }, {
                key: "yes",
                component: "moodle"
            }, {
                key: "no",
                component: "moodle"
            }]).then(function(a) {
                d.confirm(a[0], a[1], a[2], a[3], function() {
                    window.location = e
                })
            }).catch()
        },
        setup: function setup() {
            a("body").delegate("[data-action=\"delete\"]", "click", e.removeTour)
        }
    };
    return {
        setup: e.setup
    }
});
define("tool_usertours/usertours", ["core/ajax", "tool_usertours/tour", "jquery", "core/templates", "core/str", "core/log", "core/notification"], function(a, b, c, d, e, f, g) {
    var h = {
        tourId: null,
        currentTour: null,
        context: null,
        init: function init(a, b, d) {
            h.tourId = a;
            h.context = d;
            if ("undefined" == typeof b) {
                b = !0
            }
            if (b) {
                h.fetchTour(a)
            }
            h.addResetLink();
            c("body").on("click", "[data-action=\"tool_usertours/resetpagetour\"]", function(a) {
                a.preventDefault();
                h.resetTourState(h.tourId)
            })
        },
        fetchTour: function fetchTour(b) {
            M.util.js_pending("admin_usertour_fetchTour" + b);
            c.when(a.call([{
                methodname: "tool_usertours_fetch_and_start_tour",
                args: {
                    tourid: b,
                    context: h.context,
                    pageurl: window.location.href
                }
            }])[0], d.render("tool_usertours/tourstep", {})).then(function(a, c) {
                return h.startBootstrapTour(b, c[0], a.tourconfig)
            }).always(function() {
                M.util.js_complete("admin_usertour_fetchTour" + b)
            }).fail(g.exception)
        },
        addResetLink: function addResetLink() {
            var a;
            M.util.js_pending("admin_usertour_addResetLink");
            if (c(".tool_usertours-resettourcontainer").length) {
                a = c(".tool_usertours-resettourcontainer")
            } else if (c(".logininfo").length) {
                a = c(".logininfo")
            } else if (c("footer").length) {
                a = c("footer")
            } else {
                a = c("body")
            }
            d.render("tool_usertours/resettour", {}).then(function(b, c) {
                d.appendNodeContents(a, b, c)
            }).always(function() {
                M.util.js_complete("admin_usertour_addResetLink")
            }).fail()
        },
        startBootstrapTour: function startBootstrapTour(a, c, d) {
            if (h.currentTour) {
                d.onEnd = null;
                h.currentTour.endTour();
                delete h.currentTour
            }
            d.eventHandlers = {
                afterEnd: [h.markTourComplete],
                afterRender: [h.markStepShown]
            };
            d.tourName = d.name;
            delete d.name;
            d.template = c;
            d.steps = d.steps.map(function(a) {
                if ("undefined" != typeof a.element) {
                    a.target = a.element;
                    delete a.element
                }
                if ("undefined" != typeof a.reflex) {
                    a.moveOnClick = !!a.reflex;
                    delete a.reflex
                }
                if ("undefined" != typeof a.content) {
                    a.body = a.content;
                    delete a.content
                }
                return a
            });
            h.currentTour = new b(d);
            return h.currentTour.startTour()
        },
        markStepShown: function markStepShown() {
            var b = this.getStepConfig(this.getCurrentStepNumber());
            c.when(a.call([{
                methodname: "tool_usertours_step_shown",
                args: {
                    tourid: h.tourId,
                    context: h.context,
                    pageurl: window.location.href,
                    stepid: b.stepid,
                    stepindex: this.getCurrentStepNumber()
                }
            }])[0]).fail(f.error)
        },
        markTourComplete: function markTourComplete() {
            var b = this.getStepConfig(this.getCurrentStepNumber());
            c.when(a.call([{
                methodname: "tool_usertours_complete_tour",
                args: {
                    tourid: h.tourId,
                    context: h.context,
                    pageurl: window.location.href,
                    stepid: b.stepid,
                    stepindex: this.getCurrentStepNumber()
                }
            }])[0]).fail(f.error)
        },
        resetTourState: function resetTourState(b) {
            c.when(a.call([{
                methodname: "tool_usertours_reset_tour",
                args: {
                    tourid: b,
                    context: h.context,
                    pageurl: window.location.href
                }
            }])[0]).then(function(a) {
                if (a.startTour) {
                    h.fetchTour(a.startTour)
                }
            }).fail(g.exception)
        }
    };
    return {
        init: h.init,
        resetTourState: h.resetTourState
    }
});
define("tool_xmldb/move", ["jquery", "core/sortable_list", "core/ajax", "core/notification"], function(a, b, c, d) {
    return {
        init: function init(e, f) {
            var g = new b("#" + e + " tbody");
            g.getElementName = function(b) {
                return a.Deferred().resolve(b.attr("data-name"))
            };
            var h;
            a("#" + e + " tbody tr").on(b.EVENTS.DRAGSTART, function(b, c) {
                h = c.sourceList.children().index(c.element);
                setTimeout(function() {
                    a(".sortable-list-is-dragged").width(c.element.width())
                }, 501)
            }).on(b.EVENTS.DROP, function(a, b) {
                var e = b.targetList.children().index(b.element),
                    g = b.element.find("[data-action=" + f + "]");
                if (b.positionChanged && g.length) {
                    var i = {
                        methodname: "tool_xmldb_invoke_move_action",
                        args: {
                            action: f,
                            dir: g.attr("data-dir"),
                            table: g.attr("data-table"),
                            field: g.attr("data-field"),
                            key: g.attr("data-key"),
                            index: g.attr("data-index"),
                            position: e - h
                        }
                    };
                    c.call([i])[0].fail(d.exception)
                }
            })
        }
    }
});
"use strict";
define("theme_boost/alert", ["exports", "jquery", "./util"], function(a, b, c) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    var h = d(b),
        i = d(c);

    function d(a) {
        return a && a.__esModule ? a : {
            default: a
        }
    }

    function e(a, b) {
        if (!(a instanceof b)) {
            throw new TypeError("Cannot call a class as a function")
        }
    }

    function f(a, b) {
        for (var c = 0, d; c < b.length; c++) {
            d = b[c];
            d.enumerable = d.enumerable || !1;
            d.configurable = !0;
            if ("value" in d) d.writable = !0;
            Object.defineProperty(a, d.key, d)
        }
    }

    function g(a, b, c) {
        if (b) f(a.prototype, b);
        if (c) f(a, c);
        return a
    }
    var j = "bs.alert",
        k = ".".concat(j),
        l = h.default.fn.alert,
        m = {
            CLOSE: "close".concat(k),
            CLOSED: "closed".concat(k),
            CLICK_DATA_API: "click".concat(k).concat(".data-api")
        },
        n = {
            ALERT: "alert",
            FADE: "fade",
            SHOW: "show"
        },
        o = function() {
            function a(b) {
                e(this, a);
                this._element = b
            }
            g(a, [{
                key: "close",
                value: function(a) {
                    var b = this._element;
                    if (a) {
                        b = this._getRootElement(a)
                    }
                    var c = this._triggerCloseEvent(b);
                    if (c.isDefaultPrevented()) {
                        return
                    }
                    this._removeElement(b)
                }
            }, {
                key: "dispose",
                value: function() {
                    h.default.removeData(this._element, j);
                    this._element = null
                }
            }, {
                key: "_getRootElement",
                value: function(a) {
                    var b = i.default.getSelectorFromElement(a),
                        c = !1;
                    if (b) {
                        c = document.querySelector(b)
                    }
                    if (!c) {
                        c = (0, h.default)(a).closest(".".concat(n.ALERT))[0]
                    }
                    return c
                }
            }, {
                key: "_triggerCloseEvent",
                value: function(a) {
                    var b = h.default.Event(m.CLOSE);
                    (0, h.default)(a).trigger(b);
                    return b
                }
            }, {
                key: "_removeElement",
                value: function(a) {
                    var b = this;
                    (0, h.default)(a).removeClass(n.SHOW);
                    if (!(0, h.default)(a).hasClass(n.FADE)) {
                        this._destroyElement(a);
                        return
                    }
                    var c = i.default.getTransitionDurationFromElement(a);
                    (0, h.default)(a).one(i.default.TRANSITION_END, function(c) {
                        return b._destroyElement(a, c)
                    }).emulateTransitionEnd(c)
                }
            }, {
                key: "_destroyElement",
                value: function(a) {
                    (0, h.default)(a).detach().trigger(m.CLOSED).remove()
                }
            }], [{
                key: "_jQueryInterface",
                value: function(b) {
                    return this.each(function() {
                        var c = (0, h.default)(this),
                            d = c.data(j);
                        if (!d) {
                            d = new a(this);
                            c.data(j, d)
                        }
                        if ("close" === b) {
                            d[b](this)
                        }
                    })
                }
            }, {
                key: "_handleDismiss",
                value: function(a) {
                    return function(b) {
                        if (b) {
                            b.preventDefault()
                        }
                        a.close(this)
                    }
                }
            }, {
                key: "VERSION",
                get: function() {
                    return "4.3.1"
                }
            }]);
            return a
        }();
    (0, h.default)(document).on(m.CLICK_DATA_API, {
        DISMISS: "[data-dismiss=\"alert\"]"
    }.DISMISS, o._handleDismiss(new o));
    h.default.fn.alert = o._jQueryInterface;
    h.default.fn.alert.Constructor = o;
    h.default.fn.alert.noConflict = function() {
        h.default.fn.alert = l;
        return o._jQueryInterface
    };
    a.default = o;
    return a.default
});
"use strict";
define("theme_boost/tab", ["exports", "jquery", "./util"], function(a, b, c) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    var h = d(b),
        i = d(c);

    function d(a) {
        return a && a.__esModule ? a : {
            default: a
        }
    }

    function e(a, b) {
        if (!(a instanceof b)) {
            throw new TypeError("Cannot call a class as a function")
        }
    }

    function f(a, b) {
        for (var c = 0, d; c < b.length; c++) {
            d = b[c];
            d.enumerable = d.enumerable || !1;
            d.configurable = !0;
            if ("value" in d) d.writable = !0;
            Object.defineProperty(a, d.key, d)
        }
    }

    function g(a, b, c) {
        if (b) f(a.prototype, b);
        if (c) f(a, c);
        return a
    }
    var j = "bs.tab",
        k = ".".concat(j),
        l = h.default.fn.tab,
        m = {
            HIDE: "hide".concat(k),
            HIDDEN: "hidden".concat(k),
            SHOW: "show".concat(k),
            SHOWN: "shown".concat(k),
            CLICK_DATA_API: "click".concat(k).concat(".data-api")
        },
        n = {
            DROPDOWN_MENU: "dropdown-menu",
            ACTIVE: "active",
            DISABLED: "disabled",
            FADE: "fade",
            SHOW: "show"
        },
        o = {
            DROPDOWN: ".dropdown",
            NAV_LIST_GROUP: ".nav, .list-group",
            ACTIVE: ".active",
            ACTIVE_UL: "> li > .active",
            DATA_TOGGLE: "[data-toggle=\"tab\"], [data-toggle=\"pill\"], [data-toggle=\"list\"]",
            DROPDOWN_TOGGLE: ".dropdown-toggle",
            DROPDOWN_ACTIVE_CHILD: "> .dropdown-menu .active"
        },
        p = function() {
            function a(b) {
                e(this, a);
                this._element = b
            }
            g(a, [{
                key: "show",
                value: function() {
                    var a = this;
                    if (this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE && (0, h.default)(this._element).hasClass(n.ACTIVE) || (0, h.default)(this._element).hasClass(n.DISABLED)) {
                        return
                    }
                    var b, c, d = (0, h.default)(this._element).closest(o.NAV_LIST_GROUP)[0],
                        e = i.default.getSelectorFromElement(this._element);
                    if (d) {
                        var f = "UL" === d.nodeName || "OL" === d.nodeName ? o.ACTIVE_UL : o.ACTIVE;
                        c = h.default.makeArray((0, h.default)(d).find(f));
                        c = c[c.length - 1]
                    }
                    var g = h.default.Event(m.HIDE, {
                            relatedTarget: this._element
                        }),
                        j = h.default.Event(m.SHOW, {
                            relatedTarget: c
                        });
                    if (c) {
                        (0, h.default)(c).trigger(g)
                    }(0, h.default)(this._element).trigger(j);
                    if (j.isDefaultPrevented() || g.isDefaultPrevented()) {
                        return
                    }
                    if (e) {
                        b = document.querySelector(e)
                    }
                    this._activate(this._element, d);
                    var k = function() {
                        var b = h.default.Event(m.HIDDEN, {
                                relatedTarget: a._element
                            }),
                            d = h.default.Event(m.SHOWN, {
                                relatedTarget: c
                            });
                        (0, h.default)(c).trigger(b);
                        (0, h.default)(a._element).trigger(d)
                    };
                    if (b) {
                        this._activate(b, b.parentNode, k)
                    } else {
                        k()
                    }
                }
            }, {
                key: "dispose",
                value: function() {
                    h.default.removeData(this._element, j);
                    this._element = null
                }
            }, {
                key: "_activate",
                value: function(a, b, c) {
                    var d = this,
                        e = b && ("UL" === b.nodeName || "OL" === b.nodeName) ? (0, h.default)(b).find(o.ACTIVE_UL) : (0, h.default)(b).children(o.ACTIVE),
                        f = e[0],
                        g = c && f && (0, h.default)(f).hasClass(n.FADE),
                        j = function() {
                            return d._transitionComplete(a, f, c)
                        };
                    if (f && g) {
                        var k = i.default.getTransitionDurationFromElement(f);
                        (0, h.default)(f).removeClass(n.SHOW).one(i.default.TRANSITION_END, j).emulateTransitionEnd(k)
                    } else {
                        j()
                    }
                }
            }, {
                key: "_transitionComplete",
                value: function(a, b, c) {
                    if (b) {
                        (0, h.default)(b).removeClass(n.ACTIVE);
                        var d = (0, h.default)(b.parentNode).find(o.DROPDOWN_ACTIVE_CHILD)[0];
                        if (d) {
                            (0, h.default)(d).removeClass(n.ACTIVE)
                        }
                        if ("tab" === b.getAttribute("role")) {
                            b.setAttribute("aria-selected", !1)
                        }
                    }(0, h.default)(a).addClass(n.ACTIVE);
                    if ("tab" === a.getAttribute("role")) {
                        a.setAttribute("aria-selected", !0)
                    }
                    i.default.reflow(a);
                    if (a.classList.contains(n.FADE)) {
                        a.classList.add(n.SHOW)
                    }
                    if (a.parentNode && (0, h.default)(a.parentNode).hasClass(n.DROPDOWN_MENU)) {
                        var e = (0, h.default)(a).closest(o.DROPDOWN)[0];
                        if (e) {
                            var f = [].slice.call(e.querySelectorAll(o.DROPDOWN_TOGGLE));
                            (0, h.default)(f).addClass(n.ACTIVE)
                        }
                        a.setAttribute("aria-expanded", !0)
                    }
                    if (c) {
                        c()
                    }
                }
            }], [{
                key: "_jQueryInterface",
                value: function(b) {
                    return this.each(function() {
                        var c = (0, h.default)(this),
                            d = c.data(j);
                        if (!d) {
                            d = new a(this);
                            c.data(j, d)
                        }
                        if ("string" == typeof b) {
                            if ("undefined" == typeof d[b]) {
                                throw new TypeError("No method named \"".concat(b, "\""))
                            }
                            d[b]()
                        }
                    })
                }
            }, {
                key: "VERSION",
                get: function() {
                    return "4.3.1"
                }
            }]);
            return a
        }();
    (0, h.default)(document).on(m.CLICK_DATA_API, o.DATA_TOGGLE, function(a) {
        a.preventDefault();
        p._jQueryInterface.call((0, h.default)(this), "show")
    });
    h.default.fn.tab = p._jQueryInterface;
    h.default.fn.tab.Constructor = p;
    h.default.fn.tab.noConflict = function() {
        h.default.fn.tab = l;
        return p._jQueryInterface
    };
    a.default = p;
    return a.default
});
define("theme_boost/loader", ["jquery", "./tether", "core/event", "core/custom_interaction_events"], function(a, b, c, d) {
    window.jQuery = a;
    window.Tether = b;
    M.util.js_pending("theme_boost/loader:children");
    require(["theme_boost/aria", "theme_boost/pending", "theme_boost/util", "theme_boost/alert", "theme_boost/button", "theme_boost/carousel", "theme_boost/collapse", "theme_boost/dropdown", "theme_boost/modal", "theme_boost/scrollspy", "theme_boost/tab", "theme_boost/tooltip", "theme_boost/popover"], function(b) {
        a("body").popover({
            trigger: "focus",
            selector: "[data-toggle=popover][data-trigger!=hover]",
            placement: "auto"
        });
        d.define(a("body"), [d.events.escape]);
        a("body").on(d.events.escape, "[data-toggle=popover]", function() {
            a(this).trigger("blur")
        });
        a("html").popover({
            container: "body",
            selector: "[data-toggle=popover][data-trigger=hover]",
            trigger: "hover",
            delay: {
                hide: 500
            }
        });
        a("html").tooltip({
            selector: "[data-toggle=\"tooltip\"]"
        });
        a.fn.dropdown.Constructor.Default.flip = !1;
        a("a[data-toggle=\"tab\"]").on("shown.bs.tab", function(b) {
            var c = a(b.target).attr("href");
            if (history.replaceState) {
                history.replaceState(null, null, c)
            } else {
                location.hash = c
            }
        });
        var e = window.location.hash;
        if (e) {
            a(".nav-link[href=\"" + e + "\"]").tab("show")
        }
        c.getLegacyEvents().done(function(b) {
            a(document).on(b.FILTER_CONTENT_UPDATED, function() {
                a("body").popover({
                    selector: "[data-toggle=\"popover\"]",
                    trigger: "focus"
                })
            })
        });
        b.init();
        M.util.js_complete("theme_boost/loader:children")
    });
    return {}
});
"use strict";

function _typeof2(a) {
    if ("function" == typeof Symbol && "symbol" == typeof Symbol.iterator) {
        _typeof2 = function(a) {
            return typeof a
        }
    } else {
        _typeof2 = function(a) {
            return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
        }
    }
    return _typeof2(a)
}
define("theme_boost/collapse", ["exports", "jquery", "./util"], function(a, b, c) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    var k = d(b),
        l = d(c);

    function d(a) {
        return a && a.__esModule ? a : {
            default: a
        }
    }

    function e(a) {
        if ("function" == typeof Symbol && "symbol" === _typeof2(Symbol.iterator)) {
            e = function(a) {
                return _typeof2(a)
            }
        } else {
            e = function(a) {
                return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : _typeof2(a)
            }
        }
        return e(a)
    }

    function f(a) {
        for (var b = 1; b < arguments.length; b++) {
            var c = null != arguments[b] ? arguments[b] : {},
                d = Object.keys(c);
            if ("function" == typeof Object.getOwnPropertySymbols) {
                d = d.concat(Object.getOwnPropertySymbols(c).filter(function(a) {
                    return Object.getOwnPropertyDescriptor(c, a).enumerable
                }))
            }
            d.forEach(function(b) {
                g(a, b, c[b])
            })
        }
        return a
    }

    function g(a, b, c) {
        if (b in a) {
            Object.defineProperty(a, b, {
                value: c,
                enumerable: !0,
                configurable: !0,
                writable: !0
            })
        } else {
            a[b] = c
        }
        return a
    }

    function h(a, b) {
        if (!(a instanceof b)) {
            throw new TypeError("Cannot call a class as a function")
        }
    }

    function i(a, b) {
        for (var c = 0, d; c < b.length; c++) {
            d = b[c];
            d.enumerable = d.enumerable || !1;
            d.configurable = !0;
            if ("value" in d) d.writable = !0;
            Object.defineProperty(a, d.key, d)
        }
    }

    function j(a, b, c) {
        if (b) i(a.prototype, b);
        if (c) i(a, c);
        return a
    }
    var m = "bs.collapse",
        n = ".".concat(m),
        o = k.default.fn.collapse,
        p = {
            toggle: !0,
            parent: ""
        },
        q = {
            toggle: "boolean",
            parent: "(string|element)"
        },
        r = {
            SHOW: "show".concat(n),
            SHOWN: "shown".concat(n),
            HIDE: "hide".concat(n),
            HIDDEN: "hidden".concat(n),
            CLICK_DATA_API: "click".concat(n).concat(".data-api")
        },
        s = {
            SHOW: "show",
            COLLAPSE: "collapse",
            COLLAPSING: "collapsing",
            COLLAPSED: "collapsed"
        },
        t = {
            WIDTH: "width",
            HEIGHT: "height"
        },
        u = {
            ACTIVES: ".show, .collapsing",
            DATA_TOGGLE: "[data-toggle=\"collapse\"]"
        },
        v = function() {
            function a(b, c) {
                h(this, a);
                this._isTransitioning = !1;
                this._element = b;
                this._config = this._getConfig(c);
                this._triggerArray = [].slice.call(document.querySelectorAll("[data-toggle=\"collapse\"][href=\"#".concat(b.id, "\"],") + "[data-toggle=\"collapse\"][data-target=\"#".concat(b.id, "\"]")));
                for (var d = [].slice.call(document.querySelectorAll(u.DATA_TOGGLE)), e = 0, f = d.length; e < f; e++) {
                    var g = d[e],
                        j = l.default.getSelectorFromElement(g),
                        k = [].slice.call(document.querySelectorAll(j)).filter(function(a) {
                            return a === b
                        });
                    if (null !== j && 0 < k.length) {
                        this._selector = j;
                        this._triggerArray.push(g)
                    }
                }
                this._parent = this._config.parent ? this._getParent() : null;
                if (!this._config.parent) {
                    this._addAriaAndCollapsedClass(this._element, this._triggerArray)
                }
                if (this._config.toggle) {
                    this.toggle()
                }
            }
            j(a, [{
                key: "toggle",
                value: function() {
                    if ((0, k.default)(this._element).hasClass(s.SHOW)) {
                        this.hide()
                    } else {
                        this.show()
                    }
                }
            }, {
                key: "show",
                value: function() {
                    var b = this;
                    if (this._isTransitioning || (0, k.default)(this._element).hasClass(s.SHOW)) {
                        return
                    }
                    var c, d;
                    if (this._parent) {
                        c = [].slice.call(this._parent.querySelectorAll(u.ACTIVES)).filter(function(a) {
                            if ("string" == typeof b._config.parent) {
                                return a.getAttribute("data-parent") === b._config.parent
                            }
                            return a.classList.contains(s.COLLAPSE)
                        });
                        if (0 === c.length) {
                            c = null
                        }
                    }
                    if (c) {
                        d = (0, k.default)(c).not(this._selector).data(m);
                        if (d && d._isTransitioning) {
                            return
                        }
                    }
                    var e = k.default.Event(r.SHOW);
                    (0, k.default)(this._element).trigger(e);
                    if (e.isDefaultPrevented()) {
                        return
                    }
                    if (c) {
                        a._jQueryInterface.call((0, k.default)(c).not(this._selector), "hide");
                        if (!d) {
                            (0, k.default)(c).data(m, null)
                        }
                    }
                    var f = this._getDimension();
                    (0, k.default)(this._element).removeClass(s.COLLAPSE).addClass(s.COLLAPSING);
                    this._element.style[f] = 0;
                    if (this._triggerArray.length) {
                        (0, k.default)(this._triggerArray).removeClass(s.COLLAPSED).attr("aria-expanded", !0)
                    }
                    this.setTransitioning(!0);
                    var g = f[0].toUpperCase() + f.slice(1),
                        h = "scroll".concat(g),
                        i = l.default.getTransitionDurationFromElement(this._element);
                    (0, k.default)(this._element).one(l.default.TRANSITION_END, function() {
                        (0, k.default)(b._element).removeClass(s.COLLAPSING).addClass(s.COLLAPSE).addClass(s.SHOW);
                        b._element.style[f] = "";
                        b.setTransitioning(!1);
                        (0, k.default)(b._element).trigger(r.SHOWN)
                    }).emulateTransitionEnd(i);
                    this._element.style[f] = "".concat(this._element[h], "px")
                }
            }, {
                key: "hide",
                value: function() {
                    var a = this;
                    if (this._isTransitioning || !(0, k.default)(this._element).hasClass(s.SHOW)) {
                        return
                    }
                    var b = k.default.Event(r.HIDE);
                    (0, k.default)(this._element).trigger(b);
                    if (b.isDefaultPrevented()) {
                        return
                    }
                    var c = this._getDimension();
                    this._element.style[c] = "".concat(this._element.getBoundingClientRect()[c], "px");
                    l.default.reflow(this._element);
                    (0, k.default)(this._element).addClass(s.COLLAPSING).removeClass(s.COLLAPSE).removeClass(s.SHOW);
                    var d = this._triggerArray.length;
                    if (0 < d) {
                        for (var e = 0; e < d; e++) {
                            var f = this._triggerArray[e],
                                g = l.default.getSelectorFromElement(f);
                            if (null !== g) {
                                var h = (0, k.default)([].slice.call(document.querySelectorAll(g)));
                                if (!h.hasClass(s.SHOW)) {
                                    (0, k.default)(f).addClass(s.COLLAPSED).attr("aria-expanded", !1)
                                }
                            }
                        }
                    }
                    this.setTransitioning(!0);
                    this._element.style[c] = "";
                    var j = l.default.getTransitionDurationFromElement(this._element);
                    (0, k.default)(this._element).one(l.default.TRANSITION_END, function() {
                        a.setTransitioning(!1);
                        (0, k.default)(a._element).removeClass(s.COLLAPSING).addClass(s.COLLAPSE).trigger(r.HIDDEN)
                    }).emulateTransitionEnd(j)
                }
            }, {
                key: "setTransitioning",
                value: function(a) {
                    this._isTransitioning = a
                }
            }, {
                key: "dispose",
                value: function() {
                    k.default.removeData(this._element, m);
                    this._config = null;
                    this._parent = null;
                    this._element = null;
                    this._triggerArray = null;
                    this._isTransitioning = null
                }
            }, {
                key: "_getConfig",
                value: function(a) {
                    a = f({}, p, a);
                    a.toggle = !!a.toggle;
                    l.default.typeCheckConfig("collapse", a, q);
                    return a
                }
            }, {
                key: "_getDimension",
                value: function() {
                    var a = (0, k.default)(this._element).hasClass(t.WIDTH);
                    return a ? t.WIDTH : t.HEIGHT
                }
            }, {
                key: "_getParent",
                value: function() {
                    var b = this,
                        c;
                    if (l.default.isElement(this._config.parent)) {
                        c = this._config.parent;
                        if ("undefined" != typeof this._config.parent.jquery) {
                            c = this._config.parent[0]
                        }
                    } else {
                        c = document.querySelector(this._config.parent)
                    }
                    var d = "[data-toggle=\"collapse\"][data-parent=\"".concat(this._config.parent, "\"]"),
                        e = [].slice.call(c.querySelectorAll(d));
                    (0, k.default)(e).each(function(c, d) {
                        b._addAriaAndCollapsedClass(a._getTargetFromElement(d), [d])
                    });
                    return c
                }
            }, {
                key: "_addAriaAndCollapsedClass",
                value: function(a, b) {
                    var c = (0, k.default)(a).hasClass(s.SHOW);
                    if (b.length) {
                        (0, k.default)(b).toggleClass(s.COLLAPSED, !c).attr("aria-expanded", c)
                    }
                }
            }], [{
                key: "_getTargetFromElement",
                value: function(a) {
                    var b = l.default.getSelectorFromElement(a);
                    return b ? document.querySelector(b) : null
                }
            }, {
                key: "_jQueryInterface",
                value: function(b) {
                    return this.each(function() {
                        var c = (0, k.default)(this),
                            d = c.data(m),
                            g = f({}, p, c.data(), "object" === e(b) && b ? b : {});
                        if (!d && g.toggle && /show|hide/.test(b)) {
                            g.toggle = !1
                        }
                        if (!d) {
                            d = new a(this, g);
                            c.data(m, d)
                        }
                        if ("string" == typeof b) {
                            if ("undefined" == typeof d[b]) {
                                throw new TypeError("No method named \"".concat(b, "\""))
                            }
                            d[b]()
                        }
                    })
                }
            }, {
                key: "VERSION",
                get: function() {
                    return "4.3.1"
                }
            }, {
                key: "Default",
                get: function() {
                    return p
                }
            }]);
            return a
        }();
    (0, k.default)(document).on(r.CLICK_DATA_API, u.DATA_TOGGLE, function(a) {
        if ("A" === a.currentTarget.tagName) {
            a.preventDefault()
        }
        var b = (0, k.default)(this),
            c = l.default.getSelectorFromElement(this),
            d = [].slice.call(document.querySelectorAll(c));
        (0, k.default)(d).each(function() {
            var a = (0, k.default)(this),
                c = a.data(m),
                d = c ? "toggle" : b.data();
            v._jQueryInterface.call(a, d)
        })
    });
    k.default.fn.collapse = v._jQueryInterface;
    k.default.fn.collapse.Constructor = v;
    k.default.fn.collapse.noConflict = function() {
        k.default.fn.collapse = o;
        return v._jQueryInterface
    };
    a.default = v;
    return a.default
});
define("theme_boost/aria", ["jquery", "core/pending"], function(a, b) {
    return {
        init: function init() {
            var c = !1,
                d = function() {
                    c = !0
                },
                e = function() {
                    var a = c;
                    c = !1;
                    return a
                };
            a("[data-toggle=\"dropdown\"]").keydown(function(b) {
                var c = b.which || b.keyCode,
                    e;
                if (38 == c) {
                    d()
                }
                if (27 == c) {
                    e = a(b.target).attr("aria-expanded");
                    b.preventDefault();
                    if ("false" == e) {
                        a(b.target).click()
                    }
                }
                if (32 == c || 13 == c) {
                    b.preventDefault();
                    a(b.target).click()
                }
            });
            var f = function(c) {
                var d = function(b) {
                    a(this).focus();
                    b.resolve()
                }.bind(c);
                setTimeout(d, 50, new b("core/aria:delayed-focus"))
            };
            a(".dropdown").on("shown.bs.dropdown", function(b) {
                var c = a(b.target).find("[role=\"menu\"]"),
                    d = !1,
                    g = !1;
                if (c) {
                    d = a(c).find("[role=\"menuitem\"]")
                }
                if (d && 0 < d.length) {
                    if (e()) {
                        g = d[d.length - 1]
                    } else {
                        g = d[0]
                    }
                }
                if (g) {
                    f(g)
                }
            });
            a(".dropdown [role=\"menu\"] [role=\"menuitem\"]").keypress(function(b) {
                var c = String.fromCharCode(b.which || b.keyCode),
                    d = a(b.target).closest("[role=\"menu\"]"),
                    e = 0,
                    g = !1,
                    h, j;
                if (!d) {
                    return
                }
                g = a(d).find("[role=\"menuitem\"]");
                if (!g) {
                    return
                }
                c = c.toLowerCase();
                for (e = 0; e < g.length; e++) {
                    h = a(g[e]);
                    j = h.text().trim().toLowerCase();
                    if (0 == j.indexOf(c)) {
                        f(h);
                        break
                    }
                }
            });
            a(".dropdown [role=\"menu\"] [role=\"menuitem\"]").keydown(function(b) {
                var c = b.which || b.keyCode,
                    d = !1,
                    e = a(b.target).closest("[role=\"menu\"]"),
                    g = 0,
                    h = !1;
                if (!e) {
                    return
                }
                h = a(e).find("[role=\"menuitem\"]");
                if (!h) {
                    return
                }
                if (40 == c) {
                    for (g = 0; g < h.length - 1; g++) {
                        if (h[g] == b.target) {
                            d = h[g + 1];
                            break
                        }
                    }
                    if (!d) {
                        d = h[0]
                    }
                } else if (38 == c) {
                    for (g = 1; g < h.length; g++) {
                        if (h[g] == b.target) {
                            d = h[g - 1];
                            break
                        }
                    }
                    if (!d) {
                        d = h[h.length - 1]
                    }
                } else if (36 == c) {
                    d = h[0]
                } else if (35 == c) {
                    d = h[h.length - 1]
                }
                if (d) {
                    b.preventDefault();
                    f(d)
                }
            });
            a(".dropdown").on("hidden.bs.dropdown", function(b) {
                var c = a(b.target).find("[data-toggle=\"dropdown\"]");
                if (c) {
                    f(c)
                }
            });
            window.addEventListener("load", function() {
                var a = document.querySelectorAll("[data-aria-autofocus=\"true\"][role=\"alert\"]");
                Array.prototype.forEach.call(a, function(a) {
                    a.innerHTML += " ";
                    a.removeAttribute("data-aria-autofocus")
                })
            })
        }
    }
});
define("theme_boost/drawer", ["jquery", "core/custom_interaction_events", "core/log", "core/pubsub"], function(a, b, c, d) {
    var f = {
            TOGGLE_REGION: "[data-region=\"drawer-toggle\"]",
            TOGGLE_ACTION: "[data-action=\"toggle-drawer\"]",
            TOGGLE_TARGET: "aria-controls",
            TOGGLE_SIDE: "left",
            BODY: "body",
            SECTION: ".list-group-item[href*=\"#section-\"]",
            DRAWER: "#nav-drawer"
        },
        g = 768 > a(document).width(),
        h = function() {
            if (!a(f.TOGGLE_REGION).length) {
                c.debug("Page is missing a drawer region")
            }
            if (!a(f.TOGGLE_ACTION).length) {
                c.debug("Page is missing a drawer toggle link")
            }
            a(f.TOGGLE_REGION).each(function(b, c) {
                var d = a(c).find(f.TOGGLE_ACTION),
                    e = d.attr("aria-controls"),
                    h = a(document.getElementById(e)),
                    i = "false" == d.attr("aria-expanded"),
                    j = d.attr("data-side"),
                    k = a(f.BODY),
                    l = d.attr("data-preference");
                if (g) {
                    M.util.set_user_preference(l, "false")
                }
                h.on("mousewheel DOMMouseScroll", this.preventPageScroll);
                if (!i) {
                    k.addClass("drawer-open-" + j);
                    d.attr("aria-expanded", "true")
                } else {
                    d.attr("aria-expanded", "false")
                }
            }.bind(this));
            this.registerEventListeners();
            if (g) {
                this.closeAll()
            }
        };
    h.prototype.closeAll = function() {
        a(f.TOGGLE_REGION).each(function(b, c) {
            var d = a(c).find(f.TOGGLE_ACTION),
                e = d.attr("data-side"),
                h = a(f.BODY),
                i = d.attr("aria-controls"),
                j = a(document.getElementById(i)),
                k = d.attr("data-preference");
            d.attr("aria-expanded", "false");
            h.removeClass("drawer-open-" + e);
            j.attr("aria-hidden", "true");
            j.addClass("closed");
            if (!g) {
                M.util.set_user_preference(k, "false")
            }
        })
    };
    h.prototype.toggleDrawer = function(b) {
        var c = a(b.target).closest("[data-action=toggle-drawer]"),
            e = c.attr("aria-controls"),
            h = a(document.getElementById(e)),
            i = a(f.BODY),
            j = c.attr("data-side"),
            k = c.attr("data-preference");
        if (g) {
            M.util.set_user_preference(k, "false")
        }
        i.addClass("drawer-ease");
        var l = "true" == c.attr("aria-expanded");
        if (!l) {
            c.attr("aria-expanded", "true");
            h.attr("aria-hidden", "false");
            h.focus();
            i.addClass("drawer-open-" + j);
            h.removeClass("closed");
            if (!g) {
                M.util.set_user_preference(k, "true")
            }
        } else {
            i.removeClass("drawer-open-" + j);
            c.attr("aria-expanded", "false");
            h.addClass("closed").delay(500).queue(function() {
                a(this).attr("aria-hidden", "true").dequeue()
            });
            if (!g) {
                M.util.set_user_preference(k, "false")
            }
        }
        d.publish("nav-drawer-toggle-start", l)
    };
    h.prototype.preventPageScroll = function(b) {
        var c = b.wheelDelta || b.originalEvent && b.originalEvent.wheelDelta || -b.originalEvent.detail,
            d = 0 <= this.scrollTop + a(this).outerHeight() - this.scrollHeight,
            e = 0 >= this.scrollTop;
        if (0 > c && d || 0 < c && e) {
            b.preventDefault()
        }
    };
    h.prototype.registerEventListeners = function() {
        a(f.TOGGLE_ACTION).each(function(c, d) {
            b.define(a(d), [b.events.activate]);
            a(d).on(b.events.activate, function(a, b) {
                this.toggleDrawer(b.originalEvent);
                b.originalEvent.preventDefault()
            }.bind(this))
        }.bind(this));
        a(f.SECTION).click(function() {
            if (g) {
                this.closeAll()
            }
        }.bind(this));
        a(f.DRAWER).on("webkitTransitionEnd msTransitionEnd transitionend", function(b) {
            var c = a(b.target).closest(f.DRAWER),
                e = "false" == c.attr("aria-hidden");
            d.publish("nav-drawer-toggle-end", e)
        })
    };
    return {
        init: function init() {
            return new h
        }
    }
});
"use strict";
define("theme_boost/button", ["exports", "jquery"], function(a, b) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    var f = function(a) {
        return a && a.__esModule ? a : {
            default: a
        }
    }(b);

    function c(a, b) {
        if (!(a instanceof b)) {
            throw new TypeError("Cannot call a class as a function")
        }
    }

    function d(a, b) {
        for (var c = 0, d; c < b.length; c++) {
            d = b[c];
            d.enumerable = d.enumerable || !1;
            d.configurable = !0;
            if ("value" in d) d.writable = !0;
            Object.defineProperty(a, d.key, d)
        }
    }

    function e(a, b, c) {
        if (b) d(a.prototype, b);
        if (c) d(a, c);
        return a
    }
    var g = "bs.button",
        h = ".".concat(g),
        i = ".data-api",
        j = f.default.fn.button,
        k = {
            ACTIVE: "active",
            BUTTON: "btn",
            FOCUS: "focus"
        },
        l = {
            DATA_TOGGLE_CARROT: "[data-toggle^=\"button\"]",
            DATA_TOGGLE: "[data-toggle=\"buttons\"]",
            INPUT: "input:not([type=\"hidden\"])",
            ACTIVE: ".active",
            BUTTON: ".btn"
        },
        m = {
            CLICK_DATA_API: "click".concat(h).concat(i),
            FOCUS_BLUR_DATA_API: "focus".concat(h).concat(i, " ") + "blur".concat(h).concat(i)
        },
        n = function() {
            function a(b) {
                c(this, a);
                this._element = b
            }
            e(a, [{
                key: "toggle",
                value: function() {
                    var a = !0,
                        b = !0,
                        c = (0, f.default)(this._element).closest(l.DATA_TOGGLE)[0];
                    if (c) {
                        var d = this._element.querySelector(l.INPUT);
                        if (d) {
                            if ("radio" === d.type) {
                                if (d.checked && this._element.classList.contains(k.ACTIVE)) {
                                    a = !1
                                } else {
                                    var e = c.querySelector(l.ACTIVE);
                                    if (e) {
                                        (0, f.default)(e).removeClass(k.ACTIVE)
                                    }
                                }
                            }
                            if (a) {
                                if (d.hasAttribute("disabled") || c.hasAttribute("disabled") || d.classList.contains("disabled") || c.classList.contains("disabled")) {
                                    return
                                }
                                d.checked = !this._element.classList.contains(k.ACTIVE);
                                (0, f.default)(d).trigger("change")
                            }
                            d.focus();
                            b = !1
                        }
                    }
                    if (b) {
                        this._element.setAttribute("aria-pressed", !this._element.classList.contains(k.ACTIVE))
                    }
                    if (a) {
                        (0, f.default)(this._element).toggleClass(k.ACTIVE)
                    }
                }
            }, {
                key: "dispose",
                value: function() {
                    f.default.removeData(this._element, g);
                    this._element = null
                }
            }], [{
                key: "_jQueryInterface",
                value: function(b) {
                    return this.each(function() {
                        var c = (0, f.default)(this).data(g);
                        if (!c) {
                            c = new a(this);
                            (0, f.default)(this).data(g, c)
                        }
                        if ("toggle" === b) {
                            c[b]()
                        }
                    })
                }
            }, {
                key: "VERSION",
                get: function() {
                    return "4.3.1"
                }
            }]);
            return a
        }();
    (0, f.default)(document).on(m.CLICK_DATA_API, l.DATA_TOGGLE_CARROT, function(a) {
        a.preventDefault();
        var b = a.target;
        if (!(0, f.default)(b).hasClass(k.BUTTON)) {
            b = (0, f.default)(b).closest(l.BUTTON)
        }
        n._jQueryInterface.call((0, f.default)(b), "toggle")
    }).on(m.FOCUS_BLUR_DATA_API, l.DATA_TOGGLE_CARROT, function(a) {
        var b = (0, f.default)(a.target).closest(l.BUTTON)[0];
        (0, f.default)(b).toggleClass(k.FOCUS, /^focus(in)?$/.test(a.type))
    });
    f.default.fn.button = n._jQueryInterface;
    f.default.fn.button.Constructor = n;
    f.default.fn.button.noConflict = function() {
        f.default.fn.button = j;
        return n._jQueryInterface
    };
    a.default = n;
    return a.default
});
define("theme_boost/form-display-errors", ["jquery", "core/event"], function(a, b) {
    return {
        enhance: function enhance(c) {
            var d = document.getElementById(c);
            if (!d) {
                return
            }
            a(d).on(b.Events.FORM_FIELD_VALIDATION, function(b, c) {
                b.preventDefault();
                var e = a(d).closest(".form-group"),
                    f = e.find(".form-control-feedback");
                if ("TEXTAREA" == a(d).prop("tagName") && e.find("[contenteditable]")) {
                    d = e.find("[contenteditable]")
                }
                if ("" !== c) {
                    e.addClass("has-danger");
                    e.data("client-validation-error", !0);
                    a(d).addClass("is-invalid");
                    a(d).attr("aria-describedby", f.attr("id"));
                    a(d).attr("aria-invalid", !0);
                    f.attr("tabindex", 0);
                    f.html(c);
                    if (!f.is(":visible")) {
                        f.show();
                        f.focus()
                    }
                } else {
                    if (!0 === e.data("client-validation-error")) {
                        e.removeClass("has-danger");
                        e.data("client-validation-error", !1);
                        a(d).removeClass("is-invalid");
                        a(d).removeAttr("aria-describedby");
                        a(d).attr("aria-invalid", !1);
                        f.hide()
                    }
                }
            });
            var e = d.closest("form");
            if (!("boostFormErrorsEnhanced" in e.dataset)) {
                e.addEventListener("submit", function() {
                    var b = a(".form-control-feedback:visible");
                    if (b.length) {
                        b[0].focus()
                    }
                });
                e.dataset.boostFormErrorsEnhanced = 1
            }
        }
    }
});
"use strict";

function _typeof2(a) {
    if ("function" == typeof Symbol && "symbol" == typeof Symbol.iterator) {
        _typeof2 = function(a) {
            return typeof a
        }
    } else {
        _typeof2 = function(a) {
            return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
        }
    }
    return _typeof2(a)
}
define("theme_boost/toast", ["exports", "jquery", "./util"], function(a, b, c) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    var k = d(b),
        l = d(c);

    function d(a) {
        return a && a.__esModule ? a : {
            default: a
        }
    }

    function e(a) {
        if ("function" == typeof Symbol && "symbol" === _typeof2(Symbol.iterator)) {
            e = function(a) {
                return _typeof2(a)
            }
        } else {
            e = function(a) {
                return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : _typeof2(a)
            }
        }
        return e(a)
    }

    function f(a) {
        for (var b = 1; b < arguments.length; b++) {
            var c = null != arguments[b] ? arguments[b] : {},
                d = Object.keys(c);
            if ("function" == typeof Object.getOwnPropertySymbols) {
                d = d.concat(Object.getOwnPropertySymbols(c).filter(function(a) {
                    return Object.getOwnPropertyDescriptor(c, a).enumerable
                }))
            }
            d.forEach(function(b) {
                g(a, b, c[b])
            })
        }
        return a
    }

    function g(a, b, c) {
        if (b in a) {
            Object.defineProperty(a, b, {
                value: c,
                enumerable: !0,
                configurable: !0,
                writable: !0
            })
        } else {
            a[b] = c
        }
        return a
    }

    function h(a, b) {
        if (!(a instanceof b)) {
            throw new TypeError("Cannot call a class as a function")
        }
    }

    function i(a, b) {
        for (var c = 0, d; c < b.length; c++) {
            d = b[c];
            d.enumerable = d.enumerable || !1;
            d.configurable = !0;
            if ("value" in d) d.writable = !0;
            Object.defineProperty(a, d.key, d)
        }
    }

    function j(a, b, c) {
        if (b) i(a.prototype, b);
        if (c) i(a, c);
        return a
    }
    var m = "bs.toast",
        n = ".".concat(m),
        o = k.default.fn.toast,
        p = {
            CLICK_DISMISS: "click.dismiss".concat(n),
            HIDE: "hide".concat(n),
            HIDDEN: "hidden".concat(n),
            SHOW: "show".concat(n),
            SHOWN: "shown".concat(n)
        },
        q = {
            FADE: "fade",
            HIDE: "hide",
            SHOW: "show",
            SHOWING: "showing"
        },
        r = {
            animation: "boolean",
            autohide: "boolean",
            delay: "number"
        },
        s = {
            animation: !0,
            autohide: !0,
            delay: 500
        },
        t = {
            DATA_DISMISS: "[data-dismiss=\"toast\"]"
        },
        u = function() {
            function a(b, c) {
                h(this, a);
                this._element = b;
                this._config = this._getConfig(c);
                this._timeout = null;
                this._setListeners()
            }
            j(a, [{
                key: "show",
                value: function() {
                    var a = this;
                    (0, k.default)(this._element).trigger(p.SHOW);
                    if (this._config.animation) {
                        this._element.classList.add(q.FADE)
                    }
                    var b = function() {
                        a._element.classList.remove(q.SHOWING);
                        a._element.classList.add(q.SHOW);
                        (0, k.default)(a._element).trigger(p.SHOWN);
                        if (a._config.autohide) {
                            a.hide()
                        }
                    };
                    this._element.classList.remove(q.HIDE);
                    this._element.classList.add(q.SHOWING);
                    if (this._config.animation) {
                        var c = l.default.getTransitionDurationFromElement(this._element);
                        (0, k.default)(this._element).one(l.default.TRANSITION_END, b).emulateTransitionEnd(c)
                    } else {
                        b()
                    }
                }
            }, {
                key: "hide",
                value: function(a) {
                    var b = this;
                    if (!this._element.classList.contains(q.SHOW)) {
                        return
                    }(0, k.default)(this._element).trigger(p.HIDE);
                    if (a) {
                        this._close()
                    } else {
                        this._timeout = setTimeout(function() {
                            b._close()
                        }, this._config.delay)
                    }
                }
            }, {
                key: "dispose",
                value: function() {
                    clearTimeout(this._timeout);
                    this._timeout = null;
                    if (this._element.classList.contains(q.SHOW)) {
                        this._element.classList.remove(q.SHOW)
                    }(0, k.default)(this._element).off(p.CLICK_DISMISS);
                    k.default.removeData(this._element, m);
                    this._element = null;
                    this._config = null
                }
            }, {
                key: "_getConfig",
                value: function(a) {
                    a = f({}, s, (0, k.default)(this._element).data(), "object" === e(a) && a ? a : {});
                    l.default.typeCheckConfig("toast", a, this.constructor.DefaultType);
                    return a
                }
            }, {
                key: "_setListeners",
                value: function() {
                    var a = this;
                    (0, k.default)(this._element).on(p.CLICK_DISMISS, t.DATA_DISMISS, function() {
                        return a.hide(!0)
                    })
                }
            }, {
                key: "_close",
                value: function() {
                    var a = this,
                        b = function() {
                            a._element.classList.add(q.HIDE);
                            (0, k.default)(a._element).trigger(p.HIDDEN)
                        };
                    this._element.classList.remove(q.SHOW);
                    if (this._config.animation) {
                        var c = l.default.getTransitionDurationFromElement(this._element);
                        (0, k.default)(this._element).one(l.default.TRANSITION_END, b).emulateTransitionEnd(c)
                    } else {
                        b()
                    }
                }
            }], [{
                key: "_jQueryInterface",
                value: function(b) {
                    return this.each(function() {
                        var c = (0, k.default)(this),
                            d = c.data(m),
                            f = "object" === e(b) && b;
                        if (!d) {
                            d = new a(this, f);
                            c.data(m, d)
                        }
                        if ("string" == typeof b) {
                            if ("undefined" == typeof d[b]) {
                                throw new TypeError("No method named \"".concat(b, "\""))
                            }
                            d[b](this)
                        }
                    })
                }
            }, {
                key: "VERSION",
                get: function() {
                    return "4.3.1"
                }
            }, {
                key: "DefaultType",
                get: function() {
                    return r
                }
            }, {
                key: "Default",
                get: function() {
                    return s
                }
            }]);
            return a
        }();
    k.default.fn.toast = u._jQueryInterface;
    k.default.fn.toast.Constructor = u;
    k.default.fn.toast.noConflict = function() {
        k.default.fn.toast = o;
        return u._jQueryInterface
    };
    a.default = u;
    return a.default
});
"use strict";
define("theme_boost/index", ["exports", "jquery", "./alert", "./button", "./carousel", "./collapse", "./dropdown", "./modal", "./popover", "./scrollspy", "./tab", "./toast", "./tooltip", "./util"], function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    a.Tooltip = a.Toast = a.Tab = a.Scrollspy = a.Popover = a.Modal = a.Dropdown = a.Collapse = a.Carousel = a.Button = a.Alert = a.Util = void 0;
    var p = o(b),
        q = o(c),
        r = o(d),
        s = o(e),
        t = o(f),
        u = o(g),
        v = o(h),
        w = o(i),
        x = o(j),
        y = o(k),
        z = o(l),
        A = o(m),
        B = o(n);

    function o(a) {
        return a && a.__esModule ? a : {
            default: a
        }
    }(function() {
        if ("undefined" == typeof p.default) {
            throw new TypeError("Bootstrap's JavaScript requires jQuery. jQuery must be included before Bootstrap's JavaScript.")
        }
        var a = p.default.fn.jquery.split(" ")[0].split("."),
            b = 9;
        if (a[0] < 2 && a[1] < b || a[0] === 1 && a[1] === b && a[2] < 1 || a[0] >= 4) {
            throw new Error("Bootstrap's JavaScript requires at least jQuery v1.9.1 but less than v4.0.0")
        }
    })();
    a.Util = B.default;
    a.Alert = q.default;
    a.Button = r.default;
    a.Carousel = s.default;
    a.Collapse = t.default;
    a.Dropdown = u.default;
    a.Modal = v.default;
    a.Popover = w.default;
    a.Scrollspy = x.default;
    a.Tab = y.default;
    a.Toast = z.default;
    a.Tooltip = A.default
});
"use strict";

function _typeof2(a) {
    if ("function" == typeof Symbol && "symbol" == typeof Symbol.iterator) {
        _typeof2 = function(a) {
            return typeof a
        }
    } else {
        _typeof2 = function(a) {
            return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
        }
    }
    return _typeof2(a)
}
define("theme_boost/scrollspy", ["exports", "jquery", "./util"], function(a, b, c) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    var k = d(b),
        l = d(c);

    function d(a) {
        return a && a.__esModule ? a : {
            default: a
        }
    }

    function e(a) {
        if ("function" == typeof Symbol && "symbol" === _typeof2(Symbol.iterator)) {
            e = function(a) {
                return _typeof2(a)
            }
        } else {
            e = function(a) {
                return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : _typeof2(a)
            }
        }
        return e(a)
    }

    function f(a) {
        for (var b = 1; b < arguments.length; b++) {
            var c = null != arguments[b] ? arguments[b] : {},
                d = Object.keys(c);
            if ("function" == typeof Object.getOwnPropertySymbols) {
                d = d.concat(Object.getOwnPropertySymbols(c).filter(function(a) {
                    return Object.getOwnPropertyDescriptor(c, a).enumerable
                }))
            }
            d.forEach(function(b) {
                g(a, b, c[b])
            })
        }
        return a
    }

    function g(a, b, c) {
        if (b in a) {
            Object.defineProperty(a, b, {
                value: c,
                enumerable: !0,
                configurable: !0,
                writable: !0
            })
        } else {
            a[b] = c
        }
        return a
    }

    function h(a, b) {
        if (!(a instanceof b)) {
            throw new TypeError("Cannot call a class as a function")
        }
    }

    function i(a, b) {
        for (var c = 0, d; c < b.length; c++) {
            d = b[c];
            d.enumerable = d.enumerable || !1;
            d.configurable = !0;
            if ("value" in d) d.writable = !0;
            Object.defineProperty(a, d.key, d)
        }
    }

    function j(a, b, c) {
        if (b) i(a.prototype, b);
        if (c) i(a, c);
        return a
    }
    var m = "bs.scrollspy",
        n = ".".concat(m),
        o = k.default.fn.scrollspy,
        p = {
            offset: 10,
            method: "auto",
            target: ""
        },
        q = {
            offset: "number",
            method: "string",
            target: "(string|element)"
        },
        r = {
            ACTIVATE: "activate".concat(n),
            SCROLL: "scroll".concat(n),
            LOAD_DATA_API: "load".concat(n).concat(".data-api")
        },
        s = {
            DROPDOWN_ITEM: "dropdown-item",
            DROPDOWN_MENU: "dropdown-menu",
            ACTIVE: "active"
        },
        t = {
            DATA_SPY: "[data-spy=\"scroll\"]",
            ACTIVE: ".active",
            NAV_LIST_GROUP: ".nav, .list-group",
            NAV_LINKS: ".nav-link",
            NAV_ITEMS: ".nav-item",
            LIST_ITEMS: ".list-group-item",
            DROPDOWN: ".dropdown",
            DROPDOWN_ITEMS: ".dropdown-item",
            DROPDOWN_TOGGLE: ".dropdown-toggle"
        },
        u = {
            OFFSET: "offset",
            POSITION: "position"
        },
        v = function() {
            function a(b, c) {
                var d = this;
                h(this, a);
                this._element = b;
                this._scrollElement = "BODY" === b.tagName ? window : b;
                this._config = this._getConfig(c);
                this._selector = "".concat(this._config.target, " ").concat(t.NAV_LINKS, ",") + "".concat(this._config.target, " ").concat(t.LIST_ITEMS, ",") + "".concat(this._config.target, " ").concat(t.DROPDOWN_ITEMS);
                this._offsets = [];
                this._targets = [];
                this._activeTarget = null;
                this._scrollHeight = 0;
                (0, k.default)(this._scrollElement).on(r.SCROLL, function(a) {
                    return d._process(a)
                });
                this.refresh();
                this._process()
            }
            j(a, [{
                key: "refresh",
                value: function() {
                    var a = this,
                        b = this._scrollElement === this._scrollElement.window ? u.OFFSET : u.POSITION,
                        c = "auto" === this._config.method ? b : this._config.method,
                        d = c === u.POSITION ? this._getScrollTop() : 0;
                    this._offsets = [];
                    this._targets = [];
                    this._scrollHeight = this._getScrollHeight();
                    var e = [].slice.call(document.querySelectorAll(this._selector));
                    e.map(function(a) {
                        var b, e = l.default.getSelectorFromElement(a);
                        if (e) {
                            b = document.querySelector(e)
                        }
                        if (b) {
                            var f = b.getBoundingClientRect();
                            if (f.width || f.height) {
                                return [(0, k.default)(b)[c]().top + d, e]
                            }
                        }
                        return null
                    }).filter(function(a) {
                        return a
                    }).sort(function(c, a) {
                        return c[0] - a[0]
                    }).forEach(function(b) {
                        a._offsets.push(b[0]);
                        a._targets.push(b[1])
                    })
                }
            }, {
                key: "dispose",
                value: function() {
                    k.default.removeData(this._element, m);
                    (0, k.default)(this._scrollElement).off(n);
                    this._element = null;
                    this._scrollElement = null;
                    this._config = null;
                    this._selector = null;
                    this._offsets = null;
                    this._targets = null;
                    this._activeTarget = null;
                    this._scrollHeight = null
                }
            }, {
                key: "_getConfig",
                value: function(a) {
                    a = f({}, p, "object" === e(a) && a ? a : {});
                    if ("string" != typeof a.target) {
                        var b = (0, k.default)(a.target).attr("id");
                        if (!b) {
                            b = l.default.getUID("scrollspy");
                            (0, k.default)(a.target).attr("id", b)
                        }
                        a.target = "#".concat(b)
                    }
                    l.default.typeCheckConfig("scrollspy", a, q);
                    return a
                }
            }, {
                key: "_getScrollTop",
                value: function() {
                    return this._scrollElement === window ? this._scrollElement.pageYOffset : this._scrollElement.scrollTop
                }
            }, {
                key: "_getScrollHeight",
                value: function() {
                    return this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight)
                }
            }, {
                key: "_getOffsetHeight",
                value: function() {
                    return this._scrollElement === window ? window.innerHeight : this._scrollElement.getBoundingClientRect().height
                }
            }, {
                key: "_process",
                value: function() {
                    var a = this._getScrollTop() + this._config.offset,
                        b = this._getScrollHeight(),
                        c = this._config.offset + b - this._getOffsetHeight();
                    if (this._scrollHeight !== b) {
                        this.refresh()
                    }
                    if (a >= c) {
                        var d = this._targets[this._targets.length - 1];
                        if (this._activeTarget !== d) {
                            this._activate(d)
                        }
                        return
                    }
                    if (this._activeTarget && a < this._offsets[0] && 0 < this._offsets[0]) {
                        this._activeTarget = null;
                        this._clear();
                        return
                    }
                    for (var e = this._offsets.length, f = e, g; f--;) {
                        g = this._activeTarget !== this._targets[f] && a >= this._offsets[f] && ("undefined" == typeof this._offsets[f + 1] || a < this._offsets[f + 1]);
                        if (g) {
                            this._activate(this._targets[f])
                        }
                    }
                }
            }, {
                key: "_activate",
                value: function(a) {
                    this._activeTarget = a;
                    this._clear();
                    var b = this._selector.split(",").map(function(b) {
                            return "".concat(b, "[data-target=\"").concat(a, "\"],").concat(b, "[href=\"").concat(a, "\"]")
                        }),
                        c = (0, k.default)([].slice.call(document.querySelectorAll(b.join(","))));
                    if (c.hasClass(s.DROPDOWN_ITEM)) {
                        c.closest(t.DROPDOWN).find(t.DROPDOWN_TOGGLE).addClass(s.ACTIVE);
                        c.addClass(s.ACTIVE)
                    } else {
                        c.addClass(s.ACTIVE);
                        c.parents(t.NAV_LIST_GROUP).prev("".concat(t.NAV_LINKS, ", ").concat(t.LIST_ITEMS)).addClass(s.ACTIVE);
                        c.parents(t.NAV_LIST_GROUP).prev(t.NAV_ITEMS).children(t.NAV_LINKS).addClass(s.ACTIVE)
                    }(0, k.default)(this._scrollElement).trigger(r.ACTIVATE, {
                        relatedTarget: a
                    })
                }
            }, {
                key: "_clear",
                value: function() {
                    [].slice.call(document.querySelectorAll(this._selector)).filter(function(a) {
                        return a.classList.contains(s.ACTIVE)
                    }).forEach(function(a) {
                        return a.classList.remove(s.ACTIVE)
                    })
                }
            }], [{
                key: "_jQueryInterface",
                value: function(b) {
                    return this.each(function() {
                        var c = (0, k.default)(this).data(m),
                            d = "object" === e(b) && b;
                        if (!c) {
                            c = new a(this, d);
                            (0, k.default)(this).data(m, c)
                        }
                        if ("string" == typeof b) {
                            if ("undefined" == typeof c[b]) {
                                throw new TypeError("No method named \"".concat(b, "\""))
                            }
                            c[b]()
                        }
                    })
                }
            }, {
                key: "VERSION",
                get: function() {
                    return "4.3.1"
                }
            }, {
                key: "Default",
                get: function() {
                    return p
                }
            }]);
            return a
        }();
    (0, k.default)(window).on(r.LOAD_DATA_API, function() {
        for (var a = [].slice.call(document.querySelectorAll(t.DATA_SPY)), b = a.length, c = b, d; c--;) {
            d = (0, k.default)(a[c]);
            v._jQueryInterface.call(d, d.data())
        }
    });
    k.default.fn.scrollspy = v._jQueryInterface;
    k.default.fn.scrollspy.Constructor = v;
    k.default.fn.scrollspy.noConflict = function() {
        k.default.fn.scrollspy = o;
        return v._jQueryInterface
    };
    a.default = v;
    return a.default
});

function _typeof(a) {
    if ("function" == typeof Symbol && "symbol" == typeof Symbol.iterator) {
        _typeof = function(a) {
            return typeof a
        }
    } else {
        _typeof = function(a) {
            return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
        }
    }
    return _typeof(a)
}(function(a, b) {
    if ("function" == typeof define && define.amd) {
        define("theme_boost/tether", b)
    } else if ("object" === ("undefined" == typeof exports ? "undefined" : _typeof(exports))) {
        module.exports = b(require, exports, module)
    } else {
        a.Tether = b()
    }
})(this, function() {
    'use strict';
    var u = function() {
        function a(a, b) {
            for (var c = 0, d; c < b.length; c++) {
                d = b[c];
                d.enumerable = d.enumerable || !1;
                d.configurable = !0;
                if ("value" in d) d.writable = !0;
                Object.defineProperty(a, d.key, d)
            }
        }
        return function(b, c, d) {
            if (c) a(b.prototype, c);
            if (d) a(b, d);
            return b
        }
    }();

    function a(a, b) {
        if (!(a instanceof b)) {
            throw new TypeError("Cannot call a class as a function")
        }
    }
    var v;
    if ("undefined" == typeof v) {
        v = {
            modules: []
        }
    }
    var w = null;

    function b(a) {
        var c = a.getBoundingClientRect(),
            d = {};
        for (var e in c) {
            d[e] = c[e]
        }
        if (a.ownerDocument !== document) {
            var f = a.ownerDocument.defaultView.frameElement;
            if (f) {
                var g = b(f);
                d.top += g.top;
                d.bottom += g.top;
                d.left += g.left;
                d.right += g.left
            }
        }
        return d
    }

    function c(a) {
        var b = getComputedStyle(a) || {},
            c = b.position,
            d = [];
        if ("fixed" === c) {
            return [a]
        }
        var e = a;
        while ((e = e.parentNode) && e && 1 === e.nodeType) {
            var f = void 0;
            try {
                f = getComputedStyle(e)
            } catch (a) {}
            if ("undefined" == typeof f || null === f) {
                d.push(e);
                return d
            }
            var g = f,
                h = g.overflow,
                i = g.overflowX,
                j = g.overflowY;
            if (/(auto|scroll)/.test(h + j + i)) {
                if ("absolute" !== c || 0 <= ["relative", "absolute", "fixed"].indexOf(f.position)) {
                    d.push(e)
                }
            }
        }
        d.push(a.ownerDocument.body);
        if (a.ownerDocument !== document) {
            d.push(a.ownerDocument.defaultView)
        }
        return d
    }
    var x = function() {
            var a = 0;
            return function() {
                return ++a
            }
        }(),
        y = {},
        z = function() {
            var a = w;
            if (!a) {
                a = document.createElement("div");
                a.setAttribute("data-tether-id", x());
                h(a.style, {
                    top: 0,
                    left: 0,
                    position: "absolute"
                });
                document.body.appendChild(a);
                w = a
            }
            var c = a.getAttribute("data-tether-id");
            if ("undefined" == typeof y[c]) {
                y[c] = b(a);
                B(function() {
                    delete y[c]
                })
            }
            return y[c]
        };

    function d() {
        if (w) {
            document.body.removeChild(w)
        }
        w = null
    }

    function e(a) {
        var c;
        if (a === document) {
            c = document;
            a = document.documentElement
        } else {
            c = a.ownerDocument
        }
        var d = c.documentElement,
            e = b(a),
            f = z();
        e.top -= f.top;
        e.left -= f.left;
        if ("undefined" == typeof e.width) {
            e.width = document.body.scrollWidth - e.left - e.right
        }
        if ("undefined" == typeof e.height) {
            e.height = document.body.scrollHeight - e.top - e.bottom
        }
        e.top = e.top - d.clientTop;
        e.left = e.left - d.clientLeft;
        e.right = c.body.clientWidth - e.width - e.left;
        e.bottom = c.body.clientHeight - e.height - e.top;
        return e
    }

    function f(a) {
        return a.offsetParent || document.documentElement
    }

    function g() {
        var a = document.createElement("div");
        a.style.width = "100%";
        a.style.height = "200px";
        var b = document.createElement("div");
        h(b.style, {
            position: "absolute",
            top: 0,
            left: 0,
            pointerEvents: "none",
            visibility: "hidden",
            width: "200px",
            height: "150px",
            overflow: "hidden"
        });
        b.appendChild(a);
        document.body.appendChild(b);
        var c = a.offsetWidth;
        b.style.overflow = "scroll";
        var d = a.offsetWidth;
        if (c === d) {
            d = b.clientWidth
        }
        document.body.removeChild(b);
        var e = c - d;
        return {
            width: e,
            height: e
        }
    }

    function h() {
        var a = 0 >= arguments.length || arguments[0] === void 0 ? {} : arguments[0],
            b = [];
        Array.prototype.push.apply(b, arguments);
        b.slice(1).forEach(function(b) {
            if (b) {
                for (var c in b) {
                    if ({}.hasOwnProperty.call(b, c)) {
                        a[c] = b[c]
                    }
                }
            }
        });
        return a
    }

    function i(a, b) {
        if ("undefined" != typeof a.classList) {
            b.split(" ").forEach(function(b) {
                if (b.trim()) {
                    a.classList.remove(b)
                }
            })
        } else {
            var c = new RegExp("(^| )" + b.split(" ").join("|") + "( |$)", "gi"),
                d = l(a).replace(c, " ");
            m(a, d)
        }
    }

    function j(a, b) {
        if ("undefined" != typeof a.classList) {
            b.split(" ").forEach(function(b) {
                if (b.trim()) {
                    a.classList.add(b)
                }
            })
        } else {
            i(a, b);
            var c = l(a) + (" " + b);
            m(a, c)
        }
    }

    function k(a, b) {
        if ("undefined" != typeof a.classList) {
            return a.classList.contains(b)
        }
        var c = l(a);
        return new RegExp("(^| )" + b + "( |$)", "gi").test(c)
    }

    function l(a) {
        if (a.className instanceof a.ownerDocument.defaultView.SVGAnimatedString) {
            return a.className.baseVal
        }
        return a.className
    }

    function m(a, b) {
        a.setAttribute("class", b)
    }

    function n(a, b, c) {
        c.forEach(function(c) {
            if (-1 === b.indexOf(c) && k(a, c)) {
                i(a, c)
            }
        });
        b.forEach(function(b) {
            if (!k(a, b)) {
                j(a, b)
            }
        })
    }
    var A = [],
        B = function(a) {
            A.push(a)
        },
        C = function() {
            var a;
            while (a = A.pop()) {
                a()
            }
        },
        D = function() {
            function b() {
                a(this, b)
            }
            u(b, [{
                key: "on",
                value: function(a, b, c) {
                    var d = 3 >= arguments.length || arguments[3] === void 0 ? !1 : arguments[3];
                    if ("undefined" == typeof this.bindings) {
                        this.bindings = {}
                    }
                    if ("undefined" == typeof this.bindings[a]) {
                        this.bindings[a] = []
                    }
                    this.bindings[a].push({
                        handler: b,
                        ctx: c,
                        once: d
                    })
                }
            }, {
                key: "once",
                value: function(a, b, c) {
                    this.on(a, b, c, !0)
                }
            }, {
                key: "off",
                value: function(a, b) {
                    if ("undefined" == typeof this.bindings || "undefined" == typeof this.bindings[a]) {
                        return
                    }
                    if ("undefined" == typeof b) {
                        delete this.bindings[a]
                    } else {
                        var c = 0;
                        while (c < this.bindings[a].length) {
                            if (this.bindings[a][c].handler === b) {
                                this.bindings[a].splice(c, 1)
                            } else {
                                ++c
                            }
                        }
                    }
                }
            }, {
                key: "trigger",
                value: function(a) {
                    if ("undefined" != typeof this.bindings && this.bindings[a]) {
                        for (var b = 0, c = arguments.length, d = Array(1 < c ? c - 1 : 0), e = 1; e < c; e++) {
                            d[e - 1] = arguments[e]
                        }
                        while (b < this.bindings[a].length) {
                            var f = this.bindings[a][b],
                                g = f.handler,
                                h = f.ctx,
                                j = f.once,
                                k = h;
                            if ("undefined" == typeof k) {
                                k = this
                            }
                            g.apply(k, d);
                            if (j) {
                                this.bindings[a].splice(b, 1)
                            } else {
                                ++b
                            }
                        }
                    }
                }
            }]);
            return b
        }();
    v.Utils = {
        getActualBoundingClientRect: b,
        getScrollParents: c,
        getBounds: e,
        getOffsetParent: f,
        extend: h,
        addClass: j,
        removeClass: i,
        hasClass: k,
        updateClasses: n,
        defer: B,
        flush: C,
        uniqueId: x,
        Evented: D,
        getScrollBarSize: g,
        removeUtilElements: d
    };
    var E = function() {
            function a(a, b) {
                var c = [],
                    d = !0,
                    e = !1,
                    f = void 0;
                try {
                    for (var g = a[Symbol.iterator](), h; !(d = (h = g.next()).done); d = !0) {
                        c.push(h.value);
                        if (b && c.length === b) break
                    }
                } catch (a) {
                    e = !0;
                    f = a
                } finally {
                    try {
                        if (!d && g["return"]) g["return"]()
                    } finally {
                        if (e) throw f
                    }
                }
                return c
            }
            return function(b, c) {
                if (Array.isArray(b)) {
                    return b
                } else if (Symbol.iterator in Object(b)) {
                    return a(b, c)
                } else {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance")
                }
            }
        }(),
        u = function() {
            function a(a, b) {
                for (var c = 0, d; c < b.length; c++) {
                    d = b[c];
                    d.enumerable = d.enumerable || !1;
                    d.configurable = !0;
                    if ("value" in d) d.writable = !0;
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                if (c) a(b.prototype, c);
                if (d) a(b, d);
                return b
            }
        }(),
        F = function(a, b, c) {
            var d = !0;
            _function: while (d) {
                var e = a,
                    f = b,
                    g = c;
                d = !1;
                if (null === e) e = Function.prototype;
                var h = Object.getOwnPropertyDescriptor(e, f);
                if (h === void 0) {
                    var i = Object.getPrototypeOf(e);
                    if (null === i) {
                        return
                    } else {
                        a = i;
                        b = f;
                        c = g;
                        d = !0;
                        h = i = void 0;
                        continue _function
                    }
                } else if ("value" in h) {
                    return h.value
                } else {
                    var j = h.get;
                    if (j === void 0) {
                        return
                    }
                    return j.call(g)
                }
            }
        };

    function a(b, c) {
        if (!(b instanceof c)) {
            throw new TypeError("Cannot call a class as a function")
        }
    }

    function o(a, b) {
        if ("function" != typeof b && null !== b) {
            throw new TypeError("Super expression must either be null or a function, not " + _typeof(b))
        }
        a.prototype = Object.create(b && b.prototype, {
            constructor: {
                value: a,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        });
        if (b) Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b
    }
    if ("undefined" == typeof v) {
        throw new Error("You must include the utils.js file before tether.js")
    }
    var G = v.Utils,
        c = G.getScrollParents,
        e = G.getBounds,
        f = G.getOffsetParent,
        h = G.extend,
        j = G.addClass,
        i = G.removeClass,
        n = G.updateClasses,
        B = G.defer,
        C = G.flush,
        g = G.getScrollBarSize,
        d = G.removeUtilElements;

    function p(c, a) {
        var b = 2 >= arguments.length || arguments[2] === void 0 ? 1 : arguments[2];
        return c + b >= a && a >= c - b
    }
    var H = function() {
            if ("undefined" == typeof document) {
                return ""
            }
            for (var a = document.createElement("div"), b = ["transform", "WebkitTransform", "OTransform", "MozTransform", "msTransform"], c = 0, d; c < b.length; ++c) {
                d = b[c];
                if (a.style[d] !== void 0) {
                    return d
                }
            }
        }(),
        I = [],
        J = function() {
            I.forEach(function(a) {
                a.position(!1)
            });
            C()
        };

    function q() {
        if ("undefined" != typeof performance && "undefined" != typeof performance.now) {
            return performance.now()
        }
        return +new Date
    }(function() {
        var a = null,
            b = null,
            c = null,
            d = function d() {
                if ("undefined" != typeof b && 16 < b) {
                    b = Math.min(b - 16, 250);
                    c = setTimeout(d, 250);
                    return
                }
                if ("undefined" != typeof a && 10 > q() - a) {
                    return
                }
                if (null != c) {
                    clearTimeout(c);
                    c = null
                }
                a = q();
                J();
                b = q() - a
            };
        if ("undefined" != typeof window && "undefined" != typeof window.addEventListener) {
            ["resize", "scroll", "touchmove"].forEach(function(a) {
                window.addEventListener(a, d)
            })
        }
    })();
    var K = {
            center: "center",
            left: "right",
            right: "left"
        },
        L = {
            middle: "middle",
            top: "bottom",
            bottom: "top"
        },
        M = {
            top: 0,
            left: 0,
            middle: "50%",
            center: "50%",
            bottom: "100%",
            right: "100%"
        },
        N = function(a, b) {
            var c = a.left,
                d = a.top;
            if ("auto" === c) {
                c = K[b.left]
            }
            if ("auto" === d) {
                d = L[b.top]
            }
            return {
                left: c,
                top: d
            }
        },
        O = function(a) {
            var b = a.left,
                c = a.top;
            if ("undefined" != typeof M[a.left]) {
                b = M[a.left]
            }
            if ("undefined" != typeof M[a.top]) {
                c = M[a.top]
            }
            return {
                left: b,
                top: c
            }
        };

    function r() {
        for (var a = {
                top: 0,
                left: 0
            }, b = arguments.length, c = Array(b), d = 0; d < b; d++) {
            c[d] = arguments[d]
        }
        c.forEach(function(b) {
            var c = b.top,
                d = b.left;
            if ("string" == typeof c) {
                c = parseFloat(c, 10)
            }
            if ("string" == typeof d) {
                d = parseFloat(d, 10)
            }
            a.top += c;
            a.left += d
        });
        return a
    }

    function s(a, b) {
        if ("string" == typeof a.left && -1 !== a.left.indexOf("%")) {
            a.left = parseFloat(a.left, 10) / 100 * b.width
        }
        if ("string" == typeof a.top && -1 !== a.top.indexOf("%")) {
            a.top = parseFloat(a.top, 10) / 100 * b.height
        }
        return a
    }
    var P = function(a) {
            var b = a.split(" "),
                c = E(b, 2),
                d = c[0],
                e = c[1];
            return {
                top: d,
                left: e
            }
        },
        Q = P,
        R = function(b) {
            o(k, b);

            function k(b) {
                var c = this;
                a(this, k);
                F(Object.getPrototypeOf(k.prototype), "constructor", this).call(this);
                this.position = this.position.bind(this);
                I.push(this);
                this.history = [];
                this.setOptions(b, !1);
                v.modules.forEach(function(a) {
                    if ("undefined" != typeof a.initialize) {
                        a.initialize.call(c)
                    }
                });
                this.position()
            }
            u(k, [{
                key: "getClass",
                value: function() {
                    var a = 0 >= arguments.length || arguments[0] === void 0 ? "" : arguments[0],
                        b = this.options.classes;
                    if ("undefined" != typeof b && b[a]) {
                        return this.options.classes[a]
                    } else if (this.options.classPrefix) {
                        return this.options.classPrefix + "-" + a
                    } else {
                        return a
                    }
                }
            }, {
                key: "setOptions",
                value: function(a) {
                    var b = this,
                        d = 1 >= arguments.length || arguments[1] === void 0 ? !0 : arguments[1];
                    this.options = h({
                        offset: "0 0",
                        targetOffset: "0 0",
                        targetAttachment: "auto auto",
                        classPrefix: "tether"
                    }, a);
                    var e = this.options,
                        f = e.element,
                        g = e.target,
                        i = e.targetModifier;
                    this.element = f;
                    this.target = g;
                    this.targetModifier = i;
                    if ("viewport" === this.target) {
                        this.target = document.body;
                        this.targetModifier = "visible"
                    } else if ("scroll-handle" === this.target) {
                        this.target = document.body;
                        this.targetModifier = "scroll-handle"
                    }["element", "target"].forEach(function(a) {
                        if ("undefined" == typeof b[a]) {
                            throw new Error("Tether Error: Both element and target must be defined")
                        }
                        if ("undefined" != typeof b[a].jquery) {
                            b[a] = b[a][0]
                        } else if ("string" == typeof b[a]) {
                            b[a] = document.querySelector(b[a])
                        }
                    });
                    j(this.element, this.getClass("element"));
                    if (!(!1 === this.options.addTargetClasses)) {
                        j(this.target, this.getClass("target"))
                    }
                    if (!this.options.attachment) {
                        throw new Error("Tether Error: You must provide an attachment")
                    }
                    this.targetAttachment = Q(this.options.targetAttachment);
                    this.attachment = Q(this.options.attachment);
                    this.offset = P(this.options.offset);
                    this.targetOffset = P(this.options.targetOffset);
                    if ("undefined" != typeof this.scrollParents) {
                        this.disable()
                    }
                    if ("scroll-handle" === this.targetModifier) {
                        this.scrollParents = [this.target]
                    } else {
                        this.scrollParents = c(this.target)
                    }
                    if (!(!1 === this.options.enabled)) {
                        this.enable(d)
                    }
                }
            }, {
                key: "getTargetBounds",
                value: function() {
                    if ("undefined" != typeof this.targetModifier) {
                        if ("visible" === this.targetModifier) {
                            if (this.target === document.body) {
                                return {
                                    top: pageYOffset,
                                    left: pageXOffset,
                                    height: innerHeight,
                                    width: innerWidth
                                }
                            } else {
                                var a = e(this.target),
                                    b = {
                                        height: a.height,
                                        width: a.width,
                                        top: a.top,
                                        left: a.left
                                    };
                                b.height = Math.min(b.height, a.height - (pageYOffset - a.top));
                                b.height = Math.min(b.height, a.height - (a.top + a.height - (pageYOffset + innerHeight)));
                                b.height = Math.min(innerHeight, b.height);
                                b.height -= 2;
                                b.width = Math.min(b.width, a.width - (pageXOffset - a.left));
                                b.width = Math.min(b.width, a.width - (a.left + a.width - (pageXOffset + innerWidth)));
                                b.width = Math.min(innerWidth, b.width);
                                b.width -= 2;
                                if (b.top < pageYOffset) {
                                    b.top = pageYOffset
                                }
                                if (b.left < pageXOffset) {
                                    b.left = pageXOffset
                                }
                                return b
                            }
                        } else if ("scroll-handle" === this.targetModifier) {
                            var a = void 0,
                                c = this.target;
                            if (c === document.body) {
                                c = document.documentElement;
                                a = {
                                    left: pageXOffset,
                                    top: pageYOffset,
                                    height: innerHeight,
                                    width: innerWidth
                                }
                            } else {
                                a = e(c)
                            }
                            var d = getComputedStyle(c),
                                f = c.scrollWidth > c.clientWidth || 0 <= [d.overflow, d.overflowX].indexOf("scroll") || this.target !== document.body,
                                g = 0;
                            if (f) {
                                g = 15
                            }
                            var h = a.height - parseFloat(d.borderTopWidth) - parseFloat(d.borderBottomWidth) - g,
                                b = {
                                    width: 15,
                                    height: .975 * h * (h / c.scrollHeight),
                                    left: a.left + a.width - parseFloat(d.borderLeftWidth) - 15
                                },
                                i = 0;
                            if (408 > h && this.target === document.body) {
                                i = -11e-5 * Math.pow(h, 2) - .00727 * h + 22.58
                            }
                            if (this.target !== document.body) {
                                b.height = Math.max(b.height, 24)
                            }
                            var j = this.target.scrollTop / (c.scrollHeight - h);
                            b.top = j * (h - b.height - i) + a.top + parseFloat(d.borderTopWidth);
                            if (this.target === document.body) {
                                b.height = Math.max(b.height, 24)
                            }
                            return b
                        }
                    } else {
                        return e(this.target)
                    }
                }
            }, {
                key: "clearCache",
                value: function() {
                    this._cache = {}
                }
            }, {
                key: "cache",
                value: function(a, b) {
                    if ("undefined" == typeof this._cache) {
                        this._cache = {}
                    }
                    if ("undefined" == typeof this._cache[a]) {
                        this._cache[a] = b.call(this)
                    }
                    return this._cache[a]
                }
            }, {
                key: "enable",
                value: function() {
                    var a = this,
                        b = 0 >= arguments.length || arguments[0] === void 0 ? !0 : arguments[0];
                    if (!(!1 === this.options.addTargetClasses)) {
                        j(this.target, this.getClass("enabled"))
                    }
                    j(this.element, this.getClass("enabled"));
                    this.enabled = !0;
                    this.scrollParents.forEach(function(b) {
                        if (b !== a.target.ownerDocument) {
                            b.addEventListener("scroll", a.position)
                        }
                    });
                    if (b) {
                        this.position()
                    }
                }
            }, {
                key: "disable",
                value: function() {
                    var a = this;
                    i(this.target, this.getClass("enabled"));
                    i(this.element, this.getClass("enabled"));
                    this.enabled = !1;
                    if ("undefined" != typeof this.scrollParents) {
                        this.scrollParents.forEach(function(b) {
                            b.removeEventListener("scroll", a.position)
                        })
                    }
                }
            }, {
                key: "destroy",
                value: function() {
                    var a = this;
                    this.disable();
                    I.forEach(function(b, c) {
                        if (b === a) {
                            I.splice(c, 1)
                        }
                    });
                    if (0 === I.length) {
                        d()
                    }
                }
            }, {
                key: "updateAttachClasses",
                value: function(a, b) {
                    var c = this;
                    a = a || this.attachment;
                    b = b || this.targetAttachment;
                    if ("undefined" != typeof this._addAttachClasses && this._addAttachClasses.length) {
                        this._addAttachClasses.splice(0, this._addAttachClasses.length)
                    }
                    if ("undefined" == typeof this._addAttachClasses) {
                        this._addAttachClasses = []
                    }
                    var d = this._addAttachClasses;
                    if (a.top) {
                        d.push(this.getClass("element-attached") + "-" + a.top)
                    }
                    if (a.left) {
                        d.push(this.getClass("element-attached") + "-" + a.left)
                    }
                    if (b.top) {
                        d.push(this.getClass("target-attached") + "-" + b.top)
                    }
                    if (b.left) {
                        d.push(this.getClass("target-attached") + "-" + b.left)
                    }
                    var e = [];
                    ["left", "top", "bottom", "right", "middle", "center"].forEach(function(a) {
                        e.push(c.getClass("element-attached") + "-" + a);
                        e.push(c.getClass("target-attached") + "-" + a)
                    });
                    B(function() {
                        if (!("undefined" != typeof c._addAttachClasses)) {
                            return
                        }
                        n(c.element, c._addAttachClasses, e);
                        if (!(!1 === c.options.addTargetClasses)) {
                            n(c.target, c._addAttachClasses, e)
                        }
                        delete c._addAttachClasses
                    })
                }
            }, {
                key: "position",
                value: function() {
                    var a = this,
                        b = 0 >= arguments.length || arguments[0] === void 0 ? !0 : arguments[0];
                    if (!this.enabled) {
                        return
                    }
                    this.clearCache();
                    var c = N(this.targetAttachment, this.attachment);
                    this.updateAttachClasses(this.attachment, c);
                    var d = this.cache("element-bounds", function() {
                            return e(a.element)
                        }),
                        h = d.width,
                        j = d.height;
                    if (0 === h && 0 === j && "undefined" != typeof this.lastSize) {
                        var k = this.lastSize;
                        h = k.width;
                        j = k.height
                    } else {
                        this.lastSize = {
                            width: h,
                            height: j
                        }
                    }
                    var l = this.cache("target-bounds", function() {
                            return a.getTargetBounds()
                        }),
                        m = l,
                        n = s(O(this.attachment), {
                            width: h,
                            height: j
                        }),
                        o = s(O(c), m),
                        p = s(this.offset, {
                            width: h,
                            height: j
                        }),
                        q = s(this.targetOffset, m);
                    n = r(n, p);
                    o = r(o, q);
                    for (var t = l.left + o.left - n.left, u = l.top + o.top - n.top, w = 0; w < v.modules.length; ++w) {
                        var x = v.modules[w],
                            y = x.position.call(this, {
                                left: t,
                                top: u,
                                targetAttachment: c,
                                targetPos: l,
                                elementPos: d,
                                offset: n,
                                targetOffset: o,
                                manualOffset: p,
                                manualTargetOffset: q,
                                scrollbarSize: D,
                                attachment: this.attachment
                            });
                        if (!1 === y) {
                            return !1
                        } else if ("undefined" == typeof y || "object" !== _typeof(y)) {
                            continue
                        } else {
                            u = y.top;
                            t = y.left
                        }
                    }
                    var z = {
                            page: {
                                top: u,
                                left: t
                            },
                            viewport: {
                                top: u - pageYOffset,
                                bottom: pageYOffset - u - j + innerHeight,
                                left: t - pageXOffset,
                                right: pageXOffset - t - h + innerWidth
                            }
                        },
                        A = this.target.ownerDocument,
                        B = A.defaultView,
                        D = void 0;
                    if (A.body.scrollWidth > B.innerWidth) {
                        D = this.cache("scrollbar-size", g);
                        z.viewport.bottom -= D.height
                    }
                    if (A.body.scrollHeight > B.innerHeight) {
                        D = this.cache("scrollbar-size", g);
                        z.viewport.right -= D.width
                    }
                    if (-1 === ["", "static"].indexOf(A.body.style.position) || -1 === ["", "static"].indexOf(A.body.parentElement.style.position)) {
                        z.page.bottom = A.body.scrollHeight - u - j;
                        z.page.right = A.body.scrollWidth - t - h
                    }
                    if ("undefined" != typeof this.options.optimizations && !1 !== this.options.optimizations.moveElement && !("undefined" != typeof this.targetModifier)) {
                        (function() {
                            var b = a.cache("target-offsetparent", function() {
                                    return f(a.target)
                                }),
                                c = a.cache("target-offsetparent-bounds", function() {
                                    return e(b)
                                }),
                                d = getComputedStyle(b),
                                g = c,
                                h = {};
                            ["Top", "Left", "Bottom", "Right"].forEach(function(a) {
                                h[a.toLowerCase()] = parseFloat(d["border" + a + "Width"])
                            });
                            c.right = A.body.scrollWidth - c.left - g.width + h.right;
                            c.bottom = A.body.scrollHeight - c.top - g.height + h.bottom;
                            if (z.page.top >= c.top + h.top && z.page.bottom >= c.bottom) {
                                if (z.page.left >= c.left + h.left && z.page.right >= c.right) {
                                    var i = b.scrollTop,
                                        j = b.scrollLeft;
                                    z.offset = {
                                        top: z.page.top - c.top + i - h.top,
                                        left: z.page.left - c.left + j - h.left
                                    }
                                }
                            }
                        })()
                    }
                    this.move(z);
                    this.history.unshift(z);
                    if (3 < this.history.length) {
                        this.history.pop()
                    }
                    if (b) {
                        C()
                    }
                    return !0
                }
            }, {
                key: "move",
                value: function(a) {
                    var b = this;
                    if (!("undefined" != typeof this.element.parentNode)) {
                        return
                    }
                    var c = {};
                    for (var d in a) {
                        c[d] = {};
                        for (var e in a[d]) {
                            for (var g = !1, j = 0, k; j < this.history.length; ++j) {
                                k = this.history[j];
                                if ("undefined" != typeof k[d] && !p(k[d][e], a[d][e])) {
                                    g = !0;
                                    break
                                }
                            }
                            if (!g) {
                                c[d][e] = !0
                            }
                        }
                    }
                    var l = {
                            top: "",
                            left: "",
                            right: "",
                            bottom: ""
                        },
                        m = function(a, c) {
                            var d = "undefined" != typeof b.options.optimizations,
                                e = d ? b.options.optimizations.gpu : null;
                            if (!1 !== e) {
                                var f, g;
                                if (a.top) {
                                    l.top = 0;
                                    f = c.top
                                } else {
                                    l.bottom = 0;
                                    f = -c.bottom
                                }
                                if (a.left) {
                                    l.left = 0;
                                    g = c.left
                                } else {
                                    l.right = 0;
                                    g = -c.right
                                }
                                l[H] = "translateX(" + Math.round(g) + "px) translateY(" + Math.round(f) + "px)";
                                if ("msTransform" !== H) {
                                    l[H] += " translateZ(0)"
                                }
                            } else {
                                if (a.top) {
                                    l.top = c.top + "px"
                                } else {
                                    l.bottom = c.bottom + "px"
                                }
                                if (a.left) {
                                    l.left = c.left + "px"
                                } else {
                                    l.right = c.right + "px"
                                }
                            }
                        },
                        n = !1;
                    if ((c.page.top || c.page.bottom) && (c.page.left || c.page.right)) {
                        l.position = "absolute";
                        m(c.page, a.page)
                    } else if ((c.viewport.top || c.viewport.bottom) && (c.viewport.left || c.viewport.right)) {
                        l.position = "fixed";
                        m(c.viewport, a.viewport)
                    } else if ("undefined" != typeof c.offset && c.offset.top && c.offset.left) {
                        (function() {
                            l.position = "absolute";
                            var d = b.cache("target-offsetparent", function() {
                                return f(b.target)
                            });
                            if (f(b.element) !== d) {
                                B(function() {
                                    b.element.parentNode.removeChild(b.element);
                                    d.appendChild(b.element)
                                })
                            }
                            m(c.offset, a.offset);
                            n = !0
                        })()
                    } else {
                        l.position = "absolute";
                        m({
                            top: !0,
                            left: !0
                        }, a.page)
                    }
                    if (!n) {
                        var o = !0,
                            q = this.element.parentNode;
                        while (q && 1 === q.nodeType && "BODY" !== q.tagName) {
                            if ("static" !== getComputedStyle(q).position) {
                                o = !1;
                                break
                            }
                            q = q.parentNode
                        }
                        if (!o) {
                            this.element.parentNode.removeChild(this.element);
                            this.element.ownerDocument.body.appendChild(this.element)
                        }
                    }
                    var r = {},
                        s = !1;
                    for (var e in l) {
                        var t = l[e],
                            u = this.element.style[e];
                        if (u !== t) {
                            s = !0;
                            r[e] = t
                        }
                    }
                    if (s) {
                        B(function() {
                            h(b.element.style, r)
                        })
                    }
                }
            }]);
            return k
        }(D);
    R.modules = [];
    v.position = J;
    var S = h(R, v);
    var E = function() {
            function a(a, b) {
                var c = [],
                    d = !0,
                    e = !1,
                    f = void 0;
                try {
                    for (var g = a[Symbol.iterator](), h; !(d = (h = g.next()).done); d = !0) {
                        c.push(h.value);
                        if (b && c.length === b) break
                    }
                } catch (a) {
                    e = !0;
                    f = a
                } finally {
                    try {
                        if (!d && g["return"]) g["return"]()
                    } finally {
                        if (e) throw f
                    }
                }
                return c
            }
            return function(b, c) {
                if (Array.isArray(b)) {
                    return b
                } else if (Symbol.iterator in Object(b)) {
                    return a(b, c)
                } else {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance")
                }
            }
        }(),
        G = v.Utils,
        e = G.getBounds,
        h = G.extend,
        n = G.updateClasses,
        B = G.defer,
        T = ["left", "top", "right", "bottom"];

    function t(a, b) {
        if ("scrollParent" === b) {
            b = a.scrollParents[0]
        } else if ("window" === b) {
            b = [pageXOffset, pageYOffset, innerWidth + pageXOffset, innerHeight + pageYOffset]
        }
        if (b === document) {
            b = b.documentElement
        }
        if ("undefined" != typeof b.nodeType) {
            (function() {
                var a = b,
                    c = e(b),
                    d = c,
                    f = getComputedStyle(b);
                b = [d.left, d.top, c.width + d.left, c.height + d.top];
                if (a.ownerDocument !== document) {
                    var g = a.ownerDocument.defaultView;
                    b[0] += g.pageXOffset;
                    b[1] += g.pageYOffset;
                    b[2] += g.pageXOffset;
                    b[3] += g.pageYOffset
                }
                T.forEach(function(a, c) {
                    a = a[0].toUpperCase() + a.substr(1);
                    if ("Top" === a || "Left" === a) {
                        b[c] += parseFloat(f["border" + a + "Width"])
                    } else {
                        b[c] -= parseFloat(f["border" + a + "Width"])
                    }
                })
            })()
        }
        return b
    }
    v.modules.push({
        position: function(a) {
            var b = this,
                c = a.top,
                d = a.left,
                f = a.targetAttachment;
            if (!this.options.constraints) {
                return !0
            }
            var g = this.cache("element-bounds", function() {
                    return e(b.element)
                }),
                i = g.height,
                j = g.width;
            if (0 === j && 0 === i && "undefined" != typeof this.lastSize) {
                var k = this.lastSize;
                j = k.width;
                i = k.height
            }
            var l = this.cache("target-bounds", function() {
                    return b.getTargetBounds()
                }),
                m = l.height,
                o = l.width,
                p = [this.getClass("pinned"), this.getClass("out-of-bounds")];
            this.options.constraints.forEach(function(a) {
                var b = a.outOfBoundsClass,
                    c = a.pinnedClass;
                if (b) {
                    p.push(b)
                }
                if (c) {
                    p.push(c)
                }
            });
            p.forEach(function(a) {
                ["left", "top", "right", "bottom"].forEach(function(b) {
                    p.push(a + "-" + b)
                })
            });
            var q = [],
                r = h({}, f),
                s = h({}, this.attachment);
            this.options.constraints.forEach(function(a) {
                var e = a.to,
                    g = a.attachment,
                    h = a.pin;
                if ("undefined" == typeof g) {
                    g = ""
                }
                var k, l;
                if (0 <= g.indexOf(" ")) {
                    var n = g.split(" "),
                        p = E(n, 2);
                    l = p[0];
                    k = p[1]
                } else {
                    k = l = g
                }
                var u = t(b, e);
                if ("target" === l || "both" === l) {
                    if (c < u[1] && "top" === r.top) {
                        c += m;
                        r.top = "bottom"
                    }
                    if (c + i > u[3] && "bottom" === r.top) {
                        c -= m;
                        r.top = "top"
                    }
                }
                if ("together" === l) {
                    if ("top" === r.top) {
                        if ("bottom" === s.top && c < u[1]) {
                            c += m;
                            r.top = "bottom";
                            c += i;
                            s.top = "top"
                        } else if ("top" === s.top && c + i > u[3] && c - (i - m) >= u[1]) {
                            c -= i - m;
                            r.top = "bottom";
                            s.top = "bottom"
                        }
                    }
                    if ("bottom" === r.top) {
                        if ("top" === s.top && c + i > u[3]) {
                            c -= m;
                            r.top = "top";
                            c -= i;
                            s.top = "bottom"
                        } else if ("bottom" === s.top && c < u[1] && c + (2 * i - m) <= u[3]) {
                            c += i - m;
                            r.top = "top";
                            s.top = "top"
                        }
                    }
                    if ("middle" === r.top) {
                        if (c + i > u[3] && "top" === s.top) {
                            c -= i;
                            s.top = "bottom"
                        } else if (c < u[1] && "bottom" === s.top) {
                            c += i;
                            s.top = "top"
                        }
                    }
                }
                if ("target" === k || "both" === k) {
                    if (d < u[0] && "left" === r.left) {
                        d += o;
                        r.left = "right"
                    }
                    if (d + j > u[2] && "right" === r.left) {
                        d -= o;
                        r.left = "left"
                    }
                }
                if ("together" === k) {
                    if (d < u[0] && "left" === r.left) {
                        if ("right" === s.left) {
                            d += o;
                            r.left = "right";
                            d += j;
                            s.left = "left"
                        } else if ("left" === s.left) {
                            d += o;
                            r.left = "right";
                            d -= j;
                            s.left = "right"
                        }
                    } else if (d + j > u[2] && "right" === r.left) {
                        if ("left" === s.left) {
                            d -= o;
                            r.left = "left";
                            d -= j;
                            s.left = "right"
                        } else if ("right" === s.left) {
                            d -= o;
                            r.left = "left";
                            d += j;
                            s.left = "left"
                        }
                    } else if ("center" === r.left) {
                        if (d + j > u[2] && "left" === s.left) {
                            d -= j;
                            s.left = "right"
                        } else if (d < u[0] && "right" === s.left) {
                            d += j;
                            s.left = "left"
                        }
                    }
                }
                if ("element" === l || "both" === l) {
                    if (c < u[1] && "bottom" === s.top) {
                        c += i;
                        s.top = "top"
                    }
                    if (c + i > u[3] && "top" === s.top) {
                        c -= i;
                        s.top = "bottom"
                    }
                }
                if ("element" === k || "both" === k) {
                    if (d < u[0]) {
                        if ("right" === s.left) {
                            d += j;
                            s.left = "left"
                        } else if ("center" === s.left) {
                            d += j / 2;
                            s.left = "left"
                        }
                    }
                    if (d + j > u[2]) {
                        if ("left" === s.left) {
                            d -= j;
                            s.left = "right"
                        } else if ("center" === s.left) {
                            d -= j / 2;
                            s.left = "right"
                        }
                    }
                }
                if ("string" == typeof h) {
                    h = h.split(",").map(function(a) {
                        return a.trim()
                    })
                } else if (!0 === h) {
                    h = ["top", "left", "right", "bottom"]
                }
                h = h || [];
                var v = [],
                    w = [];
                if (c < u[1]) {
                    if (0 <= h.indexOf("top")) {
                        c = u[1];
                        v.push("top")
                    } else {
                        w.push("top")
                    }
                }
                if (c + i > u[3]) {
                    if (0 <= h.indexOf("bottom")) {
                        c = u[3] - i;
                        v.push("bottom")
                    } else {
                        w.push("bottom")
                    }
                }
                if (d < u[0]) {
                    if (0 <= h.indexOf("left")) {
                        d = u[0];
                        v.push("left")
                    } else {
                        w.push("left")
                    }
                }
                if (d + j > u[2]) {
                    if (0 <= h.indexOf("right")) {
                        d = u[2] - j;
                        v.push("right")
                    } else {
                        w.push("right")
                    }
                }
                if (v.length) {
                    (function() {
                        var a;
                        if ("undefined" != typeof b.options.pinnedClass) {
                            a = b.options.pinnedClass
                        } else {
                            a = b.getClass("pinned")
                        }
                        q.push(a);
                        v.forEach(function(b) {
                            q.push(a + "-" + b)
                        })
                    })()
                }
                if (w.length) {
                    (function() {
                        var a;
                        if ("undefined" != typeof b.options.outOfBoundsClass) {
                            a = b.options.outOfBoundsClass
                        } else {
                            a = b.getClass("out-of-bounds")
                        }
                        q.push(a);
                        w.forEach(function(b) {
                            q.push(a + "-" + b)
                        })
                    })()
                }
                if (0 <= v.indexOf("left") || 0 <= v.indexOf("right")) {
                    s.left = r.left = !1
                }
                if (0 <= v.indexOf("top") || 0 <= v.indexOf("bottom")) {
                    s.top = r.top = !1
                }
                if (r.top !== f.top || r.left !== f.left || s.top !== b.attachment.top || s.left !== b.attachment.left) {
                    b.updateAttachClasses(s, r);
                    b.trigger("update", {
                        attachment: s,
                        targetAttachment: r
                    })
                }
            });
            B(function() {
                if (!(!1 === b.options.addTargetClasses)) {
                    n(b.target, q, p)
                }
                n(b.element, q, p)
            });
            return {
                top: c,
                left: d
            }
        }
    });
    var G = v.Utils,
        e = G.getBounds,
        n = G.updateClasses,
        B = G.defer;
    v.modules.push({
        position: function(a) {
            var b = this,
                c = a.top,
                d = a.left,
                f = this.cache("element-bounds", function() {
                    return e(b.element)
                }),
                g = f.height,
                h = f.width,
                i = this.getTargetBounds(),
                j = c + g,
                k = d + h,
                l = [];
            if (c <= i.bottom && j >= i.top) {
                ["left", "right"].forEach(function(a) {
                    var b = i[a];
                    if (b === d || b === k) {
                        l.push(a)
                    }
                })
            }
            if (d <= i.right && k >= i.left) {
                ["top", "bottom"].forEach(function(a) {
                    var b = i[a];
                    if (b === c || b === j) {
                        l.push(a)
                    }
                })
            }
            var m = [],
                o = [];
            m.push(this.getClass("abutted"));
            ["left", "top", "right", "bottom"].forEach(function(a) {
                m.push(b.getClass("abutted") + "-" + a)
            });
            if (l.length) {
                o.push(this.getClass("abutted"))
            }
            l.forEach(function(a) {
                o.push(b.getClass("abutted") + "-" + a)
            });
            B(function() {
                if (!(!1 === b.options.addTargetClasses)) {
                    n(b.target, o, m)
                }
                n(b.element, o, m)
            });
            return !0
        }
    });
    var E = function() {
        function a(a, b) {
            var c = [],
                d = !0,
                e = !1,
                f = void 0;
            try {
                for (var g = a[Symbol.iterator](), h; !(d = (h = g.next()).done); d = !0) {
                    c.push(h.value);
                    if (b && c.length === b) break
                }
            } catch (a) {
                e = !0;
                f = a
            } finally {
                try {
                    if (!d && g["return"]) g["return"]()
                } finally {
                    if (e) throw f
                }
            }
            return c
        }
        return function(b, c) {
            if (Array.isArray(b)) {
                return b
            } else if (Symbol.iterator in Object(b)) {
                return a(b, c)
            } else {
                throw new TypeError("Invalid attempt to destructure non-iterable instance")
            }
        }
    }();
    v.modules.push({
        position: function(a) {
            var b = a.top,
                c = a.left;
            if (!this.options.shift) {
                return
            }
            var d = this.options.shift;
            if ("function" == typeof this.options.shift) {
                d = this.options.shift.call(this, {
                    top: b,
                    left: c
                })
            }
            var e, f;
            if ("string" == typeof d) {
                d = d.split(" ");
                d[1] = d[1] || d[0];
                var g = d,
                    h = E(g, 2);
                e = h[0];
                f = h[1];
                e = parseFloat(e, 10);
                f = parseFloat(f, 10)
            } else {
                e = d.top;
                f = d.left
            }
            b += e;
            c += f;
            return {
                top: b,
                left: c
            }
        }
    });
    return S
});
"use strict";

function _typeof2(a) {
    if ("function" == typeof Symbol && "symbol" == typeof Symbol.iterator) {
        _typeof2 = function(a) {
            return typeof a
        }
    } else {
        _typeof2 = function(a) {
            return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
        }
    }
    return _typeof2(a)
}
define("theme_boost/modal", ["exports", "jquery", "./util"], function(a, b, c) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    var k = d(b),
        l = d(c);

    function d(a) {
        return a && a.__esModule ? a : {
            default: a
        }
    }

    function e(a) {
        if ("function" == typeof Symbol && "symbol" === _typeof2(Symbol.iterator)) {
            e = function(a) {
                return _typeof2(a)
            }
        } else {
            e = function(a) {
                return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : _typeof2(a)
            }
        }
        return e(a)
    }

    function f(a) {
        for (var b = 1; b < arguments.length; b++) {
            var c = null != arguments[b] ? arguments[b] : {},
                d = Object.keys(c);
            if ("function" == typeof Object.getOwnPropertySymbols) {
                d = d.concat(Object.getOwnPropertySymbols(c).filter(function(a) {
                    return Object.getOwnPropertyDescriptor(c, a).enumerable
                }))
            }
            d.forEach(function(b) {
                g(a, b, c[b])
            })
        }
        return a
    }

    function g(a, b, c) {
        if (b in a) {
            Object.defineProperty(a, b, {
                value: c,
                enumerable: !0,
                configurable: !0,
                writable: !0
            })
        } else {
            a[b] = c
        }
        return a
    }

    function h(a, b) {
        if (!(a instanceof b)) {
            throw new TypeError("Cannot call a class as a function")
        }
    }

    function i(a, b) {
        for (var c = 0, d; c < b.length; c++) {
            d = b[c];
            d.enumerable = d.enumerable || !1;
            d.configurable = !0;
            if ("value" in d) d.writable = !0;
            Object.defineProperty(a, d.key, d)
        }
    }

    function j(a, b, c) {
        if (b) i(a.prototype, b);
        if (c) i(a, c);
        return a
    }
    var m = "bs.modal",
        n = ".".concat(m),
        o = k.default.fn.modal,
        p = {
            backdrop: !0,
            keyboard: !0,
            focus: !0,
            show: !0
        },
        q = {
            backdrop: "(boolean|string)",
            keyboard: "boolean",
            focus: "boolean",
            show: "boolean"
        },
        r = {
            HIDE: "hide".concat(n),
            HIDDEN: "hidden".concat(n),
            SHOW: "show".concat(n),
            SHOWN: "shown".concat(n),
            FOCUSIN: "focusin".concat(n),
            RESIZE: "resize".concat(n),
            CLICK_DISMISS: "click.dismiss".concat(n),
            KEYDOWN_DISMISS: "keydown.dismiss".concat(n),
            MOUSEUP_DISMISS: "mouseup.dismiss".concat(n),
            MOUSEDOWN_DISMISS: "mousedown.dismiss".concat(n),
            CLICK_DATA_API: "click".concat(n).concat(".data-api")
        },
        s = {
            SCROLLABLE: "modal-dialog-scrollable",
            SCROLLBAR_MEASURER: "modal-scrollbar-measure",
            BACKDROP: "modal-backdrop",
            OPEN: "modal-open",
            FADE: "fade",
            SHOW: "show"
        },
        t = {
            DIALOG: ".modal-dialog",
            MODAL_BODY: ".modal-body",
            DATA_TOGGLE: "[data-toggle=\"modal\"]",
            DATA_DISMISS: "[data-dismiss=\"modal\"]",
            FIXED_CONTENT: ".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",
            STICKY_CONTENT: ".sticky-top"
        },
        u = function() {
            function a(b, c) {
                h(this, a);
                this._config = this._getConfig(c);
                this._element = b;
                this._dialog = b.querySelector(t.DIALOG);
                this._backdrop = null;
                this._isShown = !1;
                this._isBodyOverflowing = !1;
                this._ignoreBackdropClick = !1;
                this._isTransitioning = !1;
                this._scrollbarWidth = 0
            }
            j(a, [{
                key: "toggle",
                value: function(a) {
                    return this._isShown ? this.hide() : this.show(a)
                }
            }, {
                key: "show",
                value: function(a) {
                    var b = this;
                    if (this._isShown || this._isTransitioning) {
                        return
                    }
                    if ((0, k.default)(this._element).hasClass(s.FADE)) {
                        this._isTransitioning = !0
                    }
                    var c = k.default.Event(r.SHOW, {
                        relatedTarget: a
                    });
                    (0, k.default)(this._element).trigger(c);
                    if (this._isShown || c.isDefaultPrevented()) {
                        return
                    }
                    this._isShown = !0;
                    this._checkScrollbar();
                    this._setScrollbar();
                    this._adjustDialog();
                    this._setEscapeEvent();
                    this._setResizeEvent();
                    (0, k.default)(this._element).on(r.CLICK_DISMISS, t.DATA_DISMISS, function(a) {
                        return b.hide(a)
                    });
                    (0, k.default)(this._dialog).on(r.MOUSEDOWN_DISMISS, function() {
                        (0, k.default)(b._element).one(r.MOUSEUP_DISMISS, function(a) {
                            if ((0, k.default)(a.target).is(b._element)) {
                                b._ignoreBackdropClick = !0
                            }
                        })
                    });
                    this._showBackdrop(function() {
                        return b._showElement(a)
                    })
                }
            }, {
                key: "hide",
                value: function(a) {
                    var b = this;
                    if (a) {
                        a.preventDefault()
                    }
                    if (!this._isShown || this._isTransitioning) {
                        return
                    }
                    var c = k.default.Event(r.HIDE);
                    (0, k.default)(this._element).trigger(c);
                    if (!this._isShown || c.isDefaultPrevented()) {
                        return
                    }
                    this._isShown = !1;
                    var d = (0, k.default)(this._element).hasClass(s.FADE);
                    if (d) {
                        this._isTransitioning = !0
                    }
                    this._setEscapeEvent();
                    this._setResizeEvent();
                    (0, k.default)(document).off(r.FOCUSIN);
                    (0, k.default)(this._element).removeClass(s.SHOW);
                    (0, k.default)(this._element).off(r.CLICK_DISMISS);
                    (0, k.default)(this._dialog).off(r.MOUSEDOWN_DISMISS);
                    if (d) {
                        var e = l.default.getTransitionDurationFromElement(this._element);
                        (0, k.default)(this._element).one(l.default.TRANSITION_END, function(a) {
                            return b._hideModal(a)
                        }).emulateTransitionEnd(e)
                    } else {
                        this._hideModal()
                    }
                }
            }, {
                key: "dispose",
                value: function() {
                    [window, this._element, this._dialog].forEach(function(a) {
                        return (0, k.default)(a).off(n)
                    });
                    (0, k.default)(document).off(r.FOCUSIN);
                    k.default.removeData(this._element, m);
                    this._config = null;
                    this._element = null;
                    this._dialog = null;
                    this._backdrop = null;
                    this._isShown = null;
                    this._isBodyOverflowing = null;
                    this._ignoreBackdropClick = null;
                    this._isTransitioning = null;
                    this._scrollbarWidth = null
                }
            }, {
                key: "handleUpdate",
                value: function() {
                    this._adjustDialog()
                }
            }, {
                key: "_getConfig",
                value: function(a) {
                    a = f({}, p, a);
                    l.default.typeCheckConfig("modal", a, q);
                    return a
                }
            }, {
                key: "_showElement",
                value: function(a) {
                    var b = this,
                        c = (0, k.default)(this._element).hasClass(s.FADE);
                    if (!this._element.parentNode || this._element.parentNode.nodeType !== Node.ELEMENT_NODE) {
                        document.body.appendChild(this._element)
                    }
                    this._element.style.display = "block";
                    this._element.removeAttribute("aria-hidden");
                    this._element.setAttribute("aria-modal", !0);
                    if ((0, k.default)(this._dialog).hasClass(s.SCROLLABLE)) {
                        this._dialog.querySelector(t.MODAL_BODY).scrollTop = 0
                    } else {
                        this._element.scrollTop = 0
                    }
                    if (c) {
                        l.default.reflow(this._element)
                    }(0, k.default)(this._element).addClass(s.SHOW);
                    if (this._config.focus) {
                        this._enforceFocus()
                    }
                    var d = k.default.Event(r.SHOWN, {
                            relatedTarget: a
                        }),
                        e = function() {
                            if (b._config.focus) {
                                b._element.focus()
                            }
                            b._isTransitioning = !1;
                            (0, k.default)(b._element).trigger(d)
                        };
                    if (c) {
                        var f = l.default.getTransitionDurationFromElement(this._dialog);
                        (0, k.default)(this._dialog).one(l.default.TRANSITION_END, e).emulateTransitionEnd(f)
                    } else {
                        e()
                    }
                }
            }, {
                key: "_enforceFocus",
                value: function() {
                    var a = this;
                    (0, k.default)(document).off(r.FOCUSIN).on(r.FOCUSIN, function(b) {
                        if (document !== b.target && a._element !== b.target && 0 === (0, k.default)(a._element).has(b.target).length) {
                            a._element.focus()
                        }
                    })
                }
            }, {
                key: "_setEscapeEvent",
                value: function() {
                    var a = this;
                    if (this._isShown && this._config.keyboard) {
                        (0, k.default)(this._element).on(r.KEYDOWN_DISMISS, function(b) {
                            if (b.which === 27) {
                                b.preventDefault();
                                a.hide()
                            }
                        })
                    } else if (!this._isShown) {
                        (0, k.default)(this._element).off(r.KEYDOWN_DISMISS)
                    }
                }
            }, {
                key: "_setResizeEvent",
                value: function() {
                    var a = this;
                    if (this._isShown) {
                        (0, k.default)(window).on(r.RESIZE, function(b) {
                            return a.handleUpdate(b)
                        })
                    } else {
                        (0, k.default)(window).off(r.RESIZE)
                    }
                }
            }, {
                key: "_hideModal",
                value: function() {
                    var a = this;
                    this._element.style.display = "none";
                    this._element.setAttribute("aria-hidden", !0);
                    this._element.removeAttribute("aria-modal");
                    this._isTransitioning = !1;
                    this._showBackdrop(function() {
                        (0, k.default)(document.body).removeClass(s.OPEN);
                        a._resetAdjustments();
                        a._resetScrollbar();
                        (0, k.default)(a._element).trigger(r.HIDDEN)
                    })
                }
            }, {
                key: "_removeBackdrop",
                value: function() {
                    if (this._backdrop) {
                        (0, k.default)(this._backdrop).remove();
                        this._backdrop = null
                    }
                }
            }, {
                key: "_showBackdrop",
                value: function(a) {
                    var b = this,
                        c = (0, k.default)(this._element).hasClass(s.FADE) ? s.FADE : "";
                    if (this._isShown && this._config.backdrop) {
                        this._backdrop = document.createElement("div");
                        this._backdrop.className = s.BACKDROP;
                        if (c) {
                            this._backdrop.classList.add(c)
                        }(0, k.default)(this._backdrop).appendTo(document.body);
                        (0, k.default)(this._element).on(r.CLICK_DISMISS, function(a) {
                            if (b._ignoreBackdropClick) {
                                b._ignoreBackdropClick = !1;
                                return
                            }
                            if (a.target !== a.currentTarget) {
                                return
                            }
                            if ("static" === b._config.backdrop) {
                                b._element.focus()
                            } else {
                                b.hide()
                            }
                        });
                        if (c) {
                            l.default.reflow(this._backdrop)
                        }(0, k.default)(this._backdrop).addClass(s.SHOW);
                        if (!a) {
                            return
                        }
                        if (!c) {
                            a();
                            return
                        }
                        var d = l.default.getTransitionDurationFromElement(this._backdrop);
                        (0, k.default)(this._backdrop).one(l.default.TRANSITION_END, a).emulateTransitionEnd(d)
                    } else if (!this._isShown && this._backdrop) {
                        (0, k.default)(this._backdrop).removeClass(s.SHOW);
                        var e = function() {
                            b._removeBackdrop();
                            if (a) {
                                a()
                            }
                        };
                        if ((0, k.default)(this._element).hasClass(s.FADE)) {
                            var f = l.default.getTransitionDurationFromElement(this._backdrop);
                            (0, k.default)(this._backdrop).one(l.default.TRANSITION_END, e).emulateTransitionEnd(f)
                        } else {
                            e()
                        }
                    } else if (a) {
                        a()
                    }
                }
            }, {
                key: "_adjustDialog",
                value: function() {
                    var a = this._element.scrollHeight > document.documentElement.clientHeight;
                    if (!this._isBodyOverflowing && a) {
                        this._element.style.paddingLeft = "".concat(this._scrollbarWidth, "px")
                    }
                    if (this._isBodyOverflowing && !a) {
                        this._element.style.paddingRight = "".concat(this._scrollbarWidth, "px")
                    }
                }
            }, {
                key: "_resetAdjustments",
                value: function() {
                    this._element.style.paddingLeft = "";
                    this._element.style.paddingRight = ""
                }
            }, {
                key: "_checkScrollbar",
                value: function() {
                    var a = document.body.getBoundingClientRect();
                    this._isBodyOverflowing = a.left + a.right < window.innerWidth;
                    this._scrollbarWidth = this._getScrollbarWidth()
                }
            }, {
                key: "_setScrollbar",
                value: function() {
                    var a = this;
                    if (this._isBodyOverflowing) {
                        var b = [].slice.call(document.querySelectorAll(t.FIXED_CONTENT)),
                            c = [].slice.call(document.querySelectorAll(t.STICKY_CONTENT));
                        (0, k.default)(b).each(function(b, c) {
                            var d = c.style.paddingRight,
                                e = (0, k.default)(c).css("padding-right");
                            (0, k.default)(c).data("padding-right", d).css("padding-right", "".concat(parseFloat(e) + a._scrollbarWidth, "px"))
                        });
                        (0, k.default)(c).each(function(b, c) {
                            var d = c.style.marginRight,
                                e = (0, k.default)(c).css("margin-right");
                            (0, k.default)(c).data("margin-right", d).css("margin-right", "".concat(parseFloat(e) - a._scrollbarWidth, "px"))
                        });
                        var d = document.body.style.paddingRight,
                            e = (0, k.default)(document.body).css("padding-right");
                        (0, k.default)(document.body).data("padding-right", d).css("padding-right", "".concat(parseFloat(e) + this._scrollbarWidth, "px"))
                    }(0, k.default)(document.body).addClass(s.OPEN)
                }
            }, {
                key: "_resetScrollbar",
                value: function() {
                    var a = [].slice.call(document.querySelectorAll(t.FIXED_CONTENT));
                    (0, k.default)(a).each(function(a, b) {
                        var c = (0, k.default)(b).data("padding-right");
                        (0, k.default)(b).removeData("padding-right");
                        b.style.paddingRight = c ? c : ""
                    });
                    var b = [].slice.call(document.querySelectorAll("".concat(t.STICKY_CONTENT)));
                    (0, k.default)(b).each(function(a, b) {
                        var c = (0, k.default)(b).data("margin-right");
                        if ("undefined" != typeof c) {
                            (0, k.default)(b).css("margin-right", c).removeData("margin-right")
                        }
                    });
                    var c = (0, k.default)(document.body).data("padding-right");
                    (0, k.default)(document.body).removeData("padding-right");
                    document.body.style.paddingRight = c ? c : ""
                }
            }, {
                key: "_getScrollbarWidth",
                value: function() {
                    var a = document.createElement("div");
                    a.className = s.SCROLLBAR_MEASURER;
                    document.body.appendChild(a);
                    var b = a.getBoundingClientRect().width - a.clientWidth;
                    document.body.removeChild(a);
                    return b
                }
            }], [{
                key: "_jQueryInterface",
                value: function(b, c) {
                    return this.each(function() {
                        var d = (0, k.default)(this).data(m),
                            g = f({}, p, (0, k.default)(this).data(), "object" === e(b) && b ? b : {});
                        if (!d) {
                            d = new a(this, g);
                            (0, k.default)(this).data(m, d)
                        }
                        if ("string" == typeof b) {
                            if ("undefined" == typeof d[b]) {
                                throw new TypeError("No method named \"".concat(b, "\""))
                            }
                            d[b](c)
                        } else if (g.show) {
                            d.show(c)
                        }
                    })
                }
            }, {
                key: "VERSION",
                get: function() {
                    return "4.3.1"
                }
            }, {
                key: "Default",
                get: function() {
                    return p
                }
            }]);
            return a
        }();
    (0, k.default)(document).on(r.CLICK_DATA_API, t.DATA_TOGGLE, function(a) {
        var b = this,
            c, d = l.default.getSelectorFromElement(this);
        if (d) {
            c = document.querySelector(d)
        }
        var e = (0, k.default)(c).data(m) ? "toggle" : f({}, (0, k.default)(c).data(), (0, k.default)(this).data());
        if ("A" === this.tagName || "AREA" === this.tagName) {
            a.preventDefault()
        }
        var g = (0, k.default)(c).one(r.SHOW, function(a) {
            if (a.isDefaultPrevented()) {
                return
            }
            g.one(r.HIDDEN, function() {
                if ((0, k.default)(b).is(":visible")) {
                    b.focus()
                }
            })
        });
        u._jQueryInterface.call((0, k.default)(c), e, this)
    });
    k.default.fn.modal = u._jQueryInterface;
    k.default.fn.modal.Constructor = u;
    k.default.fn.modal.noConflict = function() {
        k.default.fn.modal = o;
        return u._jQueryInterface
    };
    a.default = u;
    return a.default
});
"use strict";

function _typeof2(a) {
    if ("function" == typeof Symbol && "symbol" == typeof Symbol.iterator) {
        _typeof2 = function(a) {
            return typeof a
        }
    } else {
        _typeof2 = function(a) {
            return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
        }
    }
    return _typeof2(a)
}
define("theme_boost/tooltip", ["exports", "./sanitizer", "jquery", "core/popper", "./util"], function(a, b, c, d, e) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    var m = f(c),
        n = f(d),
        o = f(e);

    function f(a) {
        return a && a.__esModule ? a : {
            default: a
        }
    }

    function g(a) {
        for (var b = 1; b < arguments.length; b++) {
            var c = null != arguments[b] ? arguments[b] : {},
                d = Object.keys(c);
            if ("function" == typeof Object.getOwnPropertySymbols) {
                d = d.concat(Object.getOwnPropertySymbols(c).filter(function(a) {
                    return Object.getOwnPropertyDescriptor(c, a).enumerable
                }))
            }
            d.forEach(function(b) {
                h(a, b, c[b])
            })
        }
        return a
    }

    function h(a, b, c) {
        if (b in a) {
            Object.defineProperty(a, b, {
                value: c,
                enumerable: !0,
                configurable: !0,
                writable: !0
            })
        } else {
            a[b] = c
        }
        return a
    }

    function i(a) {
        if ("function" == typeof Symbol && "symbol" === _typeof2(Symbol.iterator)) {
            i = function(a) {
                return _typeof2(a)
            }
        } else {
            i = function(a) {
                return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : _typeof2(a)
            }
        }
        return i(a)
    }

    function j(a, b) {
        if (!(a instanceof b)) {
            throw new TypeError("Cannot call a class as a function")
        }
    }

    function k(a, b) {
        for (var c = 0, d; c < b.length; c++) {
            d = b[c];
            d.enumerable = d.enumerable || !1;
            d.configurable = !0;
            if ("value" in d) d.writable = !0;
            Object.defineProperty(a, d.key, d)
        }
    }

    function l(a, b, c) {
        if (b) k(a.prototype, b);
        if (c) k(a, c);
        return a
    }
    var p = "bs.tooltip",
        q = ".".concat(p),
        r = m.default.fn.tooltip,
        s = "bs-tooltip",
        t = new RegExp("(^|\\s)".concat(s, "\\S+"), "g"),
        u = ["sanitize", "whiteList", "sanitizeFn"],
        v = {
            animation: "boolean",
            template: "string",
            title: "(string|element|function)",
            trigger: "string",
            delay: "(number|object)",
            html: "boolean",
            selector: "(string|boolean)",
            placement: "(string|function)",
            offset: "(number|string|function)",
            container: "(string|element|boolean)",
            fallbackPlacement: "(string|array)",
            boundary: "(string|element)",
            sanitize: "boolean",
            sanitizeFn: "(null|function)",
            whiteList: "object"
        },
        w = {
            AUTO: "auto",
            TOP: "top",
            RIGHT: "right",
            BOTTOM: "bottom",
            LEFT: "left"
        },
        x = {
            animation: !0,
            template: "<div class=\"tooltip\" role=\"tooltip\"><div class=\"arrow\"></div><div class=\"tooltip-inner\"></div></div>",
            trigger: "hover focus",
            title: "",
            delay: 0,
            html: !1,
            selector: !1,
            placement: "top",
            offset: 0,
            container: !1,
            fallbackPlacement: "flip",
            boundary: "scrollParent",
            sanitize: !0,
            sanitizeFn: null,
            whiteList: b.DefaultWhitelist
        },
        y = {
            SHOW: "show",
            OUT: "out"
        },
        z = {
            HIDE: "hide".concat(q),
            HIDDEN: "hidden".concat(q),
            SHOW: "show".concat(q),
            SHOWN: "shown".concat(q),
            INSERTED: "inserted".concat(q),
            CLICK: "click".concat(q),
            FOCUSIN: "focusin".concat(q),
            FOCUSOUT: "focusout".concat(q),
            MOUSEENTER: "mouseenter".concat(q),
            MOUSELEAVE: "mouseleave".concat(q)
        },
        A = {
            FADE: "fade",
            SHOW: "show"
        },
        B = {
            TOOLTIP: ".tooltip",
            TOOLTIP_INNER: ".tooltip-inner",
            ARROW: ".arrow"
        },
        C = {
            HOVER: "hover",
            FOCUS: "focus",
            CLICK: "click",
            MANUAL: "manual"
        },
        D = function() {
            function a(b, c) {
                j(this, a);
                if ("undefined" == typeof n.default) {
                    throw new TypeError("Bootstrap's tooltips require Popper.js (https://popper.js.org/)")
                }
                this._isEnabled = !0;
                this._timeout = 0;
                this._hoverState = "";
                this._activeTrigger = {};
                this._popper = null;
                this.element = b;
                this.config = this._getConfig(c);
                this.tip = null;
                this._setListeners()
            }
            l(a, [{
                key: "enable",
                value: function() {
                    this._isEnabled = !0
                }
            }, {
                key: "disable",
                value: function() {
                    this._isEnabled = !1
                }
            }, {
                key: "toggleEnabled",
                value: function() {
                    this._isEnabled = !this._isEnabled
                }
            }, {
                key: "toggle",
                value: function(a) {
                    if (!this._isEnabled) {
                        return
                    }
                    if (a) {
                        var b = this.constructor.DATA_KEY,
                            c = (0, m.default)(a.currentTarget).data(b);
                        if (!c) {
                            c = new this.constructor(a.currentTarget, this._getDelegateConfig());
                            (0, m.default)(a.currentTarget).data(b, c)
                        }
                        c._activeTrigger.click = !c._activeTrigger.click;
                        if (c._isWithActiveTrigger()) {
                            c._enter(null, c)
                        } else {
                            c._leave(null, c)
                        }
                    } else {
                        if ((0, m.default)(this.getTipElement()).hasClass(A.SHOW)) {
                            this._leave(null, this);
                            return
                        }
                        this._enter(null, this)
                    }
                }
            }, {
                key: "dispose",
                value: function() {
                    clearTimeout(this._timeout);
                    m.default.removeData(this.element, this.constructor.DATA_KEY);
                    (0, m.default)(this.element).off(this.constructor.EVENT_KEY);
                    (0, m.default)(this.element).closest(".modal").off("hide.bs.modal");
                    if (this.tip) {
                        (0, m.default)(this.tip).remove()
                    }
                    this._isEnabled = null;
                    this._timeout = null;
                    this._hoverState = null;
                    this._activeTrigger = null;
                    if (null !== this._popper) {
                        this._popper.destroy()
                    }
                    this._popper = null;
                    this.element = null;
                    this.config = null;
                    this.tip = null
                }
            }, {
                key: "show",
                value: function() {
                    var a = this;
                    if ("none" === (0, m.default)(this.element).css("display")) {
                        throw new Error("Please use show on visible elements")
                    }
                    var b = m.default.Event(this.constructor.Event.SHOW);
                    if (this.isWithContent() && this._isEnabled) {
                        (0, m.default)(this.element).trigger(b);
                        var c = o.default.findShadowRoot(this.element),
                            d = m.default.contains(null !== c ? c : this.element.ownerDocument.documentElement, this.element);
                        if (b.isDefaultPrevented() || !d) {
                            return
                        }
                        var e = this.getTipElement(),
                            f = o.default.getUID(this.constructor.NAME);
                        e.setAttribute("id", f);
                        this.element.setAttribute("aria-describedby", f);
                        this.setContent();
                        if (this.config.animation) {
                            (0, m.default)(e).addClass(A.FADE)
                        }
                        var g = "function" == typeof this.config.placement ? this.config.placement.call(this, e, this.element) : this.config.placement,
                            h = this._getAttachment(g);
                        this.addAttachmentClass(h);
                        var i = this._getContainer();
                        (0, m.default)(e).data(this.constructor.DATA_KEY, this);
                        if (!m.default.contains(this.element.ownerDocument.documentElement, this.tip)) {
                            (0, m.default)(e).appendTo(i)
                        }(0, m.default)(this.element).trigger(this.constructor.Event.INSERTED);
                        this._popper = new n.default(this.element, e, {
                            placement: h,
                            modifiers: {
                                offset: this._getOffset(),
                                flip: {
                                    behavior: this.config.fallbackPlacement
                                },
                                arrow: {
                                    element: B.ARROW
                                },
                                preventOverflow: {
                                    boundariesElement: this.config.boundary
                                }
                            },
                            onCreate: function(b) {
                                if (b.originalPlacement !== b.placement) {
                                    a._handlePopperPlacementChange(b)
                                }
                            },
                            onUpdate: function(b) {
                                return a._handlePopperPlacementChange(b)
                            }
                        });
                        (0, m.default)(e).addClass(A.SHOW);
                        if ("ontouchstart" in document.documentElement) {
                            (0, m.default)(document.body).children().on("mouseover", null, m.default.noop)
                        }
                        var j = function() {
                            if (a.config.animation) {
                                a._fixTransition()
                            }
                            var b = a._hoverState;
                            a._hoverState = null;
                            (0, m.default)(a.element).trigger(a.constructor.Event.SHOWN);
                            if (b === y.OUT) {
                                a._leave(null, a)
                            }
                        };
                        if ((0, m.default)(this.tip).hasClass(A.FADE)) {
                            var k = o.default.getTransitionDurationFromElement(this.tip);
                            (0, m.default)(this.tip).one(o.default.TRANSITION_END, j).emulateTransitionEnd(k)
                        } else {
                            j()
                        }
                    }
                }
            }, {
                key: "hide",
                value: function(a) {
                    var b = this,
                        c = this.getTipElement(),
                        d = m.default.Event(this.constructor.Event.HIDE),
                        e = function() {
                            if (b._hoverState !== y.SHOW && c.parentNode) {
                                c.parentNode.removeChild(c)
                            }
                            b._cleanTipClass();
                            b.element.removeAttribute("aria-describedby");
                            (0, m.default)(b.element).trigger(b.constructor.Event.HIDDEN);
                            if (null !== b._popper) {
                                b._popper.destroy()
                            }
                            if (a) {
                                a()
                            }
                        };
                    (0, m.default)(this.element).trigger(d);
                    if (d.isDefaultPrevented()) {
                        return
                    }(0, m.default)(c).removeClass(A.SHOW);
                    if ("ontouchstart" in document.documentElement) {
                        (0, m.default)(document.body).children().off("mouseover", null, m.default.noop)
                    }
                    this._activeTrigger[C.CLICK] = !1;
                    this._activeTrigger[C.FOCUS] = !1;
                    this._activeTrigger[C.HOVER] = !1;
                    if ((0, m.default)(this.tip).hasClass(A.FADE)) {
                        var f = o.default.getTransitionDurationFromElement(c);
                        (0, m.default)(c).one(o.default.TRANSITION_END, e).emulateTransitionEnd(f)
                    } else {
                        e()
                    }
                    this._hoverState = ""
                }
            }, {
                key: "update",
                value: function() {
                    if (null !== this._popper) {
                        this._popper.scheduleUpdate()
                    }
                }
            }, {
                key: "isWithContent",
                value: function() {
                    return !!this.getTitle()
                }
            }, {
                key: "addAttachmentClass",
                value: function(a) {
                    (0, m.default)(this.getTipElement()).addClass("".concat(s, "-").concat(a))
                }
            }, {
                key: "getTipElement",
                value: function() {
                    this.tip = this.tip || (0, m.default)(this.config.template)[0];
                    return this.tip
                }
            }, {
                key: "setContent",
                value: function() {
                    var a = this.getTipElement();
                    this.setElementContent((0, m.default)(a.querySelectorAll(B.TOOLTIP_INNER)), this.getTitle());
                    (0, m.default)(a).removeClass("".concat(A.FADE, " ").concat(A.SHOW))
                }
            }, {
                key: "setElementContent",
                value: function(a, c) {
                    if ("object" === i(c) && (c.nodeType || c.jquery)) {
                        if (this.config.html) {
                            if (!(0, m.default)(c).parent().is(a)) {
                                a.empty().append(c)
                            }
                        } else {
                            a.text((0, m.default)(c).text())
                        }
                        return
                    }
                    if (this.config.html) {
                        if (this.config.sanitize) {
                            c = (0, b.sanitizeHtml)(c, this.config.whiteList, this.config.sanitizeFn)
                        }
                        a.html(c)
                    } else {
                        a.text(c)
                    }
                }
            }, {
                key: "getTitle",
                value: function() {
                    var a = this.element.getAttribute("data-original-title");
                    if (!a) {
                        a = "function" == typeof this.config.title ? this.config.title.call(this.element) : this.config.title
                    }
                    return a
                }
            }, {
                key: "_getOffset",
                value: function() {
                    var a = this,
                        b = {};
                    if ("function" == typeof this.config.offset) {
                        b.fn = function(b) {
                            b.offsets = g({}, b.offsets, a.config.offset(b.offsets, a.element) || {});
                            return b
                        }
                    } else {
                        b.offset = this.config.offset
                    }
                    return b
                }
            }, {
                key: "_getContainer",
                value: function() {
                    if (!1 === this.config.container) {
                        return document.body
                    }
                    if (o.default.isElement(this.config.container)) {
                        return (0, m.default)(this.config.container)
                    }
                    return (0, m.default)(document).find(this.config.container)
                }
            }, {
                key: "_getAttachment",
                value: function(a) {
                    return w[a.toUpperCase()]
                }
            }, {
                key: "_setListeners",
                value: function() {
                    var a = this,
                        b = this.config.trigger.split(" ");
                    b.forEach(function(b) {
                        if ("click" === b) {
                            (0, m.default)(a.element).on(a.constructor.Event.CLICK, a.config.selector, function(b) {
                                return a.toggle(b)
                            })
                        } else if (b !== C.MANUAL) {
                            var c = b === C.HOVER ? a.constructor.Event.MOUSEENTER : a.constructor.Event.FOCUSIN,
                                d = b === C.HOVER ? a.constructor.Event.MOUSELEAVE : a.constructor.Event.FOCUSOUT;
                            (0, m.default)(a.element).on(c, a.config.selector, function(b) {
                                return a._enter(b)
                            }).on(d, a.config.selector, function(b) {
                                return a._leave(b)
                            })
                        }
                    });
                    (0, m.default)(this.element).closest(".modal").on("hide.bs.modal", function() {
                        if (a.element) {
                            a.hide()
                        }
                    });
                    if (this.config.selector) {
                        this.config = g({}, this.config, {
                            trigger: "manual",
                            selector: ""
                        })
                    } else {
                        this._fixTitle()
                    }
                }
            }, {
                key: "_fixTitle",
                value: function() {
                    var a = i(this.element.getAttribute("data-original-title"));
                    if (this.element.getAttribute("title") || "string" !== a) {
                        this.element.setAttribute("data-original-title", this.element.getAttribute("title") || "");
                        this.element.setAttribute("title", "")
                    }
                }
            }, {
                key: "_enter",
                value: function(a, b) {
                    var c = this.constructor.DATA_KEY;
                    b = b || (0, m.default)(a.currentTarget).data(c);
                    if (!b) {
                        b = new this.constructor(a.currentTarget, this._getDelegateConfig());
                        (0, m.default)(a.currentTarget).data(c, b)
                    }
                    if (a) {
                        b._activeTrigger["focusin" === a.type ? C.FOCUS : C.HOVER] = !0
                    }
                    if ((0, m.default)(b.getTipElement()).hasClass(A.SHOW) || b._hoverState === y.SHOW) {
                        b._hoverState = y.SHOW;
                        return
                    }
                    clearTimeout(b._timeout);
                    b._hoverState = y.SHOW;
                    if (!b.config.delay || !b.config.delay.show) {
                        b.show();
                        return
                    }
                    b._timeout = setTimeout(function() {
                        if (b._hoverState === y.SHOW) {
                            b.show()
                        }
                    }, b.config.delay.show)
                }
            }, {
                key: "_leave",
                value: function(a, b) {
                    var c = this.constructor.DATA_KEY;
                    b = b || (0, m.default)(a.currentTarget).data(c);
                    if (!b) {
                        b = new this.constructor(a.currentTarget, this._getDelegateConfig());
                        (0, m.default)(a.currentTarget).data(c, b)
                    }
                    if (a) {
                        b._activeTrigger["focusout" === a.type ? C.FOCUS : C.HOVER] = !1
                    }
                    if (b._isWithActiveTrigger()) {
                        return
                    }
                    clearTimeout(b._timeout);
                    b._hoverState = y.OUT;
                    if (!b.config.delay || !b.config.delay.hide) {
                        b.hide();
                        return
                    }
                    b._timeout = setTimeout(function() {
                        if (b._hoverState === y.OUT) {
                            b.hide()
                        }
                    }, b.config.delay.hide)
                }
            }, {
                key: "_isWithActiveTrigger",
                value: function() {
                    for (var a in this._activeTrigger) {
                        if (this._activeTrigger[a]) {
                            return !0
                        }
                    }
                    return !1
                }
            }, {
                key: "_getConfig",
                value: function(a) {
                    var c = (0, m.default)(this.element).data();
                    Object.keys(c).forEach(function(a) {
                        if (-1 !== u.indexOf(a)) {
                            delete c[a]
                        }
                    });
                    a = g({}, this.constructor.Default, c, "object" === i(a) && a ? a : {});
                    if ("number" == typeof a.delay) {
                        a.delay = {
                            show: a.delay,
                            hide: a.delay
                        }
                    }
                    if ("number" == typeof a.title) {
                        a.title = a.title.toString()
                    }
                    if ("number" == typeof a.content) {
                        a.content = a.content.toString()
                    }
                    o.default.typeCheckConfig("tooltip", a, this.constructor.DefaultType);
                    if (a.sanitize) {
                        a.template = (0, b.sanitizeHtml)(a.template, a.whiteList, a.sanitizeFn)
                    }
                    return a
                }
            }, {
                key: "_getDelegateConfig",
                value: function() {
                    var a = {};
                    if (this.config) {
                        for (var b in this.config) {
                            if (this.constructor.Default[b] !== this.config[b]) {
                                a[b] = this.config[b]
                            }
                        }
                    }
                    return a
                }
            }, {
                key: "_cleanTipClass",
                value: function() {
                    var a = (0, m.default)(this.getTipElement()),
                        b = a.attr("class").match(t);
                    if (null !== b && b.length) {
                        a.removeClass(b.join(""))
                    }
                }
            }, {
                key: "_handlePopperPlacementChange",
                value: function(a) {
                    var b = a.instance;
                    this.tip = b.popper;
                    this._cleanTipClass();
                    this.addAttachmentClass(this._getAttachment(a.placement))
                }
            }, {
                key: "_fixTransition",
                value: function() {
                    var a = this.getTipElement(),
                        b = this.config.animation;
                    if (null !== a.getAttribute("x-placement")) {
                        return
                    }(0, m.default)(a).removeClass(A.FADE);
                    this.config.animation = !1;
                    this.hide();
                    this.show();
                    this.config.animation = b
                }
            }], [{
                key: "_jQueryInterface",
                value: function(b) {
                    return this.each(function() {
                        var c = (0, m.default)(this).data(p),
                            d = "object" === i(b) && b;
                        if (!c && /dispose|hide/.test(b)) {
                            return
                        }
                        if (!c) {
                            c = new a(this, d);
                            (0, m.default)(this).data(p, c)
                        }
                        if ("string" == typeof b) {
                            if ("undefined" == typeof c[b]) {
                                throw new TypeError("No method named \"".concat(b, "\""))
                            }
                            c[b]()
                        }
                    })
                }
            }, {
                key: "VERSION",
                get: function() {
                    return "4.3.1"
                }
            }, {
                key: "Default",
                get: function() {
                    return x
                }
            }, {
                key: "NAME",
                get: function() {
                    return "tooltip"
                }
            }, {
                key: "DATA_KEY",
                get: function() {
                    return p
                }
            }, {
                key: "Event",
                get: function() {
                    return z
                }
            }, {
                key: "EVENT_KEY",
                get: function() {
                    return q
                }
            }, {
                key: "DefaultType",
                get: function() {
                    return v
                }
            }]);
            return a
        }();
    m.default.fn.tooltip = D._jQueryInterface;
    m.default.fn.tooltip.Constructor = D;
    m.default.fn.tooltip.noConflict = function() {
        m.default.fn.tooltip = r;
        return D._jQueryInterface
    };
    a.default = D;
    return a.default
});
"use strict";
define("theme_boost/util", ["exports", "jquery"], function(a, b) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    var f = function(a) {
        return a && a.__esModule ? a : {
            default: a
        }
    }(b);

    function c(a) {
        return {}.toString.call(a).match(/\s([a-z]+)/i)[1].toLowerCase()
    }

    function d() {
        return {
            bindType: "transitionend",
            delegateType: "transitionend",
            handle: function(a) {
                if ((0, f.default)(a.target).is(this)) {
                    return a.handleObj.handler.apply(this, arguments)
                }
            }
        }
    }

    function e(a) {
        var b = this,
            c = !1;
        (0, f.default)(this).one(g.TRANSITION_END, function() {
            c = !0
        });
        setTimeout(function() {
            if (!c) {
                g.triggerTransitionEnd(b)
            }
        }, a);
        return this
    }
    var g = {
        TRANSITION_END: "bsTransitionEnd",
        getUID: function(a) {
            do {
                a += ~~(Math.random() * 1e6)
            } while (document.getElementById(a));
            return a
        },
        getSelectorFromElement: function(a) {
            var b = a.getAttribute("data-target");
            if (!b || "#" === b) {
                var c = a.getAttribute("href");
                b = c && "#" !== c ? c.trim() : ""
            }
            try {
                return document.querySelector(b) ? b : null
            } catch (a) {
                return null
            }
        },
        getTransitionDurationFromElement: function(a) {
            if (!a) {
                return 0
            }
            var b = (0, f.default)(a).css("transition-duration"),
                c = (0, f.default)(a).css("transition-delay"),
                d = parseFloat(b),
                e = parseFloat(c);
            if (!d && !e) {
                return 0
            }
            b = b.split(",")[0];
            c = c.split(",")[0];
            return (parseFloat(b) + parseFloat(c)) * 1e3
        },
        reflow: function(a) {
            return a.offsetHeight
        },
        triggerTransitionEnd: function(a) {
            (0, f.default)(a).trigger("transitionend")
        },
        supportsTransitionEnd: function() {
            return !0
        },
        isElement: function(a) {
            return (a[0] || a).nodeType
        },
        typeCheckConfig: function(a, b, d) {
            for (var e in d) {
                if (Object.prototype.hasOwnProperty.call(d, e)) {
                    var f = d[e],
                        h = b[e],
                        i = h && g.isElement(h) ? "element" : c(h);
                    if (!new RegExp(f).test(i)) {
                        throw new Error("".concat(a.toUpperCase(), ": ") + "Option \"".concat(e, "\" provided type \"").concat(i, "\" ") + "but expected type \"".concat(f, "\"."))
                    }
                }
            }
        },
        findShadowRoot: function(a) {
            if (!document.documentElement.attachShadow) {
                return null
            }
            if ("function" == typeof a.getRootNode) {
                var b = a.getRootNode();
                return b instanceof ShadowRoot ? b : null
            }
            if (a instanceof ShadowRoot) {
                return a
            }
            if (!a.parentNode) {
                return null
            }
            return g.findShadowRoot(a.parentNode)
        }
    };
    (function() {
        f.default.fn.emulateTransitionEnd = e;
        f.default.event.special[g.TRANSITION_END] = d()
    })();
    a.default = g;
    return a.default
});
"use strict";

function _typeof2(a) {
    if ("function" == typeof Symbol && "symbol" == typeof Symbol.iterator) {
        _typeof2 = function(a) {
            return typeof a
        }
    } else {
        _typeof2 = function(a) {
            return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
        }
    }
    return _typeof2(a)
}
define("theme_boost/carousel", ["exports", "jquery", "./util"], function(a, b, c) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    var k = d(b),
        l = d(c);

    function d(a) {
        return a && a.__esModule ? a : {
            default: a
        }
    }

    function e(a) {
        if ("function" == typeof Symbol && "symbol" === _typeof2(Symbol.iterator)) {
            e = function(a) {
                return _typeof2(a)
            }
        } else {
            e = function(a) {
                return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : _typeof2(a)
            }
        }
        return e(a)
    }

    function f(a) {
        for (var b = 1; b < arguments.length; b++) {
            var c = null != arguments[b] ? arguments[b] : {},
                d = Object.keys(c);
            if ("function" == typeof Object.getOwnPropertySymbols) {
                d = d.concat(Object.getOwnPropertySymbols(c).filter(function(a) {
                    return Object.getOwnPropertyDescriptor(c, a).enumerable
                }))
            }
            d.forEach(function(b) {
                g(a, b, c[b])
            })
        }
        return a
    }

    function g(a, b, c) {
        if (b in a) {
            Object.defineProperty(a, b, {
                value: c,
                enumerable: !0,
                configurable: !0,
                writable: !0
            })
        } else {
            a[b] = c
        }
        return a
    }

    function h(a, b) {
        if (!(a instanceof b)) {
            throw new TypeError("Cannot call a class as a function")
        }
    }

    function i(a, b) {
        for (var c = 0, d; c < b.length; c++) {
            d = b[c];
            d.enumerable = d.enumerable || !1;
            d.configurable = !0;
            if ("value" in d) d.writable = !0;
            Object.defineProperty(a, d.key, d)
        }
    }

    function j(a, b, c) {
        if (b) i(a.prototype, b);
        if (c) i(a, c);
        return a
    }
    var m = "bs.carousel",
        n = ".".concat(m),
        o = ".data-api",
        p = k.default.fn.carousel,
        q = {
            interval: 5e3,
            keyboard: !0,
            slide: !1,
            pause: "hover",
            wrap: !0,
            touch: !0
        },
        r = {
            interval: "(number|boolean)",
            keyboard: "boolean",
            slide: "(boolean|string)",
            pause: "(string|boolean)",
            wrap: "boolean",
            touch: "boolean"
        },
        s = {
            NEXT: "next",
            PREV: "prev",
            LEFT: "left",
            RIGHT: "right"
        },
        t = {
            SLIDE: "slide".concat(n),
            SLID: "slid".concat(n),
            KEYDOWN: "keydown".concat(n),
            MOUSEENTER: "mouseenter".concat(n),
            MOUSELEAVE: "mouseleave".concat(n),
            TOUCHSTART: "touchstart".concat(n),
            TOUCHMOVE: "touchmove".concat(n),
            TOUCHEND: "touchend".concat(n),
            POINTERDOWN: "pointerdown".concat(n),
            POINTERUP: "pointerup".concat(n),
            DRAG_START: "dragstart".concat(n),
            LOAD_DATA_API: "load".concat(n).concat(o),
            CLICK_DATA_API: "click".concat(n).concat(o)
        },
        u = {
            CAROUSEL: "carousel",
            ACTIVE: "active",
            SLIDE: "slide",
            RIGHT: "carousel-item-right",
            LEFT: "carousel-item-left",
            NEXT: "carousel-item-next",
            PREV: "carousel-item-prev",
            ITEM: "carousel-item",
            POINTER_EVENT: "pointer-event"
        },
        v = {
            ACTIVE: ".active",
            ACTIVE_ITEM: ".active.carousel-item",
            ITEM: ".carousel-item",
            ITEM_IMG: ".carousel-item img",
            NEXT_PREV: ".carousel-item-next, .carousel-item-prev",
            INDICATORS: ".carousel-indicators",
            DATA_SLIDE: "[data-slide], [data-slide-to]",
            DATA_RIDE: "[data-ride=\"carousel\"]"
        },
        w = {
            TOUCH: "touch",
            PEN: "pen"
        },
        x = function() {
            function a(b, c) {
                h(this, a);
                this._items = null;
                this._interval = null;
                this._activeElement = null;
                this._isPaused = !1;
                this._isSliding = !1;
                this.touchTimeout = null;
                this.touchStartX = 0;
                this.touchDeltaX = 0;
                this._config = this._getConfig(c);
                this._element = b;
                this._indicatorsElement = this._element.querySelector(v.INDICATORS);
                this._touchSupported = "ontouchstart" in document.documentElement || 0 < navigator.maxTouchPoints;
                this._pointerEvent = !!(window.PointerEvent || window.MSPointerEvent);
                this._addEventListeners()
            }
            j(a, [{
                key: "next",
                value: function() {
                    if (!this._isSliding) {
                        this._slide(s.NEXT)
                    }
                }
            }, {
                key: "nextWhenVisible",
                value: function() {
                    if (!document.hidden && (0, k.default)(this._element).is(":visible") && "hidden" !== (0, k.default)(this._element).css("visibility")) {
                        this.next()
                    }
                }
            }, {
                key: "prev",
                value: function() {
                    if (!this._isSliding) {
                        this._slide(s.PREV)
                    }
                }
            }, {
                key: "pause",
                value: function(a) {
                    if (!a) {
                        this._isPaused = !0
                    }
                    if (this._element.querySelector(v.NEXT_PREV)) {
                        l.default.triggerTransitionEnd(this._element);
                        this.cycle(!0)
                    }
                    clearInterval(this._interval);
                    this._interval = null
                }
            }, {
                key: "cycle",
                value: function(a) {
                    if (!a) {
                        this._isPaused = !1
                    }
                    if (this._interval) {
                        clearInterval(this._interval);
                        this._interval = null
                    }
                    if (this._config.interval && !this._isPaused) {
                        this._interval = setInterval((document.visibilityState ? this.nextWhenVisible : this.next).bind(this), this._config.interval)
                    }
                }
            }, {
                key: "to",
                value: function(a) {
                    var b = this;
                    this._activeElement = this._element.querySelector(v.ACTIVE_ITEM);
                    var c = this._getItemIndex(this._activeElement);
                    if (a > this._items.length - 1 || 0 > a) {
                        return
                    }
                    if (this._isSliding) {
                        (0, k.default)(this._element).one(t.SLID, function() {
                            return b.to(a)
                        });
                        return
                    }
                    if (c === a) {
                        this.pause();
                        this.cycle();
                        return
                    }
                    var d = a > c ? s.NEXT : s.PREV;
                    this._slide(d, this._items[a])
                }
            }, {
                key: "dispose",
                value: function() {
                    (0, k.default)(this._element).off(n);
                    k.default.removeData(this._element, m);
                    this._items = null;
                    this._config = null;
                    this._element = null;
                    this._interval = null;
                    this._isPaused = null;
                    this._isSliding = null;
                    this._activeElement = null;
                    this._indicatorsElement = null
                }
            }, {
                key: "_getConfig",
                value: function(a) {
                    a = f({}, q, a);
                    l.default.typeCheckConfig("carousel", a, r);
                    return a
                }
            }, {
                key: "_handleSwipe",
                value: function() {
                    var a = Math.abs(this.touchDeltaX);
                    if (a <= 40) {
                        return
                    }
                    var b = a / this.touchDeltaX;
                    if (0 < b) {
                        this.prev()
                    }
                    if (0 > b) {
                        this.next()
                    }
                }
            }, {
                key: "_addEventListeners",
                value: function() {
                    var a = this;
                    if (this._config.keyboard) {
                        (0, k.default)(this._element).on(t.KEYDOWN, function(b) {
                            return a._keydown(b)
                        })
                    }
                    if ("hover" === this._config.pause) {
                        (0, k.default)(this._element).on(t.MOUSEENTER, function(b) {
                            return a.pause(b)
                        }).on(t.MOUSELEAVE, function(b) {
                            return a.cycle(b)
                        })
                    }
                    if (this._config.touch) {
                        this._addTouchEventListeners()
                    }
                }
            }, {
                key: "_addTouchEventListeners",
                value: function() {
                    var a = this;
                    if (!this._touchSupported) {
                        return
                    }
                    var b = function(b) {
                            if (a._pointerEvent && w[b.originalEvent.pointerType.toUpperCase()]) {
                                a.touchStartX = b.originalEvent.clientX
                            } else if (!a._pointerEvent) {
                                a.touchStartX = b.originalEvent.touches[0].clientX
                            }
                        },
                        c = function(b) {
                            if (b.originalEvent.touches && 1 < b.originalEvent.touches.length) {
                                a.touchDeltaX = 0
                            } else {
                                a.touchDeltaX = b.originalEvent.touches[0].clientX - a.touchStartX
                            }
                        },
                        d = function(b) {
                            if (a._pointerEvent && w[b.originalEvent.pointerType.toUpperCase()]) {
                                a.touchDeltaX = b.originalEvent.clientX - a.touchStartX
                            }
                            a._handleSwipe();
                            if ("hover" === a._config.pause) {
                                a.pause();
                                if (a.touchTimeout) {
                                    clearTimeout(a.touchTimeout)
                                }
                                a.touchTimeout = setTimeout(function(b) {
                                    return a.cycle(b)
                                }, 500 + a._config.interval)
                            }
                        };
                    (0, k.default)(this._element.querySelectorAll(v.ITEM_IMG)).on(t.DRAG_START, function(a) {
                        return a.preventDefault()
                    });
                    if (this._pointerEvent) {
                        (0, k.default)(this._element).on(t.POINTERDOWN, function(a) {
                            return b(a)
                        });
                        (0, k.default)(this._element).on(t.POINTERUP, function(a) {
                            return d(a)
                        });
                        this._element.classList.add(u.POINTER_EVENT)
                    } else {
                        (0, k.default)(this._element).on(t.TOUCHSTART, function(a) {
                            return b(a)
                        });
                        (0, k.default)(this._element).on(t.TOUCHMOVE, function(a) {
                            return c(a)
                        });
                        (0, k.default)(this._element).on(t.TOUCHEND, function(a) {
                            return d(a)
                        })
                    }
                }
            }, {
                key: "_keydown",
                value: function(a) {
                    if (/input|textarea/i.test(a.target.tagName)) {
                        return
                    }
                    switch (a.which) {
                        case 37:
                            a.preventDefault();
                            this.prev();
                            break;
                        case 39:
                            a.preventDefault();
                            this.next();
                            break;
                        default:
                    }
                }
            }, {
                key: "_getItemIndex",
                value: function(a) {
                    this._items = a && a.parentNode ? [].slice.call(a.parentNode.querySelectorAll(v.ITEM)) : [];
                    return this._items.indexOf(a)
                }
            }, {
                key: "_getItemByDirection",
                value: function(a, b) {
                    var c = a === s.NEXT,
                        d = a === s.PREV,
                        e = this._getItemIndex(b),
                        f = this._items.length - 1;
                    if ((d && 0 === e || c && e === f) && !this._config.wrap) {
                        return b
                    }
                    var g = a === s.PREV ? -1 : 1,
                        h = (e + g) % this._items.length;
                    return -1 === h ? this._items[this._items.length - 1] : this._items[h]
                }
            }, {
                key: "_triggerSlideEvent",
                value: function(a, b) {
                    var c = this._getItemIndex(a),
                        d = this._getItemIndex(this._element.querySelector(v.ACTIVE_ITEM)),
                        e = k.default.Event(t.SLIDE, {
                            relatedTarget: a,
                            direction: b,
                            from: d,
                            to: c
                        });
                    (0, k.default)(this._element).trigger(e);
                    return e
                }
            }, {
                key: "_setActiveIndicatorElement",
                value: function(a) {
                    if (this._indicatorsElement) {
                        var b = [].slice.call(this._indicatorsElement.querySelectorAll(v.ACTIVE));
                        (0, k.default)(b).removeClass(u.ACTIVE);
                        var c = this._indicatorsElement.children[this._getItemIndex(a)];
                        if (c) {
                            (0, k.default)(c).addClass(u.ACTIVE)
                        }
                    }
                }
            }, {
                key: "_slide",
                value: function(a, b) {
                    var c = this,
                        d = this._element.querySelector(v.ACTIVE_ITEM),
                        e = this._getItemIndex(d),
                        f = b || d && this._getItemByDirection(a, d),
                        g = this._getItemIndex(f),
                        h = !!this._interval,
                        i, j, m;
                    if (a === s.NEXT) {
                        i = u.LEFT;
                        j = u.NEXT;
                        m = s.LEFT
                    } else {
                        i = u.RIGHT;
                        j = u.PREV;
                        m = s.RIGHT
                    }
                    if (f && (0, k.default)(f).hasClass(u.ACTIVE)) {
                        this._isSliding = !1;
                        return
                    }
                    var n = this._triggerSlideEvent(f, m);
                    if (n.isDefaultPrevented()) {
                        return
                    }
                    if (!d || !f) {
                        return
                    }
                    this._isSliding = !0;
                    if (h) {
                        this.pause()
                    }
                    this._setActiveIndicatorElement(f);
                    var o = k.default.Event(t.SLID, {
                        relatedTarget: f,
                        direction: m,
                        from: e,
                        to: g
                    });
                    if ((0, k.default)(this._element).hasClass(u.SLIDE)) {
                        (0, k.default)(f).addClass(j);
                        l.default.reflow(f);
                        (0, k.default)(d).addClass(i);
                        (0, k.default)(f).addClass(i);
                        var p = parseInt(f.getAttribute("data-interval"), 10);
                        if (p) {
                            this._config.defaultInterval = this._config.defaultInterval || this._config.interval;
                            this._config.interval = p
                        } else {
                            this._config.interval = this._config.defaultInterval || this._config.interval
                        }
                        var q = l.default.getTransitionDurationFromElement(d);
                        (0, k.default)(d).one(l.default.TRANSITION_END, function() {
                            (0, k.default)(f).removeClass("".concat(i, " ").concat(j)).addClass(u.ACTIVE);
                            (0, k.default)(d).removeClass("".concat(u.ACTIVE, " ").concat(j, " ").concat(i));
                            c._isSliding = !1;
                            setTimeout(function() {
                                return (0, k.default)(c._element).trigger(o)
                            }, 0)
                        }).emulateTransitionEnd(q)
                    } else {
                        (0, k.default)(d).removeClass(u.ACTIVE);
                        (0, k.default)(f).addClass(u.ACTIVE);
                        this._isSliding = !1;
                        (0, k.default)(this._element).trigger(o)
                    }
                    if (h) {
                        this.cycle()
                    }
                }
            }], [{
                key: "_jQueryInterface",
                value: function(b) {
                    return this.each(function() {
                        var c = (0, k.default)(this).data(m),
                            d = f({}, q, (0, k.default)(this).data());
                        if ("object" === e(b)) {
                            d = f({}, d, b)
                        }
                        var g = "string" == typeof b ? b : d.slide;
                        if (!c) {
                            c = new a(this, d);
                            (0, k.default)(this).data(m, c)
                        }
                        if ("number" == typeof b) {
                            c.to(b)
                        } else if ("string" == typeof g) {
                            if ("undefined" == typeof c[g]) {
                                throw new TypeError("No method named \"".concat(g, "\""))
                            }
                            c[g]()
                        } else if (d.interval && d.ride) {
                            c.pause();
                            c.cycle()
                        }
                    })
                }
            }, {
                key: "_dataApiClickHandler",
                value: function(b) {
                    var c = l.default.getSelectorFromElement(this);
                    if (!c) {
                        return
                    }
                    var d = (0, k.default)(c)[0];
                    if (!d || !(0, k.default)(d).hasClass(u.CAROUSEL)) {
                        return
                    }
                    var e = f({}, (0, k.default)(d).data(), (0, k.default)(this).data()),
                        g = this.getAttribute("data-slide-to");
                    if (g) {
                        e.interval = !1
                    }
                    a._jQueryInterface.call((0, k.default)(d), e);
                    if (g) {
                        (0, k.default)(d).data(m).to(g)
                    }
                    b.preventDefault()
                }
            }, {
                key: "VERSION",
                get: function() {
                    return "4.3.1"
                }
            }, {
                key: "Default",
                get: function() {
                    return q
                }
            }]);
            return a
        }();
    (0, k.default)(document).on(t.CLICK_DATA_API, v.DATA_SLIDE, x._dataApiClickHandler);
    (0, k.default)(window).on(t.LOAD_DATA_API, function() {
        for (var a = [].slice.call(document.querySelectorAll(v.DATA_RIDE)), b = 0, c = a.length, d; b < c; b++) {
            d = (0, k.default)(a[b]);
            x._jQueryInterface.call(d, d.data())
        }
    });
    k.default.fn.carousel = x._jQueryInterface;
    k.default.fn.carousel.Constructor = x;
    k.default.fn.carousel.noConflict = function() {
        k.default.fn.carousel = p;
        return x._jQueryInterface
    };
    a.default = x;
    return a.default
});
"use strict";

function _typeof2(a) {
    if ("function" == typeof Symbol && "symbol" == typeof Symbol.iterator) {
        _typeof2 = function(a) {
            return typeof a
        }
    } else {
        _typeof2 = function(a) {
            return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
        }
    }
    return _typeof2(a)
}
define("theme_boost/popover", ["exports", "jquery", "./tooltip"], function(a, b, c) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    var o = d(b),
        p = d(c);

    function d(a) {
        return a && a.__esModule ? a : {
            default: a
        }
    }

    function e(a) {
        if ("function" == typeof Symbol && "symbol" === _typeof2(Symbol.iterator)) {
            e = function(a) {
                return _typeof2(a)
            }
        } else {
            e = function(a) {
                return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : _typeof2(a)
            }
        }
        return e(a)
    }

    function f(a, b) {
        if (!(a instanceof b)) {
            throw new TypeError("Cannot call a class as a function")
        }
    }

    function g(a, b) {
        for (var c = 0, d; c < b.length; c++) {
            d = b[c];
            d.enumerable = d.enumerable || !1;
            d.configurable = !0;
            if ("value" in d) d.writable = !0;
            Object.defineProperty(a, d.key, d)
        }
    }

    function h(a, b, c) {
        if (b) g(a.prototype, b);
        if (c) g(a, c);
        return a
    }

    function i(a, b) {
        if (b && ("object" === e(b) || "function" == typeof b)) {
            return b
        }
        return j(a)
    }

    function j(a) {
        if (void 0 === a) {
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
        }
        return a
    }

    function k(a, b) {
        if ("function" != typeof b && null !== b) {
            throw new TypeError("Super expression must either be null or a function")
        }
        a.prototype = Object.create(b && b.prototype, {
            constructor: {
                value: a,
                writable: !0,
                configurable: !0
            }
        });
        if (b) l(a, b)
    }

    function l(a, b) {
        l = Object.setPrototypeOf || function(a, b) {
            a.__proto__ = b;
            return a
        };
        return l(a, b)
    }

    function m(a) {
        for (var b = 1; b < arguments.length; b++) {
            var c = null != arguments[b] ? arguments[b] : {},
                d = Object.keys(c);
            if ("function" == typeof Object.getOwnPropertySymbols) {
                d = d.concat(Object.getOwnPropertySymbols(c).filter(function(a) {
                    return Object.getOwnPropertyDescriptor(c, a).enumerable
                }))
            }
            d.forEach(function(b) {
                n(a, b, c[b])
            })
        }
        return a
    }

    function n(a, b, c) {
        if (b in a) {
            Object.defineProperty(a, b, {
                value: c,
                enumerable: !0,
                configurable: !0,
                writable: !0
            })
        } else {
            a[b] = c
        }
        return a
    }
    var q = "bs.popover",
        r = ".".concat(q),
        s = o.default.fn.popover,
        t = "bs-popover",
        u = new RegExp("(^|\\s)".concat(t, "\\S+"), "g"),
        v = m({}, p.default.Default, {
            placement: "right",
            trigger: "click",
            content: "",
            template: "<div class=\"popover\" role=\"tooltip\"><div class=\"arrow\"></div><h3 class=\"popover-header\"></h3><div class=\"popover-body\"></div></div>"
        }),
        w = m({}, p.default.DefaultType, {
            content: "(string|element|function)"
        }),
        x = {
            FADE: "fade",
            SHOW: "show"
        },
        y = {
            TITLE: ".popover-header",
            CONTENT: ".popover-body"
        },
        z = {
            HIDE: "hide".concat(r),
            HIDDEN: "hidden".concat(r),
            SHOW: "show".concat(r),
            SHOWN: "shown".concat(r),
            INSERTED: "inserted".concat(r),
            CLICK: "click".concat(r),
            FOCUSIN: "focusin".concat(r),
            FOCUSOUT: "focusout".concat(r),
            MOUSEENTER: "mouseenter".concat(r),
            MOUSELEAVE: "mouseleave".concat(r)
        },
        A = function(a) {
            k(b, a);

            function b() {
                f(this, b);
                return i(this, (b.__proto__ || Object.getPrototypeOf(b)).apply(this, arguments))
            }
            h(b, [{
                key: "isWithContent",
                value: function() {
                    return this.getTitle() || this._getContent()
                }
            }, {
                key: "addAttachmentClass",
                value: function(a) {
                    (0, o.default)(this.getTipElement()).addClass("".concat(t, "-").concat(a))
                }
            }, {
                key: "getTipElement",
                value: function() {
                    this.tip = this.tip || (0, o.default)(this.config.template)[0];
                    return this.tip
                }
            }, {
                key: "setContent",
                value: function() {
                    var a = (0, o.default)(this.getTipElement());
                    this.setElementContent(a.find(y.TITLE), this.getTitle());
                    var b = this._getContent();
                    if ("function" == typeof b) {
                        b = b.call(this.element)
                    }
                    this.setElementContent(a.find(y.CONTENT), b);
                    a.removeClass("".concat(x.FADE, " ").concat(x.SHOW))
                }
            }, {
                key: "_getContent",
                value: function() {
                    return this.element.getAttribute("data-content") || this.config.content
                }
            }, {
                key: "_cleanTipClass",
                value: function() {
                    var a = (0, o.default)(this.getTipElement()),
                        b = a.attr("class").match(u);
                    if (null !== b && 0 < b.length) {
                        a.removeClass(b.join(""))
                    }
                }
            }], [{
                key: "_jQueryInterface",
                value: function(a) {
                    return this.each(function() {
                        var c = (0, o.default)(this).data(q),
                            d = "object" === e(a) ? a : null;
                        if (!c && /dispose|hide/.test(a)) {
                            return
                        }
                        if (!c) {
                            c = new b(this, d);
                            (0, o.default)(this).data(q, c)
                        }
                        if ("string" == typeof a) {
                            if ("undefined" == typeof c[a]) {
                                throw new TypeError("No method named \"".concat(a, "\""))
                            }
                            c[a]()
                        }
                    })
                }
            }, {
                key: "VERSION",
                get: function() {
                    return "4.3.1"
                }
            }, {
                key: "Default",
                get: function() {
                    return v
                }
            }, {
                key: "NAME",
                get: function() {
                    return "popover"
                }
            }, {
                key: "DATA_KEY",
                get: function() {
                    return q
                }
            }, {
                key: "Event",
                get: function() {
                    return z
                }
            }, {
                key: "EVENT_KEY",
                get: function() {
                    return r
                }
            }, {
                key: "DefaultType",
                get: function() {
                    return w
                }
            }]);
            return b
        }(p.default);
    o.default.fn.popover = A._jQueryInterface;
    o.default.fn.popover.Constructor = A;
    o.default.fn.popover.noConflict = function() {
        o.default.fn.popover = s;
        return A._jQueryInterface
    };
    a.default = A;
    return a.default
});
"use strict";

function _typeof2(a) {
    if ("function" == typeof Symbol && "symbol" == typeof Symbol.iterator) {
        _typeof2 = function(a) {
            return typeof a
        }
    } else {
        _typeof2 = function(a) {
            return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
        }
    }
    return _typeof2(a)
}
define("theme_boost/dropdown", ["exports", "jquery", "core/popper", "./util"], function(a, b, c, d) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    var l = e(b),
        m = e(c),
        n = e(d);

    function e(a) {
        return a && a.__esModule ? a : {
            default: a
        }
    }

    function f(a) {
        if ("function" == typeof Symbol && "symbol" === _typeof2(Symbol.iterator)) {
            f = function(a) {
                return _typeof2(a)
            }
        } else {
            f = function(a) {
                return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : _typeof2(a)
            }
        }
        return f(a)
    }

    function g(a) {
        for (var b = 1; b < arguments.length; b++) {
            var c = null != arguments[b] ? arguments[b] : {},
                d = Object.keys(c);
            if ("function" == typeof Object.getOwnPropertySymbols) {
                d = d.concat(Object.getOwnPropertySymbols(c).filter(function(a) {
                    return Object.getOwnPropertyDescriptor(c, a).enumerable
                }))
            }
            d.forEach(function(b) {
                h(a, b, c[b])
            })
        }
        return a
    }

    function h(a, b, c) {
        if (b in a) {
            Object.defineProperty(a, b, {
                value: c,
                enumerable: !0,
                configurable: !0,
                writable: !0
            })
        } else {
            a[b] = c
        }
        return a
    }

    function i(a, b) {
        if (!(a instanceof b)) {
            throw new TypeError("Cannot call a class as a function")
        }
    }

    function j(a, b) {
        for (var c = 0, d; c < b.length; c++) {
            d = b[c];
            d.enumerable = d.enumerable || !1;
            d.configurable = !0;
            if ("value" in d) d.writable = !0;
            Object.defineProperty(a, d.key, d)
        }
    }

    function k(a, b, c) {
        if (b) j(a.prototype, b);
        if (c) j(a, c);
        return a
    }
    var o = "bs.dropdown",
        p = ".".concat(o),
        q = ".data-api",
        r = l.default.fn.dropdown,
        s = 27,
        t = 32,
        u = 9,
        v = 38,
        w = 40,
        x = new RegExp("".concat(v, "|").concat(w, "|").concat(s)),
        y = {
            HIDE: "hide".concat(p),
            HIDDEN: "hidden".concat(p),
            SHOW: "show".concat(p),
            SHOWN: "shown".concat(p),
            CLICK: "click".concat(p),
            CLICK_DATA_API: "click".concat(p).concat(q),
            KEYDOWN_DATA_API: "keydown".concat(p).concat(q),
            KEYUP_DATA_API: "keyup".concat(p).concat(q)
        },
        z = {
            DISABLED: "disabled",
            SHOW: "show",
            DROPUP: "dropup",
            DROPRIGHT: "dropright",
            DROPLEFT: "dropleft",
            MENURIGHT: "dropdown-menu-right",
            MENULEFT: "dropdown-menu-left",
            POSITION_STATIC: "position-static"
        },
        A = {
            DATA_TOGGLE: "[data-toggle=\"dropdown\"]",
            FORM_CHILD: ".dropdown form",
            MENU: ".dropdown-menu",
            NAVBAR_NAV: ".navbar-nav",
            VISIBLE_ITEMS: ".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)"
        },
        B = {
            TOP: "top-start",
            TOPEND: "top-end",
            BOTTOM: "bottom-start",
            BOTTOMEND: "bottom-end",
            RIGHT: "right-start",
            RIGHTEND: "right-end",
            LEFT: "left-start",
            LEFTEND: "left-end"
        },
        C = {
            offset: 0,
            flip: !0,
            boundary: "scrollParent",
            reference: "toggle",
            display: "dynamic"
        },
        D = {
            offset: "(number|string|function)",
            flip: "boolean",
            boundary: "(string|element)",
            reference: "(string|element)",
            display: "string"
        },
        E = function() {
            function a(b, c) {
                i(this, a);
                this._element = b;
                this._popper = null;
                this._config = this._getConfig(c);
                this._menu = this._getMenuElement();
                this._inNavbar = this._detectNavbar();
                this._addEventListeners()
            }
            k(a, [{
                key: "toggle",
                value: function() {
                    if (this._element.disabled || (0, l.default)(this._element).hasClass(z.DISABLED)) {
                        return
                    }
                    var b = a._getParentFromElement(this._element),
                        c = (0, l.default)(this._menu).hasClass(z.SHOW);
                    a._clearMenus();
                    if (c) {
                        return
                    }
                    var d = {
                            relatedTarget: this._element
                        },
                        e = l.default.Event(y.SHOW, d);
                    (0, l.default)(b).trigger(e);
                    if (e.isDefaultPrevented()) {
                        return
                    }
                    if (!this._inNavbar) {
                        if ("undefined" == typeof m.default) {
                            throw new TypeError("Bootstrap's dropdowns require Popper.js (https://popper.js.org/)")
                        }
                        var f = this._element;
                        if ("parent" === this._config.reference) {
                            f = b
                        } else if (n.default.isElement(this._config.reference)) {
                            f = this._config.reference;
                            if ("undefined" != typeof this._config.reference.jquery) {
                                f = this._config.reference[0]
                            }
                        }
                        if ("scrollParent" !== this._config.boundary) {
                            (0, l.default)(b).addClass(z.POSITION_STATIC)
                        }
                        this._popper = new m.default(f, this._menu, this._getPopperConfig())
                    }
                    if ("ontouchstart" in document.documentElement && 0 === (0, l.default)(b).closest(A.NAVBAR_NAV).length) {
                        (0, l.default)(document.body).children().on("mouseover", null, l.default.noop)
                    }
                    this._element.focus();
                    this._element.setAttribute("aria-expanded", !0);
                    (0, l.default)(this._menu).toggleClass(z.SHOW);
                    (0, l.default)(b).toggleClass(z.SHOW).trigger(l.default.Event(y.SHOWN, d))
                }
            }, {
                key: "show",
                value: function() {
                    if (this._element.disabled || (0, l.default)(this._element).hasClass(z.DISABLED) || (0, l.default)(this._menu).hasClass(z.SHOW)) {
                        return
                    }
                    var b = {
                            relatedTarget: this._element
                        },
                        c = l.default.Event(y.SHOW, b),
                        d = a._getParentFromElement(this._element);
                    (0, l.default)(d).trigger(c);
                    if (c.isDefaultPrevented()) {
                        return
                    }(0, l.default)(this._menu).toggleClass(z.SHOW);
                    (0, l.default)(d).toggleClass(z.SHOW).trigger(l.default.Event(y.SHOWN, b))
                }
            }, {
                key: "hide",
                value: function() {
                    if (this._element.disabled || (0, l.default)(this._element).hasClass(z.DISABLED) || !(0, l.default)(this._menu).hasClass(z.SHOW)) {
                        return
                    }
                    var b = {
                            relatedTarget: this._element
                        },
                        c = l.default.Event(y.HIDE, b),
                        d = a._getParentFromElement(this._element);
                    (0, l.default)(d).trigger(c);
                    if (c.isDefaultPrevented()) {
                        return
                    }(0, l.default)(this._menu).toggleClass(z.SHOW);
                    (0, l.default)(d).toggleClass(z.SHOW).trigger(l.default.Event(y.HIDDEN, b))
                }
            }, {
                key: "dispose",
                value: function() {
                    l.default.removeData(this._element, o);
                    (0, l.default)(this._element).off(p);
                    this._element = null;
                    this._menu = null;
                    if (null !== this._popper) {
                        this._popper.destroy();
                        this._popper = null
                    }
                }
            }, {
                key: "update",
                value: function() {
                    this._inNavbar = this._detectNavbar();
                    if (null !== this._popper) {
                        this._popper.scheduleUpdate()
                    }
                }
            }, {
                key: "_addEventListeners",
                value: function() {
                    var a = this;
                    (0, l.default)(this._element).on(y.CLICK, function(b) {
                        b.preventDefault();
                        b.stopPropagation();
                        a.toggle()
                    })
                }
            }, {
                key: "_getConfig",
                value: function(a) {
                    a = g({}, this.constructor.Default, (0, l.default)(this._element).data(), a);
                    n.default.typeCheckConfig("dropdown", a, this.constructor.DefaultType);
                    return a
                }
            }, {
                key: "_getMenuElement",
                value: function() {
                    if (!this._menu) {
                        var b = a._getParentFromElement(this._element);
                        if (b) {
                            this._menu = b.querySelector(A.MENU)
                        }
                    }
                    return this._menu
                }
            }, {
                key: "_getPlacement",
                value: function() {
                    var a = (0, l.default)(this._element.parentNode),
                        b = B.BOTTOM;
                    if (a.hasClass(z.DROPUP)) {
                        b = B.TOP;
                        if ((0, l.default)(this._menu).hasClass(z.MENURIGHT)) {
                            b = B.TOPEND
                        }
                    } else if (a.hasClass(z.DROPRIGHT)) {
                        b = B.RIGHT
                    } else if (a.hasClass(z.DROPLEFT)) {
                        b = B.LEFT
                    } else if ((0, l.default)(this._menu).hasClass(z.MENURIGHT)) {
                        b = B.BOTTOMEND
                    }
                    return b
                }
            }, {
                key: "_detectNavbar",
                value: function() {
                    return 0 < (0, l.default)(this._element).closest(".navbar").length
                }
            }, {
                key: "_getOffset",
                value: function() {
                    var a = this,
                        b = {};
                    if ("function" == typeof this._config.offset) {
                        b.fn = function(b) {
                            b.offsets = g({}, b.offsets, a._config.offset(b.offsets, a._element) || {});
                            return b
                        }
                    } else {
                        b.offset = this._config.offset
                    }
                    return b
                }
            }, {
                key: "_getPopperConfig",
                value: function() {
                    var a = {
                        placement: this._getPlacement(),
                        modifiers: {
                            offset: this._getOffset(),
                            flip: {
                                enabled: this._config.flip
                            },
                            preventOverflow: {
                                boundariesElement: this._config.boundary
                            }
                        }
                    };
                    if ("static" === this._config.display) {
                        a.modifiers.applyStyle = {
                            enabled: !1
                        }
                    }
                    return a
                }
            }], [{
                key: "_jQueryInterface",
                value: function(b) {
                    return this.each(function() {
                        var c = (0, l.default)(this).data(o),
                            d = "object" === f(b) ? b : null;
                        if (!c) {
                            c = new a(this, d);
                            (0, l.default)(this).data(o, c)
                        }
                        if ("string" == typeof b) {
                            if ("undefined" == typeof c[b]) {
                                throw new TypeError("No method named \"".concat(b, "\""))
                            }
                            c[b]()
                        }
                    })
                }
            }, {
                key: "_clearMenus",
                value: function(b) {
                    if (b && (b.which === 3 || "keyup" === b.type && b.which !== u)) {
                        return
                    }
                    for (var c = [].slice.call(document.querySelectorAll(A.DATA_TOGGLE)), d = 0, e = c.length; d < e; d++) {
                        var f = a._getParentFromElement(c[d]),
                            g = (0, l.default)(c[d]).data(o),
                            h = {
                                relatedTarget: c[d]
                            };
                        if (b && "click" === b.type) {
                            h.clickEvent = b
                        }
                        if (!g) {
                            continue
                        }
                        var j = g._menu;
                        if (!(0, l.default)(f).hasClass(z.SHOW)) {
                            continue
                        }
                        if (b && ("click" === b.type && /input|textarea/i.test(b.target.tagName) || "keyup" === b.type && b.which === u) && l.default.contains(f, b.target)) {
                            continue
                        }
                        var k = l.default.Event(y.HIDE, h);
                        (0, l.default)(f).trigger(k);
                        if (k.isDefaultPrevented()) {
                            continue
                        }
                        if ("ontouchstart" in document.documentElement) {
                            (0, l.default)(document.body).children().off("mouseover", null, l.default.noop)
                        }
                        c[d].setAttribute("aria-expanded", "false");
                        (0, l.default)(j).removeClass(z.SHOW);
                        (0, l.default)(f).removeClass(z.SHOW).trigger(l.default.Event(y.HIDDEN, h))
                    }
                }
            }, {
                key: "_getParentFromElement",
                value: function(a) {
                    var b, c = n.default.getSelectorFromElement(a);
                    if (c) {
                        b = document.querySelector(c)
                    }
                    return b || a.parentNode
                }
            }, {
                key: "_dataApiKeydownHandler",
                value: function(b) {
                    if (/input|textarea/i.test(b.target.tagName) ? b.which === t || b.which !== s && (b.which !== w && b.which !== v || (0, l.default)(b.target).closest(A.MENU).length) : !x.test(b.which)) {
                        return
                    }
                    b.preventDefault();
                    b.stopPropagation();
                    if (this.disabled || (0, l.default)(this).hasClass(z.DISABLED)) {
                        return
                    }
                    var c = a._getParentFromElement(this),
                        d = (0, l.default)(c).hasClass(z.SHOW);
                    if (!d || d && (b.which === s || b.which === t)) {
                        if (b.which === s) {
                            var e = c.querySelector(A.DATA_TOGGLE);
                            (0, l.default)(e).trigger("focus")
                        }(0, l.default)(this).trigger("click");
                        return
                    }
                    var f = [].slice.call(c.querySelectorAll(A.VISIBLE_ITEMS));
                    if (0 === f.length) {
                        return
                    }
                    var g = f.indexOf(b.target);
                    if (b.which === v && 0 < g) {
                        g--
                    }
                    if (b.which === w && g < f.length - 1) {
                        g++
                    }
                    if (0 > g) {
                        g = 0
                    }
                    f[g].focus()
                }
            }, {
                key: "VERSION",
                get: function() {
                    return "4.3.1"
                }
            }, {
                key: "Default",
                get: function() {
                    return C
                }
            }, {
                key: "DefaultType",
                get: function() {
                    return D
                }
            }]);
            return a
        }();
    (0, l.default)(document).on(y.KEYDOWN_DATA_API, A.DATA_TOGGLE, E._dataApiKeydownHandler).on(y.KEYDOWN_DATA_API, A.MENU, E._dataApiKeydownHandler).on("".concat(y.CLICK_DATA_API, " ").concat(y.KEYUP_DATA_API), E._clearMenus).on(y.CLICK_DATA_API, A.DATA_TOGGLE, function(a) {
        a.preventDefault();
        a.stopPropagation();
        E._jQueryInterface.call((0, l.default)(this), "toggle")
    }).on(y.CLICK_DATA_API, A.FORM_CHILD, function(a) {
        a.stopPropagation()
    });
    l.default.fn.dropdown = E._jQueryInterface;
    l.default.fn.dropdown.Constructor = E;
    l.default.fn.dropdown.noConflict = function() {
        l.default.fn.dropdown = r;
        return E._jQueryInterface
    };
    a.default = E;
    return a.default
});
define("theme_boost/pending", ["jquery"], function(a) {
    var b = {
        alert: [{
            start: "close",
            end: "closed"
        }],
        carousel: [{
            start: "slide",
            end: "slid"
        }],
        collapse: [{
            start: "hide",
            end: "hidden"
        }, {
            start: "show",
            end: "shown"
        }],
        dropdown: [{
            start: "hide",
            end: "hidden"
        }, {
            start: "show",
            end: "shown"
        }],
        modal: [{
            start: "hide",
            end: "hidden"
        }, {
            start: "show",
            end: "shown"
        }],
        popover: [{
            start: "hide",
            end: "hidden"
        }, {
            start: "show",
            end: "shown"
        }],
        tab: [{
            start: "hide",
            end: "hidden"
        }, {
            start: "show",
            end: "shown"
        }],
        toast: [{
            start: "hide",
            end: "hidden"
        }, {
            start: "show",
            end: "shown"
        }],
        tooltip: [{
            start: "hide",
            end: "hidden"
        }, {
            start: "show",
            end: "shown"
        }]
    };
    Object.keys(b).forEach(function(c) {
        b[c].forEach(function(b) {
            var d = b.start + ".bs." + c,
                e = b.end + ".bs." + c;
            a(document.body).on(d, function() {
                M.util.js_pending(e)
            });
            a(document.body).on(e, function() {
                M.util.js_complete(e)
            })
        })
    })
});
"use strict";
define("theme_boost/sanitizer", ["exports"], function(a) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    a.sanitizeHtml = function(a, c, d) {
        if (0 === a.length) {
            return a
        }
        if (d && "function" == typeof d) {
            return d(a)
        }
        for (var e = new window.DOMParser, f = e.parseFromString(a, "text/html"), g = Object.keys(c), h = [].slice.call(f.body.querySelectorAll("*")), j = function(a) {
                var d = h[a],
                    e = d.nodeName.toLowerCase();
                if (-1 === g.indexOf(d.nodeName.toLowerCase())) {
                    d.parentNode.removeChild(d);
                    return "continue"
                }
                var f = [].slice.call(d.attributes),
                    i = [].concat(c["*"] || [], c[e] || []);
                f.forEach(function(a) {
                    if (!b(a, i)) {
                        d.removeAttribute(a.nodeName)
                    }
                })
            }, k = 0, l = h.length, m; k < l; k++) {
            m = j(k, l);
            if ("continue" === m) continue
        }
        return f.body.innerHTML
    };
    var c = ["background", "cite", "href", "itemtype", "longdesc", "poster", "src", "xlink:href"],
        d = /^aria-[\w-]*$/i,
        e = a.DefaultWhitelist = {
            "*": ["class", "dir", "id", "lang", "role", d],
            a: ["target", "href", "title", "rel"],
            area: [],
            b: [],
            br: [],
            col: [],
            code: [],
            div: [],
            em: [],
            hr: [],
            h1: [],
            h2: [],
            h3: [],
            h4: [],
            h5: [],
            h6: [],
            i: [],
            img: ["src", "alt", "title", "width", "height"],
            li: [],
            ol: [],
            p: [],
            pre: [],
            s: [],
            small: [],
            span: [],
            sub: [],
            sup: [],
            strong: [],
            u: [],
            ul: []
        },
        f = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi,
        g = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+/]+=*$/i;

    function b(a, b) {
        var d = a.nodeName.toLowerCase();
        if (-1 !== b.indexOf(d)) {
            if (-1 !== c.indexOf(d)) {
                return !!(a.nodeValue.match(f) || a.nodeValue.match(g))
            }
            return !0
        }
        for (var e = b.filter(function(a) {
                return a instanceof RegExp
            }), h = 0, j = e.length; h < j; h++) {
            if (d.match(e[h])) {
                return !0
            }
        }
        return !1
    }
});
define("forumreport_summary/filters", ["exports", "jquery", "core/popper", "core/custom_interaction_events", "forumreport_summary/selectors", "core/yui", "core/ajax", "core/key_codes"], function(a, b, c, d, e, f, g, h) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    a.init = void 0;
    b = i(b);
    c = i(c);
    d = i(d);
    e = i(e);
    f = i(f);
    g = i(g);
    h = i(h);

    function i(a) {
        return a && a.__esModule ? a : {
            default: a
        }
    }
    var j = function(a) {
        var i = (0, b.default)(a);
        (0, b.default)(document).ready(function() {
            (0, b.default)(".loading-icon").hide();
            (0, b.default)("#summaryreport").removeClass("hidden")
        });
        var j = function(a, b) {
            var c = document.forms.filtersform.action,
                d;
            if (a) {
                a.preventDefault();
                var e = c.split("?"),
                    f = e[1],
                    g = b.split("&"),
                    h = "",
                    i = [],
                    j = [];
                f.split("&").forEach(function(a) {
                    var b = a.split("=");
                    i.push(b[0]);
                    j.push(b[1])
                });
                g.forEach(function(a) {
                    var b = a.split("="),
                        c = i.indexOf(b[0]);
                    if (-1 < c) {
                        j[c] = b[1]
                    } else {
                        i.push(b[0]);
                        j.push(b[1])
                    }
                });
                i.forEach(function(a, b) {
                    h += "&".concat(a, "=").concat(j[b])
                });
                d = e[0] + "?" + h.substr(1)
            } else {
                d = c
            }
            document.forms.filtersform.action = d;
            document.forms.filtersform.submit()
        };
        (0, b.default)(".resettable").on("click", "a", function(a) {
            j(a, a.target.search.substr(1))
        });
        (0, b.default)("thead").on("click", "a", function(a) {
            j(a, a.target.search.substr(1))
        });
        (0, b.default)(".pagination").on("click", "a", function(a) {
            j(a, a.target.search.substr(1))
        });
        if (document.forms.selectperpage) {
            document.forms.selectperpage.onsubmit = function(a) {
                var b = "perpage=" + document.forms.selectperpage.elements.perpage.value;
                j(a, b)
            }
        }
        var k = document.getElementById("summaryreport").querySelector("form.dataformatselector");
        if (k) {
            k.onsubmit = function(a) {
                var b = k.querySelector("#downloadtype_download").value,
                    c = "download=".concat(b),
                    d = document.forms.filtersform.action;
                j(a, c);
                document.forms.filtersform.action = d
            }
        }
        var l = function(a) {
                f.default.use("moodle-core-formchangechecker", function() {
                    M.core_formchangechecker.reset_form_dirty_state()
                });
                (0, b.default)(a).addClass("hidden");
                j(!1)
            },
            m = function(a) {
                var b = document.querySelector(a),
                    d = document.querySelector(e.default.filters.date.calendar);
                d.style.removeProperty("z-index");
                new c.default(b, d, {
                    placement: "bottom"
                })
            },
            n = function(a, b) {
                b.classList.add("hidden");
                b.setAttribute("data-openfilter", "false");
                a.classList.add("btn-primary");
                a.classList.remove("btn-outline-primary");
                a.setAttribute("aria-expanded", !1)
            };
        i.on(d.default.events.activate, e.default.filters.group.selectall, function() {
            var b = a.querySelectorAll(e.default.filters.group.checkbox + ":not(:checked)");
            b.forEach(function(a) {
                a.checked = !0
            })
        });
        i.on(d.default.events.activate, e.default.filters.group.clear, function() {
            var b = a.querySelectorAll(e.default.filters.group.checkbox + ":checked");
            b.forEach(function(a) {
                a.checked = !1
            })
        });
        i.on(d.default.events.activate, e.default.filters.group.trigger, function() {
            var b = a.querySelector(e.default.filters.group.trigger),
                d = a.querySelector(e.default.filters.group.popover);
            new c.default(b, d, {
                placement: "bottom"
            });
            d.classList.remove("hidden");
            d.setAttribute("data-openfilter", "true");
            b.classList.add("btn-outline-primary");
            b.classList.remove("btn-primary");
            b.setAttribute("aria-expanded", !0);
            var f = function(a) {
                if (a.target.id !== b.id && d !== a.target.closest("[data-openfilter=\"true\"]") && ("undefined" == typeof a.keyCode || a.keyCode === h.default.enter || a.keyCode === h.default.space)) {
                    n(b, d);
                    document.removeEventListener("click", f);
                    document.removeEventListener("keyup", f);
                    document.removeEventListener("keyup", g)
                }
            };
            document.addEventListener("click", f);
            document.addEventListener("keyup", f);
            var g = function(a) {
                if (a.keyCode === h.default.escape) {
                    n(b, d);
                    document.removeEventListener("keyup", g);
                    document.removeEventListener("click", f)
                }
            };
            document.addEventListener("keyup", g)
        });
        i.on(d.default.events.activate, e.default.filters.group.save, function() {
            var b = a.querySelectorAll(e.default.filters.group.checkbox);
            b.forEach(function(a) {
                var b = document.forms.filtersform,
                    c = a.getAttribute("data-saveid");
                b.querySelector("#".concat(c)).checked = a.checked
            });
            l("#filter-groups-popover")
        });
        document.querySelectorAll(e.default.filters.exportlink.link).forEach(function(a) {
            a.addEventListener("click", function(a) {
                document.forms.exportlinkform.action = a.target.dataset.url;
                document.forms.exportlinkform.submit()
            })
        });
        i.on(d.default.events.activate, e.default.filters.date.trigger, function() {
            var b = a.querySelector(e.default.filters.date.trigger),
                d = a.querySelector(e.default.filters.date.popover);
            new c.default(b, d, {
                placement: "bottom"
            });
            d.classList.remove("hidden");
            d.setAttribute("data-openfilter", "true");
            d.querySelector("[name=\"filterdatefrompopover[enabled]\"]").focus();
            b.classList.add("btn-outline-primary");
            b.classList.remove("btn-primary");
            b.setAttribute("aria-expanded", !0);
            var f = function(a) {
                if (a.target.id !== b.id && d !== a.target.closest("[data-openfilter=\"true\"]") && ("undefined" == typeof a.keyCode || a.keyCode === h.default.enter || a.keyCode === h.default.space)) {
                    n(b, d);
                    document.removeEventListener("click", f);
                    document.removeEventListener("keyup", f);
                    document.removeEventListener("keyup", g)
                }
            };
            document.addEventListener("click", f);
            document.addEventListener("keyup", f);
            var g = function(a) {
                if (a.keyCode === h.default.escape) {
                    n(b, d);
                    document.removeEventListener("keyup", g);
                    document.removeEventListener("click", f)
                }
            };
            document.addEventListener("keyup", g)
        });
        i.on(d.default.events.activate, e.default.filters.date.save, function() {
            var b = document.forms.filtersform,
                c = a.querySelector(e.default.filters.date.popover),
                d = c.querySelector("[name=\"filterdatefrompopover[enabled]\"]").checked ? 1 : 0,
                f = c.querySelector("[name=\"filterdatetopopover[enabled]\"]").checked ? 1 : 0;
            if (!d && !f) {
                b.elements["datefrom[timestamp]"].value = 0;
                b.elements["datefrom[enabled]"].value = d;
                b.elements["dateto[timestamp]"].value = 0;
                b.elements["dateto[enabled]"].value = f;
                l("#filter-dates-popover")
            } else {
                var h = {
                    data: []
                };
                if (d) {
                    h.data.push({
                        key: "from",
                        year: c.querySelector("[name=\"filterdatefrompopover[year]\"]").value,
                        month: c.querySelector("[name=\"filterdatefrompopover[month]\"]").value,
                        day: c.querySelector("[name=\"filterdatefrompopover[day]\"]").value,
                        hour: 0,
                        minute: 0
                    })
                }
                if (f) {
                    h.data.push({
                        key: "to",
                        year: c.querySelector("[name=\"filterdatetopopover[year]\"]").value,
                        month: c.querySelector("[name=\"filterdatetopopover[month]\"]").value,
                        day: c.querySelector("[name=\"filterdatetopopover[day]\"]").value,
                        hour: 23,
                        minute: 59
                    })
                }
                g.default.call([{
                    methodname: "core_calendar_get_timestamps",
                    args: h
                }])[0].done(function(a) {
                    var c = 0,
                        e = 0;
                    a.timestamps.forEach(function(a) {
                        if ("from" === a.key) {
                            c = a.timestamp
                        } else if ("to" === a.key) {
                            e = a.timestamp
                        }
                    });
                    if (0 < e && c > e) {
                        var g = document.getElementById("dates-filter-warning");
                        g.classList.remove("hidden");
                        g.classList.add("d-block")
                    } else {
                        b.elements["datefrom[timestamp]"].value = c;
                        b.elements["datefrom[enabled]"].value = d;
                        b.elements["dateto[timestamp]"].value = e;
                        b.elements["dateto[enabled]"].value = f;
                        l("#filter-dates-popover")
                    }
                })
            }
        });
        i.on(d.default.events.activate, e.default.filters.date.calendariconfrom, function() {
            m(e.default.filters.date.calendariconfrom)
        });
        i.on(d.default.events.activate, e.default.filters.date.calendariconto, function() {
            m(e.default.filters.date.calendariconto)
        })
    };
    a.init = j
});
define("forumreport_summary/selectors", ["exports"], function(a) {
    "use strict";
    Object.defineProperty(a, "__esModule", {
        value: !0
    });
    a.default = void 0;
    a.default = {
        filters: {
            group: {
                checkbox: "[data-region=\"filter-groups\"] input[type=\"checkbox\"]",
                clear: "[data-region=\"filter-groups\"] .filter-clear",
                popover: "#filter-groups-popover",
                save: "[data-region=\"filter-groups\"] .filter-save",
                selectall: "[data-region=\"filter-groups\"] .select-all",
                trigger: "#filter-groups-button"
            },
            date: {
                calendar: "#dateselector-calendar-panel",
                calendariconfrom: "#id_filterdatefrompopover_calendar",
                calendariconto: "#id_filterdatetopopover_calendar",
                popover: "#filter-dates-popover",
                save: "[data-region=\"filter-dates\"] .filter-save",
                trigger: "#filter-dates-button"
            },
            exportlink: {
                link: "#summaryreport #forumreport_summary_table button.export-link"
            }
        }
    };
    return a.default
});